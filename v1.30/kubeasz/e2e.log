  I0523 05:58:34.290289      22 e2e.go:109] Starting e2e run "cc741619-3e38-42a8-a592-6d2dbc5a90ec" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1716443913 - will randomize all specs

Will run 402 of 7197 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0523 05:58:34.428676 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 05:58:34.429402 22 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0523 05:58:34.445747 22 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0523 05:58:34.447982 22 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I0523 05:58:34.448004 22 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'node-local-dns' (0 seconds elapsed)
  I0523 05:58:34.448014 22 e2e.go:245] e2e test version: v1.30.1
  I0523 05:58:34.448483 22 e2e.go:254] kube-apiserver version: v1.30.1
  I0523 05:58:34.448537 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 05:58:34.450118 22 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.021 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1497
  STEP: Creating a kubernetes client @ 05/23/24 05:58:34.554
  I0523 05:58:34.554757 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename services @ 05/23/24 05:58:34.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 05:58:34.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 05:58:34.568
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-2709 @ 05/23/24 05:58:34.57
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/23/24 05:58:34.573
  STEP: creating service externalsvc in namespace services-2709 @ 05/23/24 05:58:34.574
  STEP: creating replication controller externalsvc in namespace services-2709 @ 05/23/24 05:58:34.579
  I0523 05:58:34.581850      22 runners.go:198] Created replication controller with name: externalsvc, namespace: services-2709, replica count: 2
  I0523 05:58:37.632842      22 runners.go:198] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 05/23/24 05:58:37.634
  I0523 05:58:37.639663 22 resource.go:361] Creating new exec pod
  I0523 05:58:39.647497 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-2709 exec execpodjhqh5 -- /bin/sh -x -c nslookup clusterip-service.services-2709.svc.cluster.local'
  I0523 05:58:39.728526 22 builder.go:146] stderr: "+ nslookup clusterip-service.services-2709.svc.cluster.local\n"
  I0523 05:58:39.728623 22 builder.go:147] stdout: "Server:\t\t169.254.20.10\nAddress:\t169.254.20.10#53\n\nclusterip-service.services-2709.svc.cluster.local\tcanonical name = externalsvc.services-2709.svc.cluster.local.\nName:\texternalsvc.services-2709.svc.cluster.local\nAddress: 10.68.117.245\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-2709, will wait for the garbage collector to delete the pods @ 05/23/24 05:58:39.728
  I0523 05:58:39.783114 22 resources.go:139] Deleting ReplicationController externalsvc took: 2.491766ms
  I0523 05:58:39.883274 22 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.153623ms
  I0523 05:58:43.890192 22 service.go:1506] Cleaning up the ClusterIP to ExternalName test service
  I0523 05:58:43.895875 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2709" for this suite. @ 05/23/24 05:58:43.898
• [9.347 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 05/23/24 05:58:43.901
  I0523 05:58:43.901461 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename csi-storageclass @ 05/23/24 05:58:43.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 05:58:43.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 05:58:43.911
  STEP: Creating a StorageClass @ 05/23/24 05:58:43.913
  STEP: Get StorageClass "e2e-fcx9p" @ 05/23/24 05:58:43.915
  STEP: Patching the StorageClass "e2e-fcx9p" @ 05/23/24 05:58:43.916
  STEP: Delete StorageClass "e2e-fcx9p" @ 05/23/24 05:58:43.918
  STEP: Confirm deletion of StorageClass "e2e-fcx9p" @ 05/23/24 05:58:43.922
  STEP: Create a replacement StorageClass @ 05/23/24 05:58:43.923
  STEP: Updating StorageClass "e2e-v2-g6cl9" @ 05/23/24 05:58:43.925
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-g6cl9=updated" @ 05/23/24 05:58:43.927
  STEP: Deleting StorageClass "e2e-v2-g6cl9" via DeleteCollection @ 05/23/24 05:58:43.928
  STEP: Confirm deletion of StorageClass "e2e-v2-g6cl9" @ 05/23/24 05:58:43.931
  I0523 05:58:43.932426 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-1420" for this suite. @ 05/23/24 05:58:43.933
• [0.034 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 05/23/24 05:58:43.935
  I0523 05:58:43.935998 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename chunking @ 05/23/24 05:58:43.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 05:58:43.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 05:58:43.945
  STEP: creating a large number of resources @ 05/23/24 05:58:43.946
  STEP: retrieving those results in paged fashion several times @ 05/23/24 05:59:01.64
  I0523 05:59:01.689308 22 chunking.go:98] Retrieved 17/17 results with rv 46898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY4OTgsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0523 05:59:01.739308 22 chunking.go:98] Retrieved 17/17 results with rv 46898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY4OTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0523 05:59:01.789392 22 chunking.go:98] Retrieved 17/17 results with rv 46898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY4OTgsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0523 05:59:01.838639 22 chunking.go:98] Retrieved 17/17 results with rv 46898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY4OTgsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0523 05:59:01.888924 22 chunking.go:98] Retrieved 17/17 results with rv 46898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY4OTgsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0523 05:59:01.938923 22 chunking.go:98] Retrieved 17/17 results with rv 46898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY4OTgsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0523 05:59:01.988791 22 chunking.go:98] Retrieved 17/17 results with rv 46898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY4OTgsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0523 05:59:02.038699 22 chunking.go:98] Retrieved 17/17 results with rv 46898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY4OTgsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0523 05:59:02.088773 22 chunking.go:98] Retrieved 17/17 results with rv 46898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY4OTgsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0523 05:59:02.138758 22 chunking.go:98] Retrieved 17/17 results with rv 46898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY4OTgsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0523 05:59:02.188649 22 chunking.go:98] Retrieved 17/17 results with rv 46898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY4OTgsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0523 05:59:02.238833 22 chunking.go:98] Retrieved 17/17 results with rv 46898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY4OTgsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0523 05:59:02.288949 22 chunking.go:98] Retrieved 17/17 results with rv 46898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY4OTgsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0523 05:59:02.338946 22 chunking.go:98] Retrieved 17/17 results with rv 46898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY4OTgsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0523 05:59:02.389020 22 chunking.go:98] Retrieved 17/17 results with rv 46898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY4OTgsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0523 05:59:02.439170 22 chunking.go:98] Retrieved 17/17 results with rv 46898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY4OTgsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0523 05:59:02.489289 22 chunking.go:98] Retrieved 17/17 results with rv 46898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY4OTgsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0523 05:59:02.539398 22 chunking.go:98] Retrieved 17/17 results with rv 46898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY4OTgsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0523 05:59:02.588441 22 chunking.go:98] Retrieved 17/17 results with rv 46898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY4OTgsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0523 05:59:02.638390 22 chunking.go:98] Retrieved 17/17 results with rv 46898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY4OTgsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0523 05:59:02.688202 22 chunking.go:98] Retrieved 17/17 results with rv 46898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY4OTgsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0523 05:59:02.739064 22 chunking.go:98] Retrieved 17/17 results with rv 46898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY4OTgsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0523 05:59:02.789181 22 chunking.go:98] Retrieved 17/17 results with rv 46898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY4OTgsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0523 05:59:02.839124 22 chunking.go:98] Retrieved 9/17 results with rv 46898 and continue 
  I0523 05:59:02.889264 22 chunking.go:98] Retrieved 17/17 results with rv 46901 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDEsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0523 05:59:02.939027 22 chunking.go:98] Retrieved 17/17 results with rv 46901 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0523 05:59:02.989085 22 chunking.go:98] Retrieved 17/17 results with rv 46901 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0523 05:59:03.039171 22 chunking.go:98] Retrieved 17/17 results with rv 46901 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0523 05:59:03.089101 22 chunking.go:98] Retrieved 17/17 results with rv 46901 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0523 05:59:03.139121 22 chunking.go:98] Retrieved 17/17 results with rv 46901 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0523 05:59:03.189078 22 chunking.go:98] Retrieved 17/17 results with rv 46901 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0523 05:59:03.239208 22 chunking.go:98] Retrieved 17/17 results with rv 46901 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0523 05:59:03.289275 22 chunking.go:98] Retrieved 17/17 results with rv 46901 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0523 05:59:03.339271 22 chunking.go:98] Retrieved 17/17 results with rv 46901 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0523 05:59:03.389319 22 chunking.go:98] Retrieved 17/17 results with rv 46901 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0523 05:59:03.439398 22 chunking.go:98] Retrieved 17/17 results with rv 46901 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0523 05:59:03.488447 22 chunking.go:98] Retrieved 17/17 results with rv 46901 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0523 05:59:03.538481 22 chunking.go:98] Retrieved 17/17 results with rv 46901 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0523 05:59:03.588622 22 chunking.go:98] Retrieved 17/17 results with rv 46901 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0523 05:59:03.638628 22 chunking.go:98] Retrieved 17/17 results with rv 46901 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0523 05:59:03.688523 22 chunking.go:98] Retrieved 17/17 results with rv 46901 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0523 05:59:03.738525 22 chunking.go:98] Retrieved 17/17 results with rv 46901 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0523 05:59:03.788514 22 chunking.go:98] Retrieved 17/17 results with rv 46901 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0523 05:59:03.838483 22 chunking.go:98] Retrieved 17/17 results with rv 46901 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0523 05:59:03.888475 22 chunking.go:98] Retrieved 17/17 results with rv 46901 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0523 05:59:03.938289 22 chunking.go:98] Retrieved 17/17 results with rv 46901 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0523 05:59:03.989218 22 chunking.go:98] Retrieved 17/17 results with rv 46901 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0523 05:59:04.039144 22 chunking.go:98] Retrieved 9/17 results with rv 46901 and continue 
  I0523 05:59:04.089114 22 chunking.go:98] Retrieved 17/17 results with rv 46902 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDIsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0523 05:59:04.139112 22 chunking.go:98] Retrieved 17/17 results with rv 46902 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0523 05:59:04.189110 22 chunking.go:98] Retrieved 17/17 results with rv 46902 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0523 05:59:04.239091 22 chunking.go:98] Retrieved 17/17 results with rv 46902 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0523 05:59:04.289227 22 chunking.go:98] Retrieved 17/17 results with rv 46902 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0523 05:59:04.339490 22 chunking.go:98] Retrieved 17/17 results with rv 46902 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0523 05:59:04.388593 22 chunking.go:98] Retrieved 17/17 results with rv 46902 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0523 05:59:04.438674 22 chunking.go:98] Retrieved 17/17 results with rv 46902 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0523 05:59:04.488948 22 chunking.go:98] Retrieved 17/17 results with rv 46902 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0523 05:59:04.538960 22 chunking.go:98] Retrieved 17/17 results with rv 46902 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0523 05:59:04.589205 22 chunking.go:98] Retrieved 17/17 results with rv 46902 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0523 05:59:04.639296 22 chunking.go:98] Retrieved 17/17 results with rv 46902 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0523 05:59:04.689364 22 chunking.go:98] Retrieved 17/17 results with rv 46902 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0523 05:59:04.738254 22 chunking.go:98] Retrieved 17/17 results with rv 46902 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0523 05:59:04.789181 22 chunking.go:98] Retrieved 17/17 results with rv 46902 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0523 05:59:04.839156 22 chunking.go:98] Retrieved 17/17 results with rv 46902 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0523 05:59:04.889129 22 chunking.go:98] Retrieved 17/17 results with rv 46902 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0523 05:59:04.940467 22 chunking.go:98] Retrieved 17/17 results with rv 46902 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0523 05:59:04.990241 22 chunking.go:98] Retrieved 17/17 results with rv 46902 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0523 05:59:05.039305 22 chunking.go:98] Retrieved 17/17 results with rv 46902 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0523 05:59:05.089265 22 chunking.go:98] Retrieved 17/17 results with rv 46902 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0523 05:59:05.139230 22 chunking.go:98] Retrieved 17/17 results with rv 46902 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0523 05:59:05.189204 22 chunking.go:98] Retrieved 17/17 results with rv 46902 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY5MDIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0523 05:59:05.239109 22 chunking.go:98] Retrieved 9/17 results with rv 46902 and continue 
  STEP: retrieving those results all at once @ 05/23/24 05:59:05.239
  I0523 05:59:05.295623 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-5365" for this suite. @ 05/23/24 05:59:05.338
• [21.453 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 05/23/24 05:59:05.389
  I0523 05:59:05.389563 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/23/24 05:59:05.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 05:59:05.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 05:59:05.398
  STEP: creating a policy with variables @ 05/23/24 05:59:05.402
  STEP: waiting until the marker is denied @ 05/23/24 05:59:05.41
  STEP: testing a replicated Deployment to be allowed @ 05/23/24 05:59:06.314
  STEP: testing a non-replicated ReplicaSet not to be denied @ 05/23/24 05:59:06.32
  I0523 05:59:06.353943 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1535" for this suite. @ 05/23/24 05:59:06.356
• [0.969 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 05/23/24 05:59:06.358
  I0523 05:59:06.358553 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename kubelet-test @ 05/23/24 05:59:06.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 05:59:06.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 05:59:06.367
  I0523 05:59:08.387406 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5816" for this suite. @ 05/23/24 05:59:08.389
• [2.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 05/23/24 05:59:08.392
  I0523 05:59:08.392795 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename cronjob @ 05/23/24 05:59:08.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 05:59:08.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 05:59:08.4
  STEP: Creating a cronjob @ 05/23/24 05:59:08.45
  STEP: Ensuring more than one job is running at a time @ 05/23/24 05:59:08.452
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 05/23/24 06:01:00.455
  STEP: Removing cronjob @ 05/23/24 06:01:00.456
  I0523 06:01:00.459120 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1898" for this suite. @ 05/23/24 06:01:00.46
• [112.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 05/23/24 06:01:00.47
  I0523 06:01:00.470993 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename daemonsets @ 05/23/24 06:01:00.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:01:00.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:01:00.484
  STEP: Creating simple DaemonSet "daemon-set" @ 05/23/24 06:01:00.498
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/23/24 06:01:00.5
  I0523 06:01:00.511998 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0523 06:01:00.512026 22 fixtures.go:130] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  I0523 06:01:01.505258 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0523 06:01:01.505284 22 fixtures.go:130] Node k8s-10-255-0-208 is running 0 daemon pod, expected 1
  I0523 06:01:02.504320 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0523 06:01:02.504344 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 05/23/24 06:01:02.505
  I0523 06:01:02.506847 22 daemon_set.go:912] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 05/23/24 06:01:02.506
  I0523 06:01:02.510162 22 daemon_set.go:932] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 05/23/24 06:01:02.51
  I0523 06:01:02.511132 22 daemon_set.go:957] Observed &DaemonSet event: ADDED
  I0523 06:01:02.511207 22 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0523 06:01:02.511279 22 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0523 06:01:02.511349 22 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0523 06:01:02.511408 22 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0523 06:01:02.511472 22 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0523 06:01:02.511495 22 daemon_set.go:950] Found daemon set daemon-set in namespace daemonsets-9285 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0523 06:01:02.511508 22 daemon_set.go:961] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 05/23/24 06:01:02.511
  STEP: watching for the daemon set status to be patched @ 05/23/24 06:01:02.515
  I0523 06:01:02.515906 22 daemon_set.go:1001] Observed &DaemonSet event: ADDED
  I0523 06:01:02.515986 22 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0523 06:01:02.516057 22 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0523 06:01:02.516125 22 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0523 06:01:02.516189 22 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0523 06:01:02.516257 22 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0523 06:01:02.516275 22 daemon_set.go:997] Observed daemon set daemon-set in namespace daemonsets-9285 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0523 06:01:02.516355 22 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0523 06:01:02.516376 22 daemon_set.go:994] Found daemon set daemon-set in namespace daemonsets-9285 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0523 06:01:02.516387 22 daemon_set.go:1005] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 05/23/24 06:01:02.517
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9285, will wait for the garbage collector to delete the pods @ 05/23/24 06:01:02.517
  I0523 06:01:02.572093 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 2.618945ms
  I0523 06:01:02.672978 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.878909ms
  I0523 06:01:03.884491 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0523 06:01:03.884519 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0523 06:01:03.885956 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"47864"},"items":null}

  I0523 06:01:03.887257 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"47864"},"items":null}

  I0523 06:01:03.891854 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9285" for this suite. @ 05/23/24 06:01:03.893
• [3.424 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 05/23/24 06:01:03.895
  I0523 06:01:03.895352 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename configmap @ 05/23/24 06:01:03.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:01:03.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:01:03.91
  STEP: Creating configMap with name cm-test-opt-del-0bea33ed-e052-4532-be02-79f102063e0e @ 05/23/24 06:01:03.912
  STEP: Creating configMap with name cm-test-opt-upd-327dfa36-9a32-4234-abbc-34703d8bd444 @ 05/23/24 06:01:03.914
  STEP: Creating the pod @ 05/23/24 06:01:03.916
  STEP: Deleting configmap cm-test-opt-del-0bea33ed-e052-4532-be02-79f102063e0e @ 05/23/24 06:01:05.946
  STEP: Updating configmap cm-test-opt-upd-327dfa36-9a32-4234-abbc-34703d8bd444 @ 05/23/24 06:01:05.948
  STEP: Creating configMap with name cm-test-opt-create-efe1fe23-d3b3-48a6-96f4-0aa83fe401dc @ 05/23/24 06:01:05.95
  STEP: waiting to observe update in volume @ 05/23/24 06:01:05.951
  I0523 06:02:34.218078 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3655" for this suite. @ 05/23/24 06:02:34.219
• [90.327 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 05/23/24 06:02:34.222
  I0523 06:02:34.222807 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename webhook @ 05/23/24 06:02:34.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:02:34.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:02:34.234
  STEP: Setting up server cert @ 05/23/24 06:02:34.244
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/23/24 06:02:34.566
  STEP: Deploying the webhook pod @ 05/23/24 06:02:34.569
  STEP: Wait for the deployment to be ready @ 05/23/24 06:02:34.574
  I0523 06:02:34.578253 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/23/24 06:02:36.583
  STEP: Verifying the service has paired with the endpoint @ 05/23/24 06:02:36.587
  I0523 06:02:37.588745 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/23/24 06:02:37.617
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/23/24 06:02:38.642
  STEP: Deleting the collection of validation webhooks @ 05/23/24 06:02:38.656
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/23/24 06:02:38.672
  I0523 06:02:38.694485 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2797" for this suite. @ 05/23/24 06:02:38.696
  STEP: Destroying namespace "webhook-markers-402" for this suite. @ 05/23/24 06:02:38.701
• [4.481 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 05/23/24 06:02:38.704
  I0523 06:02:38.704242 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename daemonsets @ 05/23/24 06:02:38.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:02:38.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:02:38.713
  I0523 06:02:38.724778 22 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0523 06:02:38.727823 22 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0523 06:02:38.732514 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0523 06:02:38.732533 22 fixtures.go:130] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  I0523 06:02:39.732184 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0523 06:02:39.732207 22 fixtures.go:130] Node k8s-10-255-0-208 is running 0 daemon pod, expected 1
  I0523 06:02:40.731202 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0523 06:02:40.731227 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I0523 06:02:40.731237 22 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0523 06:02:40.735586 22 daemon_set.go:102] Updating DaemonSet daemon-set
  I0523 06:02:41.740516 22 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0523 06:02:41.744989 22 daemon_set.go:102] Updating DaemonSet daemon-set
  I0523 06:02:41.745016 22 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0523 06:02:41.746298 22 daemon_set.go:1178] Wrong image for pod: daemon-set-nk948. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0523 06:02:41.746313 22 daemon_set.go:1183] Pod daemon-set-nk948 is not available
  I0523 06:02:44.747162 22 daemon_set.go:1183] Pod daemon-set-fj7vp is not available
  STEP: Deleting DaemonSet "daemon-set" @ 05/23/24 06:02:44.75
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4575, will wait for the garbage collector to delete the pods @ 05/23/24 06:02:44.751
  I0523 06:02:44.805732 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 2.983775ms
  I0523 06:02:44.906207 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.441414ms
  I0523 06:02:46.407970 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0523 06:02:46.408000 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0523 06:02:46.409122 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"48358"},"items":null}

  I0523 06:02:46.417991 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"48358"},"items":null}

  I0523 06:02:46.422473 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4575" for this suite. @ 05/23/24 06:02:46.423
• [7.722 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 05/23/24 06:02:46.425
  I0523 06:02:46.425904 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename gc @ 05/23/24 06:02:46.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:02:46.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:02:46.435
  STEP: create the rc @ 05/23/24 06:02:46.437
  W0523 06:02:46.440538      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/23/24 06:02:52.443
  STEP: wait for the rc to be deleted @ 05/23/24 06:02:52.445
  I0523 06:02:53.456421 22 garbage_collector.go:670] 80 pods remaining
  I0523 06:02:53.456452 22 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0523 06:02:53.456461 22 garbage_collector.go:678] 
  I0523 06:02:54.460612 22 garbage_collector.go:670] 71 pods remaining
  I0523 06:02:54.460637 22 garbage_collector.go:677] 70 pods has nil DeletionTimestamp
  I0523 06:02:54.460643 22 garbage_collector.go:678] 
  I0523 06:02:55.450852 22 garbage_collector.go:670] 60 pods remaining
  I0523 06:02:55.450878 22 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I0523 06:02:55.450885 22 garbage_collector.go:678] 
  I0523 06:02:56.462640 22 garbage_collector.go:670] 40 pods remaining
  I0523 06:02:56.462670 22 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0523 06:02:56.462677 22 garbage_collector.go:678] 
  I0523 06:02:57.450599 22 garbage_collector.go:670] 31 pods remaining
  I0523 06:02:57.450621 22 garbage_collector.go:677] 31 pods has nil DeletionTimestamp
  I0523 06:02:57.450628 22 garbage_collector.go:678] 
  I0523 06:02:58.448905 22 garbage_collector.go:670] 20 pods remaining
  I0523 06:02:58.448924 22 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I0523 06:02:58.448929 22 garbage_collector.go:678] 
  STEP: Gathering metrics @ 05/23/24 06:02:59.452
  W0523 06:02:59.456538      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0523 06:02:59.456608 22 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0523 06:02:59.456741 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8960" for this suite. @ 05/23/24 06:02:59.458
• [13.036 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 05/23/24 06:02:59.465
  I0523 06:02:59.465143 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename watch @ 05/23/24 06:02:59.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:02:59.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:02:59.478
  STEP: creating a watch on configmaps @ 05/23/24 06:02:59.48
  STEP: creating a new configmap @ 05/23/24 06:02:59.481
  STEP: modifying the configmap once @ 05/23/24 06:02:59.483
  STEP: closing the watch once it receives two notifications @ 05/23/24 06:02:59.494
  I0523 06:02:59.494210 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4363  345d02db-870e-4497-94f5-32253d6dc5ba 50046 0 2024-05-23 06:02:59 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-23 06:02:59 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0523 06:02:59.494308 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4363  345d02db-870e-4497-94f5-32253d6dc5ba 50047 0 2024-05-23 06:02:59 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-23 06:02:59 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 05/23/24 06:02:59.494
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 05/23/24 06:02:59.512
  STEP: deleting the configmap @ 05/23/24 06:02:59.516
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 05/23/24 06:02:59.526
  I0523 06:02:59.526716 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4363  345d02db-870e-4497-94f5-32253d6dc5ba 50048 0 2024-05-23 06:02:59 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-23 06:02:59 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0523 06:02:59.526827 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4363  345d02db-870e-4497-94f5-32253d6dc5ba 50053 0 2024-05-23 06:02:59 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-23 06:02:59 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0523 06:02:59.526891 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4363" for this suite. @ 05/23/24 06:02:59.529
• [0.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 05/23/24 06:02:59.538
  I0523 06:02:59.538522 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename volumeattachment @ 05/23/24 06:02:59.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:02:59.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:02:59.557
  STEP: Create VolumeAttachment "va-e2e-fctn7" on node "k8s-10-255-0-208" @ 05/23/24 06:02:59.568
  STEP: Get VolumeAttachment "va-e2e-fctn7" on node "k8s-10-255-0-208" @ 05/23/24 06:02:59.571
  STEP: Patch VolumeAttachment "va-e2e-fctn7" on node "k8s-10-255-0-208" @ 05/23/24 06:02:59.573
  STEP: List VolumeAttachments with "va-e2e-fctn7=patched" label @ 05/23/24 06:02:59.582
  STEP: Delete VolumeAttachment "va-e2e-fctn7" on node "k8s-10-255-0-208" @ 05/23/24 06:02:59.585
  STEP: Confirm deletion of VolumeAttachment "va-e2e-fctn7" on node "k8s-10-255-0-208" @ 05/23/24 06:02:59.607
  STEP: Create VolumeAttachment "va-e2e-6hxsh" on node "k8s-10-255-0-207" @ 05/23/24 06:02:59.616
  STEP: Update the VolumeAttachment "va-e2e-6hxsh" on node "k8s-10-255-0-207" with label "va-e2e=updated" @ 05/23/24 06:02:59.621
  STEP: Create VolumeAttachment "va-e2e-5kqrb" on node "k8s-10-255-0-207" @ 05/23/24 06:02:59.642
  STEP: Update the VolumeAttachment "va-e2e-5kqrb" on node "k8s-10-255-0-207" with label "va-e2e=updated" @ 05/23/24 06:02:59.645
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 05/23/24 06:02:59.65
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 05/23/24 06:02:59.657
  I0523 06:02:59.659370 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-3245" for this suite. @ 05/23/24 06:02:59.661
• [0.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:766
  STEP: Creating a kubernetes client @ 05/23/24 06:02:59.669
  I0523 06:02:59.669270 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename webhook @ 05/23/24 06:02:59.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:02:59.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:02:59.68
  STEP: Setting up server cert @ 05/23/24 06:02:59.696
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/23/24 06:03:00.11
  STEP: Deploying the webhook pod @ 05/23/24 06:03:00.113
  STEP: Wait for the deployment to be ready @ 05/23/24 06:03:00.122
  I0523 06:03:00.126882 22 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/23/24 06:03:02.131
  STEP: Verifying the service has paired with the endpoint @ 05/23/24 06:03:02.136
  I0523 06:03:03.137512 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/23/24 06:03:03.14
  STEP: verifying the mutating webhook match conditions @ 05/23/24 06:03:03.144
  STEP: updating the mutating webhook match conditions @ 05/23/24 06:03:03.145
  STEP: verifying the mutating webhook match conditions @ 05/23/24 06:03:03.148
  I0523 06:03:03.167331 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1963" for this suite. @ 05/23/24 06:03:03.169
  STEP: Destroying namespace "webhook-markers-4792" for this suite. @ 05/23/24 06:03:03.173
• [3.508 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 05/23/24 06:03:03.177
  I0523 06:03:03.177021 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename security-context-test @ 05/23/24 06:03:03.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:03:03.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:03:03.186
  I0523 06:03:07.198055 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3126" for this suite. @ 05/23/24 06:03:07.199
• [4.026 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2240
  STEP: Creating a kubernetes client @ 05/23/24 06:03:07.202
  I0523 06:03:07.202933 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename services @ 05/23/24 06:03:07.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:03:07.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:03:07.211
  STEP: creating service in namespace services-7158 @ 05/23/24 06:03:07.212
  STEP: creating service affinity-nodeport-transition in namespace services-7158 @ 05/23/24 06:03:07.212
  STEP: creating replication controller affinity-nodeport-transition in namespace services-7158 @ 05/23/24 06:03:07.218
  I0523 06:03:07.223265      22 runners.go:198] Created replication controller with name: affinity-nodeport-transition, namespace: services-7158, replica count: 3
  I0523 06:03:10.274705      22 runners.go:198] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0523 06:03:10.280922 22 resource.go:361] Creating new exec pod
  I0523 06:03:13.290351 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-7158 exec execpod-affinityvrx4w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0523 06:03:13.355004 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I0523 06:03:13.355060 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0523 06:03:13.355119 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-7158 exec execpod-affinityvrx4w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.169.56 80'
  I0523 06:03:13.415107 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.169.56 80\nConnection to 10.68.169.56 80 port [tcp/http] succeeded!\n"
  I0523 06:03:13.415145 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0523 06:03:13.415217 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-7158 exec execpod-affinityvrx4w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.208 32457'
  I0523 06:03:13.474210 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.208 32457\nConnection to 10.255.0.208 32457 port [tcp/*] succeeded!\n"
  I0523 06:03:13.474244 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0523 06:03:13.474328 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-7158 exec execpod-affinityvrx4w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.209 32457'
  I0523 06:03:13.534540 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.209 32457\nConnection to 10.255.0.209 32457 port [tcp/*] succeeded!\n"
  I0523 06:03:13.534593 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0523 06:03:13.538699 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-7158 exec execpod-affinityvrx4w -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.255.0.207:32457/ ; done'
  I0523 06:03:13.646098 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n"
  I0523 06:03:13.646136 22 builder.go:147] stdout: "\naffinity-nodeport-transition-s5jpr\naffinity-nodeport-transition-mj2m5\naffinity-nodeport-transition-rmtmr\naffinity-nodeport-transition-s5jpr\naffinity-nodeport-transition-mj2m5\naffinity-nodeport-transition-rmtmr\naffinity-nodeport-transition-s5jpr\naffinity-nodeport-transition-mj2m5\naffinity-nodeport-transition-rmtmr\naffinity-nodeport-transition-s5jpr\naffinity-nodeport-transition-mj2m5\naffinity-nodeport-transition-rmtmr\naffinity-nodeport-transition-s5jpr\naffinity-nodeport-transition-mj2m5\naffinity-nodeport-transition-rmtmr\naffinity-nodeport-transition-s5jpr"
  I0523 06:03:13.646265 22 service.go:242] Received response from host: affinity-nodeport-transition-s5jpr
  I0523 06:03:13.646278 22 service.go:242] Received response from host: affinity-nodeport-transition-mj2m5
  I0523 06:03:13.646310 22 service.go:242] Received response from host: affinity-nodeport-transition-rmtmr
  I0523 06:03:13.646318 22 service.go:242] Received response from host: affinity-nodeport-transition-s5jpr
  I0523 06:03:13.646326 22 service.go:242] Received response from host: affinity-nodeport-transition-mj2m5
  I0523 06:03:13.646334 22 service.go:242] Received response from host: affinity-nodeport-transition-rmtmr
  I0523 06:03:13.646343 22 service.go:242] Received response from host: affinity-nodeport-transition-s5jpr
  I0523 06:03:13.646352 22 service.go:242] Received response from host: affinity-nodeport-transition-mj2m5
  I0523 06:03:13.646362 22 service.go:242] Received response from host: affinity-nodeport-transition-rmtmr
  I0523 06:03:13.646370 22 service.go:242] Received response from host: affinity-nodeport-transition-s5jpr
  I0523 06:03:13.646377 22 service.go:242] Received response from host: affinity-nodeport-transition-mj2m5
  I0523 06:03:13.646386 22 service.go:242] Received response from host: affinity-nodeport-transition-rmtmr
  I0523 06:03:13.646397 22 service.go:242] Received response from host: affinity-nodeport-transition-s5jpr
  I0523 06:03:13.646409 22 service.go:242] Received response from host: affinity-nodeport-transition-mj2m5
  I0523 06:03:13.646417 22 service.go:242] Received response from host: affinity-nodeport-transition-rmtmr
  I0523 06:03:13.646428 22 service.go:242] Received response from host: affinity-nodeport-transition-s5jpr
  I0523 06:03:13.650509 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-7158 exec execpod-affinityvrx4w -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.255.0.207:32457/ ; done'
  I0523 06:03:13.757658 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:32457/\n"
  I0523 06:03:13.757699 22 builder.go:147] stdout: "\naffinity-nodeport-transition-mj2m5\naffinity-nodeport-transition-mj2m5\naffinity-nodeport-transition-mj2m5\naffinity-nodeport-transition-mj2m5\naffinity-nodeport-transition-mj2m5\naffinity-nodeport-transition-mj2m5\naffinity-nodeport-transition-mj2m5\naffinity-nodeport-transition-mj2m5\naffinity-nodeport-transition-mj2m5\naffinity-nodeport-transition-mj2m5\naffinity-nodeport-transition-mj2m5\naffinity-nodeport-transition-mj2m5\naffinity-nodeport-transition-mj2m5\naffinity-nodeport-transition-mj2m5\naffinity-nodeport-transition-mj2m5\naffinity-nodeport-transition-mj2m5"
  I0523 06:03:13.757712 22 service.go:242] Received response from host: affinity-nodeport-transition-mj2m5
  I0523 06:03:13.757721 22 service.go:242] Received response from host: affinity-nodeport-transition-mj2m5
  I0523 06:03:13.757727 22 service.go:242] Received response from host: affinity-nodeport-transition-mj2m5
  I0523 06:03:13.757732 22 service.go:242] Received response from host: affinity-nodeport-transition-mj2m5
  I0523 06:03:13.757737 22 service.go:242] Received response from host: affinity-nodeport-transition-mj2m5
  I0523 06:03:13.757742 22 service.go:242] Received response from host: affinity-nodeport-transition-mj2m5
  I0523 06:03:13.757746 22 service.go:242] Received response from host: affinity-nodeport-transition-mj2m5
  I0523 06:03:13.757751 22 service.go:242] Received response from host: affinity-nodeport-transition-mj2m5
  I0523 06:03:13.757756 22 service.go:242] Received response from host: affinity-nodeport-transition-mj2m5
  I0523 06:03:13.757760 22 service.go:242] Received response from host: affinity-nodeport-transition-mj2m5
  I0523 06:03:13.757770 22 service.go:242] Received response from host: affinity-nodeport-transition-mj2m5
  I0523 06:03:13.757777 22 service.go:242] Received response from host: affinity-nodeport-transition-mj2m5
  I0523 06:03:13.757782 22 service.go:242] Received response from host: affinity-nodeport-transition-mj2m5
  I0523 06:03:13.757792 22 service.go:242] Received response from host: affinity-nodeport-transition-mj2m5
  I0523 06:03:13.757797 22 service.go:242] Received response from host: affinity-nodeport-transition-mj2m5
  I0523 06:03:13.757803 22 service.go:242] Received response from host: affinity-nodeport-transition-mj2m5
  I0523 06:03:13.757860 22 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-7158, will wait for the garbage collector to delete the pods @ 05/23/24 06:03:13.764
  I0523 06:03:13.818594 22 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 2.763724ms
  I0523 06:03:13.919633 22 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 101.03407ms
  I0523 06:03:16.631842 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7158" for this suite. @ 05/23/24 06:03:16.633
• [9.434 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 05/23/24 06:03:16.636
  I0523 06:03:16.636888 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename gc @ 05/23/24 06:03:16.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:03:16.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:03:16.647
  STEP: create the rc1 @ 05/23/24 06:03:16.65
  STEP: create the rc2 @ 05/23/24 06:03:16.652
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 05/23/24 06:03:22.657
  STEP: delete the rc simpletest-rc-to-be-deleted @ 05/23/24 06:03:22.892
  STEP: wait for the rc to be deleted @ 05/23/24 06:03:22.894
  I0523 06:03:27.904119 22 garbage_collector.go:762] 69 pods remaining
  I0523 06:03:27.904146 22 garbage_collector.go:769] 69 pods has nil DeletionTimestamp
  I0523 06:03:27.904152 22 garbage_collector.go:770] 
  STEP: Gathering metrics @ 05/23/24 06:03:32.902
  W0523 06:03:32.905084      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0523 06:03:32.905104 22 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0523 06:03:32.905151 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-24pqm" in namespace "gc-4022"
  I0523 06:03:32.910035 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-26mmp" in namespace "gc-4022"
  I0523 06:03:32.914442 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-29sqs" in namespace "gc-4022"
  I0523 06:03:32.919484 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2c6hf" in namespace "gc-4022"
  I0523 06:03:32.924352 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2rk24" in namespace "gc-4022"
  I0523 06:03:32.929297 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2v7gm" in namespace "gc-4022"
  I0523 06:03:32.934739 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2xtcl" in namespace "gc-4022"
  I0523 06:03:32.939454 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-48q79" in namespace "gc-4022"
  I0523 06:03:32.944368 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4lmzv" in namespace "gc-4022"
  I0523 06:03:32.949121 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4rbqp" in namespace "gc-4022"
  I0523 06:03:32.953453 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4v7qp" in namespace "gc-4022"
  I0523 06:03:32.958039 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5bqzq" in namespace "gc-4022"
  I0523 06:03:32.963400 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5qmlw" in namespace "gc-4022"
  I0523 06:03:32.969388 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6p9tz" in namespace "gc-4022"
  I0523 06:03:32.974765 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6wc5q" in namespace "gc-4022"
  I0523 06:03:32.982653 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-79j8f" in namespace "gc-4022"
  I0523 06:03:32.991848 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7f9hr" in namespace "gc-4022"
  I0523 06:03:33.000789 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7frc8" in namespace "gc-4022"
  I0523 06:03:33.007336 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7ghq6" in namespace "gc-4022"
  I0523 06:03:33.023508 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-85kfg" in namespace "gc-4022"
  I0523 06:03:33.030247 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8fgxx" in namespace "gc-4022"
  I0523 06:03:33.038524 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8wddq" in namespace "gc-4022"
  I0523 06:03:33.045789 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9b4q4" in namespace "gc-4022"
  I0523 06:03:33.053903 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9d7bm" in namespace "gc-4022"
  I0523 06:03:33.064098 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9pg4n" in namespace "gc-4022"
  I0523 06:03:33.074340 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9qkgn" in namespace "gc-4022"
  I0523 06:03:33.081029 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b26b4" in namespace "gc-4022"
  I0523 06:03:33.090370 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b49jz" in namespace "gc-4022"
  I0523 06:03:33.099413 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bjjpd" in namespace "gc-4022"
  I0523 06:03:33.106428 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bjtln" in namespace "gc-4022"
  I0523 06:03:33.118655 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bnd8s" in namespace "gc-4022"
  I0523 06:03:33.125609 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c9zz8" in namespace "gc-4022"
  I0523 06:03:33.137866 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-chjtn" in namespace "gc-4022"
  I0523 06:03:33.146319 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-clk67" in namespace "gc-4022"
  I0523 06:03:33.157204 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cp9ln" in namespace "gc-4022"
  I0523 06:03:33.169806 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cx2jq" in namespace "gc-4022"
  I0523 06:03:33.182635 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d8bhm" in namespace "gc-4022"
  I0523 06:03:33.207007 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d9wdk" in namespace "gc-4022"
  I0523 06:03:33.222258 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dm6hm" in namespace "gc-4022"
  I0523 06:03:33.234991 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dzmt7" in namespace "gc-4022"
  I0523 06:03:33.245838 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fkx5p" in namespace "gc-4022"
  I0523 06:03:33.266935 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g45cq" in namespace "gc-4022"
  I0523 06:03:33.286773 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g9mrz" in namespace "gc-4022"
  I0523 06:03:33.326578 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ggqwn" in namespace "gc-4022"
  I0523 06:03:33.380187 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ghtn6" in namespace "gc-4022"
  I0523 06:03:33.406837 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ghvvk" in namespace "gc-4022"
  I0523 06:03:33.419025 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-grr8v" in namespace "gc-4022"
  I0523 06:03:33.427939 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h9t7r" in namespace "gc-4022"
  I0523 06:03:33.442827 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hlf66" in namespace "gc-4022"
  I0523 06:03:33.451301 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hrdvm" in namespace "gc-4022"
  I0523 06:03:33.479902 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4022" for this suite. @ 05/23/24 06:03:33.499
• [16.883 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 05/23/24 06:03:33.52
  I0523 06:03:33.520095 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/23/24 06:03:33.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:03:33.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:03:33.558
  STEP: getting /apis @ 05/23/24 06:03:33.575
  STEP: getting /apis/admissionregistration.k8s.io @ 05/23/24 06:03:33.579
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 05/23/24 06:03:33.585
  STEP: creating @ 05/23/24 06:03:33.59
  STEP: getting @ 05/23/24 06:03:33.643
  STEP: listing @ 05/23/24 06:03:33.646
  STEP: watching @ 05/23/24 06:03:33.653
  I0523 06:03:33.653310 22 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 05/23/24 06:03:33.655
  STEP: updating @ 05/23/24 06:03:33.66
  I0523 06:03:33.707451 22 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  STEP: getting /status @ 05/23/24 06:03:33.707
  STEP: patching /status @ 05/23/24 06:03:33.72
  STEP: updating /status @ 05/23/24 06:03:33.731
  STEP: deleting @ 05/23/24 06:03:33.744
  STEP: deleting a collection @ 05/23/24 06:03:33.759
  I0523 06:03:33.787705 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1642" for this suite. @ 05/23/24 06:03:33.791
• [0.284 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 05/23/24 06:03:33.804
  I0523 06:03:33.804052 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename downward-api @ 05/23/24 06:03:33.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:03:33.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:03:33.832
  STEP: Creating a pod to test downward api env vars @ 05/23/24 06:03:33.835
  STEP: Saw pod success @ 05/23/24 06:03:37.851
  I0523 06:03:37.852898 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod downward-api-ab88a8b1-7b47-4667-95c2-71a511f75420 container dapi-container: <nil>
  STEP: delete the pod @ 05/23/24 06:03:37.855
  I0523 06:03:37.862150 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5633" for this suite. @ 05/23/24 06:03:37.863
• [4.062 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 05/23/24 06:03:37.865
  I0523 06:03:37.865759 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename svcaccounts @ 05/23/24 06:03:37.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:03:37.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:03:37.874
  STEP: Creating a pod to test service account token:  @ 05/23/24 06:03:37.875
  STEP: Saw pod success @ 05/23/24 06:03:41.886
  I0523 06:03:41.887587 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod test-pod-f4ad95f8-7b28-420e-b384-8d23f726f843 container agnhost-container: <nil>
  STEP: delete the pod @ 05/23/24 06:03:41.889
  I0523 06:03:41.896018 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8237" for this suite. @ 05/23/24 06:03:41.897
• [4.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 05/23/24 06:03:41.9
  I0523 06:03:41.900628 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename pods @ 05/23/24 06:03:41.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:03:41.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:03:41.91
  STEP: creating the pod @ 05/23/24 06:03:41.911
  STEP: submitting the pod to kubernetes @ 05/23/24 06:03:41.911
  STEP: verifying the pod is in kubernetes @ 05/23/24 06:03:43.919
  STEP: updating the pod @ 05/23/24 06:03:43.92
  I0523 06:03:44.426789 22 pod_client.go:141] Successfully updated pod "pod-update-42ef4ae8-83f1-4288-ab47-9ef55d669b76"
  STEP: verifying the updated pod is in kubernetes @ 05/23/24 06:03:44.428
  I0523 06:03:44.429797 22 pods.go:391] Pod update OK
  I0523 06:03:44.429870 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3276" for this suite. @ 05/23/24 06:03:44.431
• [2.533 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 05/23/24 06:03:44.433
  I0523 06:03:44.433880 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename containers @ 05/23/24 06:03:44.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:03:44.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:03:44.441
  I0523 06:03:46.463116 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-473" for this suite. @ 05/23/24 06:03:46.464
• [2.034 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 05/23/24 06:03:46.468
  I0523 06:03:46.468187 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename namespaces @ 05/23/24 06:03:46.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:03:46.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:03:46.476
  STEP: Read namespace status @ 05/23/24 06:03:46.477
  I0523 06:03:46.479101 22 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 05/23/24 06:03:46.479
  I0523 06:03:46.481216 22 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 05/23/24 06:03:46.481
  I0523 06:03:46.485162 22 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0523 06:03:46.485215 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5996" for this suite. @ 05/23/24 06:03:46.486
• [0.020 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 05/23/24 06:03:46.488
  I0523 06:03:46.488697 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/23/24 06:03:46.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:03:46.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:03:46.496
  I0523 06:03:46.498010 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/23/24 06:03:47.66
  I0523 06:03:47.660463 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-8209 --namespace=crd-publish-openapi-8209 create -f -'
  I0523 06:03:49.709910 22 builder.go:146] stderr: ""
  I0523 06:03:49.709957 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6934-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0523 06:03:49.710001 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-8209 --namespace=crd-publish-openapi-8209 delete e2e-test-crd-publish-openapi-6934-crds test-cr'
  I0523 06:03:49.758851 22 builder.go:146] stderr: ""
  I0523 06:03:49.758895 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6934-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0523 06:03:49.758949 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-8209 --namespace=crd-publish-openapi-8209 apply -f -'
  I0523 06:03:49.812026 22 builder.go:146] stderr: ""
  I0523 06:03:49.812065 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6934-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0523 06:03:49.812148 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-8209 --namespace=crd-publish-openapi-8209 delete e2e-test-crd-publish-openapi-6934-crds test-cr'
  I0523 06:03:49.862033 22 builder.go:146] stderr: ""
  I0523 06:03:49.862122 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6934-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/23/24 06:03:49.862
  I0523 06:03:49.862179 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-8209 explain e2e-test-crd-publish-openapi-6934-crds'
  I0523 06:03:49.910568 22 builder.go:146] stderr: ""
  I0523 06:03:49.910607 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-6934-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0523 06:03:51.072086 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8209" for this suite. @ 05/23/24 06:03:51.076
• [4.590 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 05/23/24 06:03:51.078
  I0523 06:03:51.078950 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename daemonsets @ 05/23/24 06:03:51.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:03:51.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:03:51.087
  I0523 06:03:51.096795 22 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/23/24 06:03:51.098
  I0523 06:03:51.112802 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0523 06:03:51.112827 22 fixtures.go:130] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  I0523 06:03:52.105089 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0523 06:03:52.105117 22 fixtures.go:130] Node k8s-10-255-0-208 is running 0 daemon pod, expected 1
  I0523 06:03:53.102198 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0523 06:03:53.102230 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 05/23/24 06:03:53.107
  STEP: Check that daemon pods images are updated. @ 05/23/24 06:03:53.111
  I0523 06:03:53.113697 22 daemon_set.go:1178] Wrong image for pod: daemon-set-h9q5h. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0523 06:03:53.113712 22 daemon_set.go:1178] Wrong image for pod: daemon-set-hrsm5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0523 06:03:53.113719 22 daemon_set.go:1178] Wrong image for pod: daemon-set-k5z78. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0523 06:03:54.114532 22 daemon_set.go:1183] Pod daemon-set-g8chv is not available
  I0523 06:03:54.114563 22 daemon_set.go:1178] Wrong image for pod: daemon-set-hrsm5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0523 06:03:54.114572 22 daemon_set.go:1178] Wrong image for pod: daemon-set-k5z78. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0523 06:03:55.114511 22 daemon_set.go:1178] Wrong image for pod: daemon-set-hrsm5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0523 06:03:56.114135 22 daemon_set.go:1183] Pod daemon-set-zgrn5 is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 05/23/24 06:03:56.115
  I0523 06:03:56.118805 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0523 06:03:56.118825 22 fixtures.go:130] Node k8s-10-255-0-208 is running 0 daemon pod, expected 1
  I0523 06:03:57.119371 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0523 06:03:57.119411 22 fixtures.go:130] Node k8s-10-255-0-208 is running 0 daemon pod, expected 1
  I0523 06:03:58.119768 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0523 06:03:58.119792 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/23/24 06:03:58.125
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9367, will wait for the garbage collector to delete the pods @ 05/23/24 06:03:58.125
  I0523 06:03:58.190388 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 13.585687ms
  I0523 06:03:58.290460 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.068226ms
  I0523 06:03:59.592874 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0523 06:03:59.592900 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0523 06:03:59.593999 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"53329"},"items":null}

  I0523 06:03:59.594986 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"53329"},"items":null}

  I0523 06:03:59.599547 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9367" for this suite. @ 05/23/24 06:03:59.6
• [8.524 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 05/23/24 06:03:59.603
  I0523 06:03:59.603172 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename endpointslice @ 05/23/24 06:03:59.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:03:59.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:03:59.611
  I0523 06:04:01.634718 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1362" for this suite. @ 05/23/24 06:04:01.637
• [2.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 05/23/24 06:04:01.639
  I0523 06:04:01.639998 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename statefulset @ 05/23/24 06:04:01.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:04:01.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:04:01.65
  STEP: Creating service test in namespace statefulset-8603 @ 05/23/24 06:04:01.652
  STEP: Creating statefulset ss in namespace statefulset-8603 @ 05/23/24 06:04:01.658
  I0523 06:04:01.661884 22 wait.go:40] Found 0 stateful pods, waiting for 1
  I0523 06:04:11.662835 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 05/23/24 06:04:11.665
  STEP: Getting /status @ 05/23/24 06:04:11.667
  I0523 06:04:11.669542 22 statefulset.go:1067] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 05/23/24 06:04:11.669
  I0523 06:04:11.673504 22 statefulset.go:1087] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 05/23/24 06:04:11.673
  I0523 06:04:11.674401 22 statefulset.go:1115] Observed &StatefulSet event: ADDED
  I0523 06:04:11.674432 22 statefulset.go:1108] Found Statefulset ss in namespace statefulset-8603 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0523 06:04:11.674442 22 statefulset.go:1119] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 05/23/24 06:04:11.674
  I0523 06:04:11.674470 22 statefulset.go:1123] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0523 06:04:11.677613 22 statefulset.go:1127] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 05/23/24 06:04:11.677
  I0523 06:04:11.678441 22 statefulset.go:1152] Observed &StatefulSet event: ADDED
  I0523 06:04:11.678464 22 statefulset.go:1148] Observed Statefulset ss in namespace statefulset-8603 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0523 06:04:11.678533 22 statefulset.go:1152] Observed &StatefulSet event: MODIFIED
  I0523 06:04:11.678573 22 statefulset.go:135] Deleting all statefulset in ns statefulset-8603
  I0523 06:04:11.679490 22 rest.go:150] Scaling statefulset ss to 0
  I0523 06:04:21.694606 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0523 06:04:21.696001 22 rest.go:88] Deleting statefulset ss
  I0523 06:04:21.700309 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8603" for this suite. @ 05/23/24 06:04:21.701
• [20.064 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 05/23/24 06:04:21.704
  I0523 06:04:21.704387 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename deployment @ 05/23/24 06:04:21.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:04:21.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:04:21.714
  I0523 06:04:21.715790 22 deployment.go:1645] Creating simple deployment test-new-deployment
  I0523 06:04:21.721094 22 deployment.go:222] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 05/23/24 06:04:23.726
  STEP: updating a scale subresource @ 05/23/24 06:04:23.727
  STEP: verifying the deployment Spec.Replicas was modified @ 05/23/24 06:04:23.73
  STEP: Patch a scale subresource @ 05/23/24 06:04:23.732
  I0523 06:04:23.742032 22 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4583",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "803f0976-063a-4ac3-82f7-8b43442b25f0",
      ResourceVersion: (string) (len=5) "53516",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852041061,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041061,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041062,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041062,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041062,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041062,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041061,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-77db57d8df\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0523 06:04:23.746223 22 deployment.go:39] New ReplicaSet "test-new-deployment-77db57d8df" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-77db57d8df",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4583",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8761bd08-b8e0-4a50-b28d-5ca0c8b0dc47",
      ResourceVersion: (string) (len=5) "53523",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852041061,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "803f0976-063a-4ac3-82f7-8b43442b25f0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041063,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 30 33 66 30 39  37 36 2d 30 36 33 61 2d  |\"803f0976-063a-|
              00000120  34 61 63 33 2d 38 32 66  37 2d 38 62 34 33 34 34  |4ac3-82f7-8b4344|
              00000130  32 62 32 35 66 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |2b25f0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041063,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0523 06:04:23.748534 22 deployment.go:67] Pod "test-new-deployment-77db57d8df-bxrrs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-bxrrs",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4583",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "73364d00-7d78-4ed8-aec9-852077361e73",
      ResourceVersion: (string) (len=5) "53524",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852041063,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "8761bd08-b8e0-4a50-b28d-5ca0c8b0dc47",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041063,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 37  36 31 62 64 30 38 2d 62  |d\":\"8761bd08-b|
              00000090  38 65 30 2d 34 61 35 30  2d 62 32 38 64 2d 35 63  |8e0-4a50-b28d-5c|
              000000a0  61 30 63 38 62 30 64 63  34 37 5c 22 7d 22 3a 7b  |a0c8b0dc47\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041063,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5wbp2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5wbp2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-209",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041063,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041063,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041063,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041063,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041063,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.209",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.209"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852041063,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 06:04:23.749802 22 deployment.go:67] Pod "test-new-deployment-77db57d8df-jb956" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-jb956",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4583",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2a6dc844-79d9-4375-a148-5b18f2ead473",
      ResourceVersion: (string) (len=5) "53509",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852041061,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "8761bd08-b8e0-4a50-b28d-5ca0c8b0dc47",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041061,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 37  36 31 62 64 30 38 2d 62  |d\":\"8761bd08-b|
              00000090  38 65 30 2d 34 61 35 30  2d 62 32 38 64 2d 35 63  |8e0-4a50-b28d-5c|
              000000a0  61 30 63 38 62 30 64 63  34 37 5c 22 7d 22 3a 7b  |a0c8b0dc47\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041062,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 34 31 5c 22 7d 22 3a  |2.20.64.141\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mthrx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mthrx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041062,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041061,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041062,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041062,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041061,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.141",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.141"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852041061,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852041062,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://673fbb65d7d7f3d898a9e881d6556bbe523b1672cd6c9600e8e8c2db3d0dcf9a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 06:04:23.750866 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4583" for this suite. @ 05/23/24 06:04:23.755
• [2.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 05/23/24 06:04:23.762
  I0523 06:04:23.762741 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename pods @ 05/23/24 06:04:23.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:04:23.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:04:23.78
  STEP: Create a pod @ 05/23/24 06:04:23.781
  STEP: patching /status @ 05/23/24 06:04:25.789
  I0523 06:04:25.793222 22 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0523 06:04:25.793295 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5387" for this suite. @ 05/23/24 06:04:25.795
• [2.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 05/23/24 06:04:25.797
  I0523 06:04:25.797463 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename deployment @ 05/23/24 06:04:25.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:04:25.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:04:25.807
  STEP: creating a Deployment @ 05/23/24 06:04:25.809
  STEP: waiting for Deployment to be created @ 05/23/24 06:04:25.811
  STEP: waiting for all Replicas to be Ready @ 05/23/24 06:04:25.812
  I0523 06:04:25.813126 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0523 06:04:25.813141 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0523 06:04:25.819365 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0523 06:04:25.819376 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0523 06:04:25.830415 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0523 06:04:25.830434 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0523 06:04:25.840328 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0523 06:04:25.840348 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0523 06:04:26.541175 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0523 06:04:26.541199 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0523 06:04:26.944698 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 05/23/24 06:04:26.944
  I0523 06:04:26.949075 22 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 05/23/24 06:04:26.949
  I0523 06:04:26.949902 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 0
  I0523 06:04:26.949920 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 0
  I0523 06:04:26.949928 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 0
  I0523 06:04:26.949936 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 0
  I0523 06:04:26.949944 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 0
  I0523 06:04:26.949951 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 0
  I0523 06:04:26.950007 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 0
  I0523 06:04:26.950019 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 0
  I0523 06:04:26.950034 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 1
  I0523 06:04:26.950044 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 1
  I0523 06:04:26.950067 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 2
  I0523 06:04:26.950083 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 2
  I0523 06:04:26.950092 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 2
  I0523 06:04:26.950100 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 2
  I0523 06:04:26.955592 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 2
  I0523 06:04:26.955610 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 2
  I0523 06:04:26.965328 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 2
  I0523 06:04:26.965340 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 2
  I0523 06:04:26.970286 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 1
  I0523 06:04:26.970297 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 1
  I0523 06:04:26.976484 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 1
  I0523 06:04:26.976496 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 1
  I0523 06:04:27.547052 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 2
  I0523 06:04:27.547076 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 2
  I0523 06:04:27.557508 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 1
  STEP: listing Deployments @ 05/23/24 06:04:27.557
  I0523 06:04:27.558945 22 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 05/23/24 06:04:27.558
  I0523 06:04:27.564284 22 deployment.go:360] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 05/23/24 06:04:27.564
  I0523 06:04:27.566737 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0523 06:04:27.569041 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0523 06:04:27.579019 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0523 06:04:27.587899 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0523 06:04:27.591989 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0523 06:04:28.553168 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0523 06:04:28.562991 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0523 06:04:28.567414 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0523 06:04:28.571515 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0523 06:04:28.582108 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0523 06:04:29.963302 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 05/23/24 06:04:29.972
  STEP: fetching the DeploymentStatus @ 05/23/24 06:04:29.977
  I0523 06:04:29.979889 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 1
  I0523 06:04:29.979955 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 1
  I0523 06:04:29.979996 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 1
  I0523 06:04:29.980080 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 1
  I0523 06:04:29.980159 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 1
  I0523 06:04:29.980177 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 2
  I0523 06:04:29.980243 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 2
  I0523 06:04:29.980257 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 2
  I0523 06:04:29.980304 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 2
  I0523 06:04:29.980318 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 2
  I0523 06:04:29.980349 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-6636 with ReadyReplicas 3
  STEP: deleting the Deployment @ 05/23/24 06:04:29.98
  I0523 06:04:29.983396 22 deployment.go:475] observed event type MODIFIED
  I0523 06:04:29.983462 22 deployment.go:475] observed event type MODIFIED
  I0523 06:04:29.983478 22 deployment.go:475] observed event type MODIFIED
  I0523 06:04:29.983491 22 deployment.go:475] observed event type MODIFIED
  I0523 06:04:29.983511 22 deployment.go:475] observed event type MODIFIED
  I0523 06:04:29.983624 22 deployment.go:475] observed event type MODIFIED
  I0523 06:04:29.983636 22 deployment.go:475] observed event type MODIFIED
  I0523 06:04:29.983643 22 deployment.go:475] observed event type MODIFIED
  I0523 06:04:29.983700 22 deployment.go:475] observed event type MODIFIED
  I0523 06:04:29.983740 22 deployment.go:475] observed event type MODIFIED
  I0523 06:04:29.983775 22 deployment.go:475] observed event type MODIFIED
  I0523 06:04:29.983786 22 deployment.go:475] observed event type MODIFIED
  I0523 06:04:29.983851 22 deployment.go:475] observed event type MODIFIED
  I0523 06:04:29.983896 22 deployment.go:475] observed event type MODIFIED
  I0523 06:04:29.985028 22 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0523 06:04:29.986421 22 deployment.go:657] ReplicaSet "test-deployment-5bf4984755":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-5bf4984755",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6636",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3a5a54c0-fca4-41b4-84f5-4aae039935fc",
      ResourceVersion: (string) (len=5) "53656",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852041065,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5bf4984755",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "68b0d44a-f7e0-4e5e-825e-b36979402cf9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 38 62 30  64 34 34 61 2d 66 37 65  |":\"68b0d44a-f7e|
              00000130  30 2d 34 65 35 65 2d 38  32 35 65 2d 62 33 36 39  |0-4e5e-825e-b369|
              00000140  37 39 34 30 32 63 66 39  5c 22 7d 22 3a 7b 7d 7d  |79402cf9\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5bf4984755",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5bf4984755",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0523 06:04:29.993704 22 deployment.go:657] ReplicaSet "test-deployment-65fbf5b65d":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-65fbf5b65d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6636",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7d994a46-38b9-4437-a5f4-aecb4f5c3ff6",
      ResourceVersion: (string) (len=5) "53797",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852041066,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "68b0d44a-f7e0-4e5e-825e-b36979402cf9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 38 62 30  64 34 34 61 2d 66 37 65  |":\"68b0d44a-f7e|
              00000130  30 2d 34 65 35 65 2d 38  32 35 65 2d 62 33 36 39  |0-4e5e-825e-b369|
              00000140  37 39 34 30 32 63 66 39  5c 22 7d 22 3a 7b 7d 7d  |79402cf9\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0523 06:04:29.995945 22 deployment.go:669] pod: "test-deployment-65fbf5b65d-qgftn":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-65fbf5b65d-qgftn",
      GenerateName: (string) (len=27) "test-deployment-65fbf5b65d-",
      Namespace: (string) (len=15) "deployment-6636",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a29fff7a-f847-451b-bbdf-60c4ed4a8611",
      ResourceVersion: (string) (len=5) "53793",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852041066,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852041071,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-65fbf5b65d",
          UID: (types.UID) (len=36) "7d994a46-38b9-4437-a5f4-aecb4f5c3ff6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041066,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  37 64 39 39 34 61 34 36  |uid\":\"7d994a46|
              000000a0  2d 33 38 62 39 2d 34 34  33 37 2d 61 35 66 34 2d  |-38b9-4437-a5f4-|
              000000b0  61 65 63 62 34 66 35 63  33 66 66 36 5c 22 7d 22  |aecb4f5c3ff6\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 36 37 5c 22 7d 22 3a  |2.20.64.167\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xdszf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xdszf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041066,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041066,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.167",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.167"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852041066,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852041067,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://d2e6ed61bba9e5dfda1b381641fda1997c4e39acee7d169afeaccee053de3414",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0523 06:04:29.997196 22 deployment.go:657] ReplicaSet "test-deployment-6b9f8f4d48":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6b9f8f4d48",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6636",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "74065766-d53c-4cce-a627-5a8250a1fae0",
      ResourceVersion: (string) (len=5) "53786",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852041067,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "68b0d44a-f7e0-4e5e-825e-b36979402cf9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041068,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 38 62 30  64 34 34 61 2d 66 37 65  |":\"68b0d44a-f7e|
              00000130  30 2d 34 65 35 65 2d 38  32 35 65 2d 62 33 36 39  |0-4e5e-825e-b369|
              00000140  37 39 34 30 32 63 66 39  5c 22 7d 22 3a 7b 7d 7d  |79402cf9\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0523 06:04:29.999112 22 deployment.go:669] pod: "test-deployment-6b9f8f4d48-bxm86":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6b9f8f4d48-bxm86",
      GenerateName: (string) (len=27) "test-deployment-6b9f8f4d48-",
      Namespace: (string) (len=15) "deployment-6636",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cd337b8e-0ae1-47c1-8b2e-fb8d7e1cb82f",
      ResourceVersion: (string) (len=5) "53805",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852041068,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852041070,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6b9f8f4d48",
          UID: (types.UID) (len=36) "74065766-d53c-4cce-a627-5a8250a1fae0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041068,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  37 34 30 36 35 37 36 36  |uid\":\"74065766|
              000000a0  2d 64 35 33 63 2d 34 63  63 65 2d 61 36 32 37 2d  |-d53c-4cce-a627-|
              000000b0  35 61 38 32 35 30 61 31  66 61 65 30 5c 22 7d 22  |5a8250a1fae0\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 39 2e  31 36 30 5c 22 7d 22 3a  |2.20.69.160\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q2ktv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q2ktv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-209",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041068,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041068,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.209",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.209"
        }
      },
      PodIP: (string) (len=13) "172.20.69.160",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.69.160"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852041068,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852041069,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://32ad462449ffcaf73e4b0d03af64b91cf558d4a424c5326c71252294fc5535c0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0523 06:04:30.000456 22 deployment.go:669] pod: "test-deployment-6b9f8f4d48-n8c2q":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6b9f8f4d48-n8c2q",
      GenerateName: (string) (len=27) "test-deployment-6b9f8f4d48-",
      Namespace: (string) (len=15) "deployment-6636",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "05d84b9f-0940-4b89-bbca-bcc1670d090b",
      ResourceVersion: (string) (len=5) "53806",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852041067,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852041070,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6b9f8f4d48",
          UID: (types.UID) (len=36) "74065766-d53c-4cce-a627-5a8250a1fae0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  37 34 30 36 35 37 36 36  |uid\":\"74065766|
              000000a0  2d 64 35 33 63 2d 34 63  63 65 2d 61 36 32 37 2d  |-d53c-4cce-a627-|
              000000b0  35 61 38 32 35 30 61 31  66 61 65 30 5c 22 7d 22  |5a8250a1fae0\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041068,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 37 35 5c 22 7d 22 3a  |2.20.64.175\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t42ps",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t42ps",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041068,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041068,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041068,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852041067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.175",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.175"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852041067,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852041068,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5c04517ab47ad9b3a41e92a947e8c523c2608725c3d573b44df7de06c8ef01e4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0523 06:04:30.001454 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6636" for this suite. @ 05/23/24 06:04:30.002
• [4.208 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 05/23/24 06:04:30.006
  I0523 06:04:30.006112 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename endpointslice @ 05/23/24 06:04:30.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:04:30.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:04:30.017
  I0523 06:04:30.021106 22 endpointslice.go:1045] Endpoints addresses: [10.255.0.207] , ports: [6443]
  I0523 06:04:30.021125 22 endpointslice.go:1075] EndpointSlices addresses: [10.255.0.207] , ports: [6443]
  I0523 06:04:30.021174 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3030" for this suite. @ 05/23/24 06:04:30.022
• [0.019 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1459
  STEP: Creating a kubernetes client @ 05/23/24 06:04:30.025
  I0523 06:04:30.025325 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename services @ 05/23/24 06:04:30.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:04:30.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:04:30.034
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7303 @ 05/23/24 06:04:30.036
  STEP: changing the ExternalName service to type=NodePort @ 05/23/24 06:04:30.038
  STEP: creating replication controller externalname-service in namespace services-7303 @ 05/23/24 06:04:30.044
  I0523 06:04:30.047676      22 runners.go:198] Created replication controller with name: externalname-service, namespace: services-7303, replica count: 2
  I0523 06:04:33.098455      22 runners.go:198] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0523 06:04:33.098480 22 resource.go:361] Creating new exec pod
  I0523 06:04:36.107216 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-7303 exec execpodzs88q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0523 06:04:36.174870 22 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0523 06:04:36.174901 22 builder.go:147] stdout: "externalname-service-vgcxh"
  I0523 06:04:36.175113 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-7303 exec execpodzs88q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.167.69 80'
  I0523 06:04:36.235659 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.167.69 80\nConnection to 10.68.167.69 80 port [tcp/http] succeeded!\n"
  I0523 06:04:36.235694 22 builder.go:147] stdout: "externalname-service-fwm4x"
  I0523 06:04:36.235796 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-7303 exec execpodzs88q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.208 30840'
  I0523 06:04:36.296249 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.208 30840\nConnection to 10.255.0.208 30840 port [tcp/*] succeeded!\n"
  I0523 06:04:36.296288 22 builder.go:147] stdout: "externalname-service-vgcxh"
  I0523 06:04:36.296343 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-7303 exec execpodzs88q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.209 30840'
  I0523 06:04:36.356852 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.209 30840\nConnection to 10.255.0.209 30840 port [tcp/*] succeeded!\n"
  I0523 06:04:36.356886 22 builder.go:147] stdout: "externalname-service-vgcxh"
  I0523 06:04:36.357011 22 service.go:1468] Cleaning up the ExternalName to NodePort test service
  I0523 06:04:36.366202 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7303" for this suite. @ 05/23/24 06:04:36.367
• [6.346 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 05/23/24 06:04:36.371
  I0523 06:04:36.371658 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename disruption @ 05/23/24 06:04:36.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:04:36.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:04:36.381
  STEP: creating the pdb @ 05/23/24 06:04:36.382
  STEP: Waiting for the pdb to be processed @ 05/23/24 06:04:36.385
  STEP: updating the pdb @ 05/23/24 06:04:38.386
  STEP: Waiting for the pdb to be processed @ 05/23/24 06:04:38.39
  STEP: patching the pdb @ 05/23/24 06:04:40.393
  STEP: Waiting for the pdb to be processed @ 05/23/24 06:04:40.396
  STEP: Waiting for the pdb to be deleted @ 05/23/24 06:04:42.401
  I0523 06:04:42.402803 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5382" for this suite. @ 05/23/24 06:04:42.404
• [6.035 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 05/23/24 06:04:42.406
  I0523 06:04:42.406493 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename proxy @ 05/23/24 06:04:42.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:04:42.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:04:42.414
  STEP: starting an echo server on multiple ports @ 05/23/24 06:04:42.421
  STEP: creating replication controller proxy-service-n785p in namespace proxy-5160 @ 05/23/24 06:04:42.421
  I0523 06:04:42.425417      22 runners.go:198] Created replication controller with name: proxy-service-n785p, namespace: proxy-5160, replica count: 1
  I0523 06:04:43.476730      22 runners.go:198] proxy-service-n785p Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0523 06:04:44.477460      22 runners.go:198] proxy-service-n785p Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0523 06:04:44.478947 22 proxy.go:230] setup took 2.061977393s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 05/23/24 06:04:44.478
  I0523 06:04:44.481981 22 proxy.go:558] (0) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/rewriteme">test<... (200; 2.860065ms)
  I0523 06:04:44.482959 22 proxy.go:558] (0) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:160/proxy/: foo (200; 3.809253ms)
  I0523 06:04:44.483110 22 proxy.go:558] (0) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/rewriteme">... (200; 4.007861ms)
  I0523 06:04:44.483289 22 proxy.go:558] (0) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:162/proxy/: bar (200; 4.208792ms)
  I0523 06:04:44.483313 22 proxy.go:558] (0) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname1/proxy/: foo (200; 4.284484ms)
  I0523 06:04:44.483317 22 proxy.go:558] (0) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:162/proxy/: bar (200; 4.172999ms)
  I0523 06:04:44.483342 22 proxy.go:558] (0) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:160/proxy/: foo (200; 4.187828ms)
  I0523 06:04:44.483368 22 proxy.go:558] (0) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname1/proxy/: foo (200; 4.349822ms)
  I0523 06:04:44.485625 22 proxy.go:558] (0) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/rewriteme">test</a> (200; 6.52079ms)
  I0523 06:04:44.485652 22 proxy.go:558] (0) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname2/proxy/: bar (200; 6.580601ms)
  I0523 06:04:44.485676 22 proxy.go:558] (0) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname2/proxy/: bar (200; 6.546254ms)
  I0523 06:04:44.486516 22 proxy.go:558] (0) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/tlsrewritem... (200; 7.496586ms)
  I0523 06:04:44.486644 22 proxy.go:558] (0) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:460/proxy/: tls baz (200; 7.524008ms)
  I0523 06:04:44.486907 22 proxy.go:558] (0) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname1/proxy/: tls baz (200; 7.873137ms)
  I0523 06:04:44.486969 22 proxy.go:558] (0) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname2/proxy/: tls qux (200; 7.897555ms)
  I0523 06:04:44.487155 22 proxy.go:558] (0) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:462/proxy/: tls qux (200; 8.062544ms)
  I0523 06:04:44.489155 22 proxy.go:558] (1) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:162/proxy/: bar (200; 1.885425ms)
  I0523 06:04:44.489211 22 proxy.go:558] (1) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:160/proxy/: foo (200; 1.993283ms)
  I0523 06:04:44.489214 22 proxy.go:558] (1) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:462/proxy/: tls qux (200; 1.919546ms)
  I0523 06:04:44.490352 22 proxy.go:558] (1) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname1/proxy/: tls baz (200; 3.178395ms)
  I0523 06:04:44.490414 22 proxy.go:558] (1) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:460/proxy/: tls baz (200; 2.982881ms)
  I0523 06:04:44.490500 22 proxy.go:558] (1) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/rewriteme">test<... (200; 3.1072ms)
  I0523 06:04:44.490522 22 proxy.go:558] (1) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/rewriteme">test</a> (200; 3.070595ms)
  I0523 06:04:44.490567 22 proxy.go:558] (1) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:162/proxy/: bar (200; 3.073372ms)
  I0523 06:04:44.490577 22 proxy.go:558] (1) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/tlsrewritem... (200; 3.165701ms)
  I0523 06:04:44.490583 22 proxy.go:558] (1) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:160/proxy/: foo (200; 3.069726ms)
  I0523 06:04:44.490592 22 proxy.go:558] (1) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/rewriteme">... (200; 3.220507ms)
  I0523 06:04:44.491825 22 proxy.go:558] (1) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname1/proxy/: foo (200; 4.510515ms)
  I0523 06:04:44.491839 22 proxy.go:558] (1) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname2/proxy/: bar (200; 4.368743ms)
  I0523 06:04:44.491851 22 proxy.go:558] (1) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname1/proxy/: foo (200; 4.672517ms)
  I0523 06:04:44.491867 22 proxy.go:558] (1) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname2/proxy/: bar (200; 4.517178ms)
  I0523 06:04:44.491958 22 proxy.go:558] (1) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname2/proxy/: tls qux (200; 4.718926ms)
  I0523 06:04:44.495211 22 proxy.go:558] (2) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:162/proxy/: bar (200; 3.08562ms)
  I0523 06:04:44.495344 22 proxy.go:558] (2) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:160/proxy/: foo (200; 3.221113ms)
  I0523 06:04:44.495347 22 proxy.go:558] (2) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/rewriteme">test<... (200; 3.194396ms)
  I0523 06:04:44.495398 22 proxy.go:558] (2) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:160/proxy/: foo (200; 3.355936ms)
  I0523 06:04:44.495465 22 proxy.go:558] (2) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/rewriteme">test</a> (200; 3.321216ms)
  I0523 06:04:44.495484 22 proxy.go:558] (2) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/tlsrewritem... (200; 3.421863ms)
  I0523 06:04:44.495509 22 proxy.go:558] (2) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:460/proxy/: tls baz (200; 3.427196ms)
  I0523 06:04:44.495507 22 proxy.go:558] (2) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:462/proxy/: tls qux (200; 3.40183ms)
  I0523 06:04:44.495523 22 proxy.go:558] (2) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:162/proxy/: bar (200; 3.535783ms)
  I0523 06:04:44.495534 22 proxy.go:558] (2) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/rewriteme">... (200; 3.515057ms)
  I0523 06:04:44.495718 22 proxy.go:558] (2) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname1/proxy/: tls baz (200; 3.664978ms)
  I0523 06:04:44.495741 22 proxy.go:558] (2) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname1/proxy/: foo (200; 3.759661ms)
  I0523 06:04:44.495753 22 proxy.go:558] (2) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname2/proxy/: tls qux (200; 3.756963ms)
  I0523 06:04:44.495761 22 proxy.go:558] (2) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname2/proxy/: bar (200; 3.731249ms)
  I0523 06:04:44.495824 22 proxy.go:558] (2) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname2/proxy/: bar (200; 3.723797ms)
  I0523 06:04:44.495879 22 proxy.go:558] (2) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname1/proxy/: foo (200; 3.802924ms)
  I0523 06:04:44.497690 22 proxy.go:558] (3) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:462/proxy/: tls qux (200; 1.64978ms)
  I0523 06:04:44.497705 22 proxy.go:558] (3) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/rewriteme">test</a> (200; 1.644739ms)
  I0523 06:04:44.498574 22 proxy.go:558] (3) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/tlsrewritem... (200; 2.439944ms)
  I0523 06:04:44.498580 22 proxy.go:558] (3) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:160/proxy/: foo (200; 2.427111ms)
  I0523 06:04:44.498713 22 proxy.go:558] (3) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:162/proxy/: bar (200; 2.691909ms)
  I0523 06:04:44.498738 22 proxy.go:558] (3) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname1/proxy/: foo (200; 2.83632ms)
  I0523 06:04:44.498771 22 proxy.go:558] (3) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:460/proxy/: tls baz (200; 2.694065ms)
  I0523 06:04:44.498898 22 proxy.go:558] (3) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/rewriteme">... (200; 2.803583ms)
  I0523 06:04:44.499246 22 proxy.go:558] (3) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/rewriteme">test<... (200; 3.337355ms)
  I0523 06:04:44.499321 22 proxy.go:558] (3) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:162/proxy/: bar (200; 3.118481ms)
  I0523 06:04:44.500258 22 proxy.go:558] (3) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:160/proxy/: foo (200; 4.145299ms)
  I0523 06:04:44.500635 22 proxy.go:558] (3) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname2/proxy/: bar (200; 4.679004ms)
  I0523 06:04:44.500700 22 proxy.go:558] (3) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname2/proxy/: bar (200; 4.525506ms)
  I0523 06:04:44.500713 22 proxy.go:558] (3) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname1/proxy/: tls baz (200; 4.735645ms)
  I0523 06:04:44.500716 22 proxy.go:558] (3) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname1/proxy/: foo (200; 4.783675ms)
  I0523 06:04:44.500725 22 proxy.go:558] (3) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname2/proxy/: tls qux (200; 4.724635ms)
  I0523 06:04:44.502761 22 proxy.go:558] (4) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:462/proxy/: tls qux (200; 1.919889ms)
  I0523 06:04:44.502850 22 proxy.go:558] (4) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:460/proxy/: tls baz (200; 2.097499ms)
  I0523 06:04:44.502911 22 proxy.go:558] (4) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/tlsrewritem... (200; 2.003585ms)
  I0523 06:04:44.504209 22 proxy.go:558] (4) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname2/proxy/: tls qux (200; 3.416309ms)
  I0523 06:04:44.504226 22 proxy.go:558] (4) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname2/proxy/: bar (200; 3.299992ms)
  I0523 06:04:44.504360 22 proxy.go:558] (4) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/rewriteme">test<... (200; 3.471574ms)
  I0523 06:04:44.504372 22 proxy.go:558] (4) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname2/proxy/: bar (200; 3.346321ms)
  I0523 06:04:44.504377 22 proxy.go:558] (4) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:160/proxy/: foo (200; 3.565382ms)
  I0523 06:04:44.504390 22 proxy.go:558] (4) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/rewriteme">... (200; 3.522051ms)
  I0523 06:04:44.504488 22 proxy.go:558] (4) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:162/proxy/: bar (200; 3.67519ms)
  I0523 06:04:44.504501 22 proxy.go:558] (4) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:160/proxy/: foo (200; 3.612746ms)
  I0523 06:04:44.504520 22 proxy.go:558] (4) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/rewriteme">test</a> (200; 3.65453ms)
  I0523 06:04:44.504623 22 proxy.go:558] (4) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname1/proxy/: tls baz (200; 3.867017ms)
  I0523 06:04:44.504634 22 proxy.go:558] (4) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:162/proxy/: bar (200; 3.799691ms)
  I0523 06:04:44.504695 22 proxy.go:558] (4) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname1/proxy/: foo (200; 3.90984ms)
  I0523 06:04:44.505481 22 proxy.go:558] (4) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname1/proxy/: foo (200; 4.573845ms)
  I0523 06:04:44.507865 22 proxy.go:558] (5) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:160/proxy/: foo (200; 2.276139ms)
  I0523 06:04:44.508220 22 proxy.go:558] (5) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/tlsrewritem... (200; 2.613405ms)
  I0523 06:04:44.508562 22 proxy.go:558] (5) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/rewriteme">test</a> (200; 3.062607ms)
  I0523 06:04:44.508602 22 proxy.go:558] (5) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:162/proxy/: bar (200; 2.954925ms)
  I0523 06:04:44.508725 22 proxy.go:558] (5) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:460/proxy/: tls baz (200; 3.105025ms)
  I0523 06:04:44.508722 22 proxy.go:558] (5) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:160/proxy/: foo (200; 3.210662ms)
  I0523 06:04:44.508737 22 proxy.go:558] (5) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/rewriteme">... (200; 3.168281ms)
  I0523 06:04:44.509236 22 proxy.go:558] (5) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/rewriteme">test<... (200; 3.684028ms)
  I0523 06:04:44.509314 22 proxy.go:558] (5) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname2/proxy/: tls qux (200; 3.672328ms)
  I0523 06:04:44.509644 22 proxy.go:558] (5) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname1/proxy/: foo (200; 4.0675ms)
  I0523 06:04:44.509672 22 proxy.go:558] (5) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname1/proxy/: tls baz (200; 4.051707ms)
  I0523 06:04:44.509767 22 proxy.go:558] (5) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname1/proxy/: foo (200; 4.209161ms)
  I0523 06:04:44.509806 22 proxy.go:558] (5) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname2/proxy/: bar (200; 4.17421ms)
  I0523 06:04:44.509863 22 proxy.go:558] (5) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:462/proxy/: tls qux (200; 4.358637ms)
  I0523 06:04:44.509906 22 proxy.go:558] (5) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname2/proxy/: bar (200; 4.305032ms)
  I0523 06:04:44.509992 22 proxy.go:558] (5) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:162/proxy/: bar (200; 4.462055ms)
  I0523 06:04:44.512335 22 proxy.go:558] (6) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/tlsrewritem... (200; 2.251617ms)
  I0523 06:04:44.512336 22 proxy.go:558] (6) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:462/proxy/: tls qux (200; 2.236444ms)
  I0523 06:04:44.512408 22 proxy.go:558] (6) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:162/proxy/: bar (200; 2.398922ms)
  I0523 06:04:44.513233 22 proxy.go:558] (6) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:160/proxy/: foo (200; 3.005079ms)
  I0523 06:04:44.513238 22 proxy.go:558] (6) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:162/proxy/: bar (200; 3.036944ms)
  I0523 06:04:44.513289 22 proxy.go:558] (6) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/rewriteme">test</a> (200; 3.12081ms)
  I0523 06:04:44.513335 22 proxy.go:558] (6) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/rewriteme">test<... (200; 3.152715ms)
  I0523 06:04:44.513335 22 proxy.go:558] (6) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/rewriteme">... (200; 3.09292ms)
  I0523 06:04:44.513385 22 proxy.go:558] (6) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:460/proxy/: tls baz (200; 3.235226ms)
  I0523 06:04:44.513681 22 proxy.go:558] (6) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname2/proxy/: bar (200; 3.5453ms)
  I0523 06:04:44.513753 22 proxy.go:558] (6) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname1/proxy/: foo (200; 3.741509ms)
  I0523 06:04:44.513819 22 proxy.go:558] (6) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname2/proxy/: tls qux (200; 3.752425ms)
  I0523 06:04:44.513868 22 proxy.go:558] (6) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname1/proxy/: foo (200; 3.751875ms)
  I0523 06:04:44.513880 22 proxy.go:558] (6) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname2/proxy/: bar (200; 3.66654ms)
  I0523 06:04:44.513929 22 proxy.go:558] (6) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname1/proxy/: tls baz (200; 3.88213ms)
  I0523 06:04:44.513947 22 proxy.go:558] (6) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:160/proxy/: foo (200; 3.693776ms)
  I0523 06:04:44.517238 22 proxy.go:558] (7) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:160/proxy/: foo (200; 3.223181ms)
  I0523 06:04:44.518149 22 proxy.go:558] (7) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/rewriteme">test</a> (200; 4.046903ms)
  I0523 06:04:44.518222 22 proxy.go:558] (7) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/rewriteme">test<... (200; 4.157206ms)
  I0523 06:04:44.518246 22 proxy.go:558] (7) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/rewriteme">... (200; 4.152887ms)
  I0523 06:04:44.518248 22 proxy.go:558] (7) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname1/proxy/: foo (200; 4.242253ms)
  I0523 06:04:44.518264 22 proxy.go:558] (7) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:162/proxy/: bar (200; 4.187304ms)
  I0523 06:04:44.518270 22 proxy.go:558] (7) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:162/proxy/: bar (200; 4.159585ms)
  I0523 06:04:44.518346 22 proxy.go:558] (7) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:160/proxy/: foo (200; 4.207869ms)
  I0523 06:04:44.518364 22 proxy.go:558] (7) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:460/proxy/: tls baz (200; 4.22125ms)
  I0523 06:04:44.518373 22 proxy.go:558] (7) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname1/proxy/: tls baz (200; 4.371484ms)
  I0523 06:04:44.518380 22 proxy.go:558] (7) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname2/proxy/: tls qux (200; 4.320875ms)
  I0523 06:04:44.518394 22 proxy.go:558] (7) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/tlsrewritem... (200; 4.272328ms)
  I0523 06:04:44.518396 22 proxy.go:558] (7) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:462/proxy/: tls qux (200; 4.358488ms)
  I0523 06:04:44.518588 22 proxy.go:558] (7) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname2/proxy/: bar (200; 4.427653ms)
  I0523 06:04:44.518642 22 proxy.go:558] (7) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname1/proxy/: foo (200; 4.597812ms)
  I0523 06:04:44.518655 22 proxy.go:558] (7) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname2/proxy/: bar (200; 4.43856ms)
  I0523 06:04:44.520826 22 proxy.go:558] (8) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:160/proxy/: foo (200; 2.135368ms)
  I0523 06:04:44.520893 22 proxy.go:558] (8) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:462/proxy/: tls qux (200; 2.171132ms)
  I0523 06:04:44.524131 22 proxy.go:558] (8) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/rewriteme">test</a> (200; 5.353241ms)
  I0523 06:04:44.524724 22 proxy.go:558] (8) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname1/proxy/: foo (200; 5.97928ms)
  I0523 06:04:44.524766 22 proxy.go:558] (8) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname2/proxy/: bar (200; 6.085819ms)
  I0523 06:04:44.524882 22 proxy.go:558] (8) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/tlsrewritem... (200; 6.167024ms)
  I0523 06:04:44.524949 22 proxy.go:558] (8) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:160/proxy/: foo (200; 6.166086ms)
  I0523 06:04:44.525062 22 proxy.go:558] (8) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname2/proxy/: bar (200; 6.340355ms)
  I0523 06:04:44.525318 22 proxy.go:558] (8) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:460/proxy/: tls baz (200; 6.570527ms)
  I0523 06:04:44.525393 22 proxy.go:558] (8) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:162/proxy/: bar (200; 6.715951ms)
  I0523 06:04:44.525441 22 proxy.go:558] (8) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/rewriteme">test<... (200; 6.660033ms)
  I0523 06:04:44.525500 22 proxy.go:558] (8) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname1/proxy/: tls baz (200; 6.754799ms)
  I0523 06:04:44.525572 22 proxy.go:558] (8) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname2/proxy/: tls qux (200; 6.806352ms)
  I0523 06:04:44.525603 22 proxy.go:558] (8) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/rewriteme">... (200; 6.800261ms)
  I0523 06:04:44.527812 22 proxy.go:558] (8) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname1/proxy/: foo (200; 9.139861ms)
  I0523 06:04:44.527877 22 proxy.go:558] (8) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:162/proxy/: bar (200; 9.077247ms)
  I0523 06:04:44.530749 22 proxy.go:558] (9) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:160/proxy/: foo (200; 2.847657ms)
  I0523 06:04:44.530749 22 proxy.go:558] (9) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:160/proxy/: foo (200; 2.852416ms)
  I0523 06:04:44.530765 22 proxy.go:558] (9) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:162/proxy/: bar (200; 2.869568ms)
  I0523 06:04:44.530750 22 proxy.go:558] (9) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:462/proxy/: tls qux (200; 2.810154ms)
  I0523 06:04:44.530749 22 proxy.go:558] (9) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname2/proxy/: bar (200; 2.843371ms)
  I0523 06:04:44.531134 22 proxy.go:558] (9) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:162/proxy/: bar (200; 3.193481ms)
  I0523 06:04:44.531155 22 proxy.go:558] (9) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/rewriteme">test<... (200; 3.142051ms)
  I0523 06:04:44.531228 22 proxy.go:558] (9) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/rewriteme">test</a> (200; 3.226681ms)
  I0523 06:04:44.531578 22 proxy.go:558] (9) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:460/proxy/: tls baz (200; 3.613961ms)
  I0523 06:04:44.531610 22 proxy.go:558] (9) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/tlsrewritem... (200; 3.646057ms)
  I0523 06:04:44.531825 22 proxy.go:558] (9) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/rewriteme">... (200; 3.802256ms)
  I0523 06:04:44.531839 22 proxy.go:558] (9) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname1/proxy/: tls baz (200; 3.855143ms)
  I0523 06:04:44.531912 22 proxy.go:558] (9) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname1/proxy/: foo (200; 3.924968ms)
  I0523 06:04:44.538916 22 proxy.go:558] (9) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname2/proxy/: bar (200; 10.950134ms)
  I0523 06:04:44.538923 22 proxy.go:558] (9) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname2/proxy/: tls qux (200; 10.916258ms)
  I0523 06:04:44.538925 22 proxy.go:558] (9) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname1/proxy/: foo (200; 10.982137ms)
  I0523 06:04:44.542792 22 proxy.go:558] (10) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/rewriteme">test<... (200; 3.734663ms)
  I0523 06:04:44.542797 22 proxy.go:558] (10) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:160/proxy/: foo (200; 3.711533ms)
  I0523 06:04:44.542899 22 proxy.go:558] (10) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:462/proxy/: tls qux (200; 3.912551ms)
  I0523 06:04:44.542918 22 proxy.go:558] (10) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:160/proxy/: foo (200; 3.914884ms)
  I0523 06:04:44.542931 22 proxy.go:558] (10) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:162/proxy/: bar (200; 3.978578ms)
  I0523 06:04:44.542946 22 proxy.go:558] (10) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/rewriteme">test</a> (200; 3.935799ms)
  I0523 06:04:44.542965 22 proxy.go:558] (10) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:460/proxy/: tls baz (200; 3.898866ms)
  I0523 06:04:44.542979 22 proxy.go:558] (10) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:162/proxy/: bar (200; 4.022143ms)
  I0523 06:04:44.543139 22 proxy.go:558] (10) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/rewriteme">... (200; 4.179932ms)
  I0523 06:04:44.543150 22 proxy.go:558] (10) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname1/proxy/: foo (200; 4.051954ms)
  I0523 06:04:44.543332 22 proxy.go:558] (10) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/tlsrewritem... (200; 4.286717ms)
  I0523 06:04:44.543383 22 proxy.go:558] (10) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname1/proxy/: foo (200; 4.264443ms)
  I0523 06:04:44.543384 22 proxy.go:558] (10) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname1/proxy/: tls baz (200; 4.246865ms)
  I0523 06:04:44.543508 22 proxy.go:558] (10) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname2/proxy/: bar (200; 4.431507ms)
  I0523 06:04:44.543520 22 proxy.go:558] (10) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname2/proxy/: tls qux (200; 4.39478ms)
  I0523 06:04:44.543576 22 proxy.go:558] (10) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname2/proxy/: bar (200; 4.478693ms)
  I0523 06:04:44.545214 22 proxy.go:558] (11) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/rewriteme">test<... (200; 1.602766ms)
  I0523 06:04:44.547325 22 proxy.go:558] (11) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:162/proxy/: bar (200; 3.685832ms)
  I0523 06:04:44.547745 22 proxy.go:558] (11) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/rewriteme">... (200; 4.072832ms)
  I0523 06:04:44.547885 22 proxy.go:558] (11) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:160/proxy/: foo (200; 4.18968ms)
  I0523 06:04:44.547906 22 proxy.go:558] (11) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/tlsrewritem... (200; 4.189676ms)
  I0523 06:04:44.548406 22 proxy.go:558] (11) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname2/proxy/: tls qux (200; 4.507522ms)
  I0523 06:04:44.548603 22 proxy.go:558] (11) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname1/proxy/: foo (200; 5.00655ms)
  I0523 06:04:44.548605 22 proxy.go:558] (11) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname2/proxy/: bar (200; 4.790283ms)
  I0523 06:04:44.548641 22 proxy.go:558] (11) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname2/proxy/: bar (200; 4.783471ms)
  I0523 06:04:44.548795 22 proxy.go:558] (11) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/rewriteme">test</a> (200; 5.037403ms)
  I0523 06:04:44.548795 22 proxy.go:558] (11) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:160/proxy/: foo (200; 5.02145ms)
  I0523 06:04:44.548802 22 proxy.go:558] (11) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:162/proxy/: bar (200; 4.923966ms)
  I0523 06:04:44.548938 22 proxy.go:558] (11) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname1/proxy/: tls baz (200; 5.14164ms)
  I0523 06:04:44.548946 22 proxy.go:558] (11) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:460/proxy/: tls baz (200; 5.20848ms)
  I0523 06:04:44.549012 22 proxy.go:558] (11) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:462/proxy/: tls qux (200; 5.095158ms)
  I0523 06:04:44.549100 22 proxy.go:558] (11) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname1/proxy/: foo (200; 5.266978ms)
  I0523 06:04:44.551490 22 proxy.go:558] (12) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:462/proxy/: tls qux (200; 2.371907ms)
  I0523 06:04:44.551657 22 proxy.go:558] (12) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/rewriteme">test<... (200; 2.353726ms)
  I0523 06:04:44.551812 22 proxy.go:558] (12) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/tlsrewritem... (200; 2.53509ms)
  I0523 06:04:44.552002 22 proxy.go:558] (12) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:460/proxy/: tls baz (200; 2.743638ms)
  I0523 06:04:44.552074 22 proxy.go:558] (12) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:162/proxy/: bar (200; 2.825857ms)
  I0523 06:04:44.552797 22 proxy.go:558] (12) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:160/proxy/: foo (200; 3.420673ms)
  I0523 06:04:44.552866 22 proxy.go:558] (12) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:160/proxy/: foo (200; 3.520603ms)
  I0523 06:04:44.552958 22 proxy.go:558] (12) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:162/proxy/: bar (200; 3.599233ms)
  I0523 06:04:44.553002 22 proxy.go:558] (12) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/rewriteme">... (200; 3.69407ms)
  I0523 06:04:44.553051 22 proxy.go:558] (12) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname1/proxy/: foo (200; 3.929597ms)
  I0523 06:04:44.553986 22 proxy.go:558] (12) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/rewriteme">test</a> (200; 4.821929ms)
  I0523 06:04:44.554077 22 proxy.go:558] (12) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname2/proxy/: bar (200; 4.756115ms)
  I0523 06:04:44.554099 22 proxy.go:558] (12) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname1/proxy/: foo (200; 4.911346ms)
  I0523 06:04:44.554113 22 proxy.go:558] (12) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname2/proxy/: bar (200; 4.906781ms)
  I0523 06:04:44.554188 22 proxy.go:558] (12) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname1/proxy/: tls baz (200; 4.965339ms)
  I0523 06:04:44.554208 22 proxy.go:558] (12) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname2/proxy/: tls qux (200; 4.973565ms)
  I0523 06:04:44.555687 22 proxy.go:558] (13) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:162/proxy/: bar (200; 1.457224ms)
  I0523 06:04:44.558228 22 proxy.go:558] (13) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:162/proxy/: bar (200; 3.900646ms)
  I0523 06:04:44.558548 22 proxy.go:558] (13) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:160/proxy/: foo (200; 3.895562ms)
  I0523 06:04:44.558676 22 proxy.go:558] (13) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/rewriteme">test</a> (200; 4.134155ms)
  I0523 06:04:44.558676 22 proxy.go:558] (13) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:160/proxy/: foo (200; 4.068234ms)
  I0523 06:04:44.558791 22 proxy.go:558] (13) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname1/proxy/: foo (200; 4.499055ms)
  I0523 06:04:44.558871 22 proxy.go:558] (13) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname2/proxy/: bar (200; 4.452775ms)
  I0523 06:04:44.558876 22 proxy.go:558] (13) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/tlsrewritem... (200; 4.378922ms)
  I0523 06:04:44.559129 22 proxy.go:558] (13) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname2/proxy/: tls qux (200; 4.656355ms)
  I0523 06:04:44.559353 22 proxy.go:558] (13) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname1/proxy/: foo (200; 4.966731ms)
  I0523 06:04:44.559388 22 proxy.go:558] (13) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname2/proxy/: bar (200; 4.758214ms)
  I0523 06:04:44.559500 22 proxy.go:558] (13) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/rewriteme">test<... (200; 4.935134ms)
  I0523 06:04:44.559503 22 proxy.go:558] (13) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/rewriteme">... (200; 4.916555ms)
  I0523 06:04:44.559564 22 proxy.go:558] (13) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:462/proxy/: tls qux (200; 5.205458ms)
  I0523 06:04:44.559578 22 proxy.go:558] (13) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:460/proxy/: tls baz (200; 5.057417ms)
  I0523 06:04:44.559576 22 proxy.go:558] (13) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname1/proxy/: tls baz (200; 5.127178ms)
  I0523 06:04:44.563057 22 proxy.go:558] (14) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:160/proxy/: foo (200; 3.39562ms)
  I0523 06:04:44.563061 22 proxy.go:558] (14) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:162/proxy/: bar (200; 3.383565ms)
  I0523 06:04:44.563187 22 proxy.go:558] (14) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:160/proxy/: foo (200; 3.541121ms)
  I0523 06:04:44.563205 22 proxy.go:558] (14) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/rewriteme">test</a> (200; 3.48832ms)
  I0523 06:04:44.563271 22 proxy.go:558] (14) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:460/proxy/: tls baz (200; 3.574434ms)
  I0523 06:04:44.563271 22 proxy.go:558] (14) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/rewriteme">... (200; 3.668497ms)
  I0523 06:04:44.563500 22 proxy.go:558] (14) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/rewriteme">test<... (200; 3.801128ms)
  I0523 06:04:44.563592 22 proxy.go:558] (14) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname2/proxy/: bar (200; 3.986859ms)
  I0523 06:04:44.563667 22 proxy.go:558] (14) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:162/proxy/: bar (200; 3.951294ms)
  I0523 06:04:44.563689 22 proxy.go:558] (14) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname1/proxy/: tls baz (200; 3.984348ms)
  I0523 06:04:44.563691 22 proxy.go:558] (14) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/tlsrewritem... (200; 4.014992ms)
  I0523 06:04:44.563700 22 proxy.go:558] (14) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:462/proxy/: tls qux (200; 4.053498ms)
  I0523 06:04:44.563759 22 proxy.go:558] (14) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname2/proxy/: tls qux (200; 4.146657ms)
  I0523 06:04:44.563762 22 proxy.go:558] (14) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname2/proxy/: bar (200; 4.151914ms)
  I0523 06:04:44.564364 22 proxy.go:558] (14) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname1/proxy/: foo (200; 4.629009ms)
  I0523 06:04:44.564431 22 proxy.go:558] (14) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname1/proxy/: foo (200; 4.747525ms)
  I0523 06:04:44.566633 22 proxy.go:558] (15) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/rewriteme">test</a> (200; 2.166592ms)
  I0523 06:04:44.568053 22 proxy.go:558] (15) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/rewriteme">test<... (200; 3.562283ms)
  I0523 06:04:44.568170 22 proxy.go:558] (15) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:460/proxy/: tls baz (200; 3.716726ms)
  I0523 06:04:44.568196 22 proxy.go:558] (15) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname1/proxy/: foo (200; 3.644095ms)
  I0523 06:04:44.568195 22 proxy.go:558] (15) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:162/proxy/: bar (200; 3.656307ms)
  I0523 06:04:44.568209 22 proxy.go:558] (15) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/tlsrewritem... (200; 3.643182ms)
  I0523 06:04:44.568224 22 proxy.go:558] (15) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:160/proxy/: foo (200; 3.710729ms)
  I0523 06:04:44.568223 22 proxy.go:558] (15) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/rewriteme">... (200; 3.759365ms)
  I0523 06:04:44.568925 22 proxy.go:558] (15) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname2/proxy/: bar (200; 4.394361ms)
  I0523 06:04:44.568928 22 proxy.go:558] (15) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname1/proxy/: foo (200; 4.417004ms)
  I0523 06:04:44.571381 22 proxy.go:558] (15) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:160/proxy/: foo (200; 6.821625ms)
  I0523 06:04:44.572138 22 proxy.go:558] (15) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:462/proxy/: tls qux (200; 7.683242ms)
  I0523 06:04:44.572143 22 proxy.go:558] (15) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:162/proxy/: bar (200; 7.537876ms)
  I0523 06:04:44.572972 22 proxy.go:558] (15) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname2/proxy/: tls qux (200; 8.378861ms)
  I0523 06:04:44.572995 22 proxy.go:558] (15) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname1/proxy/: tls baz (200; 8.415734ms)
  I0523 06:04:44.573062 22 proxy.go:558] (15) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname2/proxy/: bar (200; 8.474886ms)
  I0523 06:04:44.577265 22 proxy.go:558] (16) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:162/proxy/: bar (200; 4.167981ms)
  I0523 06:04:44.577669 22 proxy.go:558] (16) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/rewriteme">test</a> (200; 4.438597ms)
  I0523 06:04:44.577866 22 proxy.go:558] (16) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:162/proxy/: bar (200; 4.658479ms)
  I0523 06:04:44.577899 22 proxy.go:558] (16) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:462/proxy/: tls qux (200; 4.6787ms)
  I0523 06:04:44.577918 22 proxy.go:558] (16) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/rewriteme">test<... (200; 4.677822ms)
  I0523 06:04:44.577963 22 proxy.go:558] (16) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:160/proxy/: foo (200; 4.632786ms)
  I0523 06:04:44.577972 22 proxy.go:558] (16) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname1/proxy/: foo (200; 4.839229ms)
  I0523 06:04:44.578007 22 proxy.go:558] (16) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:460/proxy/: tls baz (200; 4.704442ms)
  I0523 06:04:44.578144 22 proxy.go:558] (16) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/tlsrewritem... (200; 4.85606ms)
  I0523 06:04:44.578164 22 proxy.go:558] (16) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname2/proxy/: bar (200; 4.850083ms)
  I0523 06:04:44.578243 22 proxy.go:558] (16) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname1/proxy/: foo (200; 5.154207ms)
  I0523 06:04:44.578245 22 proxy.go:558] (16) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:160/proxy/: foo (200; 4.973191ms)
  I0523 06:04:44.578596 22 proxy.go:558] (16) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname1/proxy/: tls baz (200; 5.43119ms)
  I0523 06:04:44.578666 22 proxy.go:558] (16) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname2/proxy/: bar (200; 5.517041ms)
  I0523 06:04:44.578744 22 proxy.go:558] (16) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/rewriteme">... (200; 5.487189ms)
  I0523 06:04:44.578746 22 proxy.go:558] (16) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname2/proxy/: tls qux (200; 5.558354ms)
  I0523 06:04:44.580555 22 proxy.go:558] (17) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/tlsrewritem... (200; 1.786304ms)
  I0523 06:04:44.582493 22 proxy.go:558] (17) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:160/proxy/: foo (200; 3.498995ms)
  I0523 06:04:44.582514 22 proxy.go:558] (17) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:462/proxy/: tls qux (200; 3.634716ms)
  I0523 06:04:44.582573 22 proxy.go:558] (17) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:460/proxy/: tls baz (200; 3.615764ms)
  I0523 06:04:44.582666 22 proxy.go:558] (17) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:162/proxy/: bar (200; 3.816256ms)
  I0523 06:04:44.583333 22 proxy.go:558] (17) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/rewriteme">... (200; 4.364207ms)
  I0523 06:04:44.583332 22 proxy.go:558] (17) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:162/proxy/: bar (200; 4.386539ms)
  I0523 06:04:44.583410 22 proxy.go:558] (17) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:160/proxy/: foo (200; 4.58184ms)
  I0523 06:04:44.584081 22 proxy.go:558] (17) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname1/proxy/: foo (200; 5.18818ms)
  I0523 06:04:44.584501 22 proxy.go:558] (17) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/rewriteme">test</a> (200; 5.579498ms)
  I0523 06:04:44.584719 22 proxy.go:558] (17) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname2/proxy/: tls qux (200; 5.78507ms)
  I0523 06:04:44.584769 22 proxy.go:558] (17) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/rewriteme">test<... (200; 5.786994ms)
  I0523 06:04:44.585004 22 proxy.go:558] (17) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname1/proxy/: foo (200; 6.138981ms)
  I0523 06:04:44.585024 22 proxy.go:558] (17) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname2/proxy/: bar (200; 6.22025ms)
  I0523 06:04:44.585042 22 proxy.go:558] (17) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname2/proxy/: bar (200; 6.135502ms)
  I0523 06:04:44.585078 22 proxy.go:558] (17) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname1/proxy/: tls baz (200; 6.306596ms)
  I0523 06:04:44.586878 22 proxy.go:558] (18) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:460/proxy/: tls baz (200; 1.775876ms)
  I0523 06:04:44.587716 22 proxy.go:558] (18) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:162/proxy/: bar (200; 2.601511ms)
  I0523 06:04:44.588998 22 proxy.go:558] (18) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:162/proxy/: bar (200; 3.846062ms)
  I0523 06:04:44.589183 22 proxy.go:558] (18) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname1/proxy/: foo (200; 4.011476ms)
  I0523 06:04:44.589188 22 proxy.go:558] (18) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname2/proxy/: bar (200; 4.043256ms)
  I0523 06:04:44.589197 22 proxy.go:558] (18) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/rewriteme">test<... (200; 3.997984ms)
  I0523 06:04:44.589280 22 proxy.go:558] (18) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:160/proxy/: foo (200; 4.076764ms)
  I0523 06:04:44.589746 22 proxy.go:558] (18) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname2/proxy/: bar (200; 4.646614ms)
  I0523 06:04:44.590217 22 proxy.go:558] (18) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname2/proxy/: tls qux (200; 5.031253ms)
  I0523 06:04:44.590256 22 proxy.go:558] (18) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/rewriteme">... (200; 5.034369ms)
  I0523 06:04:44.590457 22 proxy.go:558] (18) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname1/proxy/: tls baz (200; 5.28938ms)
  I0523 06:04:44.590457 22 proxy.go:558] (18) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:462/proxy/: tls qux (200; 5.236836ms)
  I0523 06:04:44.590460 22 proxy.go:558] (18) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/tlsrewritem... (200; 5.21894ms)
  I0523 06:04:44.590533 22 proxy.go:558] (18) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname1/proxy/: foo (200; 5.397998ms)
  I0523 06:04:44.591253 22 proxy.go:558] (18) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:160/proxy/: foo (200; 6.000093ms)
  I0523 06:04:44.591322 22 proxy.go:558] (18) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/rewriteme">test</a> (200; 6.085724ms)
  I0523 06:04:44.594293 22 proxy.go:558] (19) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:162/proxy/: bar (200; 2.952128ms)
  I0523 06:04:44.594365 22 proxy.go:558] (19) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:162/proxy/: bar (200; 2.911537ms)
  I0523 06:04:44.594550 22 proxy.go:558] (19) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:1080/proxy/rewriteme">... (200; 3.031657ms)
  I0523 06:04:44.594855 22 proxy.go:558] (19) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:443/proxy/tlsrewritem... (200; 3.354076ms)
  I0523 06:04:44.594932 22 proxy.go:558] (19) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:1080/proxy/rewriteme">test<... (200; 3.531023ms)
  I0523 06:04:44.595436 22 proxy.go:558] (19) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9:160/proxy/: foo (200; 3.902754ms)
  I0523 06:04:44.595496 22 proxy.go:558] (19) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:460/proxy/: tls baz (200; 3.932102ms)
  I0523 06:04:44.595496 22 proxy.go:558] (19) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname1/proxy/: foo (200; 4.156738ms)
  I0523 06:04:44.595780 22 proxy.go:558] (19) /api/v1/namespaces/proxy-5160/services/proxy-service-n785p:portname2/proxy/: bar (200; 4.366213ms)
  I0523 06:04:44.595780 22 proxy.go:558] (19) /api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/: <a href="/api/v1/namespaces/proxy-5160/pods/proxy-service-n785p-485d9/proxy/rewriteme">test</a> (200; 4.2979ms)
  I0523 06:04:44.595837 22 proxy.go:558] (19) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname1/proxy/: tls baz (200; 4.411407ms)
  I0523 06:04:44.595842 22 proxy.go:558] (19) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname1/proxy/: foo (200; 4.459527ms)
  I0523 06:04:44.595846 22 proxy.go:558] (19) /api/v1/namespaces/proxy-5160/services/https:proxy-service-n785p:tlsportname2/proxy/: tls qux (200; 4.407526ms)
  I0523 06:04:44.595866 22 proxy.go:558] (19) /api/v1/namespaces/proxy-5160/pods/https:proxy-service-n785p-485d9:462/proxy/: tls qux (200; 4.403361ms)
  I0523 06:04:44.595924 22 proxy.go:558] (19) /api/v1/namespaces/proxy-5160/services/http:proxy-service-n785p:portname2/proxy/: bar (200; 4.376518ms)
  I0523 06:04:44.595928 22 proxy.go:558] (19) /api/v1/namespaces/proxy-5160/pods/http:proxy-service-n785p-485d9:160/proxy/: foo (200; 4.350212ms)
  STEP: deleting ReplicationController proxy-service-n785p in namespace proxy-5160, will wait for the garbage collector to delete the pods @ 05/23/24 06:04:44.596
  I0523 06:04:44.649955 22 resources.go:139] Deleting ReplicationController proxy-service-n785p took: 2.2799ms
  I0523 06:04:44.750718 22 resources.go:163] Terminating ReplicationController proxy-service-n785p pods took: 100.754221ms
  I0523 06:04:47.651615 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5160" for this suite. @ 05/23/24 06:04:47.653
• [5.250 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 05/23/24 06:04:47.656
  I0523 06:04:47.656724 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 06:04:47.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:04:47.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:04:47.664
  STEP: Creating configMap with name projected-configmap-test-volume-d0bc7ec3-982d-4501-a708-ba5c1646cc90 @ 05/23/24 06:04:47.665
  STEP: Creating a pod to test consume configMaps @ 05/23/24 06:04:47.667
  STEP: Saw pod success @ 05/23/24 06:04:51.677
  I0523 06:04:51.678330 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-configmaps-958269d3-f244-4229-a7cc-b21e0071bec3 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 05/23/24 06:04:51.68
  I0523 06:04:51.686573 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1706" for this suite. @ 05/23/24 06:04:51.687
• [4.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 05/23/24 06:04:51.69
  I0523 06:04:51.690106 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 06:04:51.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:04:51.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:04:51.698
  STEP: Creating a pod to test downward API volume plugin @ 05/23/24 06:04:51.7
  STEP: Saw pod success @ 05/23/24 06:04:53.707
  I0523 06:04:53.708975 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-e988e5b3-edb0-41d3-8d8d-be8f685c77bd container client-container: <nil>
  STEP: delete the pod @ 05/23/24 06:04:53.711
  I0523 06:04:53.716778 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3961" for this suite. @ 05/23/24 06:04:53.718
• [2.030 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 05/23/24 06:04:53.72
  I0523 06:04:53.720128 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/23/24 06:04:53.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:04:53.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:04:53.728
  STEP: set up a multi version CRD @ 05/23/24 06:04:53.729
  I0523 06:04:53.729758 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: rename a version @ 05/23/24 06:04:56.723
  STEP: check the new version name is served @ 05/23/24 06:04:56.731
  STEP: check the old version name is removed @ 05/23/24 06:04:57.406
  STEP: check the other version is not changed @ 05/23/24 06:04:58.006
  I0523 06:05:00.351414 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7553" for this suite. @ 05/23/24 06:05:00.355
• [6.637 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 05/23/24 06:05:00.357
  I0523 06:05:00.357715 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename emptydir @ 05/23/24 06:05:00.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:05:00.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:05:00.366
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/23/24 06:05:00.367
  STEP: Saw pod success @ 05/23/24 06:05:04.377
  I0523 06:05:04.378464 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-f899b975-294f-4f74-ae30-20ba6c953e3d container test-container: <nil>
  STEP: delete the pod @ 05/23/24 06:05:04.38
  I0523 06:05:04.386494 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6673" for this suite. @ 05/23/24 06:05:04.387
• [4.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 05/23/24 06:05:04.39
  I0523 06:05:04.390791 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename controllerrevisions @ 05/23/24 06:05:04.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:05:04.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:05:04.397
  STEP: Creating DaemonSet "e2e-dfjmc-daemon-set" @ 05/23/24 06:05:04.406
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/23/24 06:05:04.408
  I0523 06:05:04.418712 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-dfjmc-daemon-set: 0
  I0523 06:05:04.418727 22 fixtures.go:130] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  I0523 06:05:05.411976 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-dfjmc-daemon-set: 1
  I0523 06:05:05.412004 22 fixtures.go:130] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  I0523 06:05:06.412154 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-dfjmc-daemon-set: 3
  I0523 06:05:06.412180 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-dfjmc-daemon-set
  STEP: Confirm DaemonSet "e2e-dfjmc-daemon-set" successfully created with "daemonset-name=e2e-dfjmc-daemon-set" label @ 05/23/24 06:05:06.413
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-dfjmc-daemon-set" @ 05/23/24 06:05:06.415
  I0523 06:05:06.416545 22 controller_revision.go:162] Located ControllerRevision: "e2e-dfjmc-daemon-set-7f955c8559"
  STEP: Patching ControllerRevision "e2e-dfjmc-daemon-set-7f955c8559" @ 05/23/24 06:05:06.417
  I0523 06:05:06.420689 22 controller_revision.go:173] e2e-dfjmc-daemon-set-7f955c8559 has been patched
  STEP: Create a new ControllerRevision @ 05/23/24 06:05:06.42
  I0523 06:05:06.422734 22 controller_revision.go:191] Created ControllerRevision: e2e-dfjmc-daemon-set-77786f9c69
  STEP: Confirm that there are two ControllerRevisions @ 05/23/24 06:05:06.422
  I0523 06:05:06.422779 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0523 06:05:06.423807 22 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-dfjmc-daemon-set-7f955c8559" @ 05/23/24 06:05:06.423
  STEP: Confirm that there is only one ControllerRevision @ 05/23/24 06:05:06.425
  I0523 06:05:06.425677 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0523 06:05:06.426666 22 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-dfjmc-daemon-set-77786f9c69" @ 05/23/24 06:05:06.427
  I0523 06:05:06.431497 22 controller_revision.go:220] e2e-dfjmc-daemon-set-77786f9c69 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 05/23/24 06:05:06.431
  W0523 06:05:06.434094      22 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 05/23/24 06:05:06.434
  I0523 06:05:06.434167 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0523 06:05:07.434986 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0523 06:05:07.436840 22 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-dfjmc-daemon-set-77786f9c69=updated" @ 05/23/24 06:05:07.436
  STEP: Confirm that there is only one ControllerRevision @ 05/23/24 06:05:07.439
  I0523 06:05:07.439614 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0523 06:05:07.440674 22 controller_revision.go:265] Found 1 ControllerRevisions
  I0523 06:05:07.441544 22 controller_revision.go:246] ControllerRevision "e2e-dfjmc-daemon-set-7fbd4674d8" has revision 3
  STEP: Deleting DaemonSet "e2e-dfjmc-daemon-set" @ 05/23/24 06:05:07.442
  STEP: deleting DaemonSet.extensions e2e-dfjmc-daemon-set in namespace controllerrevisions-6230, will wait for the garbage collector to delete the pods @ 05/23/24 06:05:07.442
  I0523 06:05:07.496780 22 resources.go:139] Deleting DaemonSet.extensions e2e-dfjmc-daemon-set took: 2.68814ms
  I0523 06:05:07.597056 22 resources.go:163] Terminating DaemonSet.extensions e2e-dfjmc-daemon-set pods took: 100.26329ms
  I0523 06:05:09.099368 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-dfjmc-daemon-set: 0
  I0523 06:05:09.099395 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-dfjmc-daemon-set
  I0523 06:05:09.100523 22 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"54395"},"items":null}

  I0523 06:05:09.101496 22 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"54395"},"items":null}

  I0523 06:05:09.105847 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-6230" for this suite. @ 05/23/24 06:05:09.107
• [4.718 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 05/23/24 06:05:09.109
  I0523 06:05:09.109474 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename gc @ 05/23/24 06:05:09.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:05:09.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:05:09.116
  STEP: create the rc @ 05/23/24 06:05:09.119
  W0523 06:05:09.121776      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/23/24 06:05:15.123
  STEP: wait for the rc to be deleted @ 05/23/24 06:05:15.126
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 05/23/24 06:05:20.127
  STEP: Gathering metrics @ 05/23/24 06:05:50.133
  W0523 06:05:50.136430      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0523 06:05:50.136456 22 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0523 06:05:50.136507 22 delete.go:95] Deleting pod "simpletest.rc-22cgn" in namespace "gc-2286"
  I0523 06:05:50.143051 22 delete.go:95] Deleting pod "simpletest.rc-2hzlr" in namespace "gc-2286"
  I0523 06:05:50.149124 22 delete.go:95] Deleting pod "simpletest.rc-2jlfg" in namespace "gc-2286"
  I0523 06:05:50.156171 22 delete.go:95] Deleting pod "simpletest.rc-2r2jf" in namespace "gc-2286"
  I0523 06:05:50.161470 22 delete.go:95] Deleting pod "simpletest.rc-4r7dq" in namespace "gc-2286"
  I0523 06:05:50.167531 22 delete.go:95] Deleting pod "simpletest.rc-55ltq" in namespace "gc-2286"
  I0523 06:05:50.173347 22 delete.go:95] Deleting pod "simpletest.rc-59h95" in namespace "gc-2286"
  I0523 06:05:50.180249 22 delete.go:95] Deleting pod "simpletest.rc-5g6pf" in namespace "gc-2286"
  I0523 06:05:50.188537 22 delete.go:95] Deleting pod "simpletest.rc-5hrrj" in namespace "gc-2286"
  I0523 06:05:50.194277 22 delete.go:95] Deleting pod "simpletest.rc-5xmrp" in namespace "gc-2286"
  I0523 06:05:50.202090 22 delete.go:95] Deleting pod "simpletest.rc-6rn2s" in namespace "gc-2286"
  I0523 06:05:50.223955 22 delete.go:95] Deleting pod "simpletest.rc-6x5tm" in namespace "gc-2286"
  I0523 06:05:50.231763 22 delete.go:95] Deleting pod "simpletest.rc-6zpk5" in namespace "gc-2286"
  I0523 06:05:50.238869 22 delete.go:95] Deleting pod "simpletest.rc-77m9j" in namespace "gc-2286"
  I0523 06:05:50.246875 22 delete.go:95] Deleting pod "simpletest.rc-797v2" in namespace "gc-2286"
  I0523 06:05:50.257353 22 delete.go:95] Deleting pod "simpletest.rc-7g79k" in namespace "gc-2286"
  I0523 06:05:50.264359 22 delete.go:95] Deleting pod "simpletest.rc-7jlbx" in namespace "gc-2286"
  I0523 06:05:50.274826 22 delete.go:95] Deleting pod "simpletest.rc-7lkgh" in namespace "gc-2286"
  I0523 06:05:50.284705 22 delete.go:95] Deleting pod "simpletest.rc-8kt6g" in namespace "gc-2286"
  I0523 06:05:50.296201 22 delete.go:95] Deleting pod "simpletest.rc-8pd6m" in namespace "gc-2286"
  I0523 06:05:50.311883 22 delete.go:95] Deleting pod "simpletest.rc-8sqfn" in namespace "gc-2286"
  I0523 06:05:50.326169 22 delete.go:95] Deleting pod "simpletest.rc-8zvz2" in namespace "gc-2286"
  I0523 06:05:50.333187 22 delete.go:95] Deleting pod "simpletest.rc-9d4zh" in namespace "gc-2286"
  I0523 06:05:50.345356 22 delete.go:95] Deleting pod "simpletest.rc-9thgv" in namespace "gc-2286"
  I0523 06:05:50.377564 22 delete.go:95] Deleting pod "simpletest.rc-9tskp" in namespace "gc-2286"
  I0523 06:05:50.393835 22 delete.go:95] Deleting pod "simpletest.rc-bls5f" in namespace "gc-2286"
  I0523 06:05:50.412876 22 delete.go:95] Deleting pod "simpletest.rc-bt9wz" in namespace "gc-2286"
  I0523 06:05:50.420497 22 delete.go:95] Deleting pod "simpletest.rc-bx57w" in namespace "gc-2286"
  I0523 06:05:50.435139 22 delete.go:95] Deleting pod "simpletest.rc-c5879" in namespace "gc-2286"
  I0523 06:05:50.451857 22 delete.go:95] Deleting pod "simpletest.rc-cdpg2" in namespace "gc-2286"
  I0523 06:05:50.470233 22 delete.go:95] Deleting pod "simpletest.rc-ch2dh" in namespace "gc-2286"
  I0523 06:05:50.482585 22 delete.go:95] Deleting pod "simpletest.rc-ctcxj" in namespace "gc-2286"
  I0523 06:05:50.494755 22 delete.go:95] Deleting pod "simpletest.rc-d54hn" in namespace "gc-2286"
  I0523 06:05:50.500989 22 delete.go:95] Deleting pod "simpletest.rc-d5njd" in namespace "gc-2286"
  I0523 06:05:50.521573 22 delete.go:95] Deleting pod "simpletest.rc-ftkhb" in namespace "gc-2286"
  I0523 06:05:50.531275 22 delete.go:95] Deleting pod "simpletest.rc-fwn9d" in namespace "gc-2286"
  I0523 06:05:50.540585 22 delete.go:95] Deleting pod "simpletest.rc-fzj7h" in namespace "gc-2286"
  I0523 06:05:50.555041 22 delete.go:95] Deleting pod "simpletest.rc-g4bnh" in namespace "gc-2286"
  I0523 06:05:50.564650 22 delete.go:95] Deleting pod "simpletest.rc-g77mr" in namespace "gc-2286"
  I0523 06:05:50.591953 22 delete.go:95] Deleting pod "simpletest.rc-gz9r4" in namespace "gc-2286"
  I0523 06:05:50.600609 22 delete.go:95] Deleting pod "simpletest.rc-h5tdj" in namespace "gc-2286"
  I0523 06:05:50.616742 22 delete.go:95] Deleting pod "simpletest.rc-h8wh6" in namespace "gc-2286"
  I0523 06:05:50.624017 22 delete.go:95] Deleting pod "simpletest.rc-hfzx7" in namespace "gc-2286"
  I0523 06:05:50.638413 22 delete.go:95] Deleting pod "simpletest.rc-hk4gz" in namespace "gc-2286"
  I0523 06:05:50.663006 22 delete.go:95] Deleting pod "simpletest.rc-hk6qg" in namespace "gc-2286"
  I0523 06:05:50.685069 22 delete.go:95] Deleting pod "simpletest.rc-hmbzt" in namespace "gc-2286"
  I0523 06:05:50.699492 22 delete.go:95] Deleting pod "simpletest.rc-j98n4" in namespace "gc-2286"
  I0523 06:05:50.715056 22 delete.go:95] Deleting pod "simpletest.rc-js7g4" in namespace "gc-2286"
  I0523 06:05:50.736826 22 delete.go:95] Deleting pod "simpletest.rc-jz7cg" in namespace "gc-2286"
  I0523 06:05:50.759126 22 delete.go:95] Deleting pod "simpletest.rc-k9dg9" in namespace "gc-2286"
  I0523 06:05:50.792619 22 delete.go:95] Deleting pod "simpletest.rc-kfc22" in namespace "gc-2286"
  I0523 06:05:50.807602 22 delete.go:95] Deleting pod "simpletest.rc-khkth" in namespace "gc-2286"
  I0523 06:05:50.822053 22 delete.go:95] Deleting pod "simpletest.rc-kl7td" in namespace "gc-2286"
  I0523 06:05:50.838192 22 delete.go:95] Deleting pod "simpletest.rc-l8krr" in namespace "gc-2286"
  I0523 06:05:50.851758 22 delete.go:95] Deleting pod "simpletest.rc-lcg5w" in namespace "gc-2286"
  I0523 06:05:50.860443 22 delete.go:95] Deleting pod "simpletest.rc-lcrb5" in namespace "gc-2286"
  I0523 06:05:50.891299 22 delete.go:95] Deleting pod "simpletest.rc-m47tx" in namespace "gc-2286"
  I0523 06:05:50.904779 22 delete.go:95] Deleting pod "simpletest.rc-mplf9" in namespace "gc-2286"
  I0523 06:05:50.926224 22 delete.go:95] Deleting pod "simpletest.rc-mx79g" in namespace "gc-2286"
  I0523 06:05:50.946146 22 delete.go:95] Deleting pod "simpletest.rc-n45q7" in namespace "gc-2286"
  I0523 06:05:50.957037 22 delete.go:95] Deleting pod "simpletest.rc-n5jdk" in namespace "gc-2286"
  I0523 06:05:50.973090 22 delete.go:95] Deleting pod "simpletest.rc-n8rbp" in namespace "gc-2286"
  I0523 06:05:50.982335 22 delete.go:95] Deleting pod "simpletest.rc-nbfvz" in namespace "gc-2286"
  I0523 06:05:50.991060 22 delete.go:95] Deleting pod "simpletest.rc-nhxqv" in namespace "gc-2286"
  I0523 06:05:51.002030 22 delete.go:95] Deleting pod "simpletest.rc-p6ljr" in namespace "gc-2286"
  I0523 06:05:51.021942 22 delete.go:95] Deleting pod "simpletest.rc-pz6b5" in namespace "gc-2286"
  I0523 06:05:51.043834 22 delete.go:95] Deleting pod "simpletest.rc-qbtx6" in namespace "gc-2286"
  I0523 06:05:51.089122 22 delete.go:95] Deleting pod "simpletest.rc-qm4p4" in namespace "gc-2286"
  I0523 06:05:51.167196 22 delete.go:95] Deleting pod "simpletest.rc-qnmkm" in namespace "gc-2286"
  I0523 06:05:51.230116 22 delete.go:95] Deleting pod "simpletest.rc-qs6pm" in namespace "gc-2286"
  I0523 06:05:51.293753 22 delete.go:95] Deleting pod "simpletest.rc-rcn7l" in namespace "gc-2286"
  I0523 06:05:51.365001 22 delete.go:95] Deleting pod "simpletest.rc-rhp8h" in namespace "gc-2286"
  I0523 06:05:51.446143 22 delete.go:95] Deleting pod "simpletest.rc-rlvn8" in namespace "gc-2286"
  I0523 06:05:51.470459 22 delete.go:95] Deleting pod "simpletest.rc-rsgw8" in namespace "gc-2286"
  I0523 06:05:51.495893 22 delete.go:95] Deleting pod "simpletest.rc-rx4pq" in namespace "gc-2286"
  I0523 06:05:51.528484 22 delete.go:95] Deleting pod "simpletest.rc-rzktf" in namespace "gc-2286"
  I0523 06:05:51.554127 22 delete.go:95] Deleting pod "simpletest.rc-sjxrk" in namespace "gc-2286"
  I0523 06:05:51.597003 22 delete.go:95] Deleting pod "simpletest.rc-slxdc" in namespace "gc-2286"
  I0523 06:05:51.641066 22 delete.go:95] Deleting pod "simpletest.rc-tm6t8" in namespace "gc-2286"
  I0523 06:05:51.707888 22 delete.go:95] Deleting pod "simpletest.rc-tmmkh" in namespace "gc-2286"
  I0523 06:05:51.760295 22 delete.go:95] Deleting pod "simpletest.rc-tpzwg" in namespace "gc-2286"
  I0523 06:05:51.816501 22 delete.go:95] Deleting pod "simpletest.rc-v67vb" in namespace "gc-2286"
  I0523 06:05:51.881302 22 delete.go:95] Deleting pod "simpletest.rc-v8lg9" in namespace "gc-2286"
  I0523 06:05:51.910624 22 delete.go:95] Deleting pod "simpletest.rc-vch79" in namespace "gc-2286"
  I0523 06:05:51.959903 22 delete.go:95] Deleting pod "simpletest.rc-vfszn" in namespace "gc-2286"
  I0523 06:05:52.034356 22 delete.go:95] Deleting pod "simpletest.rc-vv4ph" in namespace "gc-2286"
  I0523 06:05:52.148026 22 delete.go:95] Deleting pod "simpletest.rc-w2j8v" in namespace "gc-2286"
  I0523 06:05:52.203374 22 delete.go:95] Deleting pod "simpletest.rc-w57dc" in namespace "gc-2286"
  I0523 06:05:52.229920 22 delete.go:95] Deleting pod "simpletest.rc-w6jqc" in namespace "gc-2286"
  I0523 06:05:52.270698 22 delete.go:95] Deleting pod "simpletest.rc-w79x8" in namespace "gc-2286"
  I0523 06:05:52.298761 22 delete.go:95] Deleting pod "simpletest.rc-w7kzz" in namespace "gc-2286"
  I0523 06:05:52.342160 22 delete.go:95] Deleting pod "simpletest.rc-wkvd7" in namespace "gc-2286"
  I0523 06:05:52.369191 22 delete.go:95] Deleting pod "simpletest.rc-wptp7" in namespace "gc-2286"
  I0523 06:05:52.445724 22 delete.go:95] Deleting pod "simpletest.rc-x585z" in namespace "gc-2286"
  I0523 06:05:52.490660 22 delete.go:95] Deleting pod "simpletest.rc-xb5jt" in namespace "gc-2286"
  I0523 06:05:52.531029 22 delete.go:95] Deleting pod "simpletest.rc-xrzn9" in namespace "gc-2286"
  I0523 06:05:52.554901 22 delete.go:95] Deleting pod "simpletest.rc-zcx9j" in namespace "gc-2286"
  I0523 06:05:52.603104 22 delete.go:95] Deleting pod "simpletest.rc-zhsdz" in namespace "gc-2286"
  I0523 06:05:52.644847 22 delete.go:95] Deleting pod "simpletest.rc-zq45z" in namespace "gc-2286"
  I0523 06:05:52.693604 22 delete.go:95] Deleting pod "simpletest.rc-zq5rx" in namespace "gc-2286"
  I0523 06:05:52.756883 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2286" for this suite. @ 05/23/24 06:05:52.781
• [43.731 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 05/23/24 06:05:52.843
  I0523 06:05:52.843186 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 06:05:52.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:05:52.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:05:52.858
  STEP: Creating secret with name s-test-opt-del-1a79a266-83bf-4dbe-85e7-b7e3ba179d70 @ 05/23/24 06:05:52.887
  STEP: Creating secret with name s-test-opt-upd-ec97c290-6f37-455e-b3d2-495a5c05b200 @ 05/23/24 06:05:52.943
  STEP: Creating the pod @ 05/23/24 06:05:52.97
  STEP: Deleting secret s-test-opt-del-1a79a266-83bf-4dbe-85e7-b7e3ba179d70 @ 05/23/24 06:05:55.022
  STEP: Updating secret s-test-opt-upd-ec97c290-6f37-455e-b3d2-495a5c05b200 @ 05/23/24 06:05:55.024
  STEP: Creating secret with name s-test-opt-create-b7bec5e0-8bdd-4601-92f2-ba0c7e013f26 @ 05/23/24 06:05:55.025
  STEP: waiting to observe update in volume @ 05/23/24 06:05:55.027
  I0523 06:07:01.246086 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3798" for this suite. @ 05/23/24 06:07:01.247
• [68.407 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 05/23/24 06:07:01.249
  I0523 06:07:01.249900 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename csistoragecapacity @ 05/23/24 06:07:01.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:07:01.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:07:01.257
  STEP: getting /apis @ 05/23/24 06:07:01.258
  STEP: getting /apis/storage.k8s.io @ 05/23/24 06:07:01.26
  STEP: getting /apis/storage.k8s.io/v1 @ 05/23/24 06:07:01.261
  STEP: creating @ 05/23/24 06:07:01.261
  STEP: watching @ 05/23/24 06:07:01.267
  I0523 06:07:01.267214 22 csistoragecapacity.go:143] starting watch
  STEP: getting @ 05/23/24 06:07:01.269
  STEP: listing in namespace @ 05/23/24 06:07:01.27
  STEP: listing across namespaces @ 05/23/24 06:07:01.271
  STEP: patching @ 05/23/24 06:07:01.272
  STEP: updating @ 05/23/24 06:07:01.274
  I0523 06:07:01.276403 22 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0523 06:07:01.276471 22 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 05/23/24 06:07:01.276
  STEP: deleting a collection @ 05/23/24 06:07:01.28
  I0523 06:07:01.285510 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-3826" for this suite. @ 05/23/24 06:07:01.286
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 05/23/24 06:07:01.289
  I0523 06:07:01.289966 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 06:07:01.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:07:01.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:07:01.297
  STEP: Creating a pod to test downward API volume plugin @ 05/23/24 06:07:01.298
  STEP: Saw pod success @ 05/23/24 06:07:05.309
  I0523 06:07:05.311078 22 output.go:196] Trying to get logs from node k8s-10-255-0-209 pod downwardapi-volume-24e26e8d-2777-4e5b-8467-d7c51df97531 container client-container: <nil>
  STEP: delete the pod @ 05/23/24 06:07:05.319
  I0523 06:07:05.325790 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2269" for this suite. @ 05/23/24 06:07:05.328
• [4.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 05/23/24 06:07:05.331
  I0523 06:07:05.331336 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename webhook @ 05/23/24 06:07:05.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:07:05.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:07:05.339
  STEP: Setting up server cert @ 05/23/24 06:07:05.348
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/23/24 06:07:05.634
  STEP: Deploying the webhook pod @ 05/23/24 06:07:05.638
  STEP: Wait for the deployment to be ready @ 05/23/24 06:07:05.644
  I0523 06:07:05.646253 22 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/23/24 06:07:07.651
  STEP: Verifying the service has paired with the endpoint @ 05/23/24 06:07:07.655
  I0523 06:07:08.656728 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0523 06:07:08.659815 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5619-crds.webhook.example.com via the AdmissionRegistration API @ 05/23/24 06:07:09.164
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/23/24 06:07:09.172
  I0523 06:07:11.715340 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8298" for this suite. @ 05/23/24 06:07:11.717
  STEP: Destroying namespace "webhook-markers-2707" for this suite. @ 05/23/24 06:07:11.72
• [6.391 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 05/23/24 06:07:11.723
  I0523 06:07:11.723334 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename emptydir @ 05/23/24 06:07:11.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:07:11.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:07:11.733
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/23/24 06:07:11.735
  STEP: Saw pod success @ 05/23/24 06:07:15.746
  I0523 06:07:15.747379 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-66bee9d3-e361-4b2a-af29-d7732854eeb1 container test-container: <nil>
  STEP: delete the pod @ 05/23/24 06:07:15.749
  I0523 06:07:15.755925 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1935" for this suite. @ 05/23/24 06:07:15.757
• [4.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 05/23/24 06:07:15.759
  I0523 06:07:15.759556 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename container-runtime @ 05/23/24 06:07:15.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:07:15.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:07:15.767
  STEP: create the container @ 05/23/24 06:07:15.769
  W0523 06:07:15.771746      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/23/24 06:07:15.771
  STEP: get the container status @ 05/23/24 06:07:18.779
  STEP: the container should be terminated @ 05/23/24 06:07:18.78
  STEP: the termination message should be set @ 05/23/24 06:07:18.78
  I0523 06:07:18.780791 22 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 05/23/24 06:07:18.78
  I0523 06:07:18.786647 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9447" for this suite. @ 05/23/24 06:07:18.788
• [3.030 seconds]
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2181
  STEP: Creating a kubernetes client @ 05/23/24 06:07:18.789
  I0523 06:07:18.789957 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename services @ 05/23/24 06:07:18.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:07:18.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:07:18.798
  STEP: creating service in namespace services-4545 @ 05/23/24 06:07:18.799
  STEP: creating service affinity-clusterip in namespace services-4545 @ 05/23/24 06:07:18.799
  STEP: creating replication controller affinity-clusterip in namespace services-4545 @ 05/23/24 06:07:18.803
  I0523 06:07:18.807279      22 runners.go:198] Created replication controller with name: affinity-clusterip, namespace: services-4545, replica count: 3
  I0523 06:07:21.859516      22 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0523 06:07:21.862443 22 resource.go:361] Creating new exec pod
  I0523 06:07:24.869441 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-4545 exec execpod-affinitysjzm9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0523 06:07:24.935092 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I0523 06:07:24.935128 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0523 06:07:24.935196 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-4545 exec execpod-affinitysjzm9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.79.239 80'
  I0523 06:07:24.996545 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.79.239 80\nConnection to 10.68.79.239 80 port [tcp/http] succeeded!\n"
  I0523 06:07:24.996587 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0523 06:07:24.996646 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-4545 exec execpod-affinitysjzm9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.68.79.239:80/ ; done'
  I0523 06:07:25.097542 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.79.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.79.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.79.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.79.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.79.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.79.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.79.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.79.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.79.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.79.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.79.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.79.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.79.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.79.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.79.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.79.239:80/\n"
  I0523 06:07:25.097577 22 builder.go:147] stdout: "\naffinity-clusterip-b464r\naffinity-clusterip-b464r\naffinity-clusterip-b464r\naffinity-clusterip-b464r\naffinity-clusterip-b464r\naffinity-clusterip-b464r\naffinity-clusterip-b464r\naffinity-clusterip-b464r\naffinity-clusterip-b464r\naffinity-clusterip-b464r\naffinity-clusterip-b464r\naffinity-clusterip-b464r\naffinity-clusterip-b464r\naffinity-clusterip-b464r\naffinity-clusterip-b464r\naffinity-clusterip-b464r"
  I0523 06:07:25.097590 22 service.go:242] Received response from host: affinity-clusterip-b464r
  I0523 06:07:25.097596 22 service.go:242] Received response from host: affinity-clusterip-b464r
  I0523 06:07:25.097601 22 service.go:242] Received response from host: affinity-clusterip-b464r
  I0523 06:07:25.097606 22 service.go:242] Received response from host: affinity-clusterip-b464r
  I0523 06:07:25.097612 22 service.go:242] Received response from host: affinity-clusterip-b464r
  I0523 06:07:25.097617 22 service.go:242] Received response from host: affinity-clusterip-b464r
  I0523 06:07:25.097626 22 service.go:242] Received response from host: affinity-clusterip-b464r
  I0523 06:07:25.097633 22 service.go:242] Received response from host: affinity-clusterip-b464r
  I0523 06:07:25.097641 22 service.go:242] Received response from host: affinity-clusterip-b464r
  I0523 06:07:25.097648 22 service.go:242] Received response from host: affinity-clusterip-b464r
  I0523 06:07:25.097655 22 service.go:242] Received response from host: affinity-clusterip-b464r
  I0523 06:07:25.097666 22 service.go:242] Received response from host: affinity-clusterip-b464r
  I0523 06:07:25.097674 22 service.go:242] Received response from host: affinity-clusterip-b464r
  I0523 06:07:25.097681 22 service.go:242] Received response from host: affinity-clusterip-b464r
  I0523 06:07:25.097689 22 service.go:242] Received response from host: affinity-clusterip-b464r
  I0523 06:07:25.097698 22 service.go:242] Received response from host: affinity-clusterip-b464r
  I0523 06:07:25.097761 22 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-4545, will wait for the garbage collector to delete the pods @ 05/23/24 06:07:25.103
  I0523 06:07:25.158208 22 resources.go:139] Deleting ReplicationController affinity-clusterip took: 2.878598ms
  I0523 06:07:25.259100 22 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.888156ms
  I0523 06:07:28.167541 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4545" for this suite. @ 05/23/24 06:07:28.169
• [9.382 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1079
  STEP: Creating a kubernetes client @ 05/23/24 06:07:28.172
  I0523 06:07:28.172207 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename kubectl @ 05/23/24 06:07:28.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:07:28.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:07:28.182
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/23/24 06:07:28.183
  I0523 06:07:28.183688 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-1610 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0523 06:07:28.230966 22 builder.go:146] stderr: ""
  I0523 06:07:28.230996 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 05/23/24 06:07:28.231
  I0523 06:07:28.231050 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-1610 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0523 06:07:28.279643 22 builder.go:146] stderr: ""
  I0523 06:07:28.279705 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/23/24 06:07:28.279
  I0523 06:07:28.281116 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-1610 delete pods e2e-test-httpd-pod'
  I0523 06:07:30.123754 22 builder.go:146] stderr: ""
  I0523 06:07:30.123788 22 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0523 06:07:30.123910 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1610" for this suite. @ 05/23/24 06:07:30.125
• [1.956 seconds]
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 05/23/24 06:07:30.128
  I0523 06:07:30.128741 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename container-runtime @ 05/23/24 06:07:30.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:07:30.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:07:30.136
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 05/23/24 06:07:30.14
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 05/23/24 06:07:46.177
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 05/23/24 06:07:46.178
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 05/23/24 06:07:46.18
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 05/23/24 06:07:46.18
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 05/23/24 06:07:46.188
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 05/23/24 06:07:48.194
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 05/23/24 06:07:50.198
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 05/23/24 06:07:50.2
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 05/23/24 06:07:50.2
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 05/23/24 06:07:50.209
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 05/23/24 06:07:51.213
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 05/23/24 06:07:53.218
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 05/23/24 06:07:53.22
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 05/23/24 06:07:53.22
  I0523 06:07:53.230323 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5100" for this suite. @ 05/23/24 06:07:53.231
• [23.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:446
  STEP: Creating a kubernetes client @ 05/23/24 06:07:53.233
  I0523 06:07:53.233945 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename sched-pred @ 05/23/24 06:07:53.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:07:53.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:07:53.244
  I0523 06:07:53.245691 22 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0523 06:07:53.248283 22 util.go:400] Waiting for terminating namespaces to be deleted...
  I0523 06:07:53.249250 22 predicates.go:121] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-207 before test
  I0523 06:07:53.251870 22 predicates.go:887] calico-kube-controllers-6946cb87d6-xqpj5 from kube-system started at 2024-05-23 03:37:57 +0000 UTC (1 container statuses recorded)
  I0523 06:07:53.251882 22 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I0523 06:07:53.251889 22 predicates.go:887] calico-node-pgzv7 from kube-system started at 2024-05-23 03:37:57 +0000 UTC (1 container statuses recorded)
  I0523 06:07:53.251894 22 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0523 06:07:53.251902 22 predicates.go:887] coredns-c5768dcc7-tqffs from kube-system started at 2024-05-23 03:38:19 +0000 UTC (1 container statuses recorded)
  I0523 06:07:53.251909 22 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0523 06:07:53.251919 22 predicates.go:887] dashboard-metrics-scraper-69b9b44766-zbgkq from kube-system started at 2024-05-23 03:38:23 +0000 UTC (1 container statuses recorded)
  I0523 06:07:53.251925 22 predicates.go:889] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0523 06:07:53.251933 22 predicates.go:887] kubernetes-dashboard-7df74bff86-69bf5 from kube-system started at 2024-05-23 03:38:23 +0000 UTC (1 container statuses recorded)
  I0523 06:07:53.251941 22 predicates.go:889] 	Container kubernetes-dashboard ready: true, restart count 0
  I0523 06:07:53.251948 22 predicates.go:887] metrics-server-65b5b555f5-xppsl from kube-system started at 2024-05-23 03:38:21 +0000 UTC (1 container statuses recorded)
  I0523 06:07:53.251956 22 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I0523 06:07:53.251967 22 predicates.go:887] node-local-dns-w98ss from kube-system started at 2024-05-23 03:38:20 +0000 UTC (1 container statuses recorded)
  I0523 06:07:53.251975 22 predicates.go:889] 	Container node-cache ready: true, restart count 0
  I0523 06:07:53.251982 22 predicates.go:887] sonobuoy-systemd-logs-daemon-set-d34ec90e00584ff3-2lk5f from sonobuoy started at 2024-05-23 05:58:21 +0000 UTC (2 container statuses recorded)
  I0523 06:07:53.251990 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0523 06:07:53.251996 22 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0523 06:07:53.252004 22 predicates.go:121] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-208 before test
  I0523 06:07:53.254199 22 predicates.go:887] calico-node-bm447 from kube-system started at 2024-05-23 03:46:33 +0000 UTC (1 container statuses recorded)
  I0523 06:07:53.254212 22 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0523 06:07:53.254218 22 predicates.go:887] node-local-dns-w8dtr from kube-system started at 2024-05-23 03:46:33 +0000 UTC (1 container statuses recorded)
  I0523 06:07:53.254225 22 predicates.go:889] 	Container node-cache ready: true, restart count 0
  I0523 06:07:53.254232 22 predicates.go:887] sonobuoy from sonobuoy started at 2024-05-23 05:58:21 +0000 UTC (1 container statuses recorded)
  I0523 06:07:53.254240 22 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0523 06:07:53.254248 22 predicates.go:887] sonobuoy-systemd-logs-daemon-set-d34ec90e00584ff3-bgdnv from sonobuoy started at 2024-05-23 05:58:21 +0000 UTC (2 container statuses recorded)
  I0523 06:07:53.254254 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0523 06:07:53.254262 22 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0523 06:07:53.254269 22 predicates.go:121] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-209 before test
  I0523 06:07:53.256325 22 predicates.go:887] calico-node-cns77 from kube-system started at 2024-05-23 03:48:56 +0000 UTC (1 container statuses recorded)
  I0523 06:07:53.256339 22 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0523 06:07:53.256347 22 predicates.go:887] node-local-dns-n86hx from kube-system started at 2024-05-23 03:48:56 +0000 UTC (1 container statuses recorded)
  I0523 06:07:53.256353 22 predicates.go:889] 	Container node-cache ready: true, restart count 0
  I0523 06:07:53.256360 22 predicates.go:887] sonobuoy-e2e-job-bfc6bc36c48647e3 from sonobuoy started at 2024-05-23 05:58:21 +0000 UTC (2 container statuses recorded)
  I0523 06:07:53.256367 22 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0523 06:07:53.256375 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0523 06:07:53.256383 22 predicates.go:887] sonobuoy-systemd-logs-daemon-set-d34ec90e00584ff3-9qrcn from sonobuoy started at 2024-05-23 05:58:21 +0000 UTC (2 container statuses recorded)
  I0523 06:07:53.256394 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0523 06:07:53.256400 22 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 05/23/24 06:07:53.256
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17d20927821fed67], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.] @ 05/23/24 06:07:53.275
  I0523 06:07:54.275381 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2063" for this suite. @ 05/23/24 06:07:54.276
• [1.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 05/23/24 06:07:54.279
  I0523 06:07:54.279337 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename proxy @ 05/23/24 06:07:54.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:07:54.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:07:54.287
  I0523 06:07:54.289182 22 proxy.go:293] Creating pod...
  I0523 06:07:56.295678 22 proxy.go:317] Creating service...
  I0523 06:07:56.300694 22 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1091/pods/agnhost/proxy/some/path/with/DELETE
  I0523 06:07:56.310662 22 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0523 06:07:56.310685 22 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1091/pods/agnhost/proxy/some/path/with/GET
  I0523 06:07:56.320659 22 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0523 06:07:56.320762 22 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1091/pods/agnhost/proxy/some/path/with/HEAD
  I0523 06:07:56.322113 22 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0523 06:07:56.322202 22 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1091/pods/agnhost/proxy/some/path/with/OPTIONS
  I0523 06:07:56.332214 22 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0523 06:07:56.332300 22 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1091/pods/agnhost/proxy/some/path/with/PATCH
  I0523 06:07:56.340628 22 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0523 06:07:56.340652 22 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1091/pods/agnhost/proxy/some/path/with/POST
  I0523 06:07:56.350584 22 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0523 06:07:56.350604 22 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1091/pods/agnhost/proxy/some/path/with/PUT
  I0523 06:07:56.360635 22 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0523 06:07:56.360659 22 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1091/services/test-service/proxy/some/path/with/DELETE
  I0523 06:07:56.370644 22 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0523 06:07:56.370721 22 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1091/services/test-service/proxy/some/path/with/GET
  I0523 06:07:56.380638 22 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0523 06:07:56.380659 22 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1091/services/test-service/proxy/some/path/with/HEAD
  I0523 06:07:56.382310 22 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0523 06:07:56.382389 22 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1091/services/test-service/proxy/some/path/with/OPTIONS
  I0523 06:07:56.392236 22 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0523 06:07:56.392258 22 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1091/services/test-service/proxy/some/path/with/PATCH
  I0523 06:07:56.400628 22 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0523 06:07:56.400647 22 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1091/services/test-service/proxy/some/path/with/POST
  I0523 06:07:56.410606 22 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0523 06:07:56.410626 22 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1091/services/test-service/proxy/some/path/with/PUT
  I0523 06:07:56.420647 22 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0523 06:07:56.420732 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1091" for this suite. @ 05/23/24 06:07:56.422
• [2.145 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 05/23/24 06:07:56.424
  I0523 06:07:56.424578 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename secrets @ 05/23/24 06:07:56.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:07:56.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:07:56.433
  STEP: Creating secret with name secret-test-b2124686-36fb-493b-8ecc-bbcf7e88e098 @ 05/23/24 06:07:56.434
  STEP: Creating a pod to test consume secrets @ 05/23/24 06:07:56.436
  STEP: Saw pod success @ 05/23/24 06:08:00.446
  I0523 06:08:00.448009 22 output.go:196] Trying to get logs from node k8s-10-255-0-209 pod pod-secrets-f620d13b-4c85-47c9-87fd-b3276065d298 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/23/24 06:08:00.45
  I0523 06:08:00.456673 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4992" for this suite. @ 05/23/24 06:08:00.458
• [4.036 seconds]
------------------------------
S
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 05/23/24 06:08:00.46
  I0523 06:08:00.460151 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename conformance-tests @ 05/23/24 06:08:00.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:08:00.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:08:00.468
  STEP: Getting node addresses @ 05/23/24 06:08:00.47
  I0523 06:08:00.470101 22 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0523 06:08:00.472182 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-6748" for this suite. @ 05/23/24 06:08:00.473
• [0.016 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 05/23/24 06:08:00.476
  I0523 06:08:00.476302 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename certificates @ 05/23/24 06:08:00.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:08:00.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:08:00.484
  STEP: getting /apis @ 05/23/24 06:08:00.959
  STEP: getting /apis/certificates.k8s.io @ 05/23/24 06:08:00.961
  STEP: getting /apis/certificates.k8s.io/v1 @ 05/23/24 06:08:00.962
  STEP: creating @ 05/23/24 06:08:00.962
  STEP: getting @ 05/23/24 06:08:00.969
  STEP: listing @ 05/23/24 06:08:00.97
  STEP: watching @ 05/23/24 06:08:00.971
  I0523 06:08:00.971394 22 certificates.go:316] starting watch
  STEP: patching @ 05/23/24 06:08:00.971
  STEP: updating @ 05/23/24 06:08:00.974
  I0523 06:08:00.976599 22 certificates.go:332] waiting for watch events with expected annotations
  I0523 06:08:00.976620 22 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 05/23/24 06:08:00.976
  STEP: patching /approval @ 05/23/24 06:08:00.977
  STEP: updating /approval @ 05/23/24 06:08:00.98
  STEP: getting /status @ 05/23/24 06:08:00.983
  STEP: patching /status @ 05/23/24 06:08:00.984
  STEP: updating /status @ 05/23/24 06:08:00.987
  STEP: deleting @ 05/23/24 06:08:00.99
  STEP: deleting a collection @ 05/23/24 06:08:00.994
  I0523 06:08:00.999739 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-4809" for this suite. @ 05/23/24 06:08:01.001
• [0.527 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 05/23/24 06:08:01.003
  I0523 06:08:01.003123 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/23/24 06:08:01.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:08:01.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:08:01.011
  STEP: create the container to handle the HTTPGet hook request. @ 05/23/24 06:08:01.014
  STEP: create the pod with lifecycle hook @ 05/23/24 06:08:03.022
  STEP: check poststart hook @ 05/23/24 06:08:05.03
  STEP: delete the pod with lifecycle hook @ 05/23/24 06:08:05.037
  I0523 06:08:07.043357 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7969" for this suite. @ 05/23/24 06:08:07.044
• [6.044 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 05/23/24 06:08:07.047
  I0523 06:08:07.047534 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename aggregator @ 05/23/24 06:08:07.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:08:07.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:08:07.057
  I0523 06:08:07.058936 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Registering the sample API server. @ 05/23/24 06:08:07.059
  I0523 06:08:07.241401 22 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0523 06:08:07.253155 22 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0523 06:08:09.272911 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0523 06:08:11.275384 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0523 06:08:13.274804 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0523 06:08:15.274565 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0523 06:08:17.274724 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0523 06:08:19.275030 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0523 06:08:21.276127 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0523 06:08:23.275298 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0523 06:08:25.275149 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0523 06:08:27.275273 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0523 06:08:29.275104 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0523 06:08:31.274771 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 6, 8, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0523 06:08:33.387618 22 aggregator.go:749] Waited 109.991468ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 05/23/24 06:08:33.421
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 05/23/24 06:08:33.422
  STEP: List APIServices @ 05/23/24 06:08:33.425
  I0523 06:08:33.427804 22 aggregator.go:550] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 05/23/24 06:08:33.427
  I0523 06:08:33.431940 22 aggregator.go:575] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 05/23/24 06:08:33.431
  I0523 06:08:33.435891 22 aggregator.go:601] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.May, 23, 6, 8, 33, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 05/23/24 06:08:33.435
  I0523 06:08:33.437080 22 aggregator.go:619] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-05-23 06:08:33 +0000 UTC Passed all checks passed}
  I0523 06:08:33.437102 22 aggregator.go:615] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0523 06:08:33.437112 22 aggregator.go:625] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 05/23/24 06:08:33.437
  I0523 06:08:33.440571 22 aggregator.go:641] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-971143498" @ 05/23/24 06:08:33.44
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 05/23/24 06:08:33.445
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 05/23/24 06:08:33.448
  STEP: Patch APIService Status @ 05/23/24 06:08:33.45
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 05/23/24 06:08:33.453
  I0523 06:08:33.454381 22 aggregator.go:719] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-05-23 06:08:33 +0000 UTC Passed all checks passed}
  I0523 06:08:33.454403 22 aggregator.go:719] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0523 06:08:33.454416 22 aggregator.go:715] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0523 06:08:33.454429 22 aggregator.go:725] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 05/23/24 06:08:33.454
  STEP: Confirm that the generated APIService has been deleted @ 05/23/24 06:08:33.457
  I0523 06:08:33.457737 22 aggregator.go:786] Requesting list of APIServices to confirm quantity
  I0523 06:08:33.459405 22 aggregator.go:796] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0523 06:08:33.459420 22 aggregator.go:738] APIService v1alpha1.wardle.example.com has been deleted.
  I0523 06:08:33.501817 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-5423" for this suite. @ 05/23/24 06:08:33.503
• [26.459 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 05/23/24 06:08:33.506
  I0523 06:08:33.506682 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename replicaset @ 05/23/24 06:08:33.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:08:33.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:08:33.517
  I0523 06:08:33.529999 22 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0523 06:08:38.532322 22 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/23/24 06:08:38.532
  STEP: Scaling up "test-rs" replicaset @ 05/23/24 06:08:38.532
  I0523 06:08:38.536221 22 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 05/23/24 06:08:38.536
  I0523 06:08:38.541265 22 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-3736 with ReadyReplicas 1, AvailableReplicas 1
  I0523 06:08:38.547751 22 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-3736 with ReadyReplicas 1, AvailableReplicas 1
  I0523 06:08:38.556545 22 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-3736 with ReadyReplicas 1, AvailableReplicas 1
  I0523 06:08:38.562159 22 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-3736 with ReadyReplicas 1, AvailableReplicas 1
  I0523 06:08:39.179843 22 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-3736 with ReadyReplicas 2, AvailableReplicas 2
  I0523 06:08:39.742408 22 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-3736 with ReadyReplicas 3 found true
  I0523 06:08:39.742529 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3736" for this suite. @ 05/23/24 06:08:39.744
• [6.240 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 05/23/24 06:08:39.747
  I0523 06:08:39.747232 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename endpointslice @ 05/23/24 06:08:39.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:08:39.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:08:39.755
  STEP: getting /apis @ 05/23/24 06:08:39.758
  STEP: getting /apis/discovery.k8s.io @ 05/23/24 06:08:39.759
  STEP: getting /apis/discovery.k8s.iov1 @ 05/23/24 06:08:39.76
  STEP: creating @ 05/23/24 06:08:39.76
  STEP: getting @ 05/23/24 06:08:39.765
  STEP: listing @ 05/23/24 06:08:39.766
  STEP: watching @ 05/23/24 06:08:39.767
  I0523 06:08:39.767787 22 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 05/23/24 06:08:39.768
  STEP: cluster-wide watching @ 05/23/24 06:08:39.769
  I0523 06:08:39.769475 22 endpointslice.go:459] starting watch
  STEP: patching @ 05/23/24 06:08:39.769
  STEP: updating @ 05/23/24 06:08:39.772
  I0523 06:08:39.775467 22 endpointslice.go:482] waiting for watch events with expected annotations
  I0523 06:08:39.775492 22 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 05/23/24 06:08:39.775
  STEP: deleting a collection @ 05/23/24 06:08:39.781
  I0523 06:08:39.786332 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3093" for this suite. @ 05/23/24 06:08:39.787
• [0.043 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 05/23/24 06:08:39.79
  I0523 06:08:39.790366 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 06:08:39.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:08:39.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:08:39.798
  STEP: Creating projection with secret that has name projected-secret-test-map-1d131690-a0d8-4df6-9408-aae10d53f448 @ 05/23/24 06:08:39.799
  STEP: Creating a pod to test consume secrets @ 05/23/24 06:08:39.801
  STEP: Saw pod success @ 05/23/24 06:08:43.811
  I0523 06:08:43.812428 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-secrets-623c65b3-0122-4ef2-b1fb-6b00021d8d58 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/23/24 06:08:43.814
  I0523 06:08:43.820830 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1876" for this suite. @ 05/23/24 06:08:43.822
• [4.035 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 05/23/24 06:08:43.825
  I0523 06:08:43.825139 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename endpointslice @ 05/23/24 06:08:43.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:08:43.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:08:43.884
  STEP: referencing a single matching pod @ 05/23/24 06:08:45.914
  STEP: referencing matching pods with named port @ 05/23/24 06:08:45.916
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 05/23/24 06:08:45.918
  STEP: recreating EndpointSlices after they've been deleted @ 05/23/24 06:08:45.92
  I0523 06:08:45.927884 22 endpointslice.go:938] EndpointSlice for Service endpointslice-9735/example-named-port not found
  I0523 06:08:47.930792 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9735" for this suite. @ 05/23/24 06:08:47.932
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 05/23/24 06:08:47.935
  I0523 06:08:47.935813 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename init-container @ 05/23/24 06:08:47.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:08:47.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:08:47.943
  STEP: creating the pod @ 05/23/24 06:08:47.945
  I0523 06:08:47.945207 22 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0523 06:08:50.871833 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9293" for this suite. @ 05/23/24 06:08:50.873
• [2.940 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 05/23/24 06:08:50.876
  I0523 06:08:50.876450 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename webhook @ 05/23/24 06:08:50.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:08:50.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:08:50.884
  STEP: Setting up server cert @ 05/23/24 06:08:50.893
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/23/24 06:08:51.329
  STEP: Deploying the webhook pod @ 05/23/24 06:08:51.333
  STEP: Wait for the deployment to be ready @ 05/23/24 06:08:51.337
  I0523 06:08:51.340999 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/23/24 06:08:53.346
  STEP: Verifying the service has paired with the endpoint @ 05/23/24 06:08:53.352
  I0523 06:08:54.352271 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0523 06:08:54.355131 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8559-crds.webhook.example.com via the AdmissionRegistration API @ 05/23/24 06:08:54.869
  STEP: Creating a custom resource while v1 is storage version @ 05/23/24 06:08:54.877
  STEP: Patching Custom Resource Definition to set v2 as storage @ 05/23/24 06:08:56.898
  STEP: Patching the custom resource while v2 is storage version @ 05/23/24 06:08:56.902
  I0523 06:08:57.456986 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7018" for this suite. @ 05/23/24 06:08:57.458
  STEP: Destroying namespace "webhook-markers-8301" for this suite. @ 05/23/24 06:08:57.461
• [6.587 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 05/23/24 06:08:57.463
  I0523 06:08:57.463434 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename emptydir @ 05/23/24 06:08:57.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:08:57.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:08:57.471
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/23/24 06:08:57.473
  STEP: Saw pod success @ 05/23/24 06:08:59.479
  I0523 06:08:59.480300 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-3b81563e-5fc2-458c-9a8e-ef5f38a00df9 container test-container: <nil>
  STEP: delete the pod @ 05/23/24 06:08:59.482
  I0523 06:08:59.488966 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2620" for this suite. @ 05/23/24 06:08:59.49
• [2.029 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 05/23/24 06:08:59.492
  I0523 06:08:59.492344 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename proxy @ 05/23/24 06:08:59.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:08:59.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:08:59.5
  I0523 06:08:59.501928 22 proxy.go:387] Creating pod...
  I0523 06:09:01.508957 22 proxy.go:411] Creating service...
  I0523 06:09:01.514812 22 proxy.go:448] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5478/pods/agnhost/proxy?method=DELETE
  I0523 06:09:01.528876 22 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0523 06:09:01.528901 22 proxy.go:448] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5478/pods/agnhost/proxy?method=OPTIONS
  I0523 06:09:01.539820 22 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0523 06:09:01.539853 22 proxy.go:448] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5478/pods/agnhost/proxy?method=PATCH
  I0523 06:09:01.543929 22 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0523 06:09:01.543955 22 proxy.go:448] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5478/pods/agnhost/proxy?method=POST
  I0523 06:09:01.553964 22 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0523 06:09:01.553986 22 proxy.go:448] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5478/pods/agnhost/proxy?method=PUT
  I0523 06:09:01.555593 22 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0523 06:09:01.555613 22 proxy.go:459] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5478/services/e2e-proxy-test-service/proxy?method=DELETE
  I0523 06:09:01.565529 22 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0523 06:09:01.565548 22 proxy.go:459] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5478/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0523 06:09:01.573922 22 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0523 06:09:01.573938 22 proxy.go:459] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5478/services/e2e-proxy-test-service/proxy?method=PATCH
  I0523 06:09:01.583952 22 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0523 06:09:01.583981 22 proxy.go:459] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5478/services/e2e-proxy-test-service/proxy?method=POST
  I0523 06:09:01.585852 22 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0523 06:09:01.585875 22 proxy.go:459] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5478/services/e2e-proxy-test-service/proxy?method=PUT
  I0523 06:09:01.595893 22 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0523 06:09:01.595910 22 proxy.go:479] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5478/pods/agnhost/proxy?method=GET
  I0523 06:09:01.597270 22 proxy.go:487] http.Client request:GET StatusCode:301
  I0523 06:09:01.597300 22 proxy.go:479] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5478/services/e2e-proxy-test-service/proxy?method=GET
  I0523 06:09:01.598742 22 proxy.go:487] http.Client request:GET StatusCode:301
  I0523 06:09:01.598763 22 proxy.go:479] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5478/pods/agnhost/proxy?method=HEAD
  I0523 06:09:01.599740 22 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0523 06:09:01.599758 22 proxy.go:479] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5478/services/e2e-proxy-test-service/proxy?method=HEAD
  I0523 06:09:01.601106 22 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0523 06:09:01.601188 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5478" for this suite. @ 05/23/24 06:09:01.602
• [2.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 05/23/24 06:09:01.605
  I0523 06:09:01.605589 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename tables @ 05/23/24 06:09:01.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:09:01.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:09:01.615
  I0523 06:09:01.618201 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-1450" for this suite. @ 05/23/24 06:09:01.619
• [0.016 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 05/23/24 06:09:01.621
  I0523 06:09:01.621854 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename podtemplate @ 05/23/24 06:09:01.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:09:01.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:09:01.631
  I0523 06:09:01.644555 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9668" for this suite. @ 05/23/24 06:09:01.645
• [0.026 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 05/23/24 06:09:01.648
  I0523 06:09:01.648319 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename replicaset @ 05/23/24 06:09:01.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:09:01.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:09:01.656
  I0523 06:09:01.657904 22 replica_set.go:191] Creating ReplicaSet my-hostname-basic-b447cb87-aa57-4b25-84ba-af32f8e4ae5f
  I0523 06:09:01.664106 22 resource.go:87] Pod name my-hostname-basic-b447cb87-aa57-4b25-84ba-af32f8e4ae5f: Found 0 pods out of 1
  I0523 06:09:06.668920 22 resource.go:87] Pod name my-hostname-basic-b447cb87-aa57-4b25-84ba-af32f8e4ae5f: Found 1 pods out of 1
  I0523 06:09:06.668943 22 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-b447cb87-aa57-4b25-84ba-af32f8e4ae5f" is running
  I0523 06:09:06.670597 22 replica_set.go:220] Pod "my-hostname-basic-b447cb87-aa57-4b25-84ba-af32f8e4ae5f-tvklx" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-23 06:09:02 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-23 06:09:01 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-23 06:09:02 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-23 06:09:02 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-23 06:09:01 +0000 UTC Reason: Message:}])
  I0523 06:09:06.670619 22 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/23/24 06:09:06.67
  I0523 06:09:06.676726 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2729" for this suite. @ 05/23/24 06:09:06.68
• [5.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:469
  STEP: Creating a kubernetes client @ 05/23/24 06:09:06.685
  I0523 06:09:06.685040 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename sched-pred @ 05/23/24 06:09:06.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:09:06.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:09:06.696
  I0523 06:09:06.698144 22 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0523 06:09:06.702143 22 util.go:400] Waiting for terminating namespaces to be deleted...
  I0523 06:09:06.703468 22 predicates.go:121] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-207 before test
  I0523 06:09:06.706499 22 predicates.go:887] calico-kube-controllers-6946cb87d6-xqpj5 from kube-system started at 2024-05-23 03:37:57 +0000 UTC (1 container statuses recorded)
  I0523 06:09:06.706514 22 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I0523 06:09:06.706521 22 predicates.go:887] calico-node-pgzv7 from kube-system started at 2024-05-23 03:37:57 +0000 UTC (1 container statuses recorded)
  I0523 06:09:06.706527 22 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0523 06:09:06.706534 22 predicates.go:887] coredns-c5768dcc7-tqffs from kube-system started at 2024-05-23 03:38:19 +0000 UTC (1 container statuses recorded)
  I0523 06:09:06.706540 22 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0523 06:09:06.706548 22 predicates.go:887] dashboard-metrics-scraper-69b9b44766-zbgkq from kube-system started at 2024-05-23 03:38:23 +0000 UTC (1 container statuses recorded)
  I0523 06:09:06.706564 22 predicates.go:889] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0523 06:09:06.706571 22 predicates.go:887] kubernetes-dashboard-7df74bff86-69bf5 from kube-system started at 2024-05-23 03:38:23 +0000 UTC (1 container statuses recorded)
  I0523 06:09:06.706579 22 predicates.go:889] 	Container kubernetes-dashboard ready: true, restart count 0
  I0523 06:09:06.706587 22 predicates.go:887] metrics-server-65b5b555f5-xppsl from kube-system started at 2024-05-23 03:38:21 +0000 UTC (1 container statuses recorded)
  I0523 06:09:06.706593 22 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I0523 06:09:06.706603 22 predicates.go:887] node-local-dns-w98ss from kube-system started at 2024-05-23 03:38:20 +0000 UTC (1 container statuses recorded)
  I0523 06:09:06.706609 22 predicates.go:889] 	Container node-cache ready: true, restart count 0
  I0523 06:09:06.706617 22 predicates.go:887] sonobuoy-systemd-logs-daemon-set-d34ec90e00584ff3-2lk5f from sonobuoy started at 2024-05-23 05:58:21 +0000 UTC (2 container statuses recorded)
  I0523 06:09:06.706622 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0523 06:09:06.706629 22 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0523 06:09:06.706636 22 predicates.go:121] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-208 before test
  I0523 06:09:06.711141 22 predicates.go:887] calico-node-bm447 from kube-system started at 2024-05-23 03:46:33 +0000 UTC (1 container statuses recorded)
  I0523 06:09:06.711156 22 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0523 06:09:06.711164 22 predicates.go:887] node-local-dns-w8dtr from kube-system started at 2024-05-23 03:46:33 +0000 UTC (1 container statuses recorded)
  I0523 06:09:06.711183 22 predicates.go:889] 	Container node-cache ready: true, restart count 0
  I0523 06:09:06.711192 22 predicates.go:887] agnhost from proxy-5478 started at 2024-05-23 06:08:59 +0000 UTC (1 container statuses recorded)
  I0523 06:09:06.711200 22 predicates.go:889] 	Container agnhost ready: true, restart count 0
  I0523 06:09:06.711208 22 predicates.go:887] sonobuoy from sonobuoy started at 2024-05-23 05:58:21 +0000 UTC (1 container statuses recorded)
  I0523 06:09:06.711215 22 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0523 06:09:06.711222 22 predicates.go:887] sonobuoy-systemd-logs-daemon-set-d34ec90e00584ff3-bgdnv from sonobuoy started at 2024-05-23 05:58:21 +0000 UTC (2 container statuses recorded)
  I0523 06:09:06.711228 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0523 06:09:06.711263 22 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0523 06:09:06.711272 22 predicates.go:121] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-209 before test
  I0523 06:09:06.721261 22 predicates.go:887] calico-node-cns77 from kube-system started at 2024-05-23 03:48:56 +0000 UTC (1 container statuses recorded)
  I0523 06:09:06.721278 22 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0523 06:09:06.721286 22 predicates.go:887] node-local-dns-n86hx from kube-system started at 2024-05-23 03:48:56 +0000 UTC (1 container statuses recorded)
  I0523 06:09:06.721293 22 predicates.go:889] 	Container node-cache ready: true, restart count 0
  I0523 06:09:06.721300 22 predicates.go:887] my-hostname-basic-b447cb87-aa57-4b25-84ba-af32f8e4ae5f-tvklx from replicaset-2729 started at 2024-05-23 06:09:01 +0000 UTC (1 container statuses recorded)
  I0523 06:09:06.721307 22 predicates.go:889] 	Container my-hostname-basic-b447cb87-aa57-4b25-84ba-af32f8e4ae5f ready: true, restart count 0
  I0523 06:09:06.721316 22 predicates.go:887] sonobuoy-e2e-job-bfc6bc36c48647e3 from sonobuoy started at 2024-05-23 05:58:21 +0000 UTC (2 container statuses recorded)
  I0523 06:09:06.721324 22 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0523 06:09:06.721331 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0523 06:09:06.721339 22 predicates.go:887] sonobuoy-systemd-logs-daemon-set-d34ec90e00584ff3-9qrcn from sonobuoy started at 2024-05-23 05:58:21 +0000 UTC (2 container statuses recorded)
  I0523 06:09:06.721345 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0523 06:09:06.721353 22 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/23/24 06:09:06.721
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/23/24 06:09:08.734
  STEP: Trying to apply a random label on the found node. @ 05/23/24 06:09:08.74
  STEP: verifying the node has the label kubernetes.io/e2e-73c618f3-24ad-449b-a39b-8885941d4c13 42 @ 05/23/24 06:09:08.744
  STEP: Trying to relaunch the pod, now with labels. @ 05/23/24 06:09:08.746
  STEP: removing the label kubernetes.io/e2e-73c618f3-24ad-449b-a39b-8885941d4c13 off the node k8s-10-255-0-208 @ 05/23/24 06:09:10.754
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-73c618f3-24ad-449b-a39b-8885941d4c13 @ 05/23/24 06:09:10.759
  I0523 06:09:10.760915 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4649" for this suite. @ 05/23/24 06:09:10.762
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 05/23/24 06:09:10.766
  I0523 06:09:10.766204 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/23/24 06:09:10.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:09:10.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:09:10.775
  STEP: getting /apis @ 05/23/24 06:09:10.779
  STEP: getting /apis/admissionregistration.k8s.io @ 05/23/24 06:09:10.781
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 05/23/24 06:09:10.781
  STEP: creating @ 05/23/24 06:09:10.782
  STEP: getting @ 05/23/24 06:09:10.787
  STEP: listing @ 05/23/24 06:09:10.788
  STEP: watching @ 05/23/24 06:09:10.789
  I0523 06:09:10.789584 22 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 05/23/24 06:09:10.79
  STEP: updating @ 05/23/24 06:09:10.791
  I0523 06:09:10.794434 22 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 05/23/24 06:09:10.794
  STEP: deleting a collection @ 05/23/24 06:09:10.798
  I0523 06:09:10.813110 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1388" for this suite. @ 05/23/24 06:09:10.814
• [0.052 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 05/23/24 06:09:10.817
  I0523 06:09:10.817882 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename field-validation @ 05/23/24 06:09:10.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:09:10.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:09:10.826
  STEP: apply creating a deployment @ 05/23/24 06:09:10.827
  I0523 06:09:10.832135 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5336" for this suite. @ 05/23/24 06:09:10.833
• [0.017 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 05/23/24 06:09:10.835
  I0523 06:09:10.835359 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename resourcequota @ 05/23/24 06:09:10.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:09:10.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:09:10.843
  STEP: Creating a ResourceQuota with best effort scope @ 05/23/24 06:09:10.844
  STEP: Ensuring ResourceQuota status is calculated @ 05/23/24 06:09:10.846
  STEP: Creating a ResourceQuota with not best effort scope @ 05/23/24 06:09:12.849
  STEP: Ensuring ResourceQuota status is calculated @ 05/23/24 06:09:12.851
  STEP: Creating a best-effort pod @ 05/23/24 06:09:14.853
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 05/23/24 06:09:14.859
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 05/23/24 06:09:16.861
  STEP: Deleting the pod @ 05/23/24 06:09:18.864
  STEP: Ensuring resource quota status released the pod usage @ 05/23/24 06:09:18.869
  STEP: Creating a not best-effort pod @ 05/23/24 06:09:20.871
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 05/23/24 06:09:20.877
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 05/23/24 06:09:22.879
  STEP: Deleting the pod @ 05/23/24 06:09:24.882
  STEP: Ensuring resource quota status released the pod usage @ 05/23/24 06:09:24.888
  I0523 06:09:26.890582 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5833" for this suite. @ 05/23/24 06:09:26.892
• [16.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 05/23/24 06:09:26.895
  I0523 06:09:26.895517 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename emptydir @ 05/23/24 06:09:26.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:09:26.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:09:26.903
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/23/24 06:09:26.905
  STEP: Saw pod success @ 05/23/24 06:09:30.914
  I0523 06:09:30.915791 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-078092d3-cfe6-4454-b96b-5262be126ac6 container test-container: <nil>
  STEP: delete the pod @ 05/23/24 06:09:30.918
  I0523 06:09:30.924622 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1534" for this suite. @ 05/23/24 06:09:30.926
• [4.032 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 05/23/24 06:09:30.928
  I0523 06:09:30.928018 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename svcaccounts @ 05/23/24 06:09:30.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:09:30.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:09:30.936
  STEP: reading a file in the container @ 05/23/24 06:09:32.947
  I0523 06:09:32.947608 22 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1096 pod-service-account-639e94e0-96c2-486f-9c55-32ae6b391b68 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 05/23/24 06:09:33.009
  I0523 06:09:33.009740 22 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1096 pod-service-account-639e94e0-96c2-486f-9c55-32ae6b391b68 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 05/23/24 06:09:33.069
  I0523 06:09:33.069620 22 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1096 pod-service-account-639e94e0-96c2-486f-9c55-32ae6b391b68 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0523 06:09:33.130526 22 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-1096"
  I0523 06:09:33.131618 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1096" for this suite. @ 05/23/24 06:09:33.132
• [2.207 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 05/23/24 06:09:33.134
  I0523 06:09:33.135010 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename cronjob @ 05/23/24 06:09:33.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:09:33.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:09:33.143
  STEP: Creating a cronjob @ 05/23/24 06:09:33.144
  STEP: creating @ 05/23/24 06:09:33.144
  STEP: getting @ 05/23/24 06:09:33.146
  STEP: listing @ 05/23/24 06:09:33.147
  STEP: watching @ 05/23/24 06:09:33.148
  I0523 06:09:33.148715 22 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 05/23/24 06:09:33.149
  STEP: cluster-wide watching @ 05/23/24 06:09:33.15
  I0523 06:09:33.150136 22 cronjob.go:382] starting watch
  STEP: patching @ 05/23/24 06:09:33.15
  STEP: updating @ 05/23/24 06:09:33.153
  I0523 06:09:33.156694 22 cronjob.go:406] waiting for watch events with expected annotations
  I0523 06:09:33.156712 22 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 05/23/24 06:09:33.156
  STEP: updating /status @ 05/23/24 06:09:33.159
  STEP: get /status @ 05/23/24 06:09:33.162
  STEP: deleting @ 05/23/24 06:09:33.163
  STEP: deleting a collection @ 05/23/24 06:09:33.176
  I0523 06:09:33.185988 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2218" for this suite. @ 05/23/24 06:09:33.187
• [0.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 05/23/24 06:09:33.189
  I0523 06:09:33.189827 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename configmap @ 05/23/24 06:09:33.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:09:33.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:09:33.198
  STEP: creating a ConfigMap @ 05/23/24 06:09:33.199
  STEP: fetching the ConfigMap @ 05/23/24 06:09:33.201
  STEP: patching the ConfigMap @ 05/23/24 06:09:33.202
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 05/23/24 06:09:33.204
  STEP: deleting the ConfigMap by collection with a label selector @ 05/23/24 06:09:33.205
  STEP: listing all ConfigMaps in test namespace @ 05/23/24 06:09:33.207
  I0523 06:09:33.208738 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1671" for this suite. @ 05/23/24 06:09:33.21
• [0.022 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 05/23/24 06:09:33.212
  I0523 06:09:33.212248 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename kubectl @ 05/23/24 06:09:33.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:09:33.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:09:33.22
  I0523 06:09:33.222952 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-257 create -f -'
  I0523 06:09:33.302514 22 builder.go:146] stderr: ""
  I0523 06:09:33.302541 22 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0523 06:09:33.302625 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-257 create -f -'
  I0523 06:09:33.382112 22 builder.go:146] stderr: ""
  I0523 06:09:33.382139 22 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/23/24 06:09:33.382
  I0523 06:09:34.384973 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0523 06:09:34.385000 22 framework.go:733] Found 1 / 1
  I0523 06:09:34.385012 22 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0523 06:09:34.386287 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0523 06:09:34.386308 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0523 06:09:34.386351 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-257 describe pod agnhost-primary-p2s7m'
  I0523 06:09:34.428292 22 builder.go:146] stderr: ""
  I0523 06:09:34.428412 22 builder.go:147] stdout: "Name:             agnhost-primary-p2s7m\nNamespace:        kubectl-257\nPriority:         0\nService Account:  default\nNode:             k8s-10-255-0-209/10.255.0.209\nStart Time:       Thu, 23 May 2024 06:09:33 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               172.20.69.146\nIPs:\n  IP:           172.20.69.146\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://e75996657a976fb22ad63247aad6f6e0aa39542c42d079d4c53ed750c0dcac58\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Thu, 23 May 2024 06:09:33 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-8d9sq (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-8d9sq:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-257/agnhost-primary-p2s7m to k8s-10-255-0-209\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0523 06:09:34.428469 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-257 describe rc agnhost-primary'
  I0523 06:09:34.470850 22 builder.go:146] stderr: ""
  I0523 06:09:34.470924 22 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-257\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-p2s7m\n"
  I0523 06:09:34.470976 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-257 describe service agnhost-primary'
  I0523 06:09:34.512652 22 builder.go:146] stderr: ""
  I0523 06:09:34.512684 22 builder.go:147] stdout: "Name:              agnhost-primary\nNamespace:         kubectl-257\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.68.226.121\nIPs:               10.68.226.121\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         172.20.69.146:6379\nSession Affinity:  None\nEvents:            <none>\n"
  I0523 06:09:34.514114 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-257 describe node k8s-10-255-0-207'
  I0523 06:09:34.563934 22 builder.go:146] stderr: ""
  I0523 06:09:34.564025 22 builder.go:147] stdout: "Name:               k8s-10-255-0-207\nRoles:              master\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=k8s-10-255-0-207\n                    kubernetes.io/os=linux\n                    kubernetes.io/role=master\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Thu, 23 May 2024 03:37:52 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  k8s-10-255-0-207\n  AcquireTime:     <unset>\n  RenewTime:       Thu, 23 May 2024 06:09:33 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Thu, 23 May 2024 03:38:12 +0000   Thu, 23 May 2024 03:38:12 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Thu, 23 May 2024 06:08:52 +0000   Thu, 23 May 2024 03:37:52 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Thu, 23 May 2024 06:08:52 +0000   Thu, 23 May 2024 03:37:52 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Thu, 23 May 2024 06:08:52 +0000   Thu, 23 May 2024 03:37:52 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Thu, 23 May 2024 06:08:52 +0000   Thu, 23 May 2024 03:38:12 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  10.255.0.207\n  Hostname:    k8s-10-255-0-207\nCapacity:\n  cpu:                4\n  ephemeral-storage:  40901312Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             15686432Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  37694649077\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             15379232Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 b30b53f0a5354577b5053def3ec7e7f1\n  System UUID:                b30b53f0-a535-4577-b505-3def3ec7e7f1\n  Boot ID:                    1f0659be-384d-45f6-8566-136b42abfaf6\n  Kernel Version:             5.15.0-106-generic\n  OS Image:                   Ubuntu 22.04.4 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.17\n  Kubelet Version:            v1.30.1\n  Kube-Proxy Version:         v1.30.1\nPodCIDR:                      172.20.0.0/24\nPodCIDRs:                     172.20.0.0/24\nNon-terminated Pods:          (8 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-kube-controllers-6946cb87d6-xqpj5                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         151m\n  kube-system                 calico-node-pgzv7                                          250m (6%)     0 (0%)      0 (0%)           0 (0%)         151m\n  kube-system                 coredns-c5768dcc7-tqffs                                    100m (2%)     0 (0%)      70Mi (0%)        300Mi (1%)     151m\n  kube-system                 dashboard-metrics-scraper-69b9b44766-zbgkq                 0 (0%)        0 (0%)      0 (0%)           0 (0%)         151m\n  kube-system                 kubernetes-dashboard-7df74bff86-69bf5                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         151m\n  kube-system                 metrics-server-65b5b555f5-xppsl                            100m (2%)     0 (0%)      200Mi (1%)       0 (0%)         151m\n  kube-system                 node-local-dns-w98ss                                       25m (0%)      0 (0%)      5Mi (0%)         0 (0%)         151m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-d34ec90e00584ff3-2lk5f    0 (0%)        0 (0%)      0 (0%)           0 (0%)         11m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                475m (11%)  0 (0%)\n  memory             275Mi (1%)  300Mi (1%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  I0523 06:09:34.564078 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-257 describe namespace kubectl-257'
  I0523 06:09:34.605091 22 builder.go:146] stderr: ""
  I0523 06:09:34.605123 22 builder.go:147] stdout: "Name:         kubectl-257\nLabels:       e2e-framework=kubectl\n              e2e-run=cc741619-3e38-42a8-a592-6d2dbc5a90ec\n              kubernetes.io/metadata.name=kubectl-257\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0523 06:09:34.605204 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-257" for this suite. @ 05/23/24 06:09:34.606
• [1.397 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 05/23/24 06:09:34.609
  I0523 06:09:34.609705 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename pod-network-test @ 05/23/24 06:09:34.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:09:34.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:09:34.617
  STEP: Performing setup for networking test in namespace pod-network-test-9935 @ 05/23/24 06:09:34.619
  STEP: creating a selector @ 05/23/24 06:09:34.619
  STEP: Creating the service pods in kubernetes @ 05/23/24 06:09:34.619
  I0523 06:09:34.619314 22 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/23/24 06:09:56.666
  I0523 06:09:58.679053 22 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0523 06:09:58.679083 22 utils.go:472] Going to poll 172.20.254.42 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0523 06:09:58.680006 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.20.254.42 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9935 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 06:09:58.680022 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 06:09:58.680368 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 06:09:58.680409 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-9935/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.20.254.42+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0523 06:09:59.706079 22 utils.go:489] Found all 1 expected endpoints: [netserver-0]
  I0523 06:09:59.706107 22 utils.go:472] Going to poll 172.20.64.167 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0523 06:09:59.707706 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.20.64.167 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9935 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 06:09:59.707719 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 06:09:59.708064 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 06:09:59.708101 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-9935/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.20.64.167+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0523 06:10:00.731715 22 utils.go:489] Found all 1 expected endpoints: [netserver-1]
  I0523 06:10:00.731749 22 utils.go:472] Going to poll 172.20.69.158 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0523 06:10:00.733318 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.20.69.158 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9935 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 06:10:00.733334 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 06:10:00.733678 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 06:10:00.733718 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-9935/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.20.69.158+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0523 06:10:01.758031 22 utils.go:489] Found all 1 expected endpoints: [netserver-2]
  I0523 06:10:01.758137 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9935" for this suite. @ 05/23/24 06:10:01.76
• [27.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 05/23/24 06:10:01.762
  I0523 06:10:01.762739 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename webhook @ 05/23/24 06:10:01.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:10:01.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:10:01.77
  STEP: Setting up server cert @ 05/23/24 06:10:01.785
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/23/24 06:10:01.966
  STEP: Deploying the webhook pod @ 05/23/24 06:10:01.969
  STEP: Wait for the deployment to be ready @ 05/23/24 06:10:01.975
  I0523 06:10:01.978453 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/23/24 06:10:03.983
  STEP: Verifying the service has paired with the endpoint @ 05/23/24 06:10:03.988
  I0523 06:10:04.988621 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 05/23/24 06:10:04.991
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 05/23/24 06:10:05
  STEP: Creating a configMap that should not be mutated @ 05/23/24 06:10:05.003
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 05/23/24 06:10:05.016
  STEP: Creating a configMap that should be mutated @ 05/23/24 06:10:05.019
  I0523 06:10:05.043425 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1847" for this suite. @ 05/23/24 06:10:05.045
  STEP: Destroying namespace "webhook-markers-699" for this suite. @ 05/23/24 06:10:05.05
• [3.290 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 05/23/24 06:10:05.053
  I0523 06:10:05.053296 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename webhook @ 05/23/24 06:10:05.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:10:05.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:10:05.063
  STEP: Setting up server cert @ 05/23/24 06:10:05.077
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/23/24 06:10:05.37
  STEP: Deploying the webhook pod @ 05/23/24 06:10:05.373
  STEP: Wait for the deployment to be ready @ 05/23/24 06:10:05.378
  I0523 06:10:05.382120 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/23/24 06:10:07.386
  STEP: Verifying the service has paired with the endpoint @ 05/23/24 06:10:07.393
  I0523 06:10:08.393467 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 05/23/24 06:10:08.397
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/23/24 06:10:08.397
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 05/23/24 06:10:08.404
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 05/23/24 06:10:09.408
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/23/24 06:10:09.408
  STEP: Having no error when timeout is longer than webhook latency @ 05/23/24 06:10:10.42
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/23/24 06:10:10.42
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 05/23/24 06:10:15.435
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/23/24 06:10:15.435
  I0523 06:10:20.475964 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1054" for this suite. @ 05/23/24 06:10:20.477
  STEP: Destroying namespace "webhook-markers-9184" for this suite. @ 05/23/24 06:10:20.48
• [15.429 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 05/23/24 06:10:20.483
  I0523 06:10:20.483012 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename emptydir @ 05/23/24 06:10:20.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:10:20.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:10:20.493
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/23/24 06:10:20.494
  STEP: Saw pod success @ 05/23/24 06:10:24.506
  I0523 06:10:24.507536 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-0f1c1fe4-b564-4b14-8393-b6d87dda75da container test-container: <nil>
  STEP: delete the pod @ 05/23/24 06:10:24.509
  I0523 06:10:24.515760 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7863" for this suite. @ 05/23/24 06:10:24.517
• [4.036 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 05/23/24 06:10:24.519
  I0523 06:10:24.519299 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename runtimeclass @ 05/23/24 06:10:24.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:10:24.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:10:24.528
  I0523 06:10:26.544958 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-305" for this suite. @ 05/23/24 06:10:26.546
• [2.029 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2218
  STEP: Creating a kubernetes client @ 05/23/24 06:10:26.548
  I0523 06:10:26.548642 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename services @ 05/23/24 06:10:26.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:10:26.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:10:26.556
  STEP: creating service in namespace services-3848 @ 05/23/24 06:10:26.558
  STEP: creating service affinity-nodeport in namespace services-3848 @ 05/23/24 06:10:26.558
  STEP: creating replication controller affinity-nodeport in namespace services-3848 @ 05/23/24 06:10:26.564
  I0523 06:10:26.566916      22 runners.go:198] Created replication controller with name: affinity-nodeport, namespace: services-3848, replica count: 3
  I0523 06:10:29.618021      22 runners.go:198] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0523 06:10:29.621996 22 resource.go:361] Creating new exec pod
  I0523 06:10:32.629025 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-3848 exec execpod-affinity5dkds -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0523 06:10:32.693267 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I0523 06:10:32.693299 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0523 06:10:32.693364 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-3848 exec execpod-affinity5dkds -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.27.141 80'
  I0523 06:10:32.756722 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.27.141 80\nConnection to 10.68.27.141 80 port [tcp/http] succeeded!\n"
  I0523 06:10:32.756754 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0523 06:10:32.756871 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-3848 exec execpod-affinity5dkds -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.209 31670'
  I0523 06:10:32.817679 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.209 31670\nConnection to 10.255.0.209 31670 port [tcp/*] succeeded!\n"
  I0523 06:10:32.817711 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0523 06:10:32.817775 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-3848 exec execpod-affinity5dkds -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.208 31670'
  I0523 06:10:32.881662 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.208 31670\nConnection to 10.255.0.208 31670 port [tcp/*] succeeded!\n"
  I0523 06:10:32.881700 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0523 06:10:32.881793 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-3848 exec execpod-affinity5dkds -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.255.0.207:31670/ ; done'
  I0523 06:10:32.988883 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:31670/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:31670/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:31670/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:31670/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:31670/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:31670/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:31670/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:31670/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:31670/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:31670/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:31670/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:31670/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:31670/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:31670/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:31670/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.207:31670/\n"
  I0523 06:10:32.988924 22 builder.go:147] stdout: "\naffinity-nodeport-htkrj\naffinity-nodeport-htkrj\naffinity-nodeport-htkrj\naffinity-nodeport-htkrj\naffinity-nodeport-htkrj\naffinity-nodeport-htkrj\naffinity-nodeport-htkrj\naffinity-nodeport-htkrj\naffinity-nodeport-htkrj\naffinity-nodeport-htkrj\naffinity-nodeport-htkrj\naffinity-nodeport-htkrj\naffinity-nodeport-htkrj\naffinity-nodeport-htkrj\naffinity-nodeport-htkrj\naffinity-nodeport-htkrj"
  I0523 06:10:32.988939 22 service.go:242] Received response from host: affinity-nodeport-htkrj
  I0523 06:10:32.988949 22 service.go:242] Received response from host: affinity-nodeport-htkrj
  I0523 06:10:32.988959 22 service.go:242] Received response from host: affinity-nodeport-htkrj
  I0523 06:10:32.988968 22 service.go:242] Received response from host: affinity-nodeport-htkrj
  I0523 06:10:32.988977 22 service.go:242] Received response from host: affinity-nodeport-htkrj
  I0523 06:10:32.988985 22 service.go:242] Received response from host: affinity-nodeport-htkrj
  I0523 06:10:32.988997 22 service.go:242] Received response from host: affinity-nodeport-htkrj
  I0523 06:10:32.989005 22 service.go:242] Received response from host: affinity-nodeport-htkrj
  I0523 06:10:32.989014 22 service.go:242] Received response from host: affinity-nodeport-htkrj
  I0523 06:10:32.989022 22 service.go:242] Received response from host: affinity-nodeport-htkrj
  I0523 06:10:32.989029 22 service.go:242] Received response from host: affinity-nodeport-htkrj
  I0523 06:10:32.989037 22 service.go:242] Received response from host: affinity-nodeport-htkrj
  I0523 06:10:32.989045 22 service.go:242] Received response from host: affinity-nodeport-htkrj
  I0523 06:10:32.989056 22 service.go:242] Received response from host: affinity-nodeport-htkrj
  I0523 06:10:32.989065 22 service.go:242] Received response from host: affinity-nodeport-htkrj
  I0523 06:10:32.989074 22 service.go:242] Received response from host: affinity-nodeport-htkrj
  I0523 06:10:32.989142 22 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-3848, will wait for the garbage collector to delete the pods @ 05/23/24 06:10:32.994
  I0523 06:10:33.049451 22 resources.go:139] Deleting ReplicationController affinity-nodeport took: 2.446421ms
  I0523 06:10:33.150368 22 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.912138ms
  I0523 06:10:35.960090 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3848" for this suite. @ 05/23/24 06:10:35.962
• [9.416 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 05/23/24 06:10:35.964
  I0523 06:10:35.964719 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/23/24 06:10:35.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:10:35.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:10:35.975
  I0523 06:10:35.976806 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 05/23/24 06:10:37.139
  I0523 06:10:37.139800 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-3617 --namespace=crd-publish-openapi-3617 create -f -'
  I0523 06:10:37.187459 22 builder.go:146] stderr: ""
  I0523 06:10:37.187494 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6234-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0523 06:10:37.187529 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-3617 --namespace=crd-publish-openapi-3617 delete e2e-test-crd-publish-openapi-6234-crds test-foo'
  I0523 06:10:37.227804 22 builder.go:146] stderr: ""
  I0523 06:10:37.227836 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6234-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0523 06:10:37.227876 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-3617 --namespace=crd-publish-openapi-3617 apply -f -'
  I0523 06:10:37.273999 22 builder.go:146] stderr: ""
  I0523 06:10:37.274029 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6234-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0523 06:10:37.274065 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-3617 --namespace=crd-publish-openapi-3617 delete e2e-test-crd-publish-openapi-6234-crds test-foo'
  I0523 06:10:37.314354 22 builder.go:146] stderr: ""
  I0523 06:10:37.314383 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6234-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 05/23/24 06:10:37.314
  I0523 06:10:37.314438 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-3617 --namespace=crd-publish-openapi-3617 create -f -'
  I0523 06:10:37.353511 22 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 05/23/24 06:10:37.353
  I0523 06:10:37.353606 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-3617 --namespace=crd-publish-openapi-3617 create -f -'
  I0523 06:10:37.393035 22 builder.go:135] rc: 1
  I0523 06:10:37.393098 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-3617 --namespace=crd-publish-openapi-3617 apply -f -'
  I0523 06:10:37.435293 22 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 05/23/24 06:10:37.435
  I0523 06:10:37.435383 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-3617 --namespace=crd-publish-openapi-3617 create -f -'
  I0523 06:10:37.474360 22 builder.go:135] rc: 1
  I0523 06:10:37.474477 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-3617 --namespace=crd-publish-openapi-3617 apply -f -'
  I0523 06:10:37.516073 22 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 05/23/24 06:10:37.516
  I0523 06:10:37.516228 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-3617 explain e2e-test-crd-publish-openapi-6234-crds'
  I0523 06:10:37.554534 22 builder.go:146] stderr: ""
  I0523 06:10:37.554572 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6234-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 05/23/24 06:10:37.554
  I0523 06:10:37.554776 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-3617 explain e2e-test-crd-publish-openapi-6234-crds.metadata'
  I0523 06:10:37.595078 22 builder.go:146] stderr: ""
  I0523 06:10:37.595188 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6234-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0523 06:10:37.595369 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-3617 explain e2e-test-crd-publish-openapi-6234-crds.spec'
  I0523 06:10:37.634783 22 builder.go:146] stderr: ""
  I0523 06:10:37.634819 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6234-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0523 06:10:37.634903 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-3617 explain e2e-test-crd-publish-openapi-6234-crds.spec.bars'
  I0523 06:10:37.674560 22 builder.go:146] stderr: ""
  I0523 06:10:37.674597 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6234-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 05/23/24 06:10:37.674
  I0523 06:10:37.674744 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-3617 explain e2e-test-crd-publish-openapi-6234-crds.spec.bars2'
  I0523 06:10:37.713009 22 builder.go:135] rc: 1
  I0523 06:10:38.891469 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3617" for this suite. @ 05/23/24 06:10:38.895
• [2.933 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 05/23/24 06:10:38.897
  I0523 06:10:38.897974 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename replication-controller @ 05/23/24 06:10:38.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:10:38.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:10:38.907
  STEP: creating a ReplicationController @ 05/23/24 06:10:38.909
  STEP: waiting for RC to be added @ 05/23/24 06:10:38.911
  STEP: waiting for available Replicas @ 05/23/24 06:10:38.912
  STEP: patching ReplicationController @ 05/23/24 06:10:39.427
  STEP: waiting for RC to be modified @ 05/23/24 06:10:39.429
  STEP: patching ReplicationController status @ 05/23/24 06:10:39.429
  STEP: waiting for RC to be modified @ 05/23/24 06:10:39.433
  STEP: waiting for available Replicas @ 05/23/24 06:10:39.433
  STEP: fetching ReplicationController status @ 05/23/24 06:10:39.435
  STEP: patching ReplicationController scale @ 05/23/24 06:10:39.436
  STEP: waiting for RC to be modified @ 05/23/24 06:10:39.439
  STEP: waiting for ReplicationController's scale to be the max amount @ 05/23/24 06:10:39.439
  STEP: fetching ReplicationController; ensuring that it's patched @ 05/23/24 06:10:40.925
  STEP: updating ReplicationController status @ 05/23/24 06:10:40.932
  STEP: waiting for RC to be modified @ 05/23/24 06:10:40.934
  STEP: listing all ReplicationControllers @ 05/23/24 06:10:40.934
  STEP: checking that ReplicationController has expected values @ 05/23/24 06:10:40.935
  STEP: deleting ReplicationControllers by collection @ 05/23/24 06:10:40.936
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 05/23/24 06:10:40.939
  I0523 06:10:40.967368 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0523 06:10:40.967513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-3696" for this suite. @ 05/23/24 06:10:40.968
• [2.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 05/23/24 06:10:40.971
  I0523 06:10:40.971610 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename webhook @ 05/23/24 06:10:40.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:10:40.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:10:40.979
  STEP: Setting up server cert @ 05/23/24 06:10:40.991
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/23/24 06:10:41.267
  STEP: Deploying the webhook pod @ 05/23/24 06:10:41.272
  STEP: Wait for the deployment to be ready @ 05/23/24 06:10:41.276
  I0523 06:10:41.280585 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0523 06:10:41.968208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:10:42.968827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/23/24 06:10:43.285
  STEP: Verifying the service has paired with the endpoint @ 05/23/24 06:10:43.289
  E0523 06:10:43.969871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:10:44.290327 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0523 06:10:44.293368 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-66-crds.webhook.example.com via the AdmissionRegistration API @ 05/23/24 06:10:44.802
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/23/24 06:10:44.809
  E0523 06:10:44.970516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:10:45.970577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:10:46.970675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:10:47.368116 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-727" for this suite. @ 05/23/24 06:10:47.369
  STEP: Destroying namespace "webhook-markers-7280" for this suite. @ 05/23/24 06:10:47.372
• [6.403 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 05/23/24 06:10:47.374
  I0523 06:10:47.374510 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 06:10:47.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:10:47.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:10:47.383
  STEP: Creating configMap with name projected-configmap-test-volume-d482b639-909d-4e3e-b296-0f64a3b6410e @ 05/23/24 06:10:47.384
  STEP: Creating a pod to test consume configMaps @ 05/23/24 06:10:47.387
  E0523 06:10:47.971611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:10:48.971835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:10:49.972802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:10:50.973259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:10:51.395
  I0523 06:10:51.396812 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-configmaps-423ab517-9abc-4231-ad89-146a4f70170f container agnhost-container: <nil>
  STEP: delete the pod @ 05/23/24 06:10:51.399
  I0523 06:10:51.405446 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3614" for this suite. @ 05/23/24 06:10:51.406
• [4.035 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 05/23/24 06:10:51.409
  I0523 06:10:51.409733 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename svcaccounts @ 05/23/24 06:10:51.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:10:51.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:10:51.416
  STEP: Creating ServiceAccount "e2e-sa-q9kxb"  @ 05/23/24 06:10:51.418
  I0523 06:10:51.419836 22 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-q9kxb"  @ 05/23/24 06:10:51.419
  I0523 06:10:51.423228 22 service_accounts.go:839] AutomountServiceAccountToken: true
  I0523 06:10:51.423281 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9745" for this suite. @ 05/23/24 06:10:51.424
• [0.017 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 05/23/24 06:10:51.426
  I0523 06:10:51.426832 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename namespaces @ 05/23/24 06:10:51.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:10:51.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:10:51.436
  STEP: Creating namespace "e2e-ns-7r26h" @ 05/23/24 06:10:51.438
  I0523 06:10:51.444215 22 namespace.go:411] Namespace "e2e-ns-7r26h-6477" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-7r26h-6477" @ 05/23/24 06:10:51.444
  I0523 06:10:51.448178 22 namespace.go:434] Namespace "e2e-ns-7r26h-6477" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-7r26h-6477" @ 05/23/24 06:10:51.448
  I0523 06:10:51.451038 22 namespace.go:463] Namespace "e2e-ns-7r26h-6477" has []v1.FinalizerName{"kubernetes"}
  I0523 06:10:51.451098 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4770" for this suite. @ 05/23/24 06:10:51.452
  STEP: Destroying namespace "e2e-ns-7r26h-6477" for this suite. @ 05/23/24 06:10:51.454
• [0.030 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 05/23/24 06:10:51.457
  I0523 06:10:51.457262 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename downward-api @ 05/23/24 06:10:51.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:10:51.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:10:51.464
  STEP: Creating a pod to test downward api env vars @ 05/23/24 06:10:51.465
  E0523 06:10:51.974060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:10:52.974155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:10:53.974997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:10:54.975165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:10:55.473
  I0523 06:10:55.474739 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod downward-api-e9b030c5-1e7f-4d63-8430-0e2a6d73ddde container dapi-container: <nil>
  STEP: delete the pod @ 05/23/24 06:10:55.477
  I0523 06:10:55.483288 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5549" for this suite. @ 05/23/24 06:10:55.484
• [4.029 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 05/23/24 06:10:55.486
  I0523 06:10:55.486821 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename podtemplate @ 05/23/24 06:10:55.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:10:55.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:10:55.494
  STEP: Create a pod template @ 05/23/24 06:10:55.496
  STEP: Replace a pod template @ 05/23/24 06:10:55.498
  I0523 06:10:55.501547 22 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0523 06:10:55.501613 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3576" for this suite. @ 05/23/24 06:10:55.502
• [0.018 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 05/23/24 06:10:55.505
  I0523 06:10:55.505195 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/23/24 06:10:55.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:10:55.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:10:55.512
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 05/23/24 06:10:55.513
  I0523 06:10:55.514129 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  E0523 06:10:55.976225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:10:56.723163 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  E0523 06:10:56.976755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:10:57.977636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:10:58.977852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:10:59.978393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:00.978772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:11:01.382016 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2594" for this suite. @ 05/23/24 06:11:01.385
• [5.884 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3572
  STEP: Creating a kubernetes client @ 05/23/24 06:11:01.389
  I0523 06:11:01.389622 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename services @ 05/23/24 06:11:01.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:11:01.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:11:01.398
  STEP: creating a collection of services @ 05/23/24 06:11:01.4
  I0523 06:11:01.400246 22 service.go:3608] Creating e2e-svc-a-rmv7j
  I0523 06:11:01.405047 22 service.go:3608] Creating e2e-svc-b-v2pbc
  I0523 06:11:01.410289 22 service.go:3608] Creating e2e-svc-c-268vj
  STEP: deleting service collection @ 05/23/24 06:11:01.415
  I0523 06:11:01.426587 22 service.go:3643] Collection of services has been deleted
  I0523 06:11:01.426699 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1754" for this suite. @ 05/23/24 06:11:01.428
• [0.043 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 05/23/24 06:11:01.432
  I0523 06:11:01.432936 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename resourcequota @ 05/23/24 06:11:01.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:11:01.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:11:01.442
  STEP: Counting existing ResourceQuota @ 05/23/24 06:11:01.443
  E0523 06:11:01.978849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:02.979825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:03.980036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:04.980823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:05.981768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/23/24 06:11:06.446
  STEP: Ensuring resource quota status is calculated @ 05/23/24 06:11:06.449
  E0523 06:11:06.981970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:07.982265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 05/23/24 06:11:08.451
  STEP: Creating a NodePort Service @ 05/23/24 06:11:08.459
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 05/23/24 06:11:08.468
  STEP: Ensuring resource quota status captures service creation @ 05/23/24 06:11:08.476
  E0523 06:11:08.982654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:09.982968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 05/23/24 06:11:10.479
  STEP: Ensuring resource quota status released usage @ 05/23/24 06:11:10.497
  E0523 06:11:10.983407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:11.983630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:11:12.500292 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4481" for this suite. @ 05/23/24 06:11:12.502
• [11.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 05/23/24 06:11:12.504
  I0523 06:11:12.504407 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename subpath @ 05/23/24 06:11:12.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:11:12.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:11:12.512
  STEP: Setting up data @ 05/23/24 06:11:12.514
  STEP: Creating pod pod-subpath-test-configmap-nm6s @ 05/23/24 06:11:12.517
  STEP: Creating a pod to test atomic-volume-subpath @ 05/23/24 06:11:12.517
  E0523 06:11:12.984249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:13.984534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:14.984612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:15.984765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:16.984846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:17.984970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:18.985763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:19.985965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:20.986524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:21.986658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:22.987730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:23.987964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:24.988664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:25.988736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:26.988902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:27.989104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:28.990016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:29.990291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:30.990802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:31.991444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:32.992346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:33.993014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:34.993203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:35.993923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:11:36.549
  I0523 06:11:36.550489 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-subpath-test-configmap-nm6s container test-container-subpath-configmap-nm6s: <nil>
  STEP: delete the pod @ 05/23/24 06:11:36.554
  STEP: Deleting pod pod-subpath-test-configmap-nm6s @ 05/23/24 06:11:36.56
  I0523 06:11:36.560162 22 delete.go:62] Deleting pod "pod-subpath-test-configmap-nm6s" in namespace "subpath-9351"
  I0523 06:11:36.561222 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9351" for this suite. @ 05/23/24 06:11:36.562
• [24.060 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 05/23/24 06:11:36.564
  I0523 06:11:36.564610 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename configmap @ 05/23/24 06:11:36.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:11:36.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:11:36.572
  STEP: Creating configMap with name configmap-test-volume-41cbc225-fb0e-409c-a839-71dae49123a2 @ 05/23/24 06:11:36.574
  STEP: Creating a pod to test consume configMaps @ 05/23/24 06:11:36.576
  E0523 06:11:36.994492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:37.994765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:38.995443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:39.995679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:11:40.585
  I0523 06:11:40.586326 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-configmaps-d3b32916-0fef-419a-b6e0-ee109329b469 container agnhost-container: <nil>
  STEP: delete the pod @ 05/23/24 06:11:40.588
  I0523 06:11:40.594605 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6603" for this suite. @ 05/23/24 06:11:40.596
• [4.035 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 05/23/24 06:11:40.599
  I0523 06:11:40.599763 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename svcaccounts @ 05/23/24 06:11:40.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:11:40.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:11:40.61
  I0523 06:11:40.612717 22 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-6042"
  I0523 06:11:40.614560 22 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-6042"
  E0523 06:11:40.995748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for a new root ca configmap created @ 05/23/24 06:11:41.115
  I0523 06:11:41.116782 22 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-6042"
  I0523 06:11:41.119627 22 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-6042"
  STEP: waiting for the root ca configmap reconciled @ 05/23/24 06:11:41.62
  I0523 06:11:41.621694 22 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-6042"
  I0523 06:11:41.621765 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6042" for this suite. @ 05/23/24 06:11:41.623
• [1.026 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 05/23/24 06:11:41.626
  I0523 06:11:41.626420 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 06:11:41.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:11:41.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:11:41.635
  STEP: Creating configMap with name projected-configmap-test-volume-f4f9e053-dbdc-45c8-b5e2-57b6408d5b91 @ 05/23/24 06:11:41.637
  STEP: Creating a pod to test consume configMaps @ 05/23/24 06:11:41.639
  E0523 06:11:41.996440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:42.996567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:11:43.647
  I0523 06:11:43.648917 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-configmaps-b1ad649f-3477-4b12-b69b-a5364cdb2358 container agnhost-container: <nil>
  STEP: delete the pod @ 05/23/24 06:11:43.651
  I0523 06:11:43.657026 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8009" for this suite. @ 05/23/24 06:11:43.658
• [2.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 05/23/24 06:11:43.661
  I0523 06:11:43.661358 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename events @ 05/23/24 06:11:43.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:11:43.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:11:43.668
  STEP: Create set of events @ 05/23/24 06:11:43.669
  I0523 06:11:43.671921 22 core_events.go:198] created test-event-1
  I0523 06:11:43.673526 22 core_events.go:198] created test-event-2
  I0523 06:11:43.675046 22 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 05/23/24 06:11:43.675
  STEP: delete collection of events @ 05/23/24 06:11:43.676
  I0523 06:11:43.676075 22 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/23/24 06:11:43.681
  I0523 06:11:43.681350 22 core_events.go:230] requesting list of events to confirm quantity
  I0523 06:11:43.684050 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1932" for this suite. @ 05/23/24 06:11:43.685
• [0.027 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 05/23/24 06:11:43.688
  I0523 06:11:43.688467 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/23/24 06:11:43.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:11:43.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:11:43.698
  STEP: creating a target pod @ 05/23/24 06:11:43.699
  E0523 06:11:43.997015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:44.997942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 05/23/24 06:11:45.706
  E0523 06:11:45.998712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:46.998813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 05/23/24 06:11:47.713
  I0523 06:11:47.713399 22 exec_util.go:55] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2165 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 06:11:47.713412 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 06:11:47.713774 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 06:11:47.713811 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/ephemeral-containers-test-2165/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0523 06:11:47.737098 22 exec_util.go:106] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 05/23/24 06:11:47.747
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 05/23/24 06:11:47.749
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 05/23/24 06:11:47.754
  I0523 06:11:47.756825 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2165" for this suite. @ 05/23/24 06:11:47.758
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 05/23/24 06:11:47.762
  I0523 06:11:47.762249 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename configmap @ 05/23/24 06:11:47.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:11:47.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:11:47.771
  STEP: Creating configMap with name configmap-test-volume-map-5113eb94-c5db-489e-b0ed-611532564671 @ 05/23/24 06:11:47.772
  STEP: Creating a pod to test consume configMaps @ 05/23/24 06:11:47.774
  E0523 06:11:47.999586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:49.000519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:11:49.781
  I0523 06:11:49.782445 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-configmaps-dfef2e06-14b9-4c3a-ab65-9abfd23fa536 container agnhost-container: <nil>
  STEP: delete the pod @ 05/23/24 06:11:49.784
  I0523 06:11:49.790023 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5665" for this suite. @ 05/23/24 06:11:49.791
• [2.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 05/23/24 06:11:49.794
  I0523 06:11:49.794989 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename cronjob @ 05/23/24 06:11:49.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:11:49.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:11:49.803
  STEP: Creating a ReplaceConcurrent cronjob @ 05/23/24 06:11:49.804
  STEP: Ensuring a job is scheduled @ 05/23/24 06:11:49.807
  E0523 06:11:50.000606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:51.000703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:52.001253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:53.001377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:54.001991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:55.002111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:56.002874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:57.003813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:58.004818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:11:59.004958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:00.005961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:01.006111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 05/23/24 06:12:01.809
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/23/24 06:12:01.81
  STEP: Ensuring the job is replaced with a new one @ 05/23/24 06:12:01.811
  E0523 06:12:02.006965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:03.007042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:04.008025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:05.009210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:06.009800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:07.009942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:08.010948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:09.011084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:10.011737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:11.011759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:12.012814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:13.012967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:14.013988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:15.014192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:16.015022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:17.015594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:18.015632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:19.015753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:20.016767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:21.017576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:22.017901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:23.018756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:24.019787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:25.020825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:26.021716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:27.021795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:28.022764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:29.022900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:30.023550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:31.023835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:32.024827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:33.024909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:34.025740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:35.025932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:36.026804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:37.027622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:38.027766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:39.028823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:40.029691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:41.029830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:42.030031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:43.030731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:44.031214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:45.031510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:46.032403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:47.032854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:48.033914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:49.034124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:50.034770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:51.035423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:52.035742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:53.035761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:54.036446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:55.036678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:56.037483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:57.038496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:58.038582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:12:59.038730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:00.038769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:01.039005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 05/23/24 06:13:01.814
  I0523 06:13:01.817202 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6697" for this suite. @ 05/23/24 06:13:01.818
• [72.026 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 05/23/24 06:13:01.821
  I0523 06:13:01.821372 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename daemonsets @ 05/23/24 06:13:01.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:13:01.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:13:01.83
  STEP: Creating simple DaemonSet "daemon-set" @ 05/23/24 06:13:01.839
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/23/24 06:13:01.841
  I0523 06:13:01.847124 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0523 06:13:01.847140 22 fixtures.go:130] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  E0523 06:13:02.039369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:13:02.846157 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0523 06:13:02.846182 22 fixtures.go:130] Node k8s-10-255-0-209 is running 0 daemon pod, expected 1
  E0523 06:13:03.039511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:13:03.845505 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0523 06:13:03.845532 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 05/23/24 06:13:03.846
  I0523 06:13:03.854872 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0523 06:13:03.854889 22 fixtures.go:130] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  E0523 06:13:04.040252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:13:04.855092 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0523 06:13:04.855120 22 fixtures.go:130] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  E0523 06:13:05.040300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:13:05.854630 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0523 06:13:05.854661 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/23/24 06:13:05.855
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7261, will wait for the garbage collector to delete the pods @ 05/23/24 06:13:05.855
  I0523 06:13:05.909975 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 2.649135ms
  I0523 06:13:06.010776 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.797566ms
  E0523 06:13:06.040952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:07.041853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:13:07.612514 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0523 06:13:07.612542 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0523 06:13:07.613594 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"60448"},"items":null}

  I0523 06:13:07.614492 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"60448"},"items":null}

  I0523 06:13:07.619010 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7261" for this suite. @ 05/23/24 06:13:07.62
• [5.802 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 05/23/24 06:13:07.623
  I0523 06:13:07.623390 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/23/24 06:13:07.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:13:07.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:13:07.632
  STEP: creating @ 05/23/24 06:13:07.634
  STEP: getting @ 05/23/24 06:13:07.64
  STEP: listing in namespace @ 05/23/24 06:13:07.641
  STEP: patching @ 05/23/24 06:13:07.643
  STEP: deleting @ 05/23/24 06:13:07.65
  I0523 06:13:07.654535 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3724" for this suite. @ 05/23/24 06:13:07.655
• [0.034 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 05/23/24 06:13:07.657
  I0523 06:13:07.657942 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename kubelet-test @ 05/23/24 06:13:07.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:13:07.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:13:07.665
  E0523 06:13:08.041886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:09.042421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:13:09.682887 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4777" for this suite. @ 05/23/24 06:13:09.684
• [2.028 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 05/23/24 06:13:09.686
  I0523 06:13:09.686638 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 06:13:09.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:13:09.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:13:09.695
  STEP: Creating a pod to test downward API volume plugin @ 05/23/24 06:13:09.696
  E0523 06:13:10.042877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:11.043023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:12.044051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:13.044122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:13:13.705
  I0523 06:13:13.706630 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-9bd811b9-5171-49ab-846a-392ae89e513a container client-container: <nil>
  STEP: delete the pod @ 05/23/24 06:13:13.708
  I0523 06:13:13.714863 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2057" for this suite. @ 05/23/24 06:13:13.716
• [4.033 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 05/23/24 06:13:13.719
  I0523 06:13:13.719279 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/23/24 06:13:13.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:13:13.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:13:13.727
  STEP: creating the policy @ 05/23/24 06:13:13.73
  STEP: waiting until the marker is denied @ 05/23/24 06:13:13.737
  STEP: testing a replicated Deployment to be allowed @ 05/23/24 06:13:13.843
  STEP: testing a non-replicated ReplicaSet not to be denied @ 05/23/24 06:13:13.848
  I0523 06:13:13.870647 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7327" for this suite. @ 05/23/24 06:13:13.875
• [0.160 seconds]
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 05/23/24 06:13:13.879
  I0523 06:13:13.879683 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename disruption @ 05/23/24 06:13:13.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:13:13.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:13:13.887
  STEP: Waiting for the pdb to be processed @ 05/23/24 06:13:13.892
  E0523 06:13:14.044421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:15.045411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 05/23/24 06:13:15.905
  I0523 06:13:15.907269 22 disruption.go:578] running pods: 0 < 3
  E0523 06:13:16.045425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:17.045566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:13:17.909296 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7980" for this suite. @ 05/23/24 06:13:17.91
• [4.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 05/23/24 06:13:17.913
  I0523 06:13:17.913182 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename container-probe @ 05/23/24 06:13:17.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:13:17.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:13:17.922
  STEP: Creating pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537 @ 05/23/24 06:13:17.923
  E0523 06:13:18.046059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:19.046298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/23/24 06:13:19.931
  I0523 06:13:19.932498 22 container_probe.go:1749] Initial restart count of pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 is 0
  I0523 06:13:19.933508 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:13:20.046670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:21.046758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:13:21.936027 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:13:22.047207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:23.047977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:13:23.938346 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:13:24.048589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:25.048892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:13:25.940745 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:13:26.049945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:27.050030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:13:27.942751 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:13:28.050927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:29.051063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:13:29.944952 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:13:30.051096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:31.051243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:13:31.947010 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:13:32.052178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:33.053011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:13:33.949630 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:13:34.053851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:35.054074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:13:35.951585 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:13:36.054812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:37.054959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:13:37.953541 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:13:38.055740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:39.056822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:13:39.955840 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:13:40.056968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:41.057337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:13:41.958587 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:13:42.057712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:43.057856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:13:43.961204 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:13:44.058402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:45.058508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:13:45.963106 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:13:46.059275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:47.059419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:13:47.965432 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:13:48.059677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:49.059765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:13:49.967833 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:13:50.060026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:51.060807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:13:51.969993 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:13:52.061129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:53.061252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:13:53.972583 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:13:54.061742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:55.062384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:13:55.975124 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:13:56.063306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:57.063358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:13:57.976994 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:13:58.064142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:13:59.064806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:13:59.979617 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:00.065794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:01.065888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:01.981584 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:02.066771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:03.067730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:03.983814 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:04.067977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:05.068814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:05.986471 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:06.069660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:07.070557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:07.989072 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:08.071261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:09.071999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:09.991793 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:10.072930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:11.073888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:11.994334 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:12.074533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:13.074983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:13.996246 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:14.075370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:15.076041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:15.998822 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:16.077006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:17.077084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:18.000813 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:18.078007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:19.078491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:20.003438 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:20.078529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:21.079592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:22.005240 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:22.080379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:23.080807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:24.007457 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:24.081648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:25.081718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:26.009383 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:26.082519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:27.082642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:28.011268 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:28.083442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:29.083574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:30.013314 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:30.084494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:31.085023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:32.015227 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:32.085356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:33.085918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:34.017274 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:34.086400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:35.086592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:36.019779 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:36.086928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:37.087742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:38.022522 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:38.088664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:39.088893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:40.024718 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:40.089852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:41.089938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:42.026594 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:42.090744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:43.090834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:44.029329 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:44.091540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:45.091741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:46.031485 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:46.092614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:47.093224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:48.033334 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:48.093503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:49.093616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:50.035618 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:50.093774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:51.093862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:52.037087 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:52.094209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:53.095144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:54.038900 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:54.096030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:55.096086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:56.040805 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:56.096879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:57.097380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:14:58.043131 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:14:58.098246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:14:59.098484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:00.045038 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:00.099205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:01.099709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:02.047213 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:02.100366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:03.100477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:04.049602 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:04.100717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:05.100941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:06.051474 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:06.101592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:07.101711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:08.053481 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:08.102636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:09.102766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:10.055519 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:10.103584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:11.103730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:12.057131 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:12.104266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:13.104352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:14.059764 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:14.104883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:15.105109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:16.062592 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:16.105707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:17.106373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:18.065086 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:18.107248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:19.107809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:20.067817 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:20.107818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:21.108803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:22.069784 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:22.108871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:23.108964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:24.071696 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:24.109783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:25.109994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:26.073569 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:26.110660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:27.110796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:28.076279 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:28.111408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:29.111499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:30.078390 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:30.112555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:31.112643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:32.080240 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:32.113379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:33.113502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:34.082305 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:34.114429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:35.114644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:36.084314 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:36.115441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:37.115711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:38.086500 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:38.116603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:39.117236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:40.089324 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:40.117454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:41.118337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:42.091891 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:42.119060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:43.119196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:44.094025 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:44.120165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:45.120804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:46.096639 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:46.121732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:47.122539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:48.098831 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:48.122942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:49.123057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:50.101363 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:50.123482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:51.123949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:52.103432 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:52.124558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:53.124806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:54.106086 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:54.125203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:55.125399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:56.108218 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:56.126270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:57.127335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:15:58.110400 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:15:58.127488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:15:59.128229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:00.112831 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:00.128965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:01.129086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:02.114765 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:02.129893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:03.130018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:04.116782 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:04.130880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:05.130970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:06.119319 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:06.131471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:07.131600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:08.121423 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:08.132555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:09.132811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:10.123625 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:10.133705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:11.133835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:12.126205 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:12.134359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:13.134508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:14.127912 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:14.134990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:15.135224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:16.130431 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:16.135524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:17.135641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:18.132327 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:18.136486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:19.136804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:20.134539 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:20.137675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:21.137795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:22.136578 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:22.138685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:23.138810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:24.138244 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:24.139281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:25.140030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:26.140203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:26.140800 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:27.140750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:28.140872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:28.142514 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:29.141455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:30.141673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:30.144447 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:31.142463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:32.142587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:32.146817 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:33.142863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:34.143036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:34.148843 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:35.144014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:36.144817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:36.150525 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:37.145268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:38.145390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:38.153183 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:39.146211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:40.146370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:40.155175 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:41.146444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:42.146587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:42.157255 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:43.146689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:44.147037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:44.160097 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:45.147094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:46.147186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:46.161875 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:47.147761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:48.148828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:48.163394 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:49.149689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:50.149925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:50.165759 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:51.150863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:52.150993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:52.167755 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:53.151078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:54.152136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:54.170215 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:55.152827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:56.153277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:56.172010 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:57.154101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:16:58.154156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:16:58.173861 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:16:59.154551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:00.154766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:17:00.176833 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:17:01.154843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:02.155373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:17:02.179060 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:17:03.155758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:04.155857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:17:04.181634 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:17:05.156212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:06.156828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:17:06.183491 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:17:07.157802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:08.158518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:17:08.185249 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:17:09.158585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:10.159113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:17:10.188060 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:17:11.159765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:12.160821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:17:12.190462 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:17:13.160910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:14.161079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:17:14.192809 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:17:15.161928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:16.162053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:17:16.194666 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:17:17.162942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:18.163026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:17:18.196695 22 container_probe.go:1759] Get pod busybox-f204b757-686b-41ab-a133-2b066dd3e1e3 in namespace container-probe-1537
  E0523 06:17:19.164091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:20.164807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/23/24 06:17:20.197
  I0523 06:17:20.203267 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1537" for this suite. @ 05/23/24 06:17:20.205
• [242.294 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 05/23/24 06:17:20.207
  I0523 06:17:20.207483 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename disruption @ 05/23/24 06:17:20.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:17:20.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:17:20.215
  STEP: Creating a kubernetes client @ 05/23/24 06:17:20.217
  I0523 06:17:20.217059 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename disruption-2 @ 05/23/24 06:17:20.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:17:20.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:17:20.225
  STEP: Waiting for the pdb to be processed @ 05/23/24 06:17:20.228
  E0523 06:17:21.165089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:22.165300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 05/23/24 06:17:22.232
  E0523 06:17:23.166367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:24.167196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 05/23/24 06:17:24.235
  E0523 06:17:25.167855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:26.167963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 05/23/24 06:17:26.237
  STEP: listing a collection of PDBs in namespace disruption-3880 @ 05/23/24 06:17:26.239
  STEP: deleting a collection of PDBs @ 05/23/24 06:17:26.24
  STEP: Waiting for the PDB collection to be deleted @ 05/23/24 06:17:26.243
  I0523 06:17:26.244891 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-4456" for this suite. @ 05/23/24 06:17:26.246
  I0523 06:17:26.248263 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3880" for this suite. @ 05/23/24 06:17:26.249
• [6.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 05/23/24 06:17:26.252
  I0523 06:17:26.252648 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename subjectreview @ 05/23/24 06:17:26.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:17:26.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:17:26.259
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-9031" @ 05/23/24 06:17:26.261
  I0523 06:17:26.262701 22 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-9031:e2e"
  I0523 06:17:26.262714 22 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-9031"}
  I0523 06:17:26.262723 22 subjectreviews.go:71] saUID: "306a18e5-c729-4184-9d44-11dedf62a922"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-9031:e2e" @ 05/23/24 06:17:26.262
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-9031:e2e" @ 05/23/24 06:17:26.262
  I0523 06:17:26.263704 22 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-9031:e2e" api 'list' configmaps in "subjectreview-9031" namespace @ 05/23/24 06:17:26.263
  I0523 06:17:26.264465 22 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-9031:e2e" @ 05/23/24 06:17:26.264
  I0523 06:17:26.265250 22 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0523 06:17:26.265262 22 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0523 06:17:26.265321 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-9031" for this suite. @ 05/23/24 06:17:26.266
• [0.016 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 05/23/24 06:17:26.268
  I0523 06:17:26.268789 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename pods @ 05/23/24 06:17:26.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:17:26.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:17:26.276
  STEP: creating the pod @ 05/23/24 06:17:26.277
  STEP: submitting the pod to kubernetes @ 05/23/24 06:17:26.277
  W0523 06:17:26.282564      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0523 06:17:27.168059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:28.168816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 05/23/24 06:17:28.288
  STEP: updating the pod @ 05/23/24 06:17:28.289
  I0523 06:17:28.795296 22 pod_client.go:141] Successfully updated pod "pod-update-activedeadlineseconds-f23c1bf2-f51a-4966-b568-d5b7376d9b6b"
  E0523 06:17:29.168894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:30.169118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:31.170014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:32.170091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:17:32.800529 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1428" for this suite. @ 05/23/24 06:17:32.802
• [6.536 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 05/23/24 06:17:32.804
  I0523 06:17:32.804564 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 06:17:32.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:17:32.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:17:32.813
  STEP: Creating configMap with name projected-configmap-test-volume-map-5afbef7f-d5ea-43a6-b2c9-7322d5a2870a @ 05/23/24 06:17:32.814
  STEP: Creating a pod to test consume configMaps @ 05/23/24 06:17:32.816
  E0523 06:17:33.170172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:34.170424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:35.171455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:36.171587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:17:36.825
  I0523 06:17:36.826318 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-configmaps-9b51e2e5-6ac1-4b09-a12a-e1426918fb7f container agnhost-container: <nil>
  STEP: delete the pod @ 05/23/24 06:17:36.833
  I0523 06:17:36.839459 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3331" for this suite. @ 05/23/24 06:17:36.84
• [4.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 05/23/24 06:17:36.843
  I0523 06:17:36.843099 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename security-context @ 05/23/24 06:17:36.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:17:36.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:17:36.852
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/23/24 06:17:36.853
  E0523 06:17:37.172558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:38.172625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:39.173542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:40.173704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:17:40.862
  I0523 06:17:40.863618 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod security-context-9213b15b-aa49-48ee-99a6-2e31144c3ac1 container test-container: <nil>
  STEP: delete the pod @ 05/23/24 06:17:40.87
  I0523 06:17:40.876793 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-9683" for this suite. @ 05/23/24 06:17:40.878
• [4.037 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:715
  STEP: Creating a kubernetes client @ 05/23/24 06:17:40.88
  I0523 06:17:40.880265 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename webhook @ 05/23/24 06:17:40.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:17:40.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:17:40.889
  STEP: Setting up server cert @ 05/23/24 06:17:40.9
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/23/24 06:17:41.146
  STEP: Deploying the webhook pod @ 05/23/24 06:17:41.15
  STEP: Wait for the deployment to be ready @ 05/23/24 06:17:41.155
  I0523 06:17:41.159447 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0523 06:17:41.174549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:42.175167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/23/24 06:17:43.164
  STEP: Verifying the service has paired with the endpoint @ 05/23/24 06:17:43.169
  E0523 06:17:43.175322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:17:44.170123 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 05/23/24 06:17:44.173
  E0523 06:17:44.176219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the validating webhook match conditions @ 05/23/24 06:17:44.176
  STEP: updating the validating webhook match conditions @ 05/23/24 06:17:44.178
  STEP: verifying the validating webhook match conditions @ 05/23/24 06:17:44.181
  I0523 06:17:44.200792 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8518" for this suite. @ 05/23/24 06:17:44.202
  STEP: Destroying namespace "webhook-markers-8203" for this suite. @ 05/23/24 06:17:44.208
• [3.330 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 05/23/24 06:17:44.21
  I0523 06:17:44.210982 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename pods @ 05/23/24 06:17:44.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:17:44.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:17:44.22
  STEP: Create set of pods @ 05/23/24 06:17:44.222
  I0523 06:17:44.226515 22 pods.go:871] created test-pod-1
  I0523 06:17:44.229309 22 pods.go:871] created test-pod-2
  I0523 06:17:44.234839 22 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 05/23/24 06:17:44.234
  E0523 06:17:45.176686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:46.176818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 05/23/24 06:17:46.263
  I0523 06:17:46.265110 22 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E0523 06:17:47.176908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:17:47.266041 22 pods.go:1140] Pod quantity 1 is different from expected quantity 0
  E0523 06:17:48.177188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:17:48.265484 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4438" for this suite. @ 05/23/24 06:17:48.267
• [4.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 05/23/24 06:17:48.27
  I0523 06:17:48.270455 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename container-probe @ 05/23/24 06:17:48.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:17:48.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:17:48.28
  STEP: Creating pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022 @ 05/23/24 06:17:48.282
  E0523 06:17:49.177881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:50.178082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/23/24 06:17:50.289
  I0523 06:17:50.290311 22 container_probe.go:1749] Initial restart count of pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 is 0
  I0523 06:17:50.291325 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:17:51.178250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:52.178387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:17:52.293516 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:17:53.179424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:54.180181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:17:54.296206 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:17:55.181098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:56.181231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:17:56.298192 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:17:57.181577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:17:58.181663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:17:58.300407 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:17:59.181730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:00.181950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:00.302886 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:01.182769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:02.182918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:02.305088 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:03.183864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:04.184823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:04.307863 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:05.185583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:06.185670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:06.310328 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:07.186217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:08.186352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:08.312322 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:09.186538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:10.186822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:10.314760 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:11.187612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:12.188569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:12.318468 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:13.189312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:14.190224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:14.321372 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:15.190295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:16.190935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:16.324003 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:17.191911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:18.192813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:18.326833 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:19.193701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:20.193877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:20.328751 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:21.194674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:22.195060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:22.330985 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:23.195767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:24.195927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:24.332793 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:25.196669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:26.196799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:26.334598 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:27.197511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:28.198221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:28.337163 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:29.198322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:30.198521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:30.339423 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:31.198968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:32.199067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:32.342115 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:33.199294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:34.200233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:34.344080 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:35.200341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:36.200951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:36.345778 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:37.201647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:38.201788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:38.347659 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:39.202548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:40.202733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:40.349422 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:41.203250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:42.203458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:42.351586 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:43.203813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:44.204819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:44.353704 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:45.205532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:46.205688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:46.355703 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:47.206505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:48.206585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:48.358351 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:49.206680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:50.207688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:50.360614 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:51.208146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:52.208273      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:52.363213 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:53.208401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:54.209203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:54.365058 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:55.209345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:56.209443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:56.367427 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:57.210361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:18:58.210467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:18:58.369377 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:18:59.210548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:00.210928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:00.371781 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:01.211176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:02.211847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:02.373780 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:03.212679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:04.212740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:04.375621 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:05.213458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:06.213590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:06.377109 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:07.213953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:08.214032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:08.378878 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:09.215001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:10.215096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:10.380872 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:11.215602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:12.215752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:12.382583 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:13.216360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:14.216625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:14.384625 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:15.216813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:16.217626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:16.386940 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:17.218081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:18.218219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:18.389260 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:19.218536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:20.218753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:20.391809 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:21.219742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:22.219830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:22.394240 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:23.219984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:24.220251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:24.396442 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:25.221283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:26.221365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:26.398397 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:27.222313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:28.222461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:28.400590 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:29.223474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:30.223724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:30.402876 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:31.224770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:32.224856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:32.405040 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:33.224933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:34.225718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:34.407965 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:35.226527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:36.226610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:36.410542 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:37.226985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:38.227126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:38.413210 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:39.227754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:40.228805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:40.415687 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:41.228900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:42.229037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:42.418078 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:43.229930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:44.230096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:44.420332 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:45.230779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:46.231156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:46.422191 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:47.231759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:48.232023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:48.424192 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:49.232822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:50.233055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:50.426090 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:51.233467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:52.233860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:52.428043 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:53.234886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:54.235730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:54.430861 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:55.236698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:56.236819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:56.432782 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:57.237540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:19:58.237625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:19:58.434627 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:19:59.237710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:00.237931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:00.436944 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:01.238882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:02.238966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:02.439321 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:03.239166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:04.239705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:04.441880 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:05.240726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:06.240821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:06.443901 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:07.241755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:08.242581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:08.446315 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:09.243159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:10.243373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:10.448550 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:11.244354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:12.244446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:12.450655 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:13.244805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:14.244965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:14.453233 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:15.245867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:16.246903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:16.455907 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:17.246990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:18.247062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:18.458247 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:19.248085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:20.248811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:20.460896 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:21.249714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:22.249832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:22.463087 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:23.250313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:24.251030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:24.464949 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:25.251741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:26.251834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:26.467011 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:27.252801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:28.252932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:28.469088 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:29.253911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:30.254137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:30.471274 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:31.255087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:32.255168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:32.472966 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:33.255744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:34.256813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:34.475045 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:35.257852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:36.257975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:36.477017 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:37.258937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:38.259062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:38.479207 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:39.260077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:40.260803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:40.481870 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:41.261701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:42.261790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:42.483600 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:43.262367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:44.262929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:44.486206 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:45.263440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:46.263498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:46.488708 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:47.264509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:48.264805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:48.490974 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:49.265801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:50.266038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:50.493169 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:51.266957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:52.267041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:52.495121 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:53.267587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:54.268297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:54.497504 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:55.268943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:56.269068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:56.500074 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:57.269954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:20:58.270081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:20:58.502299 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:20:59.271104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:00.271236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:21:00.504257 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:21:01.271743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:02.272805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:21:02.506899 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:21:03.273768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:04.273834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:21:04.509098 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:21:05.274896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:06.275023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:21:06.511049 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:21:07.275748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:08.276808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:21:08.512973 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:21:09.277557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:10.278092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:21:10.515266 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:21:11.278745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:12.278871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:21:12.518082 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:21:13.278913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:14.279735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:21:14.519954 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:21:15.280741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:16.280828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:21:16.521807 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:21:17.280909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:18.280992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:21:18.524128 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:21:19.281911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:20.282176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:21:20.525934 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:21:21.282255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:22.282388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:21:22.528617 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:21:23.283412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:24.284309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:21:24.530476 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:21:25.284819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:26.284940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:21:26.533103 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:21:27.285686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:28.285814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:21:28.536059 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:21:29.286839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:30.287097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:21:30.537630 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:21:31.287189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:32.287316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:21:32.540577 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:21:33.288088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:34.288267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:21:34.543308 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:21:35.288357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:36.288809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:21:36.545952 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:21:37.289753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:38.289845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:21:38.547921 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:21:39.290764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:40.290898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:21:40.549872 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:21:41.291580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:42.291715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:21:42.551946 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:21:43.292728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:44.293058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:21:44.554267 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:21:45.294092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:46.294178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:21:46.556367 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:21:47.295141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:48.295527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:21:48.558433 22 container_probe.go:1759] Get pod test-webserver-05a6468f-2bb7-4a85-bf9e-30f91b11c146 in namespace container-probe-6022
  E0523 06:21:49.296189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:50.296802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/23/24 06:21:50.559
  I0523 06:21:50.565653 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6022" for this suite. @ 05/23/24 06:21:50.567
• [242.299 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:707
  STEP: Creating a kubernetes client @ 05/23/24 06:21:50.569
  I0523 06:21:50.569660 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename sched-pred @ 05/23/24 06:21:50.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:21:50.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:21:50.578
  I0523 06:21:50.579600 22 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0523 06:21:50.582105 22 util.go:400] Waiting for terminating namespaces to be deleted...
  I0523 06:21:50.583085 22 predicates.go:121] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-207 before test
  I0523 06:21:50.585411 22 predicates.go:887] calico-kube-controllers-6946cb87d6-xqpj5 from kube-system started at 2024-05-23 03:37:57 +0000 UTC (1 container statuses recorded)
  I0523 06:21:50.585423 22 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I0523 06:21:50.585429 22 predicates.go:887] calico-node-pgzv7 from kube-system started at 2024-05-23 03:37:57 +0000 UTC (1 container statuses recorded)
  I0523 06:21:50.585435 22 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0523 06:21:50.585443 22 predicates.go:887] coredns-c5768dcc7-tqffs from kube-system started at 2024-05-23 03:38:19 +0000 UTC (1 container statuses recorded)
  I0523 06:21:50.585449 22 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0523 06:21:50.585457 22 predicates.go:887] dashboard-metrics-scraper-69b9b44766-zbgkq from kube-system started at 2024-05-23 03:38:23 +0000 UTC (1 container statuses recorded)
  I0523 06:21:50.585470 22 predicates.go:889] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0523 06:21:50.585477 22 predicates.go:887] kubernetes-dashboard-7df74bff86-69bf5 from kube-system started at 2024-05-23 03:38:23 +0000 UTC (1 container statuses recorded)
  I0523 06:21:50.585485 22 predicates.go:889] 	Container kubernetes-dashboard ready: true, restart count 0
  I0523 06:21:50.585493 22 predicates.go:887] metrics-server-65b5b555f5-xppsl from kube-system started at 2024-05-23 03:38:21 +0000 UTC (1 container statuses recorded)
  I0523 06:21:50.585501 22 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I0523 06:21:50.585508 22 predicates.go:887] node-local-dns-w98ss from kube-system started at 2024-05-23 03:38:20 +0000 UTC (1 container statuses recorded)
  I0523 06:21:50.585514 22 predicates.go:889] 	Container node-cache ready: true, restart count 0
  I0523 06:21:50.585523 22 predicates.go:887] sonobuoy-systemd-logs-daemon-set-d34ec90e00584ff3-2lk5f from sonobuoy started at 2024-05-23 05:58:21 +0000 UTC (2 container statuses recorded)
  I0523 06:21:50.585529 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0523 06:21:50.585534 22 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0523 06:21:50.585543 22 predicates.go:121] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-208 before test
  I0523 06:21:50.587717 22 predicates.go:887] calico-node-bm447 from kube-system started at 2024-05-23 03:46:33 +0000 UTC (1 container statuses recorded)
  I0523 06:21:50.587729 22 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0523 06:21:50.587735 22 predicates.go:887] node-local-dns-w8dtr from kube-system started at 2024-05-23 03:46:33 +0000 UTC (1 container statuses recorded)
  I0523 06:21:50.587741 22 predicates.go:889] 	Container node-cache ready: true, restart count 0
  I0523 06:21:50.587748 22 predicates.go:887] sonobuoy from sonobuoy started at 2024-05-23 05:58:21 +0000 UTC (1 container statuses recorded)
  I0523 06:21:50.587757 22 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0523 06:21:50.587766 22 predicates.go:887] sonobuoy-systemd-logs-daemon-set-d34ec90e00584ff3-bgdnv from sonobuoy started at 2024-05-23 05:58:21 +0000 UTC (2 container statuses recorded)
  I0523 06:21:50.587774 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0523 06:21:50.587780 22 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0523 06:21:50.587787 22 predicates.go:121] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-209 before test
  I0523 06:21:50.589988 22 predicates.go:887] calico-node-cns77 from kube-system started at 2024-05-23 03:48:56 +0000 UTC (1 container statuses recorded)
  I0523 06:21:50.590004 22 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0523 06:21:50.590019 22 predicates.go:887] node-local-dns-n86hx from kube-system started at 2024-05-23 03:48:56 +0000 UTC (1 container statuses recorded)
  I0523 06:21:50.590028 22 predicates.go:889] 	Container node-cache ready: true, restart count 0
  I0523 06:21:50.590035 22 predicates.go:887] sonobuoy-e2e-job-bfc6bc36c48647e3 from sonobuoy started at 2024-05-23 05:58:21 +0000 UTC (2 container statuses recorded)
  I0523 06:21:50.590041 22 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0523 06:21:50.590047 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0523 06:21:50.590056 22 predicates.go:887] sonobuoy-systemd-logs-daemon-set-d34ec90e00584ff3-9qrcn from sonobuoy started at 2024-05-23 05:58:21 +0000 UTC (2 container statuses recorded)
  I0523 06:21:50.590062 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0523 06:21:50.590068 22 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/23/24 06:21:50.59
  E0523 06:21:51.297543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:52.298518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/23/24 06:21:52.598
  STEP: Trying to apply a random label on the found node. @ 05/23/24 06:21:52.605
  STEP: verifying the node has the label kubernetes.io/e2e-f08a7da0-8425-4892-bf55-4501cd2fa27a 95 @ 05/23/24 06:21:52.609
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 05/23/24 06:21:52.61
  E0523 06:21:53.299083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:54.299416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.255.0.208 on the node which pod4 resides and expect not scheduled @ 05/23/24 06:21:54.616
  E0523 06:21:55.300260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:56.300803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:57.300827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:58.301053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:21:59.301822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:00.301902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:01.302536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:02.302714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:03.303736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:04.304021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:05.304782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:06.304995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:07.306065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:08.306217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:09.307241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:10.307592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:11.307765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:12.308820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:13.309669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:14.310037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:15.311099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:16.311754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:17.312822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:18.313879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:19.314039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:20.315043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:21.315947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:22.316823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:23.316901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:24.317247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:25.318079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:26.318322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:27.318417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:28.318552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:29.319451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:30.319591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:31.319839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:32.320828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:33.321640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:34.321923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:35.322547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:36.322691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:37.322741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:38.323326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:39.324314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:40.324380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:41.324828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:42.325875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:43.326920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:44.327260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:45.327597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:46.327692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:47.328331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:48.328409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:49.329377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:50.329455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:51.329847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:52.329981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:53.330872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:54.331193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:55.331220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:56.331359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:57.331414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:58.331497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:22:59.331540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:00.331701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:01.332659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:02.332746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:03.332793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:04.333131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:05.334107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:06.334555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:07.334601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:08.334734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:09.335229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:10.336206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:11.336822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:12.336906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:13.336988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:14.337962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:15.338875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:16.339012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:17.339088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:18.339225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:19.339262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:20.339398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:21.340358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:22.340443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:23.340484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:24.341213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:25.342266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:26.342340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:27.343247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:28.343569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:29.344494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:30.344578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:31.345602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:32.346022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:33.347046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:34.348092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:35.348821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:36.348919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:37.349930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:38.350014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:39.350799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:40.350943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:41.351757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:42.352832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:43.352963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:44.352996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:45.353819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:46.353888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:47.354915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:48.355228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:49.355811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:50.355874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:51.356808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:52.356898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:53.357727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:54.358033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:55.359031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:56.359117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:57.360029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:58.360821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:23:59.361180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:00.361264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:01.361345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:02.361464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:03.362383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:04.362416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:05.363412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:06.363534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:07.364124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:08.364805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:09.365820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:10.365939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:11.366547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:12.367318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:13.367874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:14.368193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:15.368810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:16.368930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:17.369735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:18.369849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:19.370918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:20.371003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:21.371733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:22.371823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:23.372807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:24.373135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:25.373737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:26.374475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:27.375526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:28.375665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:29.376249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:30.376328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:31.376810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:32.376933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:33.377989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:34.378298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:35.379306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:36.379438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:37.380221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:38.380799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:39.380831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:40.380954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:41.381702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:42.381793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:43.382821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:44.383129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:45.383668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:46.383756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:47.384644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:48.384778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:49.385768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:50.385846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:51.386789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:52.386873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:53.387498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:54.388339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:55.388815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:56.388932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:57.389941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:58.390074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:24:59.390087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:00.390179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:01.390872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:02.391537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:03.391743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:04.392074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:05.392804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:06.392929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:07.393968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:08.394052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:09.394623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:10.395630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:11.396708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:12.397478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:13.398454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:14.399506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:15.400164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:16.400809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:17.401591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:18.401722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:19.401740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:20.401861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:21.402837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:22.402966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:23.403902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:24.404158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:25.404817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:26.404940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:27.405878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:28.405930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:29.406810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:30.406931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:31.407901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:32.408806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:33.409613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:34.410516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:35.411325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:36.412260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:37.413198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:38.413321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:39.414382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:40.415062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:41.416041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:42.416809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:43.416892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:44.417209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:45.417960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:46.418080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:47.418310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:48.418405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:49.418684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:50.419184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:51.420039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:52.420809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:53.420893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:54.421769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:55.421811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:56.422119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:57.423079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:58.424080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:25:59.424951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:00.425077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:01.425867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:02.425997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:03.426067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:04.427120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:05.427644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:06.427765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:07.428625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:08.428752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:09.429734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:10.429820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:11.430768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:12.430854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:13.431539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:14.432566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:15.433574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:16.433700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:17.434721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:18.434813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:19.435128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:20.435251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:21.436194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:22.436802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:23.437770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:24.437856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:25.438619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:26.438747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:27.439682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:28.439750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:29.440518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:30.440812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:31.441713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:32.441845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:33.442784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:34.443819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:35.444808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:36.445614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:37.446661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:38.447642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:39.448314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:40.448805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:41.449845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:42.449974      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:43.450915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:44.451072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:45.452004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:46.452818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:47.452871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:48.453866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:49.454612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:50.455421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:51.456447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:52.456815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:53.457318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:54.457480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-f08a7da0-8425-4892-bf55-4501cd2fa27a off the node k8s-10-255-0-208 @ 05/23/24 06:26:54.621
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-f08a7da0-8425-4892-bf55-4501cd2fa27a @ 05/23/24 06:26:54.627
  I0523 06:26:54.629079 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5054" for this suite. @ 05/23/24 06:26:54.63
• [304.064 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3136
  STEP: Creating a kubernetes client @ 05/23/24 06:26:54.633
  I0523 06:26:54.633399 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename services @ 05/23/24 06:26:54.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:26:54.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:26:54.643
  STEP: fetching services @ 05/23/24 06:26:54.644
  I0523 06:26:54.645529 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3851" for this suite. @ 05/23/24 06:26:54.646
• [0.016 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 05/23/24 06:26:54.649
  I0523 06:26:54.649023 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/23/24 06:26:54.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:26:54.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:26:54.66
  STEP: create the container to handle the HTTPGet hook request. @ 05/23/24 06:26:54.663
  E0523 06:26:55.458194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:56.458262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/23/24 06:26:56.67
  E0523 06:26:57.458979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:26:58.459559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 05/23/24 06:26:58.678
  E0523 06:26:59.460016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:00.460107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 05/23/24 06:27:00.686
  I0523 06:27:00.693405 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6063" for this suite. @ 05/23/24 06:27:00.694
• [6.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 05/23/24 06:27:00.698
  I0523 06:27:00.698621 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename emptydir @ 05/23/24 06:27:00.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:27:00.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:27:00.706
  STEP: Creating a pod to test emptydir volume type on node default medium @ 05/23/24 06:27:00.708
  E0523 06:27:01.460823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:02.460911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:03.461294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:04.461599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:27:04.717
  I0523 06:27:04.718971 22 output.go:196] Trying to get logs from node k8s-10-255-0-209 pod pod-e7fc9c17-6a73-4221-bc65-c124af5c9a4c container test-container: <nil>
  STEP: delete the pod @ 05/23/24 06:27:04.726
  I0523 06:27:04.731040 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7747" for this suite. @ 05/23/24 06:27:04.732
• [4.037 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 05/23/24 06:27:04.735
  I0523 06:27:04.735528 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/23/24 06:27:04.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:27:04.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:27:04.744
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 05/23/24 06:27:04.747
  I0523 06:27:04.747635 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  E0523 06:27:05.461986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:06.462937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:07.463993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:08.464097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:09.464119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 05/23/24 06:27:09.499
  I0523 06:27:09.499742 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  E0523 06:27:10.464828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:27:10.666049 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  E0523 06:27:11.465273      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:12.466296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:13.467315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:14.468232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:27:15.354887 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1348" for this suite. @ 05/23/24 06:27:15.359
• [10.626 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 05/23/24 06:27:15.361
  I0523 06:27:15.361775 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename configmap @ 05/23/24 06:27:15.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:27:15.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:27:15.369
  STEP: Creating configMap with name configmap-test-volume-map-910a080c-a1b6-422c-bce2-993e17af08fa @ 05/23/24 06:27:15.371
  STEP: Creating a pod to test consume configMaps @ 05/23/24 06:27:15.373
  E0523 06:27:15.468612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:16.468687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:17.469272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:18.470107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:27:19.382
  I0523 06:27:19.383837 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-configmaps-f09260cf-c313-4642-b520-16027f4eef21 container agnhost-container: <nil>
  STEP: delete the pod @ 05/23/24 06:27:19.386
  I0523 06:27:19.392528 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-179" for this suite. @ 05/23/24 06:27:19.393
• [4.034 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 05/23/24 06:27:19.396
  I0523 06:27:19.396147 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename downward-api @ 05/23/24 06:27:19.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:27:19.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:27:19.404
  STEP: Creating a pod to test downward API volume plugin @ 05/23/24 06:27:19.405
  E0523 06:27:19.470703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:20.470789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:21.471800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:22.471890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:27:23.413
  I0523 06:27:23.414734 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-5c0c8e47-e426-41d9-82fc-71dc963708e5 container client-container: <nil>
  STEP: delete the pod @ 05/23/24 06:27:23.417
  I0523 06:27:23.423073 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-375" for this suite. @ 05/23/24 06:27:23.424
• [4.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:668
  STEP: Creating a kubernetes client @ 05/23/24 06:27:23.427
  I0523 06:27:23.427696 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename job @ 05/23/24 06:27:23.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:27:23.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:27:23.434
  STEP: Creating a job @ 05/23/24 06:27:23.435
  STEP: Ensuring active pods == parallelism @ 05/23/24 06:27:23.438
  E0523 06:27:23.472162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:24.473209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 05/23/24 06:27:25.44
  STEP: deleting Job.batch foo in namespace job-5617, will wait for the garbage collector to delete the pods @ 05/23/24 06:27:25.44
  E0523 06:27:25.473489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:27:25.495259 22 resources.go:139] Deleting Job.batch foo took: 2.608544ms
  I0523 06:27:25.596037 22 resources.go:163] Terminating Job.batch foo pods took: 100.769536ms
  E0523 06:27:26.474555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 05/23/24 06:27:26.896
  I0523 06:27:26.897986 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5617" for this suite. @ 05/23/24 06:27:26.899
• [3.474 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 05/23/24 06:27:26.901
  I0523 06:27:26.901871 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename containers @ 05/23/24 06:27:26.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:27:26.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:27:26.91
  STEP: Creating a pod to test override arguments @ 05/23/24 06:27:26.911
  E0523 06:27:27.474810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:28.474952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:27:28.918
  I0523 06:27:28.919747 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod client-containers-016916f9-5ef3-4384-b6cc-160658b7e893 container agnhost-container: <nil>
  STEP: delete the pod @ 05/23/24 06:27:28.921
  I0523 06:27:28.927780 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2276" for this suite. @ 05/23/24 06:27:28.929
• [2.029 seconds]
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 05/23/24 06:27:28.931
  I0523 06:27:28.931272 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename kubelet-test @ 05/23/24 06:27:28.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:27:28.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:27:28.94
  I0523 06:27:28.951980 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4127" for this suite. @ 05/23/24 06:27:28.953
• [0.024 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 05/23/24 06:27:28.955
  I0523 06:27:28.955362 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename secrets @ 05/23/24 06:27:28.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:27:28.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:27:28.964
  STEP: Creating secret with name secret-test-0f0045dd-6a0a-4bde-bd0e-b40ace460771 @ 05/23/24 06:27:28.966
  STEP: Creating a pod to test consume secrets @ 05/23/24 06:27:28.967
  E0523 06:27:29.475656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:30.475770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:27:30.973
  I0523 06:27:30.974942 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-secrets-f785ec1e-7393-4230-a47b-89443646f813 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/23/24 06:27:30.977
  I0523 06:27:30.982723 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3050" for this suite. @ 05/23/24 06:27:30.984
• [2.031 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 05/23/24 06:27:30.986
  I0523 06:27:30.986322 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename security-context @ 05/23/24 06:27:30.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:27:30.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:27:30.994
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/23/24 06:27:30.996
  E0523 06:27:31.476828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:32.477011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:27:33.002
  I0523 06:27:33.003681 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod security-context-d201a5d8-67f7-4a6a-9f7c-12d29e9bc97b container test-container: <nil>
  STEP: delete the pod @ 05/23/24 06:27:33.012
  I0523 06:27:33.018239 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-4311" for this suite. @ 05/23/24 06:27:33.019
• [2.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 05/23/24 06:27:33.021
  I0523 06:27:33.021944 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename secrets @ 05/23/24 06:27:33.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:27:33.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:27:33.029
  STEP: Creating secret with name secret-test-map-6a189220-b07b-40aa-9a3a-6613ffce7557 @ 05/23/24 06:27:33.032
  STEP: Creating a pod to test consume secrets @ 05/23/24 06:27:33.034
  E0523 06:27:33.477461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:34.477540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:27:35.04
  I0523 06:27:35.042049 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-secrets-f1c67e42-0a64-4ebf-a204-9d5fee601f29 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/23/24 06:27:35.044
  I0523 06:27:35.050508 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2375" for this suite. @ 05/23/24 06:27:35.051
• [2.033 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1284
  STEP: Creating a kubernetes client @ 05/23/24 06:27:35.054
  I0523 06:27:35.054994 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename services @ 05/23/24 06:27:35.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:27:35.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:27:35.063
  STEP: creating service nodeport-test with type=NodePort in namespace services-489 @ 05/23/24 06:27:35.064
  STEP: creating replication controller nodeport-test in namespace services-489 @ 05/23/24 06:27:35.069
  I0523 06:27:35.072751      22 runners.go:198] Created replication controller with name: nodeport-test, namespace: services-489, replica count: 2
  E0523 06:27:35.478170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:36.479048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:37.479766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:27:38.123683      22 runners.go:198] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0523 06:27:38.123710 22 resource.go:361] Creating new exec pod
  E0523 06:27:38.480608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:39.481342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:40.481388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:27:41.133529 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-489 exec execpod556bh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0523 06:27:41.197816 22 builder.go:146] stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0523 06:27:41.197846 22 builder.go:147] stdout: "nodeport-test-2xvfk"
  I0523 06:27:41.197904 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-489 exec execpod556bh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.233.135 80'
  I0523 06:27:41.258427 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.233.135 80\nConnection to 10.68.233.135 80 port [tcp/http] succeeded!\n"
  I0523 06:27:41.258461 22 builder.go:147] stdout: "nodeport-test-nh6bs"
  I0523 06:27:41.258523 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-489 exec execpod556bh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.208 31204'
  I0523 06:27:41.323919 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.208 31204\nConnection to 10.255.0.208 31204 port [tcp/*] succeeded!\n"
  I0523 06:27:41.323952 22 builder.go:147] stdout: "nodeport-test-2xvfk"
  I0523 06:27:41.324013 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-489 exec execpod556bh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.207 31204'
  I0523 06:27:41.383333 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.207 31204\nConnection to 10.255.0.207 31204 port [tcp/*] succeeded!\n"
  I0523 06:27:41.383364 22 builder.go:147] stdout: "nodeport-test-2xvfk"
  I0523 06:27:41.383454 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-489" for this suite. @ 05/23/24 06:27:41.385
• [6.333 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 05/23/24 06:27:41.388
  I0523 06:27:41.388548 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename resourcequota @ 05/23/24 06:27:41.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:27:41.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:27:41.396
  STEP: Creating a ResourceQuota @ 05/23/24 06:27:41.398
  STEP: Getting a ResourceQuota @ 05/23/24 06:27:41.399
  STEP: Updating a ResourceQuota @ 05/23/24 06:27:41.4
  STEP: Verifying a ResourceQuota was modified @ 05/23/24 06:27:41.405
  STEP: Deleting a ResourceQuota @ 05/23/24 06:27:41.406
  STEP: Verifying the deleted ResourceQuota @ 05/23/24 06:27:41.409
  I0523 06:27:41.410337 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5628" for this suite. @ 05/23/24 06:27:41.411
• [0.025 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 05/23/24 06:27:41.413
  I0523 06:27:41.413706 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename webhook @ 05/23/24 06:27:41.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:27:41.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:27:41.43
  STEP: Setting up server cert @ 05/23/24 06:27:41.442
  E0523 06:27:41.482408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/23/24 06:27:41.925
  STEP: Deploying the webhook pod @ 05/23/24 06:27:41.928
  STEP: Wait for the deployment to be ready @ 05/23/24 06:27:41.933
  I0523 06:27:41.935726 22 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0523 06:27:42.482613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:43.482959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/23/24 06:27:43.94
  STEP: Verifying the service has paired with the endpoint @ 05/23/24 06:27:43.945
  E0523 06:27:44.483407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:27:44.945704 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/23/24 06:27:44.948
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/23/24 06:27:44.956
  STEP: Creating a dummy validating-webhook-configuration object @ 05/23/24 06:27:44.962
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 05/23/24 06:27:44.966
  STEP: Creating a dummy mutating-webhook-configuration object @ 05/23/24 06:27:44.967
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 05/23/24 06:27:44.971
  I0523 06:27:44.996891 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5417" for this suite. @ 05/23/24 06:27:44.998
  STEP: Destroying namespace "webhook-markers-5330" for this suite. @ 05/23/24 06:27:45.002
• [3.591 seconds]
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 05/23/24 06:27:45.004
  I0523 06:27:45.004837 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename downward-api @ 05/23/24 06:27:45.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:27:45.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:27:45.013
  STEP: Creating a pod to test downward api env vars @ 05/23/24 06:27:45.015
  E0523 06:27:45.484215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:46.484840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:47.485247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:48.485391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:27:49.024
  I0523 06:27:49.025955 22 output.go:196] Trying to get logs from node k8s-10-255-0-209 pod downward-api-83f9b132-86df-4fb0-abb3-1c4475dec8ae container dapi-container: <nil>
  STEP: delete the pod @ 05/23/24 06:27:49.028
  I0523 06:27:49.034634 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4191" for this suite. @ 05/23/24 06:27:49.035
• [4.033 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 05/23/24 06:27:49.037
  I0523 06:27:49.037966 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename server-version @ 05/23/24 06:27:49.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:27:49.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:27:49.045
  STEP: Request ServerVersion @ 05/23/24 06:27:49.047
  STEP: Confirm major version @ 05/23/24 06:27:49.047
  I0523 06:27:49.047609 22 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 05/23/24 06:27:49.047
  I0523 06:27:49.047633 22 server_version.go:58] cleanMinorVersion: 30
  I0523 06:27:49.047658 22 server_version.go:62] Minor version: 30
  I0523 06:27:49.047706 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-5061" for this suite. @ 05/23/24 06:27:49.048
• [0.013 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 05/23/24 06:27:49.051
  I0523 06:27:49.051128 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename downward-api @ 05/23/24 06:27:49.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:27:49.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:27:49.07
  STEP: Creating a pod to test downward api env vars @ 05/23/24 06:27:49.072
  E0523 06:27:49.485472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:50.486464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:27:51.08
  I0523 06:27:51.082169 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod downward-api-6e2944fb-9a36-4adb-af03-46bee242e073 container dapi-container: <nil>
  STEP: delete the pod @ 05/23/24 06:27:51.084
  I0523 06:27:51.090630 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4405" for this suite. @ 05/23/24 06:27:51.092
• [2.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 05/23/24 06:27:51.094
  I0523 06:27:51.094142 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename runtimeclass @ 05/23/24 06:27:51.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:27:51.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:27:51.103
  E0523 06:27:51.487340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:52.487476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:27:53.116228 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7966" for this suite. @ 05/23/24 06:27:53.117
• [2.026 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 05/23/24 06:27:53.12
  I0523 06:27:53.120289 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename resourcequota @ 05/23/24 06:27:53.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:27:53.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:27:53.128
  STEP: Counting existing ResourceQuota @ 05/23/24 06:27:53.129
  E0523 06:27:53.488074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:54.488377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:55.489279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:56.489627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:57.489965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/23/24 06:27:58.131
  STEP: Ensuring resource quota status is calculated @ 05/23/24 06:27:58.134
  E0523 06:27:58.490756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:27:59.490846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 05/23/24 06:28:00.141
  STEP: Ensuring resource quota status captures replicaset creation @ 05/23/24 06:28:00.147
  E0523 06:28:00.491701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:01.491768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 05/23/24 06:28:02.15
  STEP: Ensuring resource quota status released usage @ 05/23/24 06:28:02.152
  E0523 06:28:02.492826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:03.492901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:28:04.154994 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2033" for this suite. @ 05/23/24 06:28:04.156
• [11.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 05/23/24 06:28:04.16
  I0523 06:28:04.160603 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename var-expansion @ 05/23/24 06:28:04.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:28:04.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:28:04.168
  STEP: Creating a pod to test substitution in volume subpath @ 05/23/24 06:28:04.17
  E0523 06:28:04.493606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:05.493760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:28:06.179
  I0523 06:28:06.180654 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod var-expansion-cb003cf7-3a8b-48a4-a908-bdf6baf2192f container dapi-container: <nil>
  STEP: delete the pod @ 05/23/24 06:28:06.183
  I0523 06:28:06.189183 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3165" for this suite. @ 05/23/24 06:28:06.19
• [2.032 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 05/23/24 06:28:06.192
  I0523 06:28:06.192914 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename daemonsets @ 05/23/24 06:28:06.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:28:06.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:28:06.213
  I0523 06:28:06.221007 22 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 05/23/24 06:28:06.223
  I0523 06:28:06.230674 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0523 06:28:06.230690 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 05/23/24 06:28:06.23
  I0523 06:28:06.238140 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0523 06:28:06.238159 22 fixtures.go:130] Node k8s-10-255-0-208 is running 0 daemon pod, expected 1
  E0523 06:28:06.494528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:28:07.239473 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0523 06:28:07.239496 22 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 05/23/24 06:28:07.24
  I0523 06:28:07.247068 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0523 06:28:07.247084 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0523 06:28:07.495400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:28:08.248153 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0523 06:28:08.248181 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 05/23/24 06:28:08.248
  I0523 06:28:08.252432 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0523 06:28:08.252447 22 fixtures.go:130] Node k8s-10-255-0-208 is running 0 daemon pod, expected 1
  E0523 06:28:08.495829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:28:09.253159 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0523 06:28:09.253184 22 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/23/24 06:28:09.255
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-886, will wait for the garbage collector to delete the pods @ 05/23/24 06:28:09.255
  I0523 06:28:09.309354 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 2.590549ms
  I0523 06:28:09.410420 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.056697ms
  E0523 06:28:09.496626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:10.496927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:28:10.912265 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0523 06:28:10.912292 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0523 06:28:10.913269 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"63490"},"items":null}

  I0523 06:28:10.914203 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"63490"},"items":null}

  I0523 06:28:10.922592 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-886" for this suite. @ 05/23/24 06:28:10.925
• [4.734 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 05/23/24 06:28:10.927
  I0523 06:28:10.927237 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename emptydir @ 05/23/24 06:28:10.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:28:10.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:28:10.935
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/23/24 06:28:10.938
  E0523 06:28:11.497681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:12.497817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:13.498617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:14.499034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:28:14.946
  I0523 06:28:14.947433 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-9ceb1d9d-ad86-4f59-9b0c-9148e61929d2 container test-container: <nil>
  STEP: delete the pod @ 05/23/24 06:28:14.949
  I0523 06:28:14.956043 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7338" for this suite. @ 05/23/24 06:28:14.957
• [4.032 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 05/23/24 06:28:14.959
  I0523 06:28:14.959669 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename dns @ 05/23/24 06:28:14.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:28:14.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:28:14.967
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9287.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-9287.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 05/23/24 06:28:14.968
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9287.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-9287.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 05/23/24 06:28:14.968
  STEP: creating a pod to probe /etc/hosts @ 05/23/24 06:28:14.968
  STEP: submitting the pod to kubernetes @ 05/23/24 06:28:14.968
  E0523 06:28:15.499434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:16.499570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/23/24 06:28:16.976
  STEP: looking for the results for each expected name from probers @ 05/23/24 06:28:16.977
  I0523 06:28:17.009274 22 dns_common.go:527] DNS probes using dns-9287/dns-test-4434fb92-8379-4b7e-bc19-13fbad721e69 succeeded

  STEP: deleting the pod @ 05/23/24 06:28:17.009
  I0523 06:28:17.014620 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9287" for this suite. @ 05/23/24 06:28:17.016
• [2.066 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 05/23/24 06:28:17.025
  I0523 06:28:17.025578 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename crd-webhook @ 05/23/24 06:28:17.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:28:17.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:28:17.036
  STEP: Setting up server cert @ 05/23/24 06:28:17.038
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/23/24 06:28:17.267
  STEP: Deploying the custom resource conversion webhook pod @ 05/23/24 06:28:17.271
  STEP: Wait for the deployment to be ready @ 05/23/24 06:28:17.275
  I0523 06:28:17.279446 22 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0523 06:28:17.499630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:18.499760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/23/24 06:28:19.283
  STEP: Verifying the service has paired with the endpoint @ 05/23/24 06:28:19.289
  E0523 06:28:19.500688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:28:20.289539 22 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0523 06:28:20.292681 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  E0523 06:28:20.501566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:21.501935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:22.502789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 05/23/24 06:28:22.828
  STEP: Create a v2 custom resource @ 05/23/24 06:28:22.835
  STEP: List CRs in v1 @ 05/23/24 06:28:22.852
  STEP: List CRs in v2 @ 05/23/24 06:28:22.854
  I0523 06:28:23.396631 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-279" for this suite. @ 05/23/24 06:28:23.399
• [6.382 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 05/23/24 06:28:23.409
  I0523 06:28:23.409082 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename namespaces @ 05/23/24 06:28:23.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:28:23.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:28:23.418
  STEP: Creating a test namespace @ 05/23/24 06:28:23.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:28:23.426
  STEP: Creating a pod in the namespace @ 05/23/24 06:28:23.427
  STEP: Waiting for the pod to have running status @ 05/23/24 06:28:23.432
  E0523 06:28:23.503070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:24.503409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 05/23/24 06:28:25.435
  STEP: Waiting for the namespace to be removed. @ 05/23/24 06:28:25.437
  E0523 06:28:25.504074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:26.504882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:27.504933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:28.505410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:29.506319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:30.507372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:31.507792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:32.508347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:33.508822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:34.509822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:35.510726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 05/23/24 06:28:36.439
  STEP: Verifying there are no pods in the namespace @ 05/23/24 06:28:36.446
  I0523 06:28:36.449915 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6524" for this suite. @ 05/23/24 06:28:36.451
  STEP: Destroying namespace "nsdeletetest-257" for this suite. @ 05/23/24 06:28:36.453
  I0523 06:28:36.454169 22 framework.go:370] Namespace nsdeletetest-257 was already deleted
  STEP: Destroying namespace "nsdeletetest-1621" for this suite. @ 05/23/24 06:28:36.454
• [13.048 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 05/23/24 06:28:36.457
  I0523 06:28:36.457406 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename container-runtime @ 05/23/24 06:28:36.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:28:36.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:28:36.464
  STEP: create the container @ 05/23/24 06:28:36.466
  W0523 06:28:36.469173      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/23/24 06:28:36.469
  E0523 06:28:36.510938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:37.511894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:38.512479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 05/23/24 06:28:39.477
  STEP: the container should be terminated @ 05/23/24 06:28:39.478
  STEP: the termination message should be set @ 05/23/24 06:28:39.478
  I0523 06:28:39.478862 22 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 05/23/24 06:28:39.478
  I0523 06:28:39.484799 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5972" for this suite. @ 05/23/24 06:28:39.486
• [3.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 05/23/24 06:28:39.489
  I0523 06:28:39.489305 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename replication-controller @ 05/23/24 06:28:39.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:28:39.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:28:39.497
  STEP: Given a ReplicationController is created @ 05/23/24 06:28:39.499
  STEP: When the matched label of one of its pods change @ 05/23/24 06:28:39.501
  I0523 06:28:39.503620 22 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E0523 06:28:39.512733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:40.513033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:41.513109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:42.513239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:43.513317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:28:44.506018 22 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/23/24 06:28:44.51
  E0523 06:28:44.513775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:45.513874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:28:45.514601 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6595" for this suite. @ 05/23/24 06:28:45.516
• [6.029 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:850
  STEP: Creating a kubernetes client @ 05/23/24 06:28:45.518
  I0523 06:28:45.518463 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename services @ 05/23/24 06:28:45.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:28:45.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:28:45.526
  STEP: creating service multi-endpoint-test in namespace services-239 @ 05/23/24 06:28:45.528
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-239 to expose endpoints map[] @ 05/23/24 06:28:45.532
  I0523 06:28:45.533428 22 service.go:4226] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0523 06:28:46.514510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:28:46.537366 22 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-239 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-239 @ 05/23/24 06:28:46.537
  E0523 06:28:47.514700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:48.514825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-239 to expose endpoints map[pod1:[100]] @ 05/23/24 06:28:48.545
  I0523 06:28:48.548542 22 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-239 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-239 @ 05/23/24 06:28:48.548
  E0523 06:28:49.514977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:50.515114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-239 to expose endpoints map[pod1:[100] pod2:[101]] @ 05/23/24 06:28:50.554
  I0523 06:28:50.559530 22 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-239 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 05/23/24 06:28:50.559
  I0523 06:28:50.559565 22 resource.go:361] Creating new exec pod
  E0523 06:28:51.515768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:52.515859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:53.516375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:28:53.567598 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-239 exec execpodfn6fz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0523 06:28:53.630313 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I0523 06:28:53.630345 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0523 06:28:53.630403 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-239 exec execpodfn6fz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.62.199 80'
  I0523 06:28:53.689968 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.62.199 80\nConnection to 10.68.62.199 80 port [tcp/http] succeeded!\n"
  I0523 06:28:53.689998 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0523 06:28:53.690060 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-239 exec execpodfn6fz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0523 06:28:53.751179 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I0523 06:28:53.751213 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0523 06:28:53.751271 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-239 exec execpodfn6fz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.62.199 81'
  I0523 06:28:53.812287 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.62.199 81\nConnection to 10.68.62.199 81 port [tcp/*] succeeded!\n"
  I0523 06:28:53.812319 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-239 @ 05/23/24 06:28:53.812
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-239 to expose endpoints map[pod2:[101]] @ 05/23/24 06:28:53.818
  E0523 06:28:54.516582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:28:54.828104 22 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-239 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-239 @ 05/23/24 06:28:54.828
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-239 to expose endpoints map[] @ 05/23/24 06:28:54.833
  E0523 06:28:55.517501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:28:55.841231 22 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-239 exposes endpoints map[]
  I0523 06:28:55.850318 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-239" for this suite. @ 05/23/24 06:28:55.852
• [10.337 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 05/23/24 06:28:55.856
  I0523 06:28:55.856041 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename configmap @ 05/23/24 06:28:55.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:28:55.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:28:55.865
  STEP: Creating configMap with name configmap-test-upd-e1e577f3-e849-4263-b25d-0681af516e57 @ 05/23/24 06:28:55.869
  STEP: Creating the pod @ 05/23/24 06:28:55.872
  E0523 06:28:56.517578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:57.517665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 05/23/24 06:28:57.88
  STEP: Waiting for pod with binary data @ 05/23/24 06:28:57.883
  I0523 06:28:57.885491 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5913" for this suite. @ 05/23/24 06:28:57.886
• [2.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 05/23/24 06:28:57.889
  I0523 06:28:57.889609 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename kubectl @ 05/23/24 06:28:57.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:28:57.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:28:57.899
  STEP: creating the pod @ 05/23/24 06:28:57.9
  I0523 06:28:57.900918 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-6580 create -f -'
  I0523 06:28:57.978140 22 builder.go:146] stderr: ""
  I0523 06:28:57.978178 22 builder.go:147] stdout: "pod/pause created\n"
  E0523 06:28:58.517817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:28:59.518820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 05/23/24 06:28:59.982
  I0523 06:28:59.982886 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-6580 label pods pause testing-label=testing-label-value'
  I0523 06:29:00.032459 22 builder.go:146] stderr: ""
  I0523 06:29:00.032489 22 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 05/23/24 06:29:00.032
  I0523 06:29:00.032559 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-6580 get pod pause -L testing-label'
  I0523 06:29:00.075080 22 builder.go:146] stderr: ""
  I0523 06:29:00.075108 22 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 05/23/24 06:29:00.075
  I0523 06:29:00.075253 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-6580 label pods pause testing-label-'
  I0523 06:29:00.118413 22 builder.go:146] stderr: ""
  I0523 06:29:00.118440 22 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 05/23/24 06:29:00.118
  I0523 06:29:00.118502 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-6580 get pod pause -L testing-label'
  I0523 06:29:00.157988 22 builder.go:146] stderr: ""
  I0523 06:29:00.158018 22 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 05/23/24 06:29:00.158
  I0523 06:29:00.158121 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-6580 delete --grace-period=0 --force -f -'
  I0523 06:29:00.200479 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0523 06:29:00.200507 22 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0523 06:29:00.200543 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-6580 get rc,svc -l name=pause --no-headers'
  I0523 06:29:00.241596 22 builder.go:146] stderr: "No resources found in kubectl-6580 namespace.\n"
  I0523 06:29:00.241631 22 builder.go:147] stdout: ""
  I0523 06:29:00.241727 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-6580 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0523 06:29:00.288089 22 builder.go:146] stderr: ""
  I0523 06:29:00.288123 22 builder.go:147] stdout: ""
  I0523 06:29:00.288203 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6580" for this suite. @ 05/23/24 06:29:00.289
• [2.402 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 05/23/24 06:29:00.292
  I0523 06:29:00.292216 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename webhook @ 05/23/24 06:29:00.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:29:00.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:29:00.3
  STEP: Setting up server cert @ 05/23/24 06:29:00.311
  E0523 06:29:00.519261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/23/24 06:29:00.73
  STEP: Deploying the webhook pod @ 05/23/24 06:29:00.734
  STEP: Wait for the deployment to be ready @ 05/23/24 06:29:00.74
  I0523 06:29:00.743063 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0523 06:29:01.520487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:02.521418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/23/24 06:29:02.747
  STEP: Verifying the service has paired with the endpoint @ 05/23/24 06:29:02.752
  E0523 06:29:03.521502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:29:03.753861 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 05/23/24 06:29:03.756
  STEP: create a configmap that should be updated by the webhook @ 05/23/24 06:29:03.765
  I0523 06:29:03.790334 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6709" for this suite. @ 05/23/24 06:29:03.792
  STEP: Destroying namespace "webhook-markers-1871" for this suite. @ 05/23/24 06:29:03.795
• [3.506 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 05/23/24 06:29:03.798
  I0523 06:29:03.798255 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename downward-api @ 05/23/24 06:29:03.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:29:03.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:29:03.806
  STEP: Creating a pod to test downward API volume plugin @ 05/23/24 06:29:03.812
  E0523 06:29:04.521916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:05.522065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:06.522665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:07.523442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:29:07.822
  I0523 06:29:07.823721 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-bc41ca78-d996-4d38-9c52-5bd4097943c3 container client-container: <nil>
  STEP: delete the pod @ 05/23/24 06:29:07.829
  I0523 06:29:07.835642 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2262" for this suite. @ 05/23/24 06:29:07.837
• [4.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 05/23/24 06:29:07.84
  I0523 06:29:07.840019 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename secrets @ 05/23/24 06:29:07.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:29:07.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:29:07.848
  STEP: Creating projection with secret that has name secret-emptykey-test-735d5de6-8157-4e43-9642-f695d44b905d @ 05/23/24 06:29:07.849
  I0523 06:29:07.850157 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1347" for this suite. @ 05/23/24 06:29:07.851
• [0.014 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 05/23/24 06:29:07.854
  I0523 06:29:07.854384 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename sched-preemption @ 05/23/24 06:29:07.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:29:07.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:29:07.862
  I0523 06:29:07.868029 22 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0523 06:29:08.523489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:09.523696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:10.523775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:11.524735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:12.525328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:13.525476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:14.525913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:15.526060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:16.526221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:17.526905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:18.527293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:19.527512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:20.528529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:21.528625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:22.529299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:23.529426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:24.530001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:25.530130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:26.530215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:27.530335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:28.530514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:29.530697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:30.530783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:31.530921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:32.531739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:33.531764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:34.532536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:35.533605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:36.533890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:37.534340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:38.534501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:39.535264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:40.535753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:41.536770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:42.537354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:43.538137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:44.539077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:45.539116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:46.539700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:47.539751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:48.539980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:49.540809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:50.541185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:51.541310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:52.541392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:53.541470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:54.542316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:55.542675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:56.543291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:57.543411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:58.543741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:29:59.544708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:00.545203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:01.545285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:02.545371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:03.545455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:04.546200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:05.546738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:06.547271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:07.547405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:30:07.870911 22 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/23/24 06:30:07.872
  I0523 06:30:07.882339 22 preemption.go:269] Created pod: pod0-0-sched-preemption-low-priority
  I0523 06:30:07.885317 22 preemption.go:269] Created pod: pod0-1-sched-preemption-medium-priority
  I0523 06:30:07.896889 22 preemption.go:269] Created pod: pod1-0-sched-preemption-medium-priority
  I0523 06:30:07.902461 22 preemption.go:269] Created pod: pod1-1-sched-preemption-medium-priority
  I0523 06:30:07.913007 22 preemption.go:269] Created pod: pod2-0-sched-preemption-medium-priority
  I0523 06:30:07.917023 22 preemption.go:269] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/23/24 06:30:07.917
  E0523 06:30:08.548142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:09.549174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 05/23/24 06:30:09.928
  E0523 06:30:10.549825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:11.549945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:12.550948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:13.551035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:30:13.969665 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9968" for this suite. @ 05/23/24 06:30:13.97
• [66.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 05/23/24 06:30:13.973
  I0523 06:30:13.973330 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename deployment @ 05/23/24 06:30:13.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:30:13.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:30:13.984
  STEP: creating a Deployment @ 05/23/24 06:30:13.991
  I0523 06:30:13.991130 22 deployment.go:507] Creating simple deployment test-deployment-vgvgd
  I0523 06:30:14.000425 22 deployment.go:222] deployment "test-deployment-vgvgd" doesn't have the required revision set
  E0523 06:30:14.551075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:15.551234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 05/23/24 06:30:16.005
  I0523 06:30:16.007216 22 deployment.go:532] Deployment test-deployment-vgvgd has Conditions: [{Available True 2024-05-23 06:30:15 +0000 UTC 2024-05-23 06:30:15 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-05-23 06:30:15 +0000 UTC 2024-05-23 06:30:14 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vgvgd-c8586b885" has successfully progressed.}]
  STEP: updating Deployment Status @ 05/23/24 06:30:16.007
  I0523 06:30:16.011520 22 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 23, 6, 30, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 6, 30, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 23, 6, 30, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 6, 30, 14, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-vgvgd-c8586b885\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 05/23/24 06:30:16.011
  I0523 06:30:16.012458 22 deployment.go:579] Observed &Deployment event: ADDED
  I0523 06:30:16.012478 22 deployment.go:575] Observed Deployment test-deployment-vgvgd in namespace deployment-9536 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-23 06:30:14 +0000 UTC 2024-05-23 06:30:14 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vgvgd-c8586b885"}
  I0523 06:30:16.012557 22 deployment.go:579] Observed &Deployment event: MODIFIED
  I0523 06:30:16.012571 22 deployment.go:575] Observed Deployment test-deployment-vgvgd in namespace deployment-9536 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-23 06:30:14 +0000 UTC 2024-05-23 06:30:14 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vgvgd-c8586b885"}
  I0523 06:30:16.012586 22 deployment.go:575] Observed Deployment test-deployment-vgvgd in namespace deployment-9536 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-23 06:30:14 +0000 UTC 2024-05-23 06:30:14 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0523 06:30:16.012655 22 deployment.go:579] Observed &Deployment event: MODIFIED
  I0523 06:30:16.012771 22 deployment.go:575] Observed Deployment test-deployment-vgvgd in namespace deployment-9536 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-23 06:30:14 +0000 UTC 2024-05-23 06:30:14 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0523 06:30:16.012783 22 deployment.go:575] Observed Deployment test-deployment-vgvgd in namespace deployment-9536 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-23 06:30:14 +0000 UTC 2024-05-23 06:30:14 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-vgvgd-c8586b885" is progressing.}
  I0523 06:30:16.012872 22 deployment.go:579] Observed &Deployment event: MODIFIED
  I0523 06:30:16.012886 22 deployment.go:575] Observed Deployment test-deployment-vgvgd in namespace deployment-9536 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-23 06:30:15 +0000 UTC 2024-05-23 06:30:15 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0523 06:30:16.012897 22 deployment.go:575] Observed Deployment test-deployment-vgvgd in namespace deployment-9536 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-23 06:30:15 +0000 UTC 2024-05-23 06:30:14 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vgvgd-c8586b885" has successfully progressed.}
  I0523 06:30:16.012963 22 deployment.go:579] Observed &Deployment event: MODIFIED
  I0523 06:30:16.012981 22 deployment.go:575] Observed Deployment test-deployment-vgvgd in namespace deployment-9536 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-23 06:30:15 +0000 UTC 2024-05-23 06:30:15 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0523 06:30:16.012992 22 deployment.go:575] Observed Deployment test-deployment-vgvgd in namespace deployment-9536 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-23 06:30:15 +0000 UTC 2024-05-23 06:30:14 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vgvgd-c8586b885" has successfully progressed.}
  I0523 06:30:16.013006 22 deployment.go:572] Found Deployment test-deployment-vgvgd in namespace deployment-9536 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0523 06:30:16.013015 22 deployment.go:583] Deployment test-deployment-vgvgd has an updated status
  STEP: patching the Statefulset Status @ 05/23/24 06:30:16.013
  I0523 06:30:16.013041 22 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0523 06:30:16.015903 22 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 05/23/24 06:30:16.015
  I0523 06:30:16.016716 22 deployment.go:616] Observed &Deployment event: ADDED
  I0523 06:30:16.016737 22 deployment.go:612] Observed deployment test-deployment-vgvgd in namespace deployment-9536 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-23 06:30:14 +0000 UTC 2024-05-23 06:30:14 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vgvgd-c8586b885"}
  I0523 06:30:16.016812 22 deployment.go:616] Observed &Deployment event: MODIFIED
  I0523 06:30:16.016831 22 deployment.go:612] Observed deployment test-deployment-vgvgd in namespace deployment-9536 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-23 06:30:14 +0000 UTC 2024-05-23 06:30:14 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vgvgd-c8586b885"}
  I0523 06:30:16.016842 22 deployment.go:612] Observed deployment test-deployment-vgvgd in namespace deployment-9536 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-23 06:30:14 +0000 UTC 2024-05-23 06:30:14 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0523 06:30:16.016920 22 deployment.go:616] Observed &Deployment event: MODIFIED
  I0523 06:30:16.016942 22 deployment.go:612] Observed deployment test-deployment-vgvgd in namespace deployment-9536 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-23 06:30:14 +0000 UTC 2024-05-23 06:30:14 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0523 06:30:16.016953 22 deployment.go:612] Observed deployment test-deployment-vgvgd in namespace deployment-9536 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-23 06:30:14 +0000 UTC 2024-05-23 06:30:14 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-vgvgd-c8586b885" is progressing.}
  I0523 06:30:16.017027 22 deployment.go:616] Observed &Deployment event: MODIFIED
  I0523 06:30:16.017043 22 deployment.go:612] Observed deployment test-deployment-vgvgd in namespace deployment-9536 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-23 06:30:15 +0000 UTC 2024-05-23 06:30:15 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0523 06:30:16.017055 22 deployment.go:612] Observed deployment test-deployment-vgvgd in namespace deployment-9536 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-23 06:30:15 +0000 UTC 2024-05-23 06:30:14 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vgvgd-c8586b885" has successfully progressed.}
  I0523 06:30:16.017135 22 deployment.go:616] Observed &Deployment event: MODIFIED
  I0523 06:30:16.017224 22 deployment.go:612] Observed deployment test-deployment-vgvgd in namespace deployment-9536 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-23 06:30:15 +0000 UTC 2024-05-23 06:30:15 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0523 06:30:16.017237 22 deployment.go:612] Observed deployment test-deployment-vgvgd in namespace deployment-9536 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-23 06:30:15 +0000 UTC 2024-05-23 06:30:14 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vgvgd-c8586b885" has successfully progressed.}
  I0523 06:30:16.017249 22 deployment.go:612] Observed deployment test-deployment-vgvgd in namespace deployment-9536 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0523 06:30:16.017317 22 deployment.go:616] Observed &Deployment event: MODIFIED
  I0523 06:30:16.017333 22 deployment.go:609] Found deployment test-deployment-vgvgd in namespace deployment-9536 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0523 06:30:16.017346 22 deployment.go:620] Deployment test-deployment-vgvgd has a patched status
  I0523 06:30:16.019620 22 deployment.go:633] Deployment "test-deployment-vgvgd":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-vgvgd",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1573104f-ff99-47dc-8e15-2d6f8405cfc5",
      ResourceVersion: (string) (len=5) "64471",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852042613,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852042613,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852042616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852042616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852042616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852042616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-vgvgd-c8586b885\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0523 06:30:16.021672 22 deployment.go:39] New ReplicaSet "test-deployment-vgvgd-c8586b885" of Deployment "test-deployment-vgvgd":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-vgvgd-c8586b885",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cb0c37cc-9d22-47ea-9ad5-9e13e5351b9d",
      ResourceVersion: (string) (len=5) "64466",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852042613,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-vgvgd",
          UID: (types.UID) (len=36) "1573104f-ff99-47dc-8e15-2d6f8405cfc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852042613,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 31 35 37  |k:{\"uid\":\"157|
              00000120  33 31 30 34 66 2d 66 66  39 39 2d 34 37 64 63 2d  |3104f-ff99-47dc-|
              00000130  38 65 31 35 2d 32 64 36  66 38 34 30 35 63 66 63  |8e15-2d6f8405cfc|
              00000140  35 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |5\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852042615,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0523 06:30:16.023724 22 deployment.go:67] Pod "test-deployment-vgvgd-c8586b885-7phhm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-vgvgd-c8586b885-7phhm",
      GenerateName: (string) (len=32) "test-deployment-vgvgd-c8586b885-",
      Namespace: (string) (len=15) "deployment-9536",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "64f62200-32a9-4285-8958-7d1ec718ee8a",
      ResourceVersion: (string) (len=5) "64465",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852042614,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-vgvgd-c8586b885",
          UID: (types.UID) (len=36) "cb0c37cc-9d22-47ea-9ad5-9e13e5351b9d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852042614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 63 62 30 63 33 37 63  63 2d 39 64 32 32 2d 34  |"cb0c37cc-9d22-4|
              000000a0  37 65 61 2d 39 61 64 35  2d 39 65 31 33 65 35 33  |7ea-9ad5-9e13e53|
              000000b0  35 31 62 39 64 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |51b9d\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852042615,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 35 39 5c 22 7d 22 3a  |2.20.64.159\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x5m8v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x5m8v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852042615,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852042614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852042615,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852042615,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852042614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.159",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.159"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852042614,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852042614,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b66fe6f96b60c7fa3db5711143bddf5bcf6ee067678fdbd97068a9d6b8a3c177",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 06:30:16.024806 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9536" for this suite. @ 05/23/24 06:30:16.026
• [2.056 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:882
  STEP: Creating a kubernetes client @ 05/23/24 06:30:16.029
  I0523 06:30:16.029445 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename kubectl @ 05/23/24 06:30:16.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:30:16.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:30:16.037
  STEP: validating api versions @ 05/23/24 06:30:16.038
  I0523 06:30:16.038533 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-4156 api-versions'
  I0523 06:30:16.076391 22 builder.go:146] stderr: ""
  I0523 06:30:16.076424 22 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0523 06:30:16.076555 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4156" for this suite. @ 05/23/24 06:30:16.078
• [0.051 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 05/23/24 06:30:16.08
  I0523 06:30:16.080545 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename downward-api @ 05/23/24 06:30:16.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:30:16.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:30:16.087
  STEP: Creating a pod to test downward API volume plugin @ 05/23/24 06:30:16.089
  E0523 06:30:16.551291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:17.551375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:18.551553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:19.552166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:30:20.099
  I0523 06:30:20.101355 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-1da22812-2e59-4de1-9414-57524e71ec4c container client-container: <nil>
  STEP: delete the pod @ 05/23/24 06:30:20.104
  I0523 06:30:20.109774 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1740" for this suite. @ 05/23/24 06:30:20.119
• [4.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:342
  STEP: Creating a kubernetes client @ 05/23/24 06:30:20.122
  I0523 06:30:20.122029 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename kubectl @ 05/23/24 06:30:20.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:30:20.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:30:20.135
  STEP: creating a replication controller @ 05/23/24 06:30:20.137
  I0523 06:30:20.137664 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-6242 create -f -'
  I0523 06:30:20.213404 22 builder.go:146] stderr: ""
  I0523 06:30:20.213434 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/23/24 06:30:20.213
  I0523 06:30:20.213504 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-6242 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0523 06:30:20.254668 22 builder.go:146] stderr: ""
  I0523 06:30:20.254700 22 builder.go:147] stdout: "update-demo-nautilus-t8fv8 update-demo-nautilus-xmz4w "
  I0523 06:30:20.254741 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-6242 get pods update-demo-nautilus-t8fv8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0523 06:30:20.292579 22 builder.go:146] stderr: ""
  I0523 06:30:20.292609 22 builder.go:147] stdout: ""
  I0523 06:30:20.292618 22 kubectl.go:2501] update-demo-nautilus-t8fv8 is created but not running
  E0523 06:30:20.552809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:21.553030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:22.553153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:23.553658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:24.553905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:30:25.292744 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-6242 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0523 06:30:25.333219 22 builder.go:146] stderr: ""
  I0523 06:30:25.333248 22 builder.go:147] stdout: "update-demo-nautilus-t8fv8 update-demo-nautilus-xmz4w "
  I0523 06:30:25.333288 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-6242 get pods update-demo-nautilus-t8fv8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0523 06:30:25.371944 22 builder.go:146] stderr: ""
  I0523 06:30:25.371974 22 builder.go:147] stdout: "true"
  I0523 06:30:25.372012 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-6242 get pods update-demo-nautilus-t8fv8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0523 06:30:25.410656 22 builder.go:146] stderr: ""
  I0523 06:30:25.410683 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0523 06:30:25.410693 22 kubectl.go:2392] validating pod update-demo-nautilus-t8fv8
  I0523 06:30:25.418906 22 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0523 06:30:25.418957 22 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0523 06:30:25.418968 22 kubectl.go:2519] update-demo-nautilus-t8fv8 is verified up and running
  I0523 06:30:25.419007 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-6242 get pods update-demo-nautilus-xmz4w -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0523 06:30:25.456802 22 builder.go:146] stderr: ""
  I0523 06:30:25.456833 22 builder.go:147] stdout: "true"
  I0523 06:30:25.456930 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-6242 get pods update-demo-nautilus-xmz4w -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0523 06:30:25.495424 22 builder.go:146] stderr: ""
  I0523 06:30:25.495457 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0523 06:30:25.495467 22 kubectl.go:2392] validating pod update-demo-nautilus-xmz4w
  I0523 06:30:25.503060 22 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0523 06:30:25.503100 22 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0523 06:30:25.503109 22 kubectl.go:2519] update-demo-nautilus-xmz4w is verified up and running
  STEP: using delete to clean up resources @ 05/23/24 06:30:25.503
  I0523 06:30:25.503163 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-6242 delete --grace-period=0 --force -f -'
  I0523 06:30:25.542726 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0523 06:30:25.542755 22 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0523 06:30:25.542845 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-6242 get rc,svc -l name=update-demo --no-headers'
  E0523 06:30:25.555011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:30:25.588412 22 builder.go:146] stderr: "No resources found in kubectl-6242 namespace.\n"
  I0523 06:30:25.588451 22 builder.go:147] stdout: ""
  I0523 06:30:25.588489 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-6242 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0523 06:30:25.635160 22 builder.go:146] stderr: ""
  I0523 06:30:25.635197 22 builder.go:147] stdout: ""
  I0523 06:30:25.635289 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6242" for this suite. @ 05/23/24 06:30:25.637
• [5.518 seconds]
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 05/23/24 06:30:25.64
  I0523 06:30:25.640304 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename var-expansion @ 05/23/24 06:30:25.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:30:25.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:30:25.648
  E0523 06:30:26.555883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:27.556809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:30:27.656902 22 delete.go:62] Deleting pod "var-expansion-385b97f0-6a96-4913-a21f-85d32e7b079a" in namespace "var-expansion-9161"
  I0523 06:30:27.659302 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-385b97f0-6a96-4913-a21f-85d32e7b079a" to be fully deleted
  E0523 06:30:28.557226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:29.557377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:30:29.662242 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9161" for this suite. @ 05/23/24 06:30:29.663
• [4.026 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 05/23/24 06:30:29.666
  I0523 06:30:29.666030 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/23/24 06:30:29.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:30:29.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:30:29.676
  STEP: fetching the /apis discovery document @ 05/23/24 06:30:29.677
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 05/23/24 06:30:29.678
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 05/23/24 06:30:29.678
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 05/23/24 06:30:29.678
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 05/23/24 06:30:29.678
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 05/23/24 06:30:29.678
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 05/23/24 06:30:29.678
  I0523 06:30:29.679054 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4002" for this suite. @ 05/23/24 06:30:29.68
• [0.016 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 05/23/24 06:30:29.682
  I0523 06:30:29.682481 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename configmap @ 05/23/24 06:30:29.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:30:29.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:30:29.689
  STEP: Creating configMap with name configmap-test-volume-map-206af539-fb64-45f6-9b86-6df5bde4da61 @ 05/23/24 06:30:29.69
  STEP: Creating a pod to test consume configMaps @ 05/23/24 06:30:29.692
  E0523 06:30:30.557754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:31.557971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:32.558216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:33.559206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:30:33.702
  I0523 06:30:33.703511 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-configmaps-5c66ff18-32b4-4f8d-8a74-f07521791feb container agnhost-container: <nil>
  STEP: delete the pod @ 05/23/24 06:30:33.705
  I0523 06:30:33.711199 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2282" for this suite. @ 05/23/24 06:30:33.712
• [4.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 05/23/24 06:30:33.714
  I0523 06:30:33.714803 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/23/24 06:30:33.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:30:33.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:30:33.722
  I0523 06:30:33.723803 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  E0523 06:30:34.560133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:35.560557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:36.560805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:37.561093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:38.561391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:39.562006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:30:39.821323 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7183" for this suite. @ 05/23/24 06:30:39.823
• [6.111 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 05/23/24 06:30:39.825
  I0523 06:30:39.825521 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename containers @ 05/23/24 06:30:39.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:30:39.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:30:39.834
  STEP: Creating a pod to test override command @ 05/23/24 06:30:39.835
  E0523 06:30:40.562893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:41.563092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:42.564099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:43.564187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:30:43.844
  I0523 06:30:43.845424 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod client-containers-f88f083f-f9cf-44cf-8a2a-a21d37d476e4 container agnhost-container: <nil>
  STEP: delete the pod @ 05/23/24 06:30:43.847
  I0523 06:30:43.853545 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4849" for this suite. @ 05/23/24 06:30:43.854
• [4.031 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3161
  STEP: Creating a kubernetes client @ 05/23/24 06:30:43.857
  I0523 06:30:43.857073 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename services @ 05/23/24 06:30:43.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:30:43.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:30:43.864
  STEP: creating an Endpoint @ 05/23/24 06:30:43.866
  STEP: waiting for available Endpoint @ 05/23/24 06:30:43.868
  STEP: listing all Endpoints @ 05/23/24 06:30:43.869
  STEP: updating the Endpoint @ 05/23/24 06:30:43.87
  STEP: fetching the Endpoint @ 05/23/24 06:30:43.873
  STEP: patching the Endpoint @ 05/23/24 06:30:43.874
  STEP: fetching the Endpoint @ 05/23/24 06:30:43.876
  STEP: deleting the Endpoint by Collection @ 05/23/24 06:30:43.877
  STEP: waiting for Endpoint deletion @ 05/23/24 06:30:43.879
  STEP: fetching the Endpoint @ 05/23/24 06:30:43.88
  I0523 06:30:43.881066 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4067" for this suite. @ 05/23/24 06:30:43.882
• [0.027 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 05/23/24 06:30:43.884
  I0523 06:30:43.884557 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename replicaset @ 05/23/24 06:30:43.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:30:43.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:30:43.892
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 05/23/24 06:30:43.893
  E0523 06:30:44.565227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:45.565311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 05/23/24 06:30:45.901
  STEP: Then the orphan pod is adopted @ 05/23/24 06:30:45.904
  E0523 06:30:46.565967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 05/23/24 06:30:46.907
  I0523 06:30:46.908504 22 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/23/24 06:30:46.913
  E0523 06:30:47.566449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:30:47.916710 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7666" for this suite. @ 05/23/24 06:30:47.918
• [4.036 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 05/23/24 06:30:47.92
  I0523 06:30:47.920621 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename pv @ 05/23/24 06:30:47.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:30:47.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:30:47.929
  STEP: Creating initial PV and PVC @ 05/23/24 06:30:47.93
  I0523 06:30:47.930604 22 pv.go:390] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8625" @ 05/23/24 06:30:47.935
  STEP: Listing PVCs in namespace "pv-8625" @ 05/23/24 06:30:47.937
  STEP: Patching the PV "pv-8625-g2jp8" @ 05/23/24 06:30:47.938
  STEP: Patching the PVC "pvc-bz9cr" @ 05/23/24 06:30:47.942
  STEP: Getting PV "pv-8625-g2jp8" @ 05/23/24 06:30:47.944
  STEP: Getting PVC "pvc-bz9cr" @ 05/23/24 06:30:47.946
  STEP: Deleting PVC "pvc-bz9cr" @ 05/23/24 06:30:47.947
  STEP: Confirm deletion of PVC "pvc-bz9cr" @ 05/23/24 06:30:47.949
  E0523 06:30:48.567491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:49.567688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-8625-g2jp8" @ 05/23/24 06:30:49.952
  STEP: Confirm deletion of PV "pv-8625-g2jp8" @ 05/23/24 06:30:49.955
  E0523 06:30:50.567766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:51.568728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 05/23/24 06:30:51.958
  I0523 06:30:51.958949 22 pv.go:390] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-8625-4k6gn" @ 05/23/24 06:30:51.963
  STEP: Updating the PVC "pvc-g685z" @ 05/23/24 06:30:51.966
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-g685z=updated" @ 05/23/24 06:30:51.969
  STEP: Deleting PVC "pvc-g685z" via DeleteCollection @ 05/23/24 06:30:51.97
  STEP: Confirm deletion of PVC "pvc-g685z" @ 05/23/24 06:30:51.974
  E0523 06:30:52.568744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:53.568882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-8625-4k6gn" via DeleteCollection @ 05/23/24 06:30:53.977
  STEP: Confirm deletion of PV "pv-8625-4k6gn" @ 05/23/24 06:30:53.983
  E0523 06:30:54.569694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:55.569854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:30:55.987316 22 persistent_volumes.go:407] AfterEach: deleting 1 PVCs and 1 PVs...
  I0523 06:30:55.987340 22 pv.go:201] Deleting PersistentVolumeClaim "pvc-g685z"
  I0523 06:30:55.988595 22 pv.go:189] Deleting PersistentVolume "pv-8625-4k6gn"
  I0523 06:30:55.989641 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8625" for this suite. @ 05/23/24 06:30:55.991
• [8.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 05/23/24 06:30:55.993
  I0523 06:30:55.993483 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename webhook @ 05/23/24 06:30:55.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:30:56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:30:56.002
  STEP: Setting up server cert @ 05/23/24 06:30:56.012
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/23/24 06:30:56.287
  STEP: Deploying the webhook pod @ 05/23/24 06:30:56.291
  STEP: Wait for the deployment to be ready @ 05/23/24 06:30:56.296
  I0523 06:30:56.299954 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0523 06:30:56.570265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:30:57.571179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/23/24 06:30:58.304
  STEP: Verifying the service has paired with the endpoint @ 05/23/24 06:30:58.308
  E0523 06:30:58.571612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:30:59.308487 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/23/24 06:30:59.311
  STEP: create a pod @ 05/23/24 06:30:59.319
  E0523 06:30:59.572200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:00.572284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 05/23/24 06:31:01.324
  I0523 06:31:01.324929 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=webhook-6048 attach --namespace=webhook-6048 to-be-attached-pod -i -c=container1'
  I0523 06:31:01.373492 22 builder.go:135] rc: 1
  I0523 06:31:01.398960 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6048" for this suite. @ 05/23/24 06:31:01.4
  STEP: Destroying namespace "webhook-markers-9052" for this suite. @ 05/23/24 06:31:01.403
• [5.412 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 05/23/24 06:31:01.405
  I0523 06:31:01.405967 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/23/24 06:31:01.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:31:01.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:31:01.415
  I0523 06:31:01.417438 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  E0523 06:31:01.572825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:31:01.939396 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-318" for this suite. @ 05/23/24 06:31:01.941
• [0.538 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 05/23/24 06:31:01.944
  I0523 06:31:01.944303 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename configmap @ 05/23/24 06:31:01.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:31:01.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:31:01.956
  STEP: Creating configMap with name configmap-test-upd-7a6e3e56-d79c-4bcb-a370-a61f769d158c @ 05/23/24 06:31:01.959
  STEP: Creating the pod @ 05/23/24 06:31:01.96
  E0523 06:31:02.573679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:03.574670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-7a6e3e56-d79c-4bcb-a370-a61f769d158c @ 05/23/24 06:31:03.97
  STEP: waiting to observe update in volume @ 05/23/24 06:31:03.972
  E0523 06:31:04.574975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:05.575119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:06.575220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:07.575307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:08.575629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:09.575762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:10.576606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:11.577480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:12.578073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:13.578214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:14.578570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:15.578763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:16.579544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:17.579698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:18.580199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:19.580387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:20.580581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:21.580819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:22.581153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:23.581296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:24.581834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:25.581898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:26.582101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:27.582231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:28.583115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:29.583343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:30.584045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:31.584822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:32.585107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:33.585189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:34.585480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:35.585863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:36.586158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:37.586258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:38.586465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:39.586705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:40.586742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:41.587093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:42.587353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:43.587474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:44.587579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:45.587725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:46.587770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:47.587842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:48.588824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:49.589856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:50.590352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:51.590493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:52.591014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:53.591536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:54.592599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:55.592824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:56.593698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:57.593903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:58.594515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:31:59.594618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:00.594702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:01.594711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:02.595051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:03.595182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:04.595510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:05.595589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:06.595627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:07.595768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:08.596732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:09.597528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:10.597876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:11.598474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:12.599052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:13.599151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:14.600087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:15.600822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:32:16.150869 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7807" for this suite. @ 05/23/24 06:32:16.152
• [74.210 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 05/23/24 06:32:16.154
  I0523 06:32:16.154689 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/23/24 06:32:16.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:32:16.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:32:16.163
  STEP: set up a multi version CRD @ 05/23/24 06:32:16.164
  I0523 06:32:16.165207 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  E0523 06:32:16.601547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:17.601999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:18.602664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 05/23/24 06:32:19.12
  STEP: check the unserved version gets removed @ 05/23/24 06:32:19.129
  E0523 06:32:19.602906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 05/23/24 06:32:19.819
  E0523 06:32:20.603768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:21.603919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:32:22.186651 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2573" for this suite. @ 05/23/24 06:32:22.19
• [6.038 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 05/23/24 06:32:22.192
  I0523 06:32:22.192880 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 06:32:22.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:32:22.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:32:22.201
  STEP: Creating configMap with name projected-configmap-test-volume-map-6ae71bb5-6d44-4478-96a3-ab8dd5fc95e5 @ 05/23/24 06:32:22.203
  STEP: Creating a pod to test consume configMaps @ 05/23/24 06:32:22.205
  E0523 06:32:22.604733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:23.604874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:24.605009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:25.605091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:32:26.213
  I0523 06:32:26.214751 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-configmaps-ca9aef05-0b9f-4683-b157-584c87184b5e container agnhost-container: <nil>
  STEP: delete the pod @ 05/23/24 06:32:26.217
  I0523 06:32:26.222810 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4004" for this suite. @ 05/23/24 06:32:26.224
• [4.033 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 05/23/24 06:32:26.226
  I0523 06:32:26.226332 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename container-runtime @ 05/23/24 06:32:26.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:32:26.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:32:26.234
  STEP: create the container @ 05/23/24 06:32:26.235
  W0523 06:32:26.239541      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 05/23/24 06:32:26.239
  E0523 06:32:26.605169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:27.605407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:28.606326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 05/23/24 06:32:29.246
  STEP: the container should be terminated @ 05/23/24 06:32:29.248
  STEP: the termination message should be set @ 05/23/24 06:32:29.248
  I0523 06:32:29.248238 22 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/23/24 06:32:29.248
  I0523 06:32:29.254192 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4144" for this suite. @ 05/23/24 06:32:29.256
• [3.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1793
  STEP: Creating a kubernetes client @ 05/23/24 06:32:29.258
  I0523 06:32:29.258803 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename kubectl @ 05/23/24 06:32:29.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:32:29.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:32:29.268
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/23/24 06:32:29.27
  I0523 06:32:29.270149 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-8205 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0523 06:32:29.312256 22 builder.go:146] stderr: ""
  I0523 06:32:29.312284 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 05/23/24 06:32:29.312
  E0523 06:32:29.606516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:30.606924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:31.606981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:32.607619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:33.608274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/23/24 06:32:34.363
  I0523 06:32:34.363424 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-8205 get pod e2e-test-httpd-pod -o json'
  I0523 06:32:34.401525 22 builder.go:146] stderr: ""
  I0523 06:32:34.401764 22 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-05-23T06:32:29Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-8205\",\n        \"resourceVersion\": \"65443\",\n        \"uid\": \"8f79245f-772b-49ca-9414-721355721251\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-jprwj\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"k8s-10-255-0-208\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-jprwj\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-23T06:32:30Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-23T06:32:29Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-23T06:32:30Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-23T06:32:30Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-23T06:32:29Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://67c7e20fa374743ae8e01034569ad956fbbab9191339548e3d4f1b09a31dac53\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-05-23T06:32:29Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"10.255.0.208\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"10.255.0.208\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"172.20.64.131\",\n        \"podIPs\": [\n            {\n                \"ip\": \"172.20.64.131\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-05-23T06:32:29Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 05/23/24 06:32:34.401
  I0523 06:32:34.401849 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-8205 replace -f -'
  I0523 06:32:34.477491 22 builder.go:146] stderr: ""
  I0523 06:32:34.477521 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 05/23/24 06:32:34.477
  I0523 06:32:34.479046 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-8205 delete pods e2e-test-httpd-pod'
  E0523 06:32:34.609286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:35.609576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:32:36.303926 22 builder.go:146] stderr: ""
  I0523 06:32:36.303954 22 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0523 06:32:36.304030 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8205" for this suite. @ 05/23/24 06:32:36.305
• [7.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 05/23/24 06:32:36.307
  I0523 06:32:36.307826 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename crd-webhook @ 05/23/24 06:32:36.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:32:36.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:32:36.317
  STEP: Setting up server cert @ 05/23/24 06:32:36.318
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/23/24 06:32:36.53
  STEP: Deploying the custom resource conversion webhook pod @ 05/23/24 06:32:36.533
  STEP: Wait for the deployment to be ready @ 05/23/24 06:32:36.539
  I0523 06:32:36.543748 22 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0523 06:32:36.609856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:37.610028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/23/24 06:32:38.548
  STEP: Verifying the service has paired with the endpoint @ 05/23/24 06:32:38.552
  E0523 06:32:38.610332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:32:39.552434 22 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0523 06:32:39.555681 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  E0523 06:32:39.611329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:40.611534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:41.612461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 05/23/24 06:32:42.1
  STEP: v2 custom resource should be converted @ 05/23/24 06:32:42.102
  E0523 06:32:42.613200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:32:42.628464 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-9635" for this suite. @ 05/23/24 06:32:42.63
• [6.328 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 05/23/24 06:32:42.636
  I0523 06:32:42.636446 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename statefulset @ 05/23/24 06:32:42.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:32:42.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:32:42.646
  STEP: Creating service test in namespace statefulset-7739 @ 05/23/24 06:32:42.648
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 05/23/24 06:32:42.65
  STEP: Creating stateful set ss in namespace statefulset-7739 @ 05/23/24 06:32:42.656
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7739 @ 05/23/24 06:32:42.658
  I0523 06:32:42.660357 22 wait.go:40] Found 0 stateful pods, waiting for 1
  E0523 06:32:43.614285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:44.614772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:45.614976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:46.616037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:47.616470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:48.617017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:49.617668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:50.618259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:51.619319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:52.619472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:32:52.660687 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 05/23/24 06:32:52.66
  I0523 06:32:52.661969 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=statefulset-7739 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0523 06:32:52.727524 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0523 06:32:52.727556 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0523 06:32:52.727635 22 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0523 06:32:52.729018 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0523 06:32:53.619757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:54.620774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:55.620924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:56.620963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:57.621824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:58.622521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:32:59.623351      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:00.624307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:01.624807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:02.624892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:33:02.729933 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0523 06:33:02.729962 22 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0523 06:33:02.736613 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 9.999999866s
  E0523 06:33:03.624966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:33:03.739149 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 8.998081077s
  E0523 06:33:04.625303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:33:04.741417 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 7.9957373s
  E0523 06:33:05.625802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:33:05.744027 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 6.993242223s
  E0523 06:33:06.625915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:33:06.745957 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 5.991175968s
  E0523 06:33:07.626690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:33:07.748899 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 4.988346139s
  E0523 06:33:08.626727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:33:08.751755 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 3.985305022s
  E0523 06:33:09.626737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:33:09.753850 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 2.98335187s
  E0523 06:33:10.627667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:33:10.756751 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 1.980357648s
  E0523 06:33:11.628399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:33:11.759304 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 977.668766ms
  E0523 06:33:12.629207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7739 @ 05/23/24 06:33:12.759
  I0523 06:33:12.761824 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=statefulset-7739 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0523 06:33:12.822816 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0523 06:33:12.822846 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0523 06:33:12.822859 22 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0523 06:33:12.824377 22 wait.go:40] Found 1 stateful pods, waiting for 3
  E0523 06:33:13.629298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:14.629320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:15.629679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:16.629766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:17.629866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:18.629998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:19.630497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:20.631385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:21.631510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:22.631597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:33:22.826041 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0523 06:33:22.826070 22 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0523 06:33:22.826079 22 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 05/23/24 06:33:22.826
  STEP: Scale down will halt with unhealthy stateful pod @ 05/23/24 06:33:22.826
  I0523 06:33:22.828785 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=statefulset-7739 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0523 06:33:22.889276 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0523 06:33:22.889306 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0523 06:33:22.889314 22 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0523 06:33:22.889427 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=statefulset-7739 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0523 06:33:22.959090 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0523 06:33:22.959121 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0523 06:33:22.959134 22 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0523 06:33:22.959174 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=statefulset-7739 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0523 06:33:23.027119 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0523 06:33:23.027149 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0523 06:33:23.027163 22 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0523 06:33:23.027173 22 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0523 06:33:23.028634 22 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0523 06:33:23.632673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:24.632991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:25.633220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:26.633341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:27.633465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:28.633914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:29.634072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:30.634194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:31.634314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:32.634433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:33:33.031543 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0523 06:33:33.031572 22 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0523 06:33:33.031579 22 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0523 06:33:33.037685 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 9.999999814s
  E0523 06:33:33.635376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:33:34.039690 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 8.998262367s
  E0523 06:33:34.636318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:33:35.041456 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 7.996461002s
  E0523 06:33:35.636814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:33:36.044013 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 6.993913527s
  E0523 06:33:36.637665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:33:37.045829 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 5.992132504s
  E0523 06:33:37.638468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:33:38.047697 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 4.9903167s
  E0523 06:33:38.639069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:33:39.050284 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 3.987666781s
  E0523 06:33:39.639870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:33:40.052122 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 2.985908198s
  E0523 06:33:40.640763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:33:41.053983 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 1.984023384s
  E0523 06:33:41.641591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:33:42.055884 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 982.196833ms
  E0523 06:33:42.642501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7739 @ 05/23/24 06:33:43.056
  I0523 06:33:43.058840 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=statefulset-7739 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0523 06:33:43.119958 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0523 06:33:43.119989 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0523 06:33:43.120070 22 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0523 06:33:43.120113 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=statefulset-7739 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0523 06:33:43.180722 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0523 06:33:43.180753 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0523 06:33:43.180762 22 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0523 06:33:43.180805 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=statefulset-7739 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0523 06:33:43.241519 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0523 06:33:43.241547 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0523 06:33:43.241556 22 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0523 06:33:43.241567 22 rest.go:150] Scaling statefulset ss to 0
  E0523 06:33:43.643029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:44.644021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:45.644820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:46.645057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:47.645124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:48.646015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:49.646219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:50.647163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:51.647291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:52.648319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 05/23/24 06:33:53.247
  I0523 06:33:53.247810 22 statefulset.go:135] Deleting all statefulset in ns statefulset-7739
  I0523 06:33:53.249270 22 rest.go:150] Scaling statefulset ss to 0
  I0523 06:33:53.262143 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0523 06:33:53.263133 22 rest.go:88] Deleting statefulset ss
  I0523 06:33:53.266975 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7739" for this suite. @ 05/23/24 06:33:53.268
• [70.635 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 05/23/24 06:33:53.271
  I0523 06:33:53.271669 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename webhook @ 05/23/24 06:33:53.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:33:53.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:33:53.28
  STEP: Setting up server cert @ 05/23/24 06:33:53.292
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/23/24 06:33:53.467
  STEP: Deploying the webhook pod @ 05/23/24 06:33:53.471
  STEP: Wait for the deployment to be ready @ 05/23/24 06:33:53.476
  I0523 06:33:53.479773 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0523 06:33:53.648781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:54.649238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/23/24 06:33:55.484
  STEP: Verifying the service has paired with the endpoint @ 05/23/24 06:33:55.489
  E0523 06:33:55.649347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:33:56.489329 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 05/23/24 06:33:56.492
  STEP: create a namespace for the webhook @ 05/23/24 06:33:56.498
  STEP: create a configmap should be unconditionally rejected by the webhook @ 05/23/24 06:33:56.504
  I0523 06:33:56.526431 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1075" for this suite. @ 05/23/24 06:33:56.528
  STEP: Destroying namespace "webhook-markers-5878" for this suite. @ 05/23/24 06:33:56.532
  STEP: Destroying namespace "fail-closed-namespace-3404" for this suite. @ 05/23/24 06:33:56.534
• [3.265 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 05/23/24 06:33:56.537
  I0523 06:33:56.537077 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename webhook @ 05/23/24 06:33:56.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:33:56.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:33:56.548
  STEP: Setting up server cert @ 05/23/24 06:33:56.561
  E0523 06:33:56.650322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/23/24 06:33:56.944
  STEP: Deploying the webhook pod @ 05/23/24 06:33:56.948
  STEP: Wait for the deployment to be ready @ 05/23/24 06:33:56.953
  I0523 06:33:56.956966 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0523 06:33:57.650437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:33:58.650708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/23/24 06:33:58.961
  STEP: Verifying the service has paired with the endpoint @ 05/23/24 06:33:58.965
  E0523 06:33:59.651480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:33:59.965685 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/23/24 06:33:59.968
  STEP: create a pod that should be denied by the webhook @ 05/23/24 06:33:59.976
  STEP: create a pod that causes the webhook to hang @ 05/23/24 06:33:59.982
  E0523 06:34:00.651764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:01.652806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:02.653255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:03.653330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:04.653462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:05.653544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:06.654465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:07.654825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:08.654913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:09.655071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 05/23/24 06:34:09.986
  STEP: create a configmap that should be admitted by the webhook @ 05/23/24 06:34:09.991
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/23/24 06:34:09.995
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/23/24 06:34:09.998
  STEP: create a namespace that bypass the webhook @ 05/23/24 06:34:09.999
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 05/23/24 06:34:10.005
  I0523 06:34:10.032214 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3558" for this suite. @ 05/23/24 06:34:10.033
  STEP: Destroying namespace "webhook-markers-1307" for this suite. @ 05/23/24 06:34:10.036
  STEP: Destroying namespace "exempted-namespace-794" for this suite. @ 05/23/24 06:34:10.038
• [13.505 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 05/23/24 06:34:10.042
  I0523 06:34:10.042426 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename disruption @ 05/23/24 06:34:10.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:34:10.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:34:10.056
  STEP: Waiting for the pdb to be processed @ 05/23/24 06:34:10.059
  E0523 06:34:10.655742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:11.656770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 05/23/24 06:34:12.061
  STEP: Waiting for all pods to be running @ 05/23/24 06:34:12.064
  I0523 06:34:12.065606 22 disruption.go:578] running pods: 0 < 1
  E0523 06:34:12.656858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:13.656992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 05/23/24 06:34:14.066
  STEP: Waiting for the pdb to be processed @ 05/23/24 06:34:14.07
  STEP: Patching PodDisruptionBudget status @ 05/23/24 06:34:14.074
  STEP: Waiting for the pdb to be processed @ 05/23/24 06:34:14.077
  I0523 06:34:14.078438 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9409" for this suite. @ 05/23/24 06:34:14.079
• [4.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 05/23/24 06:34:14.082
  I0523 06:34:14.082190 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename kubectl @ 05/23/24 06:34:14.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:34:14.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:34:14.09
  STEP: creating Agnhost RC @ 05/23/24 06:34:14.091
  I0523 06:34:14.091316 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-4775 create -f -'
  I0523 06:34:14.166167 22 builder.go:146] stderr: ""
  I0523 06:34:14.166195 22 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/23/24 06:34:14.166
  E0523 06:34:14.657504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:34:15.168060 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0523 06:34:15.168085 22 framework.go:733] Found 0 / 1
  E0523 06:34:15.657563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:34:16.168959 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0523 06:34:16.168981 22 framework.go:733] Found 1 / 1
  I0523 06:34:16.168994 22 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 05/23/24 06:34:16.169
  I0523 06:34:16.170180 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0523 06:34:16.170192 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0523 06:34:16.170228 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-4775 patch pod agnhost-primary-x2jkr -p {"metadata":{"annotations":{"x":"y"}}}'
  I0523 06:34:16.212162 22 builder.go:146] stderr: ""
  I0523 06:34:16.212190 22 builder.go:147] stdout: "pod/agnhost-primary-x2jkr patched\n"
  STEP: checking annotations @ 05/23/24 06:34:16.212
  I0523 06:34:16.213474 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0523 06:34:16.213489 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0523 06:34:16.213554 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4775" for this suite. @ 05/23/24 06:34:16.215
• [2.135 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 05/23/24 06:34:16.217
  I0523 06:34:16.217536 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename taint-multiple-pods @ 05/23/24 06:34:16.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:34:16.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:34:16.225
  I0523 06:34:16.226560 22 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0523 06:34:16.657943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:17.658793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:18.659512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:19.659749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:20.660390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:21.660476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:22.660989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:23.660992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:24.661863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:25.662307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:26.662562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:27.663519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:28.664186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:29.664803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:30.665446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:31.665926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:32.666560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:33.666864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:34.667732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:35.667751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:36.668356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:37.668443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:38.668670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:39.668909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:40.669525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:41.669665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:42.669735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:43.669860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:44.670709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:45.670830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:46.671141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:47.671577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:48.671976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:49.673020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:50.673673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:51.673758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:52.674351      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:53.674441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:54.675186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:55.675784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:56.676580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:57.676671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:58.677283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:34:59.677504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:00.677592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:01.678616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:02.679315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:03.679448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:04.680415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:05.680807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:06.681422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:07.682286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:08.682862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:09.683039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:10.683093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:11.683224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:12.683879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:13.684819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:14.685684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:15.686034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:35:16.226780 22 util.go:400] Waiting for terminating namespaces to be deleted...
  I0523 06:35:16.228726 22 taints.go:150] Starting informer...
  STEP: Starting pods... @ 05/23/24 06:35:16.228
  I0523 06:35:16.436347 22 taints.go:469] Pod1 is running on k8s-10-255-0-208. Tainting Node
  E0523 06:35:16.686395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:17.687400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:35:18.645495 22 taints.go:477] Pod2 is running on k8s-10-255-0-208. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/23/24 06:35:18.645
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/23/24 06:35:18.651
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 05/23/24 06:35:18.653
  E0523 06:35:18.688230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:19.688804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:20.688911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:21.689040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:22.689179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:23.689374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:35:24.530956 22 taints.go:498] Noticed Pod "taint-eviction-b1" gets evicted.
  E0523 06:35:24.690210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:25.690315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:26.690480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:27.690730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:28.690867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:29.691048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:30.691448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:31.691742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:32.692803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:33.692932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:34.693914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:35.694041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:36.694287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:37.694412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:38.694538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:39.694617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:40.695324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:41.695407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:42.695537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:43.696229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:35:44.555251 22 taints.go:498] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/23/24 06:35:44.561
  I0523 06:35:44.563021 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-1562" for this suite. @ 05/23/24 06:35:44.564
• [88.349 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:833
  STEP: Creating a kubernetes client @ 05/23/24 06:35:44.566
  I0523 06:35:44.566653 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename job @ 05/23/24 06:35:44.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:35:44.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:35:44.574
  STEP: Creating a job @ 05/23/24 06:35:44.575
  STEP: Ensure pods equal to parallelism count is attached to the job @ 05/23/24 06:35:44.578
  E0523 06:35:44.697065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:45.697975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 05/23/24 06:35:46.582
  STEP: updating /status @ 05/23/24 06:35:46.585
  STEP: get /status @ 05/23/24 06:35:46.589
  I0523 06:35:46.590305 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9836" for this suite. @ 05/23/24 06:35:46.591
• [2.027 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 05/23/24 06:35:46.593
  I0523 06:35:46.593929 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/23/24 06:35:46.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:35:46.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:35:46.602
  I0523 06:35:46.604122 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  E0523 06:35:46.699009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:35:47.619420 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2369" for this suite. @ 05/23/24 06:35:47.621
• [1.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 05/23/24 06:35:47.624
  I0523 06:35:47.624826 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename gc @ 05/23/24 06:35:47.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:35:47.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:35:47.633
  I0523 06:35:47.647538 22 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"37c64b0d-615f-4af9-a8e6-9b5de1619ef8", Controller:(*bool)(0xc00295ca4a), BlockOwnerDeletion:(*bool)(0xc00295ca4b)}}
  I0523 06:35:47.651090 22 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"090e1276-6219-4e8a-8094-4a4c0c78c2ae", Controller:(*bool)(0xc0030720ce), BlockOwnerDeletion:(*bool)(0xc0030720cf)}}
  I0523 06:35:47.657332 22 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"85b443d4-b942-43a6-9d9c-15638dc7f209", Controller:(*bool)(0xc002ea87e6), BlockOwnerDeletion:(*bool)(0xc002ea87e7)}}
  E0523 06:35:47.699449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:48.699590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:49.699777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:50.700831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:51.700959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:35:52.668950 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5985" for this suite. @ 05/23/24 06:35:52.67
• [5.048 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 05/23/24 06:35:52.673
  I0523 06:35:52.673214 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename discovery @ 05/23/24 06:35:52.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:35:52.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:35:52.683
  STEP: Setting up server cert @ 05/23/24 06:35:52.685
  E0523 06:35:52.701612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:35:53.029173 22 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0523 06:35:53.029701 22 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0523 06:35:53.029717 22 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0523 06:35:53.029725 22 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0523 06:35:53.029734 22 discovery.go:139] Checking APIGroup: apps
  I0523 06:35:53.030262 22 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0523 06:35:53.030283 22 discovery.go:148] Versions found [{apps/v1 v1}]
  I0523 06:35:53.030289 22 discovery.go:154] apps/v1 matches apps/v1
  I0523 06:35:53.030296 22 discovery.go:139] Checking APIGroup: events.k8s.io
  I0523 06:35:53.030748 22 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0523 06:35:53.030758 22 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0523 06:35:53.030762 22 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0523 06:35:53.030769 22 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0523 06:35:53.031175 22 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0523 06:35:53.031189 22 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0523 06:35:53.031207 22 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0523 06:35:53.031216 22 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0523 06:35:53.031617 22 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0523 06:35:53.031628 22 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0523 06:35:53.031634 22 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0523 06:35:53.031641 22 discovery.go:139] Checking APIGroup: autoscaling
  I0523 06:35:53.032065 22 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0523 06:35:53.032076 22 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0523 06:35:53.032082 22 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0523 06:35:53.032089 22 discovery.go:139] Checking APIGroup: batch
  I0523 06:35:53.032487 22 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0523 06:35:53.032499 22 discovery.go:148] Versions found [{batch/v1 v1}]
  I0523 06:35:53.032505 22 discovery.go:154] batch/v1 matches batch/v1
  I0523 06:35:53.032512 22 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0523 06:35:53.032916 22 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0523 06:35:53.032925 22 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0523 06:35:53.032930 22 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0523 06:35:53.032937 22 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0523 06:35:53.033319 22 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0523 06:35:53.033328 22 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0523 06:35:53.033332 22 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0523 06:35:53.033340 22 discovery.go:139] Checking APIGroup: policy
  I0523 06:35:53.033717 22 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0523 06:35:53.033726 22 discovery.go:148] Versions found [{policy/v1 v1}]
  I0523 06:35:53.033730 22 discovery.go:154] policy/v1 matches policy/v1
  I0523 06:35:53.033737 22 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0523 06:35:53.034116 22 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0523 06:35:53.034125 22 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0523 06:35:53.034130 22 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0523 06:35:53.034137 22 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0523 06:35:53.034524 22 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0523 06:35:53.034534 22 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0523 06:35:53.034538 22 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0523 06:35:53.034545 22 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0523 06:35:53.034903 22 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0523 06:35:53.034911 22 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0523 06:35:53.034918 22 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0523 06:35:53.034925 22 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0523 06:35:53.038903 22 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0523 06:35:53.038917 22 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0523 06:35:53.038922 22 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0523 06:35:53.038929 22 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0523 06:35:53.039332 22 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0523 06:35:53.039343 22 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0523 06:35:53.039348 22 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0523 06:35:53.039355 22 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0523 06:35:53.039736 22 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0523 06:35:53.039748 22 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0523 06:35:53.039753 22 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0523 06:35:53.039759 22 discovery.go:139] Checking APIGroup: node.k8s.io
  I0523 06:35:53.040174 22 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0523 06:35:53.040189 22 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0523 06:35:53.040201 22 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0523 06:35:53.040209 22 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0523 06:35:53.040592 22 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0523 06:35:53.040602 22 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0523 06:35:53.040607 22 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0523 06:35:53.040612 22 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0523 06:35:53.040982 22 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0523 06:35:53.040994 22 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I0523 06:35:53.040999 22 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0523 06:35:53.041006 22 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0523 06:35:53.041414 22 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0523 06:35:53.041424 22 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0523 06:35:53.041428 22 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0523 06:35:53.041490 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-4401" for this suite. @ 05/23/24 06:35:53.043
• [0.372 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 05/23/24 06:35:53.045
  I0523 06:35:53.045415 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename webhook @ 05/23/24 06:35:53.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:35:53.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:35:53.053
  STEP: Setting up server cert @ 05/23/24 06:35:53.065
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/23/24 06:35:53.205
  STEP: Deploying the webhook pod @ 05/23/24 06:35:53.209
  STEP: Wait for the deployment to be ready @ 05/23/24 06:35:53.215
  I0523 06:35:53.219333 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0523 06:35:53.701815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:54.702106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/23/24 06:35:55.224
  STEP: Verifying the service has paired with the endpoint @ 05/23/24 06:35:55.23
  E0523 06:35:55.702734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:35:56.230331 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/23/24 06:35:56.233
  STEP: create the configmap with a random name @ 05/23/24 06:35:56.25
  STEP: verify the configmap is mutated @ 05/23/24 06:35:56.256
  STEP: create the configmap with 'skip-me' name @ 05/23/24 06:35:56.256
  I0523 06:35:56.276729 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8570" for this suite. @ 05/23/24 06:35:56.28
  STEP: Destroying namespace "webhook-markers-7841" for this suite. @ 05/23/24 06:35:56.284
• [3.241 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 05/23/24 06:35:56.286
  I0523 06:35:56.286475 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename secrets @ 05/23/24 06:35:56.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:35:56.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:35:56.295
  STEP: Creating secret with name secret-test-bc5910e3-b1ed-4bd5-9419-a03b75d6e92c @ 05/23/24 06:35:56.297
  STEP: Creating a pod to test consume secrets @ 05/23/24 06:35:56.299
  E0523 06:35:56.703316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:57.704111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:58.704785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:35:59.705068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:36:00.311
  I0523 06:36:00.312858 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-secrets-1ba527c3-a9c9-4ab6-a5cc-4dd4d0c39d4e container secret-env-test: <nil>
  STEP: delete the pod @ 05/23/24 06:36:00.319
  I0523 06:36:00.325317 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4135" for this suite. @ 05/23/24 06:36:00.326
• [4.043 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 05/23/24 06:36:00.329
  I0523 06:36:00.329681 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 06:36:00.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:36:00.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:36:00.338
  STEP: Creating a pod to test downward API volume plugin @ 05/23/24 06:36:00.34
  E0523 06:36:00.706087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:01.706845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:02.706904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:03.707973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:36:04.349
  I0523 06:36:04.350945 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-45b0a25d-8b40-444d-99c5-bc905edd22ce container client-container: <nil>
  STEP: delete the pod @ 05/23/24 06:36:04.353
  I0523 06:36:04.359481 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5630" for this suite. @ 05/23/24 06:36:04.36
• [4.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 05/23/24 06:36:04.363
  I0523 06:36:04.363100 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename dns @ 05/23/24 06:36:04.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:36:04.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:36:04.37
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/23/24 06:36:04.372
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/23/24 06:36:04.372
  STEP: creating a pod to probe DNS @ 05/23/24 06:36:04.372
  STEP: submitting the pod to kubernetes @ 05/23/24 06:36:04.372
  E0523 06:36:04.708823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:05.709723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/23/24 06:36:06.38
  STEP: looking for the results for each expected name from probers @ 05/23/24 06:36:06.381
  I0523 06:36:06.401884 22 dns_common.go:527] DNS probes using dns-4367/dns-test-4b74358a-40d0-4860-be43-3699a85dc660 succeeded

  STEP: deleting the pod @ 05/23/24 06:36:06.401
  I0523 06:36:06.407313 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4367" for this suite. @ 05/23/24 06:36:06.408
• [2.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 05/23/24 06:36:06.411
  I0523 06:36:06.411313 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename runtimeclass @ 05/23/24 06:36:06.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:36:06.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:36:06.419
  I0523 06:36:06.423065 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4527" for this suite. @ 05/23/24 06:36:06.424
• [0.018 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 05/23/24 06:36:06.429
  I0523 06:36:06.429723 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename sysctl @ 05/23/24 06:36:06.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:36:06.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:36:06.437
  STEP: Creating a pod with one valid and two invalid sysctls @ 05/23/24 06:36:06.438
  I0523 06:36:06.440579 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7315" for this suite. @ 05/23/24 06:36:06.441
• [0.014 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1537
  STEP: Creating a kubernetes client @ 05/23/24 06:36:06.443
  I0523 06:36:06.443930 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename services @ 05/23/24 06:36:06.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:36:06.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:36:06.451
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-1692 @ 05/23/24 06:36:06.452
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/23/24 06:36:06.458
  STEP: creating service externalsvc in namespace services-1692 @ 05/23/24 06:36:06.458
  STEP: creating replication controller externalsvc in namespace services-1692 @ 05/23/24 06:36:06.465
  I0523 06:36:06.468249      22 runners.go:198] Created replication controller with name: externalsvc, namespace: services-1692, replica count: 2
  E0523 06:36:06.710110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:07.710999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:08.711806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:36:09.518798      22 runners.go:198] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 05/23/24 06:36:09.52
  I0523 06:36:09.526810 22 resource.go:361] Creating new exec pod
  E0523 06:36:09.712785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:10.713671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:36:11.537238 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-1692 exec execpodbjqmx -- /bin/sh -x -c nslookup nodeport-service.services-1692.svc.cluster.local'
  I0523 06:36:11.622434 22 builder.go:146] stderr: "+ nslookup nodeport-service.services-1692.svc.cluster.local\n"
  I0523 06:36:11.622466 22 builder.go:147] stdout: "Server:\t\t169.254.20.10\nAddress:\t169.254.20.10#53\n\nnodeport-service.services-1692.svc.cluster.local\tcanonical name = externalsvc.services-1692.svc.cluster.local.\nName:\texternalsvc.services-1692.svc.cluster.local\nAddress: 10.68.195.199\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-1692, will wait for the garbage collector to delete the pods @ 05/23/24 06:36:11.622
  I0523 06:36:11.677881 22 resources.go:139] Deleting ReplicationController externalsvc took: 3.145289ms
  E0523 06:36:11.714346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:36:11.778540 22 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.6553ms
  E0523 06:36:12.714362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:13.715365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:36:14.687080 22 service.go:1548] Cleaning up the NodePort to ExternalName test service
  I0523 06:36:14.692244 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1692" for this suite. @ 05/23/24 06:36:14.694
• [8.253 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 05/23/24 06:36:14.698
  I0523 06:36:14.698922 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename kubectl @ 05/23/24 06:36:14.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:36:14.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:36:14.707
  STEP: starting the proxy server @ 05/23/24 06:36:14.708
  I0523 06:36:14.708998 22 util.go:592] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-7735 proxy -p 0 --disable-filter'
  E0523 06:36:14.716198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: curling proxy /api/ output @ 05/23/24 06:36:14.741
  I0523 06:36:14.745192 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0523 06:36:14.746244 22 kubectl.go:2223] kubectl proxy stdout: Starting to serve on 127.0.0.1:42487

  I0523 06:36:14.746250 22 kubectl.go:2228] kubectl proxy stderr: W0523 06:36:14.740877     635 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-7735" for this suite. @ 05/23/24 06:36:14.746
• [0.050 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 05/23/24 06:36:14.748
  I0523 06:36:14.748989 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename dns @ 05/23/24 06:36:14.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:36:14.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:36:14.757
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 05/23/24 06:36:14.759
  I0523 06:36:14.764005 22 dns.go:419] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-2131  c3093409-ffb2-4068-8048-3c2bf2dfacc0 66972 0 2024-05-23 06:36:14 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-05-23 06:36:14 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xt8s8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xt8s8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0523 06:36:15.717018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:16.717096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 05/23/24 06:36:16.768
  I0523 06:36:16.768393 22 exec_util.go:55] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-2131 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 06:36:16.768410 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 06:36:16.768782 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 06:36:16.768818 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/dns-2131/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 05/23/24 06:36:16.8
  I0523 06:36:16.800178 22 exec_util.go:55] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-2131 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 06:36:16.800194 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 06:36:16.800629 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 06:36:16.800677 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/dns-2131/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0523 06:36:16.833854 22 dns.go:421] Deleting pod test-dns-nameservers...
  I0523 06:36:16.839159 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2131" for this suite. @ 05/23/24 06:36:16.841
• [2.094 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 05/23/24 06:36:16.843
  I0523 06:36:16.843589 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename var-expansion @ 05/23/24 06:36:16.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:36:16.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:36:16.853
  STEP: creating the pod with failed condition @ 05/23/24 06:36:16.854
  E0523 06:36:17.717639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:18.717851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:19.718862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:20.719018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:21.719762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:22.720796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:23.720895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:24.721172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:25.721239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:26.721390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:27.721646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:28.721732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:29.722760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:30.723155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:31.724168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:32.724820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:33.725768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:34.726046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:35.727137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:36.727274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:37.727749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:38.728809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:39.729843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:40.730110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:41.730193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:42.730271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:43.731211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:44.731535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:45.732533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:46.732599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:47.733041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:48.733180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:49.733633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:50.733766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:51.733961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:52.734101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:53.734805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:54.734939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:55.735200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:56.735333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:57.735429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:58.735563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:36:59.735838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:00.736821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:01.737558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:02.737655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:03.738445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:04.738707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:05.738852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:06.738995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:07.739888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:08.740101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:09.740810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:10.740943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:11.741776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:12.741845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:13.742876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:14.742935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:15.743892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:16.744814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:17.744909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:18.745037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:19.746034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:20.746837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:21.747324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:22.748024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:23.748823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:24.748936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:25.749945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:26.750158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:27.750255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:28.750337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:29.750947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:30.751086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:31.751144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:32.751277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:33.752190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:34.753201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:35.753461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:36.753606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:37.753668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:38.753826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:39.754781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:40.754926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:41.755937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:42.756815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:43.757776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:44.758035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:45.758051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:46.758185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:47.758909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:48.759086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:49.759944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:50.760830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:51.761726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:52.762063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:53.761900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:54.762148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:55.763151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:56.763264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:57.764311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:58.764803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:37:59.765860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:00.765977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:01.766957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:02.767078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:03.767498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:04.767748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:05.768708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:06.768835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:07.769897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:08.770022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:09.770963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:10.771085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:11.772044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:12.772800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:13.773485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:14.773831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:15.773867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:16.773996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 05/23/24 06:38:16.859
  I0523 06:38:17.365810 22 pod_client.go:141] Successfully updated pod "var-expansion-b5270b0c-b0a5-49bd-947f-0decaf1d7395"
  STEP: waiting for pod running @ 05/23/24 06:38:17.365
  E0523 06:38:17.774996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:18.775928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 05/23/24 06:38:19.372
  I0523 06:38:19.372361 22 delete.go:62] Deleting pod "var-expansion-b5270b0c-b0a5-49bd-947f-0decaf1d7395" in namespace "var-expansion-5000"
  I0523 06:38:19.375585 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-b5270b0c-b0a5-49bd-947f-0decaf1d7395" to be fully deleted
  E0523 06:38:19.776589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:20.776842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:21.777777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:22.777901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:23.778068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:24.778383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:25.779272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:26.779360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:27.780211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:28.780280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:29.780314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:30.780809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:31.781724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:32.781863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:33.782843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:34.783097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:35.783921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:36.784831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:37.784881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:38.785018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:39.785946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:40.786036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:41.786964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:42.787486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:43.788063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:44.788823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:45.789886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:46.789952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:47.790000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:48.790091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:49.790952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:50.791105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:38:51.413428 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5000" for this suite. @ 05/23/24 06:38:51.415
• [154.574 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:927
  STEP: Creating a kubernetes client @ 05/23/24 06:38:51.417
  I0523 06:38:51.417442 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename job @ 05/23/24 06:38:51.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:38:51.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:38:51.426
  STEP: Creating a suspended job @ 05/23/24 06:38:51.429
  STEP: Patching the Job @ 05/23/24 06:38:51.431
  STEP: Watching for Job to be patched @ 05/23/24 06:38:51.435
  I0523 06:38:51.435990 22 job.go:1109] Event ADDED observed for Job e2e-np9jb in namespace job-4159 with labels: map[e2e-job-label:e2e-np9jb] and annotations: map[]
  I0523 06:38:51.436009 22 job.go:1112] Event MODIFIED found for Job e2e-np9jb in namespace job-4159 with labels: map[e2e-job-label:e2e-np9jb e2e-np9jb:patched] and annotations: map[]
  STEP: Updating the job @ 05/23/24 06:38:51.436
  STEP: Watching for Job to be updated @ 05/23/24 06:38:51.439
  I0523 06:38:51.440600 22 job.go:1112] Event MODIFIED found for Job e2e-np9jb in namespace job-4159 with labels: map[e2e-job-label:e2e-np9jb e2e-np9jb:patched] and annotations: map[updated:true]
  I0523 06:38:51.440635 22 job.go:1005] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 05/23/24 06:38:51.44
  I0523 06:38:51.441653 22 job.go:1012] Job: e2e-np9jb as labels: map[e2e-job-label:e2e-np9jb e2e-np9jb:patched]
  STEP: Waiting for job to complete @ 05/23/24 06:38:51.441
  E0523 06:38:51.792098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:52.792138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:53.792821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:54.793039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:55.793488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:56.793589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:57.794594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:38:58.794681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 05/23/24 06:38:59.444
  STEP: Watching for Job to be deleted @ 05/23/24 06:38:59.446
  I0523 06:38:59.447895 22 job.go:1109] Event MODIFIED observed for Job e2e-np9jb in namespace job-4159 with labels: map[e2e-job-label:e2e-np9jb e2e-np9jb:patched] and annotations: map[updated:true]
  I0523 06:38:59.448001 22 job.go:1109] Event MODIFIED observed for Job e2e-np9jb in namespace job-4159 with labels: map[e2e-job-label:e2e-np9jb e2e-np9jb:patched] and annotations: map[updated:true]
  I0523 06:38:59.448016 22 job.go:1109] Event MODIFIED observed for Job e2e-np9jb in namespace job-4159 with labels: map[e2e-job-label:e2e-np9jb e2e-np9jb:patched] and annotations: map[updated:true]
  I0523 06:38:59.448028 22 job.go:1109] Event MODIFIED observed for Job e2e-np9jb in namespace job-4159 with labels: map[e2e-job-label:e2e-np9jb e2e-np9jb:patched] and annotations: map[updated:true]
  I0523 06:38:59.448096 22 job.go:1109] Event MODIFIED observed for Job e2e-np9jb in namespace job-4159 with labels: map[e2e-job-label:e2e-np9jb e2e-np9jb:patched] and annotations: map[updated:true]
  I0523 06:38:59.448131 22 job.go:1109] Event MODIFIED observed for Job e2e-np9jb in namespace job-4159 with labels: map[e2e-job-label:e2e-np9jb e2e-np9jb:patched] and annotations: map[updated:true]
  I0523 06:38:59.448162 22 job.go:1109] Event MODIFIED observed for Job e2e-np9jb in namespace job-4159 with labels: map[e2e-job-label:e2e-np9jb e2e-np9jb:patched] and annotations: map[updated:true]
  I0523 06:38:59.448252 22 job.go:1112] Event DELETED found for Job e2e-np9jb in namespace job-4159 with labels: map[e2e-job-label:e2e-np9jb e2e-np9jb:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 05/23/24 06:38:59.448
  I0523 06:38:59.449448 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4159" for this suite. @ 05/23/24 06:38:59.45
• [8.036 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 05/23/24 06:38:59.454
  I0523 06:38:59.454109 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename configmap @ 05/23/24 06:38:59.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:38:59.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:38:59.466
  STEP: Creating configMap with name configmap-test-volume-c8411fea-cb9d-4579-a5a9-d45c3825279c @ 05/23/24 06:38:59.468
  STEP: Creating a pod to test consume configMaps @ 05/23/24 06:38:59.469
  E0523 06:38:59.795016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:00.795998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:01.796822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:02.796853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:39:03.478
  I0523 06:39:03.480082 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-configmaps-97e51b16-0fd7-4faf-bd41-27120d723e4d container configmap-volume-test: <nil>
  STEP: delete the pod @ 05/23/24 06:39:03.491
  I0523 06:39:03.497928 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5282" for this suite. @ 05/23/24 06:39:03.499
• [4.048 seconds]
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 05/23/24 06:39:03.502
  I0523 06:39:03.502388 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename replicaset @ 05/23/24 06:39:03.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:39:03.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:39:03.511
  STEP: Create a ReplicaSet @ 05/23/24 06:39:03.512
  STEP: Verify that the required pods have come up @ 05/23/24 06:39:03.515
  I0523 06:39:03.516845 22 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  E0523 06:39:03.797267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:04.797694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:05.797825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:06.798468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:07.798595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:39:08.519151 22 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 05/23/24 06:39:08.519
  I0523 06:39:08.520350 22 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 05/23/24 06:39:08.52
  STEP: DeleteCollection of the ReplicaSets @ 05/23/24 06:39:08.522
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 05/23/24 06:39:08.524
  I0523 06:39:08.526420 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-409" for this suite. @ 05/23/24 06:39:08.528
• [5.029 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 05/23/24 06:39:08.531
  I0523 06:39:08.531676 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename namespaces @ 05/23/24 06:39:08.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:39:08.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:39:08.545
  STEP: Updating Namespace "namespaces-8757" @ 05/23/24 06:39:08.547
  I0523 06:39:08.555351 22 namespace.go:389] Namespace "namespaces-8757" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"cc741619-3e38-42a8-a592-6d2dbc5a90ec", "kubernetes.io/metadata.name":"namespaces-8757", "namespaces-8757":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0523 06:39:08.555407 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8757" for this suite. @ 05/23/24 06:39:08.557
• [0.028 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 05/23/24 06:39:08.559
  I0523 06:39:08.559933 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename lease-test @ 05/23/24 06:39:08.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:39:08.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:39:08.568
  I0523 06:39:08.594660 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-9540" for this suite. @ 05/23/24 06:39:08.596
• [0.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 05/23/24 06:39:08.601
  I0523 06:39:08.601801 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename crd-watch @ 05/23/24 06:39:08.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:39:08.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:39:08.614
  I0523 06:39:08.616012 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  E0523 06:39:08.799525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:09.799895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:10.800810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 05/23/24 06:39:11.139
  I0523 06:39:11.142111 22 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-23T06:39:11Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-23T06:39:11Z]] name:name1 resourceVersion:67625 uid:6f9d587f-6185-4fb0-9958-4a6a9c64a88b] num:map[num1:9223372036854775807 num2:1000000]]}
  E0523 06:39:11.801791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:12.801863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:13.801991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:14.802166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:15.802250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:16.802983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:17.803069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:18.803289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:19.803368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:20.804291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 05/23/24 06:39:21.142
  I0523 06:39:21.145604 22 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-23T06:39:21Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-23T06:39:21Z]] name:name2 resourceVersion:67674 uid:282d1eaa-c7b5-4308-9b47-ce8fc53be25a] num:map[num1:9223372036854775807 num2:1000000]]}
  E0523 06:39:21.804806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:22.804891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:23.805751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:24.806049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:25.806754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:26.806993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:27.807923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:28.808816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:29.808994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:30.809684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 05/23/24 06:39:31.146
  I0523 06:39:31.149289 22 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-23T06:39:11Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-23T06:39:31Z]] name:name1 resourceVersion:67691 uid:6f9d587f-6185-4fb0-9958-4a6a9c64a88b] num:map[num1:9223372036854775807 num2:1000000]]}
  E0523 06:39:31.809881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:32.810461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:33.811417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:34.811540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:35.811670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:36.811749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:37.812812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:38.812901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:39.813064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:40.813518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 05/23/24 06:39:41.149
  I0523 06:39:41.152982 22 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-23T06:39:21Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-23T06:39:41Z]] name:name2 resourceVersion:67707 uid:282d1eaa-c7b5-4308-9b47-ce8fc53be25a] num:map[num1:9223372036854775807 num2:1000000]]}
  E0523 06:39:41.813602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:42.814513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:43.815277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:44.815363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:45.815489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:46.815622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:47.815752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:48.816813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:49.816925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:50.817127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 05/23/24 06:39:51.153
  I0523 06:39:51.158107 22 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-23T06:39:11Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-23T06:39:31Z]] name:name1 resourceVersion:67723 uid:6f9d587f-6185-4fb0-9958-4a6a9c64a88b] num:map[num1:9223372036854775807 num2:1000000]]}
  E0523 06:39:51.817425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:52.817760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:53.817746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:54.818709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:55.819614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:56.819743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:57.820816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:58.820940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:39:59.820999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:00.821126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 05/23/24 06:40:01.158
  I0523 06:40:01.161685 22 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-23T06:39:21Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-23T06:39:41Z]] name:name2 resourceVersion:67739 uid:282d1eaa-c7b5-4308-9b47-ce8fc53be25a] num:map[num1:9223372036854775807 num2:1000000]]}
  E0523 06:40:01.821242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:02.821364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:03.822256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:04.822331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:05.822458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:06.822542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:07.822627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:08.823286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:09.823502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:10.823639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:40:11.668571 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-2504" for this suite. @ 05/23/24 06:40:11.67
• [63.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 05/23/24 06:40:11.673
  I0523 06:40:11.673729 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename chunking @ 05/23/24 06:40:11.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:40:11.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:40:11.682
  STEP: creating a large number of resources @ 05/23/24 06:40:11.684
  E0523 06:40:11.824698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:12.824926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:13.825400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:14.826117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:15.826562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:16.826883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:17.827419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:18.828213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:19.828774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:20.829207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:21.829794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:22.830292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:23.830880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:24.831054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:25.831352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:26.831846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:27.832779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:28.833535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 05/23/24 06:40:29.377
  I0523 06:40:29.426969 22 chunking.go:163] Retrieved 40/40 results with rv 68200 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjgyMDAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 05/23/24 06:40:29.426
  E0523 06:40:29.834341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:30.834482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:31.834618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:32.834710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:33.834785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:34.835010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:35.835114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:36.835203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:37.835252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:38.835384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:39.835703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:40.835751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:41.835836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:42.836799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:43.837541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:44.837629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:45.837718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:46.838710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:47.838794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:48.838878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:40:49.430043 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjgyMDAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0523 06:40:49.838958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:50.839046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:51.839173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:52.839250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:53.839738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:54.839758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:55.840804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:56.841228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:57.841315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:58.841436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:40:59.841632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:00.841838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:01.841880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:02.842009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:03.842129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:04.842218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:05.842353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:06.842483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:07.842607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:08.843611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:41:09.429900 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjgyMDAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0523 06:41:09.844231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:10.844809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:11.844934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:12.845016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:13.845144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:14.845977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:15.846065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:16.846908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:17.847035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:18.847115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:19.847280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:20.847364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:21.847420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:22.848266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:23.848802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:24.849046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:25.850114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:26.850672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:27.850796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:28.850877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:41:29.430084 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjgyMDAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0523 06:41:29.850961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:30.851039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:31.851662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:32.851770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:33.852815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:34.853052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:35.853182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:36.853303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:37.853417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:38.854320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:39.854546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:40.854669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:41.854787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:42.854915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:43.855034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:44.855298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:45.855380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:46.855505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:47.855676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:48.855749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:41:49.430074 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjgyMDAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0523 06:41:49.856398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:50.857052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:51.857175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:52.857624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:53.857472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:54.858370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:55.858444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:56.858743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:57.859299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:58.859880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:41:59.860803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:00.861094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:01.861216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:02.861315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:03.861460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:04.861802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:05.861888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:06.861974      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:07.862098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:08.862220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:42:09.430288 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjgyMDAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0523 06:42:09.862302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:10.862389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:11.862511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:12.862592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:13.862683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:14.862729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:15.862859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:16.862988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:17.863020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:18.863141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:19.863969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:20.864057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:21.864805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:22.864927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:23.865016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:24.865297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:25.865378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:26.865727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:27.865856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:28.865934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:42:29.429922 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjgyMDAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0523 06:42:29.865966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:30.866850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:31.866976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:32.867100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:33.867574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:34.867742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:35.868812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:36.868938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:37.869057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:38.869819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:39.869866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:40.869999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:41.870126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:42.870251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:43.870375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:44.870715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:45.870844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:46.870965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:47.871707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:48.871757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:42:49.430088 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjgyMDAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0523 06:42:49.872265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:50.872804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:51.873122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:52.873969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:53.874538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:54.874880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:55.874967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:56.874993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:57.875575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:58.875714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:42:59.875748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:00.876808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:01.876930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:02.877048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:03.877989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:04.878264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:05.878390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:06.878528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:07.879333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:08.879453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:43:09.429831 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjgyMDAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0523 06:43:09.880237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:10.880804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:11.880929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:12.881014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:13.881166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:14.882191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:15.882409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:16.882545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:17.882670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:18.882795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:19.882877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:20.882995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:21.883801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:22.884807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:23.885059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:24.885099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:25.885915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:26.886935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:27.887062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:28.887147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:43:29.430300 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjgyMDAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0523 06:43:29.887230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:30.888197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:31.888277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:32.888369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:33.888944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:34.889102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:35.889236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:36.889360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:37.889481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:38.889611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:39.889807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:40.889860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:41.889985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:42.890115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:43.891166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:44.891320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:45.891742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:46.892802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:47.893246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:48.893359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:43:49.429710 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjgyMDAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0523 06:43:49.894117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:50.894800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:51.895536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:52.895872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:53.896196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:54.896417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:55.896513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:56.896800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:57.897802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:58.897878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:43:59.898508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:00.898644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:01.899211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:02.900196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:03.900521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:04.900737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:05.900865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:06.900984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:07.901108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:08.901233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:44:09.430379 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjgyMDAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0523 06:44:09.901738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:10.901861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:11.901948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:12.902068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:13.902532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:14.902611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:15.902737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:16.902817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:17.902937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:18.903057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:19.903099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:20.903170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:21.903290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:22.903374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:23.904175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:24.905141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:25.905225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:26.905348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:27.905432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:28.905514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:44:29.429950 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjgyMDAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0523 06:44:29.905899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:30.905986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:31.906111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:32.906195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:33.906535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:34.906753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:35.906836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:36.906917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:37.907943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:38.908028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:39.908271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:40.908803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:41.908928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:42.909006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:43.909233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:44.910075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:45.910162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:46.910285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:47.910406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:48.910489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:44:49.429597 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjgyMDAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0523 06:44:49.910574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:50.910709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:51.910828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:52.910914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:53.911733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:54.911810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:55.912806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:56.913610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:57.913734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:58.914710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:44:59.914993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:00.915080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:01.915209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:02.915338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:03.915935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:04.916800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:05.916917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:06.917593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:07.917846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:08.917937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:45:09.430282 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjgyMDAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0523 06:45:09.918262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:10.918347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:11.918471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:12.918561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:13.918983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:14.919162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:15.919240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:16.919361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:17.919533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:18.919609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:19.920592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:20.920809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:21.920929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:22.921019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:23.921251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:24.921466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:25.921526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:26.921596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:27.921724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:28.921798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:45:29.430238 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjgyMDAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0523 06:45:29.922644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:30.922763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:31.922852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:32.922976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:33.923529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:34.923742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:35.924813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:36.924944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:37.925072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:38.925157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:39.925321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:40.925414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:41.925485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:42.925577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:43.925951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:44.926114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:45.926880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:46.927855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:47.928816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:48.929636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:45:49.429857 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjgyMDAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0523 06:45:49.930037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:50.930119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:51.930255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:52.930601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:53.931285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:54.931525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:55.931611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:56.931740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:57.932805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:58.932931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:45:59.933096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:00.933180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:01.933482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:02.933565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:03.933949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:04.934133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:05.934201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:06.934327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:07.934448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:08.934571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:46:09.429657 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjgyMDAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0523 06:46:09.935082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:10.935197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:11.935320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:12.935439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:13.935968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:14.936809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:15.936900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:16.937030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:17.937124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:18.938009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:19.938166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:20.938286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:21.938402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:22.938529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:23.938957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:24.939109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:25.939302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:26.939385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:27.939516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:28.939653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:46:29.429765 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjgyMDAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0523 06:46:29.939744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:30.940808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:31.940894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:32.940987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:33.941200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:34.941361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:35.941486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:36.941603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:37.941809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:38.941935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:39.942906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:40.943033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:41.943111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:42.943233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:43.944298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:44.944930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:45.945007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:46.945980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:47.946114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:48.946139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:46:49.430227 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjgyMDAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0523 06:46:49.946594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:50.947522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:51.947960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:52.948023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:53.948241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:54.948804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:55.948927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:56.949016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:57.949093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:58.949842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:46:59.949921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:00.950516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:01.950638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:02.951580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:03.951942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:04.952805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:05.953670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:06.953810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:07.954426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:08.954506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:47:09.429728 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjgyMDAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0523 06:47:09.955213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:10.955297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:11.955377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:12.955500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:13.956563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:14.956777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:15.956867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:16.956949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:17.957560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:18.957676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:19.957896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:20.958123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:21.958247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:22.958373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:23.958564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:24.958784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:25.958869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:26.959900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:27.959983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:28.960806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:47:29.429154 22 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0523 06:47:29.429187 22 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 05/23/24 06:47:29.429
  STEP: retrieving all remaining pages @ 05/23/24 06:47:29.431
  I0523 06:47:29.433001 22 chunking.go:221] Retrieved 40/40 results with rv 68847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0523 06:47:29.434696 22 chunking.go:221] Retrieved 40/40 results with rv 68847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0523 06:47:29.436333 22 chunking.go:221] Retrieved 40/40 results with rv 68847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0523 06:47:29.437914 22 chunking.go:221] Retrieved 40/40 results with rv 68847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0523 06:47:29.439511 22 chunking.go:221] Retrieved 40/40 results with rv 68847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0523 06:47:29.441213 22 chunking.go:221] Retrieved 40/40 results with rv 68847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0523 06:47:29.442850 22 chunking.go:221] Retrieved 40/40 results with rv 68847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0523 06:47:29.444460 22 chunking.go:221] Retrieved 40/40 results with rv 68847 and continue 
  I0523 06:47:29.444559 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7635" for this suite. @ 05/23/24 06:47:29.445
• [437.774 seconds]
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 05/23/24 06:47:29.448
  I0523 06:47:29.448128 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename ingress @ 05/23/24 06:47:29.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:47:29.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:47:29.456
  STEP: getting /apis @ 05/23/24 06:47:29.458
  STEP: getting /apis/networking.k8s.io @ 05/23/24 06:47:29.46
  STEP: getting /apis/networking.k8s.iov1 @ 05/23/24 06:47:29.46
  STEP: creating @ 05/23/24 06:47:29.461
  STEP: getting @ 05/23/24 06:47:29.467
  STEP: listing @ 05/23/24 06:47:29.468
  STEP: watching @ 05/23/24 06:47:29.469
  I0523 06:47:29.469079 22 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 05/23/24 06:47:29.469
  STEP: cluster-wide watching @ 05/23/24 06:47:29.47
  I0523 06:47:29.470513 22 ingress.go:198] starting watch
  STEP: patching @ 05/23/24 06:47:29.47
  STEP: updating @ 05/23/24 06:47:29.473
  I0523 06:47:29.475671 22 ingress.go:221] waiting for watch events with expected annotations
  I0523 06:47:29.475692 22 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 05/23/24 06:47:29.475
  STEP: updating /status @ 05/23/24 06:47:29.477
  STEP: get /status @ 05/23/24 06:47:29.481
  STEP: deleting @ 05/23/24 06:47:29.482
  STEP: deleting a collection @ 05/23/24 06:47:29.492
  I0523 06:47:29.496882 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-9196" for this suite. @ 05/23/24 06:47:29.498
• [0.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 05/23/24 06:47:29.5
  I0523 06:47:29.500964 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 06:47:29.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:47:29.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:47:29.509
  STEP: Creating a pod to test downward API volume plugin @ 05/23/24 06:47:29.51
  E0523 06:47:29.961498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:30.961558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:31.962412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:32.962661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:47:33.52
  I0523 06:47:33.521297 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-6cb24951-a806-4566-91aa-97f1d1caea16 container client-container: <nil>
  STEP: delete the pod @ 05/23/24 06:47:33.534
  I0523 06:47:33.541832 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2987" for this suite. @ 05/23/24 06:47:33.543
• [4.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 05/23/24 06:47:33.545
  I0523 06:47:33.545626 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 06:47:33.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:47:33.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:47:33.554
  STEP: Creating configMap with name configmap-projected-all-test-volume-e41ac5f9-763c-46ea-abe9-7cf8cdf28e56 @ 05/23/24 06:47:33.555
  STEP: Creating secret with name secret-projected-all-test-volume-20a9dc6f-ad73-43ea-92a4-a206bcf18299 @ 05/23/24 06:47:33.557
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 05/23/24 06:47:33.558
  E0523 06:47:33.962987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:34.964040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:35.964604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:36.964826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:47:37.568
  I0523 06:47:37.569692 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod projected-volume-97f27270-ebb0-4184-b19e-96d7212a67e8 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 05/23/24 06:47:37.571
  I0523 06:47:37.578293 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1038" for this suite. @ 05/23/24 06:47:37.579
• [4.036 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 05/23/24 06:47:37.581
  I0523 06:47:37.581985 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename svcaccounts @ 05/23/24 06:47:37.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:47:37.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:47:37.589
  I0523 06:47:37.596346 22 service_accounts.go:618] created pod
  E0523 06:47:37.964908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:38.964982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:39.965733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:40.966357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:47:41.601
  E0523 06:47:41.966898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:42.967034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:43.967301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:44.967548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:45.967680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:46.967757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:47.968800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:48.968884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:49.969710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:50.969827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:51.969945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:52.970429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:53.970579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:54.970828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:55.970963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:56.971030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:57.971158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:58.971585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:47:59.971742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:00.971830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:01.972804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:02.972925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:03.973579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:04.973665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:05.973790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:06.973923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:07.974044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:08.974162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:09.974319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:10.974439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:48:11.602199 22 service_accounts.go:624] polling logs
  I0523 06:48:11.605212 22 service_accounts.go:634] Pod logs: 
  I0523 06:47:38.128703       1 log.go:245] OK: Got token
  I0523 06:47:38.128735       1 log.go:245] validating with in-cluster discovery
  I0523 06:47:38.128961       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0523 06:47:38.128982       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-8373:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000523028), NotBefore:(*jwt.NumericDate)(0xc000523110), IssuedAt:(*jwt.NumericDate)(0xc000523038), ID:"90ae4e43-18b1-4394-9b75-062b01ce2eb1"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8373", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"06c78f69-727f-4399-a384-2ac28a156c2f"}}}
  I0523 06:47:38.134174       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0523 06:47:38.138427       1 log.go:245] OK: Validated signature on JWT
  I0523 06:47:38.138469       1 log.go:245] OK: Got valid claims from token!
  I0523 06:47:38.138490       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-8373:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000324da0), NotBefore:(*jwt.NumericDate)(0xc000324dc8), IssuedAt:(*jwt.NumericDate)(0xc000324da8), ID:"90ae4e43-18b1-4394-9b75-062b01ce2eb1"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8373", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"06c78f69-727f-4399-a384-2ac28a156c2f"}}}

  I0523 06:48:11.605244 22 service_accounts.go:638] completed pod
  I0523 06:48:11.607408 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8373" for this suite. @ 05/23/24 06:48:11.608
• [34.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2203
  STEP: Creating a kubernetes client @ 05/23/24 06:48:11.611
  I0523 06:48:11.611100 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename services @ 05/23/24 06:48:11.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:48:11.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:48:11.619
  STEP: creating service in namespace services-9866 @ 05/23/24 06:48:11.621
  STEP: creating service affinity-clusterip-transition in namespace services-9866 @ 05/23/24 06:48:11.621
  STEP: creating replication controller affinity-clusterip-transition in namespace services-9866 @ 05/23/24 06:48:11.625
  I0523 06:48:11.629517      22 runners.go:198] Created replication controller with name: affinity-clusterip-transition, namespace: services-9866, replica count: 3
  E0523 06:48:11.975137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:12.975360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:13.976304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:48:14.680167      22 runners.go:198] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0523 06:48:14.682998 22 resource.go:361] Creating new exec pod
  E0523 06:48:14.976812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:15.976959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:16.977484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:48:17.689324 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-9866 exec execpod-affinitymqdch -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0523 06:48:17.754949 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I0523 06:48:17.754987 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0523 06:48:17.755060 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-9866 exec execpod-affinitymqdch -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.26.130 80'
  I0523 06:48:17.816347 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.26.130 80\nConnection to 10.68.26.130 80 port [tcp/http] succeeded!\n"
  I0523 06:48:17.816385 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0523 06:48:17.820159 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-9866 exec execpod-affinitymqdch -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.68.26.130:80/ ; done'
  I0523 06:48:17.925803 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n"
  I0523 06:48:17.925877 22 builder.go:147] stdout: "\naffinity-clusterip-transition-vbrlg\naffinity-clusterip-transition-p9d4j\naffinity-clusterip-transition-986v7\naffinity-clusterip-transition-vbrlg\naffinity-clusterip-transition-p9d4j\naffinity-clusterip-transition-986v7\naffinity-clusterip-transition-vbrlg\naffinity-clusterip-transition-p9d4j\naffinity-clusterip-transition-986v7\naffinity-clusterip-transition-vbrlg\naffinity-clusterip-transition-p9d4j\naffinity-clusterip-transition-986v7\naffinity-clusterip-transition-vbrlg\naffinity-clusterip-transition-p9d4j\naffinity-clusterip-transition-986v7\naffinity-clusterip-transition-vbrlg"
  I0523 06:48:17.925892 22 service.go:242] Received response from host: affinity-clusterip-transition-vbrlg
  I0523 06:48:17.925902 22 service.go:242] Received response from host: affinity-clusterip-transition-p9d4j
  I0523 06:48:17.925910 22 service.go:242] Received response from host: affinity-clusterip-transition-986v7
  I0523 06:48:17.925920 22 service.go:242] Received response from host: affinity-clusterip-transition-vbrlg
  I0523 06:48:17.925987 22 service.go:242] Received response from host: affinity-clusterip-transition-p9d4j
  I0523 06:48:17.925995 22 service.go:242] Received response from host: affinity-clusterip-transition-986v7
  I0523 06:48:17.926038 22 service.go:242] Received response from host: affinity-clusterip-transition-vbrlg
  I0523 06:48:17.926046 22 service.go:242] Received response from host: affinity-clusterip-transition-p9d4j
  I0523 06:48:17.926059 22 service.go:242] Received response from host: affinity-clusterip-transition-986v7
  I0523 06:48:17.926067 22 service.go:242] Received response from host: affinity-clusterip-transition-vbrlg
  I0523 06:48:17.926079 22 service.go:242] Received response from host: affinity-clusterip-transition-p9d4j
  I0523 06:48:17.926086 22 service.go:242] Received response from host: affinity-clusterip-transition-986v7
  I0523 06:48:17.926094 22 service.go:242] Received response from host: affinity-clusterip-transition-vbrlg
  I0523 06:48:17.926101 22 service.go:242] Received response from host: affinity-clusterip-transition-p9d4j
  I0523 06:48:17.926109 22 service.go:242] Received response from host: affinity-clusterip-transition-986v7
  I0523 06:48:17.926115 22 service.go:242] Received response from host: affinity-clusterip-transition-vbrlg
  I0523 06:48:17.929937 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-9866 exec execpod-affinitymqdch -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.68.26.130:80/ ; done'
  E0523 06:48:17.978233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:48:18.034853 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.26.130:80/\n"
  I0523 06:48:18.034895 22 builder.go:147] stdout: "\naffinity-clusterip-transition-986v7\naffinity-clusterip-transition-986v7\naffinity-clusterip-transition-986v7\naffinity-clusterip-transition-986v7\naffinity-clusterip-transition-986v7\naffinity-clusterip-transition-986v7\naffinity-clusterip-transition-986v7\naffinity-clusterip-transition-986v7\naffinity-clusterip-transition-986v7\naffinity-clusterip-transition-986v7\naffinity-clusterip-transition-986v7\naffinity-clusterip-transition-986v7\naffinity-clusterip-transition-986v7\naffinity-clusterip-transition-986v7\naffinity-clusterip-transition-986v7\naffinity-clusterip-transition-986v7"
  I0523 06:48:18.034910 22 service.go:242] Received response from host: affinity-clusterip-transition-986v7
  I0523 06:48:18.034919 22 service.go:242] Received response from host: affinity-clusterip-transition-986v7
  I0523 06:48:18.034929 22 service.go:242] Received response from host: affinity-clusterip-transition-986v7
  I0523 06:48:18.034936 22 service.go:242] Received response from host: affinity-clusterip-transition-986v7
  I0523 06:48:18.034945 22 service.go:242] Received response from host: affinity-clusterip-transition-986v7
  I0523 06:48:18.034967 22 service.go:242] Received response from host: affinity-clusterip-transition-986v7
  I0523 06:48:18.034977 22 service.go:242] Received response from host: affinity-clusterip-transition-986v7
  I0523 06:48:18.034987 22 service.go:242] Received response from host: affinity-clusterip-transition-986v7
  I0523 06:48:18.034995 22 service.go:242] Received response from host: affinity-clusterip-transition-986v7
  I0523 06:48:18.035003 22 service.go:242] Received response from host: affinity-clusterip-transition-986v7
  I0523 06:48:18.035013 22 service.go:242] Received response from host: affinity-clusterip-transition-986v7
  I0523 06:48:18.035023 22 service.go:242] Received response from host: affinity-clusterip-transition-986v7
  I0523 06:48:18.035031 22 service.go:242] Received response from host: affinity-clusterip-transition-986v7
  I0523 06:48:18.035041 22 service.go:242] Received response from host: affinity-clusterip-transition-986v7
  I0523 06:48:18.035047 22 service.go:242] Received response from host: affinity-clusterip-transition-986v7
  I0523 06:48:18.035056 22 service.go:242] Received response from host: affinity-clusterip-transition-986v7
  I0523 06:48:18.035110 22 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-9866, will wait for the garbage collector to delete the pods @ 05/23/24 06:48:18.041
  I0523 06:48:18.096027 22 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 2.436925ms
  I0523 06:48:18.196261 22 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.229528ms
  E0523 06:48:18.978676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:19.978961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:48:20.904127 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9866" for this suite. @ 05/23/24 06:48:20.906
• [9.299 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 05/23/24 06:48:20.91
  I0523 06:48:20.910208 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename pod-network-test @ 05/23/24 06:48:20.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:48:20.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:48:20.919
  STEP: Performing setup for networking test in namespace pod-network-test-505 @ 05/23/24 06:48:20.921
  STEP: creating a selector @ 05/23/24 06:48:20.921
  STEP: Creating the service pods in kubernetes @ 05/23/24 06:48:20.921
  I0523 06:48:20.921276 22 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0523 06:48:20.979189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:21.979427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:22.979445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:23.979525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:24.980568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:25.981201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:26.981518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:27.981616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:28.982527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:29.982759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:30.983397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:31.983528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/23/24 06:48:32.96
  E0523 06:48:32.983539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:33.984181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:48:34.967446 22 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0523 06:48:34.967469 22 networking.go:42] Breadth first check of 172.20.254.7 on host 10.255.0.207...
  I0523 06:48:34.968608 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.64.190:9080/dial?request=hostname&protocol=udp&host=172.20.254.7&port=8081&tries=1'] Namespace:pod-network-test-505 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 06:48:34.968625 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 06:48:34.968995 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 06:48:34.969034 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-505/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.64.190%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.20.254.7%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E0523 06:48:34.984324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:48:34.994523 22 utils.go:331] Waiting for responses: map[]
  I0523 06:48:34.994549 22 utils.go:335] reached 172.20.254.7 after 0/1 tries
  I0523 06:48:34.994558 22 networking.go:42] Breadth first check of 172.20.64.169 on host 10.255.0.208...
  I0523 06:48:34.995901 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.64.190:9080/dial?request=hostname&protocol=udp&host=172.20.64.169&port=8081&tries=1'] Namespace:pod-network-test-505 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 06:48:34.995919 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 06:48:34.996308 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 06:48:34.996349 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-505/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.64.190%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.20.64.169%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0523 06:48:35.023961 22 utils.go:331] Waiting for responses: map[]
  I0523 06:48:35.023992 22 utils.go:335] reached 172.20.64.169 after 0/1 tries
  I0523 06:48:35.024003 22 networking.go:42] Breadth first check of 172.20.69.130 on host 10.255.0.209...
  I0523 06:48:35.025143 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.64.190:9080/dial?request=hostname&protocol=udp&host=172.20.69.130&port=8081&tries=1'] Namespace:pod-network-test-505 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 06:48:35.025159 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 06:48:35.025521 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 06:48:35.025563 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-505/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.64.190%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.20.69.130%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0523 06:48:35.048296 22 utils.go:331] Waiting for responses: map[]
  I0523 06:48:35.048320 22 utils.go:335] reached 172.20.69.130 after 0/1 tries
  I0523 06:48:35.048327 22 networking.go:53] Going to retry 0 out of 3 pods....
  I0523 06:48:35.048455 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-505" for this suite. @ 05/23/24 06:48:35.049
• [14.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 05/23/24 06:48:35.052
  I0523 06:48:35.052458 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename runtimeclass @ 05/23/24 06:48:35.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:48:35.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:48:35.06
  STEP: getting /apis @ 05/23/24 06:48:35.062
  STEP: getting /apis/node.k8s.io @ 05/23/24 06:48:35.064
  STEP: getting /apis/node.k8s.io/v1 @ 05/23/24 06:48:35.064
  STEP: creating @ 05/23/24 06:48:35.064
  STEP: watching @ 05/23/24 06:48:35.07
  I0523 06:48:35.070781 22 runtimeclass.go:275] starting watch
  STEP: getting @ 05/23/24 06:48:35.072
  STEP: listing @ 05/23/24 06:48:35.073
  STEP: patching @ 05/23/24 06:48:35.074
  STEP: updating @ 05/23/24 06:48:35.076
  I0523 06:48:35.078411 22 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 05/23/24 06:48:35.078
  STEP: deleting a collection @ 05/23/24 06:48:35.081
  I0523 06:48:35.086316 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5057" for this suite. @ 05/23/24 06:48:35.087
• [0.038 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 05/23/24 06:48:35.09
  I0523 06:48:35.090499 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename gc @ 05/23/24 06:48:35.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:48:35.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:48:35.098
  STEP: create the deployment @ 05/23/24 06:48:35.099
  W0523 06:48:35.101580      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/23/24 06:48:35.101
  STEP: delete the deployment @ 05/23/24 06:48:35.605
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 05/23/24 06:48:35.608
  E0523 06:48:35.985376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/23/24 06:48:36.123
  W0523 06:48:36.125717      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0523 06:48:36.125746 22 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0523 06:48:36.125887 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8967" for this suite. @ 05/23/24 06:48:36.127
• [1.039 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 05/23/24 06:48:36.129
  I0523 06:48:36.129621 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename pv @ 05/23/24 06:48:36.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:48:36.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:48:36.138
  STEP: Creating initial PV and PVC @ 05/23/24 06:48:36.139
  I0523 06:48:36.139448 22 pv.go:390] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-6388" @ 05/23/24 06:48:36.144
  STEP: Listing PVCs in namespace "pv-6388" @ 05/23/24 06:48:36.145
  STEP: Reading "pvc-fvq2d" Status @ 05/23/24 06:48:36.147
  STEP: Reading "pv-6388-k6q4s" Status @ 05/23/24 06:48:36.149
  STEP: Patching "pvc-fvq2d" Status @ 05/23/24 06:48:36.153
  STEP: Patching "pv-6388-k6q4s" Status @ 05/23/24 06:48:36.157
  STEP: Updating "pvc-fvq2d" Status @ 05/23/24 06:48:36.16
  STEP: Updating "pv-6388-k6q4s" Status @ 05/23/24 06:48:36.163
  I0523 06:48:36.167701 22 persistent_volumes.go:407] AfterEach: deleting 1 PVCs and 1 PVs...
  I0523 06:48:36.167717 22 pv.go:201] Deleting PersistentVolumeClaim "pvc-fvq2d"
  I0523 06:48:36.169582 22 pv.go:189] Deleting PersistentVolume "pv-6388-k6q4s"
  I0523 06:48:36.171679 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-6388" for this suite. @ 05/23/24 06:48:36.173
• [0.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 05/23/24 06:48:36.175
  I0523 06:48:36.175716 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename dns @ 05/23/24 06:48:36.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:48:36.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:48:36.184
  STEP: Creating a test headless service @ 05/23/24 06:48:36.186
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5758.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-5758.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 05/23/24 06:48:36.188
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5758.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-5758.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 05/23/24 06:48:36.188
  STEP: creating a pod to probe DNS @ 05/23/24 06:48:36.188
  STEP: submitting the pod to kubernetes @ 05/23/24 06:48:36.188
  E0523 06:48:36.986266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:37.986487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/23/24 06:48:38.196
  STEP: looking for the results for each expected name from probers @ 05/23/24 06:48:38.197
  I0523 06:48:38.226411 22 dns_common.go:527] DNS probes using dns-5758/dns-test-be93543b-4f85-4c47-9054-1a612be3196e succeeded

  STEP: deleting the pod @ 05/23/24 06:48:38.226
  STEP: deleting the test headless service @ 05/23/24 06:48:38.231
  I0523 06:48:38.238656 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5758" for this suite. @ 05/23/24 06:48:38.24
• [2.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 05/23/24 06:48:38.244
  I0523 06:48:38.244209 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename dns @ 05/23/24 06:48:38.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:48:38.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:48:38.253
  STEP: Creating a test headless service @ 05/23/24 06:48:38.254
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3159.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-3159.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3159.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-3159.svc.cluster.local;sleep 1; done
   @ 05/23/24 06:48:38.257
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3159.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-3159.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3159.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-3159.svc.cluster.local;sleep 1; done
   @ 05/23/24 06:48:38.257
  STEP: creating a pod to probe DNS @ 05/23/24 06:48:38.257
  STEP: submitting the pod to kubernetes @ 05/23/24 06:48:38.257
  E0523 06:48:38.986544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:39.986678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:40.986759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:41.987742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/23/24 06:48:42.27
  STEP: looking for the results for each expected name from probers @ 05/23/24 06:48:42.272
  I0523 06:48:42.282214 22 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:42.292243 22 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:42.299521 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:42.302179 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:42.312217 22 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:42.322236 22 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:42.332223 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:42.342209 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:42.342226 22 dns_common.go:489] Lookups using dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3159.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-3159.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local jessie_udp@dns-test-service-2.dns-3159.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3159.svc.cluster.local]

  I0523 06:48:42.344601 22 dns_common.go:495] Pod client logs for webserver: 
  I0523 06:48:42.354160 22 dns_common.go:495] Pod client logs for querier: 
  I0523 06:48:42.356301 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E0523 06:48:42.987967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:43.988212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:44.988976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:45.989578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:46.989670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:48:47.284956 22 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:47.294943 22 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:47.304949 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:47.314967 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:47.326061 22 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:47.336053 22 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:47.346052 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:47.356067 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:47.356087 22 dns_common.go:489] Lookups using dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3159.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-3159.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local jessie_udp@dns-test-service-2.dns-3159.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3159.svc.cluster.local]

  I0523 06:48:47.358444 22 dns_common.go:495] Pod client logs for webserver: 
  I0523 06:48:47.368478 22 dns_common.go:495] Pod client logs for querier: 
  I0523 06:48:47.370382 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E0523 06:48:47.990082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:48.990226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:49.991242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:50.991390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:51.991440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:48:52.284465 22 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:52.286121 22 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:52.296174 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:52.304423 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:52.314447 22 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:52.324451 22 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:52.325697 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:52.335738 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:52.335757 22 dns_common.go:489] Lookups using dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3159.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-3159.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local jessie_udp@dns-test-service-2.dns-3159.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3159.svc.cluster.local]

  I0523 06:48:52.344403 22 dns_common.go:495] Pod client logs for webserver: 
  I0523 06:48:52.354403 22 dns_common.go:495] Pod client logs for querier: 
  I0523 06:48:52.356252 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E0523 06:48:52.991745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:53.991984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:54.992988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:55.993137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:56.993275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:48:57.284537 22 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:57.294514 22 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:57.304524 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:57.314580 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:57.324577 22 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:57.334574 22 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:57.344575 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:57.354560 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:48:57.354577 22 dns_common.go:489] Lookups using dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3159.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-3159.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local jessie_udp@dns-test-service-2.dns-3159.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3159.svc.cluster.local]

  I0523 06:48:57.357016 22 dns_common.go:495] Pod client logs for webserver: 
  I0523 06:48:57.367072 22 dns_common.go:495] Pod client logs for querier: 
  I0523 06:48:57.377071 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E0523 06:48:57.993361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:58.993500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:48:59.993727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:00.994332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:01.994461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:49:02.274723 22 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:49:02.284705 22 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:49:02.294662 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:49:02.304689 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:49:02.314721 22 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:49:02.324711 22 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:49:02.334691 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:49:02.344693 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:49:02.344714 22 dns_common.go:489] Lookups using dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3159.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-3159.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local jessie_udp@dns-test-service-2.dns-3159.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3159.svc.cluster.local]

  I0523 06:49:02.346865 22 dns_common.go:495] Pod client logs for webserver: 
  I0523 06:49:02.356456 22 dns_common.go:495] Pod client logs for querier: 
  I0523 06:49:02.366536 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E0523 06:49:02.995305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:03.996023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:04.996361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:05.997093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:06.997181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:49:07.274628 22 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:49:07.284549 22 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:49:07.294566 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:49:07.295804 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:49:07.304571 22 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:49:07.314579 22 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:49:07.324555 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:49:07.334546 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-3159.svc.cluster.local from pod dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4: the server could not find the requested resource (get pods dns-test-280b4e8a-1482-4604-b626-56c4488a62b4)
  I0523 06:49:07.334563 22 dns_common.go:489] Lookups using dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3159.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-3159.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3159.svc.cluster.local jessie_udp@dns-test-service-2.dns-3159.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3159.svc.cluster.local]

  I0523 06:49:07.344548 22 dns_common.go:495] Pod client logs for webserver: 
  I0523 06:49:07.354543 22 dns_common.go:495] Pod client logs for querier: 
  I0523 06:49:07.356621 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E0523 06:49:07.997263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:08.998290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:09.998529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:10.998656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:11.998738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:49:12.347141 22 dns_common.go:527] DNS probes using dns-3159/dns-test-280b4e8a-1482-4604-b626-56c4488a62b4 succeeded

  STEP: deleting the pod @ 05/23/24 06:49:12.347
  STEP: deleting the test headless service @ 05/23/24 06:49:12.353
  I0523 06:49:12.359589 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3159" for this suite. @ 05/23/24 06:49:12.361
• [34.120 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:789
  STEP: Creating a kubernetes client @ 05/23/24 06:49:12.364
  I0523 06:49:12.364664 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename services @ 05/23/24 06:49:12.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:49:12.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:49:12.375
  STEP: creating service endpoint-test2 in namespace services-2451 @ 05/23/24 06:49:12.377
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2451 to expose endpoints map[] @ 05/23/24 06:49:12.381
  I0523 06:49:12.383522 22 service.go:4226] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0523 06:49:12.999202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:49:13.387746 22 service.go:4258] successfully validated that service endpoint-test2 in namespace services-2451 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2451 @ 05/23/24 06:49:13.387
  E0523 06:49:13.999601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:14.999750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2451 to expose endpoints map[pod1:[80]] @ 05/23/24 06:49:15.396
  I0523 06:49:15.400427 22 service.go:4258] successfully validated that service endpoint-test2 in namespace services-2451 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 05/23/24 06:49:15.4
  I0523 06:49:15.400464 22 resource.go:361] Creating new exec pod
  E0523 06:49:16.000819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:17.000892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:18.001721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:49:18.407250 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-2451 exec execpod7zjkn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0523 06:49:18.470098 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0523 06:49:18.470130 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0523 06:49:18.470195 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-2451 exec execpod7zjkn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.176.115 80'
  I0523 06:49:18.532663 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.176.115 80\nConnection to 10.68.176.115 80 port [tcp/http] succeeded!\n"
  I0523 06:49:18.532698 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-2451 @ 05/23/24 06:49:18.532
  E0523 06:49:19.001810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:20.002134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2451 to expose endpoints map[pod1:[80] pod2:[80]] @ 05/23/24 06:49:20.539
  I0523 06:49:20.544198 22 service.go:4258] successfully validated that service endpoint-test2 in namespace services-2451 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 05/23/24 06:49:20.544
  E0523 06:49:21.002369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:49:21.544778 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-2451 exec execpod7zjkn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0523 06:49:21.607933 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0523 06:49:21.607965 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0523 06:49:21.608037 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-2451 exec execpod7zjkn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.176.115 80'
  I0523 06:49:21.667390 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.176.115 80\nConnection to 10.68.176.115 80 port [tcp/http] succeeded!\n"
  I0523 06:49:21.667427 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2451 @ 05/23/24 06:49:21.667
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2451 to expose endpoints map[pod2:[80]] @ 05/23/24 06:49:21.674
  I0523 06:49:21.680404 22 service.go:4258] successfully validated that service endpoint-test2 in namespace services-2451 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 05/23/24 06:49:21.68
  E0523 06:49:22.002606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:49:22.681114 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-2451 exec execpod7zjkn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0523 06:49:22.744713 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0523 06:49:22.744744 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0523 06:49:22.744866 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-2451 exec execpod7zjkn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.176.115 80'
  I0523 06:49:22.804604 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.176.115 80\nConnection to 10.68.176.115 80 port [tcp/http] succeeded!\n"
  I0523 06:49:22.804640 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-2451 @ 05/23/24 06:49:22.804
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2451 to expose endpoints map[] @ 05/23/24 06:49:22.811
  E0523 06:49:23.003707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:49:23.819768 22 service.go:4258] successfully validated that service endpoint-test2 in namespace services-2451 exposes endpoints map[]
  I0523 06:49:23.826222 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2451" for this suite. @ 05/23/24 06:49:23.828
• [11.466 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 05/23/24 06:49:23.83
  I0523 06:49:23.830790 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename daemonsets @ 05/23/24 06:49:23.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:49:23.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:49:23.84
  STEP: Creating a simple DaemonSet "daemon-set" @ 05/23/24 06:49:23.849
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/23/24 06:49:23.852
  I0523 06:49:23.862203 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0523 06:49:23.862226 22 fixtures.go:130] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  E0523 06:49:24.004563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:49:24.857122 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0523 06:49:24.857142 22 fixtures.go:130] Node k8s-10-255-0-209 is running 0 daemon pod, expected 1
  E0523 06:49:25.005361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:49:25.856218 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0523 06:49:25.856239 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 05/23/24 06:49:25.857
  I0523 06:49:25.865091 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0523 06:49:25.865117 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 05/23/24 06:49:25.865
  E0523 06:49:26.005506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting DaemonSet "daemon-set" @ 05/23/24 06:49:26.868
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1091, will wait for the garbage collector to delete the pods @ 05/23/24 06:49:26.868
  I0523 06:49:26.922398 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 2.513164ms
  E0523 06:49:27.005727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:49:27.022902 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.501873ms
  E0523 06:49:28.005822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:49:28.624721 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0523 06:49:28.624749 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0523 06:49:28.625836 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"70236"},"items":null}

  I0523 06:49:28.626794 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"70236"},"items":null}

  I0523 06:49:28.631415 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1091" for this suite. @ 05/23/24 06:49:28.632
• [4.804 seconds]
------------------------------
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 05/23/24 06:49:28.635
  I0523 06:49:28.635167 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename init-container @ 05/23/24 06:49:28.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:49:28.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:49:28.644
  STEP: creating the pod @ 05/23/24 06:49:28.645
  I0523 06:49:28.646007 22 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0523 06:49:29.006036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:30.006252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:31.006774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:49:31.987819 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5110" for this suite. @ 05/23/24 06:49:31.989
• [3.357 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 05/23/24 06:49:31.992
  I0523 06:49:31.992106 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 06:49:31.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:49:31.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:49:32
  STEP: Creating the pod @ 05/23/24 06:49:32.001
  E0523 06:49:32.007180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:33.007592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:34.007603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:49:34.529478 22 pod_client.go:141] Successfully updated pod "labelsupdatee3a2c13b-d4cd-4b78-89a7-cda5cbe65cdb"
  E0523 06:49:35.008598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:36.008852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:49:36.535560 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2087" for this suite. @ 05/23/24 06:49:36.537
• [4.548 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:697
  STEP: Creating a kubernetes client @ 05/23/24 06:49:36.54
  I0523 06:49:36.540358 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename job @ 05/23/24 06:49:36.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:49:36.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:49:36.549
  STEP: Creating a job @ 05/23/24 06:49:36.55
  STEP: Ensuring active pods == parallelism @ 05/23/24 06:49:36.553
  E0523 06:49:37.008911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:38.009689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 05/23/24 06:49:38.556
  E0523 06:49:39.010310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:49:39.064092 22 pod_client.go:141] Successfully updated pod "adopt-release-ccs9t"
  STEP: Checking that the Job readopts the Pod @ 05/23/24 06:49:39.064
  E0523 06:49:40.011351      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:41.011417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 05/23/24 06:49:41.067
  I0523 06:49:41.573499 22 pod_client.go:141] Successfully updated pod "adopt-release-ccs9t"
  STEP: Checking that the Job releases the Pod @ 05/23/24 06:49:41.573
  E0523 06:49:42.012256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:43.012822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:49:43.577447 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1559" for this suite. @ 05/23/24 06:49:43.579
• [7.041 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 05/23/24 06:49:43.581
  I0523 06:49:43.581418 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename pods @ 05/23/24 06:49:43.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:49:43.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:49:43.591
  STEP: creating pod @ 05/23/24 06:49:43.592
  E0523 06:49:44.012994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:45.013056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:49:45.601761 22 pods.go:83] Pod pod-hostip-4cd3f200-bf23-47eb-9f42-d6a4aded44ad has hostIP: 10.255.0.209
  I0523 06:49:45.601837 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-231" for this suite. @ 05/23/24 06:49:45.603
• [2.024 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 05/23/24 06:49:45.605
  I0523 06:49:45.605633 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename pods @ 05/23/24 06:49:45.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:49:45.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:49:45.613
  I0523 06:49:45.615221 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: creating the pod @ 05/23/24 06:49:45.615
  STEP: submitting the pod to kubernetes @ 05/23/24 06:49:45.615
  E0523 06:49:46.013780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:47.013926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:49:47.628450 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2424" for this suite. @ 05/23/24 06:49:47.629
• [2.027 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 05/23/24 06:49:47.632
  I0523 06:49:47.632321 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename cronjob @ 05/23/24 06:49:47.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:49:47.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:49:47.64
  STEP: Creating a suspended cronjob @ 05/23/24 06:49:47.642
  STEP: Ensuring no jobs are scheduled @ 05/23/24 06:49:47.644
  E0523 06:49:48.014455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:49.015282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:50.016072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:51.016852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:52.017847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:53.018134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:54.018708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:55.019325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:56.020062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:57.020143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:58.020804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:49:59.020888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:00.021619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:01.022528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:02.023423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:03.024250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:04.025054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:05.025210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:06.025898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:07.026032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:08.026714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:09.027740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:10.028645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:11.028733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:12.029668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:13.030335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:14.031045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:15.031212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:16.031231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:17.031352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:18.032037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:19.032807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:20.033800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:21.033875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:22.033955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:23.034043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:24.035059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:25.035222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:26.036110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:27.036141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:28.036798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:29.037841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:30.038616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:31.039110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:32.040042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:33.040803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:34.040863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:35.041078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:36.041634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:37.041759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:38.042764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:39.042846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:40.043881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:41.043968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:42.044661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:43.044781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:44.045699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:45.045924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:46.045961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:47.046087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:48.046666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:49.046748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:50.047705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:51.047761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:52.048699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:53.048826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:54.049436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:55.049661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:56.049998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:57.050120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:58.050837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:50:59.050968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:00.052005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:01.052078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:02.052806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:03.052935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:04.053284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:05.053499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:06.053745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:07.053829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:08.054214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:09.054696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:10.055685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:11.055751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:12.056751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:13.057816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:14.058603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:15.058726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:16.058810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:17.058908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:18.059831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:19.060808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:20.061845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:21.062299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:22.062362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:23.062489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:24.063015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:25.063189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:26.063250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:27.063371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:28.064026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:29.064118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:30.064802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:31.064933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:32.065765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:33.065898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:34.066092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:35.066263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:36.067037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:37.067056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:38.067480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:39.067611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:40.067644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:41.067742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:42.068676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:43.068793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:44.069711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:45.070493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:46.071497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:47.071628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:48.072581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:49.073102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:50.073987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:51.074076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:52.074867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:53.074979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:54.076013      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:55.076812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:56.076865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:57.076958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:58.077601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:51:59.077730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:00.078608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:01.079435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:02.080126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:03.080802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:04.081815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:05.082057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:06.082990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:07.083107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:08.084097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:09.084814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:10.085554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:11.085679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:12.086659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:13.086720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:14.087613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:15.087742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:16.088269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:17.088800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:18.089869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:19.090002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:20.090824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:21.090941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:22.091791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:23.092809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:24.093658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:25.093892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:26.093940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:27.094588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:28.094949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:29.095372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:30.095424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:31.095555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:32.096402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:33.096809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:34.097749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:35.098043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:36.098494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:37.098621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:38.099134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:39.099257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:40.099877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:41.100807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:42.101545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:43.101629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:44.102380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:45.102467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:46.103132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:47.103259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:48.103907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:49.104805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:50.105656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:51.105733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:52.106604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:53.107491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:54.108258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:55.108805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:56.108851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:57.108981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:58.109733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:52:59.109861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:00.110865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:01.110944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:02.111964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:03.112047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:04.113074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:05.113243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:06.113897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:07.114021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:08.114956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:09.115086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:10.115841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:11.116809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:12.117599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:13.117729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:14.118665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:15.119682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:16.120571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:17.121109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:18.122048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:19.122984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:20.123923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:21.123960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:22.124565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:23.124652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:24.125408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:25.125639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:26.126332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:27.126420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:28.127272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:29.127357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:30.128291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:31.129124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:32.129903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:33.130333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:34.130830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:35.130872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:36.131826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:37.131951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:38.132456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:39.132540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:40.133581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:41.133702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:42.134568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:43.134697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:44.135601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:45.135747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:46.136722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:47.137225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:48.138018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:49.138150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:50.139055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:51.139632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:52.139746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:53.140025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:54.140630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:55.140702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:56.141457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:57.141577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:58.141681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:53:59.141744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:00.142603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:01.143588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:02.144055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:03.144960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:04.145356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:05.145570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:06.146499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:07.146700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:08.147180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:09.147262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:10.147679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:11.147751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:12.148390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:13.149219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:14.149895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:15.150580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:16.151552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:17.151637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:18.152493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:19.152509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:20.152807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:21.152899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:22.153768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:23.154770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:24.155206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:25.156249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:26.157091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:27.157382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:28.157857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:29.157943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:30.158696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:31.158817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:32.159507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:33.159629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:34.160052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:35.160132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:36.160800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:37.160889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:38.161574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:39.161695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:40.162029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:41.162154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:42.162797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:43.162884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:44.163500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:45.163587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:46.164415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:47.165254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 05/23/24 06:54:47.645
  STEP: Removing cronjob @ 05/23/24 06:54:47.656
  I0523 06:54:47.659546 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5100" for this suite. @ 05/23/24 06:54:47.661
• [300.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 05/23/24 06:54:47.663
  I0523 06:54:47.663327 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename configmap @ 05/23/24 06:54:47.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:54:47.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:54:47.675
  STEP: Creating configMap configmap-4624/configmap-test-3f06a473-2735-420d-b6a8-4c9d027dc9ef @ 05/23/24 06:54:47.677
  STEP: Creating a pod to test consume configMaps @ 05/23/24 06:54:47.679
  E0523 06:54:48.166114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:49.167135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:50.167763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:51.168829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:54:51.689
  I0523 06:54:51.690299 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-configmaps-89d716e3-e74e-44ba-94c3-cdc8b4c7b11b container env-test: <nil>
  STEP: delete the pod @ 05/23/24 06:54:51.697
  I0523 06:54:51.703115 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4624" for this suite. @ 05/23/24 06:54:51.704
• [4.043 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 05/23/24 06:54:51.706
  I0523 06:54:51.706602 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename downward-api @ 05/23/24 06:54:51.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:54:51.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:54:51.715
  STEP: Creating a pod to test downward API volume plugin @ 05/23/24 06:54:51.716
  E0523 06:54:52.169300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:53.169437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:54.169495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:55.169720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:54:55.725
  I0523 06:54:55.726917 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-e3297e81-c7be-43e5-ac48-ba6c00b99ea4 container client-container: <nil>
  STEP: delete the pod @ 05/23/24 06:54:55.729
  I0523 06:54:55.736244 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3501" for this suite. @ 05/23/24 06:54:55.737
• [4.033 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 05/23/24 06:54:55.739
  I0523 06:54:55.739943 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename apf @ 05/23/24 06:54:55.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:54:55.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:54:55.748
  STEP: getting /apis @ 05/23/24 06:54:55.75
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/23/24 06:54:55.752
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/23/24 06:54:55.752
  STEP: creating @ 05/23/24 06:54:55.753
  STEP: getting @ 05/23/24 06:54:55.759
  STEP: listing @ 05/23/24 06:54:55.761
  STEP: watching @ 05/23/24 06:54:55.762
  I0523 06:54:55.762566 22 flowcontrol.go:394] starting watch
  STEP: patching @ 05/23/24 06:54:55.763
  STEP: updating @ 05/23/24 06:54:55.765
  I0523 06:54:55.768937 22 flowcontrol.go:422] waiting for watch events with expected annotations
  I0523 06:54:55.768958 22 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 05/23/24 06:54:55.769
  STEP: patching /status @ 05/23/24 06:54:55.77
  STEP: updating /status @ 05/23/24 06:54:55.772
  STEP: deleting @ 05/23/24 06:54:55.791
  STEP: deleting a collection @ 05/23/24 06:54:55.794
  I0523 06:54:55.800914 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-8458" for this suite. @ 05/23/24 06:54:55.802
• [0.065 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 05/23/24 06:54:55.805
  I0523 06:54:55.805267 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename var-expansion @ 05/23/24 06:54:55.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:54:55.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:54:55.814
  E0523 06:54:56.169836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:57.170865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:54:57.822687 22 delete.go:62] Deleting pod "var-expansion-8cfa2617-8493-49a3-8111-0ee1e1cd6044" in namespace "var-expansion-3290"
  I0523 06:54:57.825802 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-8cfa2617-8493-49a3-8111-0ee1e1cd6044" to be fully deleted
  E0523 06:54:58.171612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:54:59.171690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:54:59.829997 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3290" for this suite. @ 05/23/24 06:54:59.831
• [4.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 05/23/24 06:54:59.833
  I0523 06:54:59.834003 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename secrets @ 05/23/24 06:54:59.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:54:59.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:54:59.892
  STEP: Creating secret with name secret-test-638a4719-9bd1-4c5e-960c-ad13cf4717ca @ 05/23/24 06:54:59.894
  STEP: Creating a pod to test consume secrets @ 05/23/24 06:54:59.896
  E0523 06:55:00.172170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:01.173234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:02.173256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:03.173529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:55:03.905
  I0523 06:55:03.906830 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-secrets-3b9d4454-c9f1-4942-93bd-02c0dc77c749 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/23/24 06:55:03.909
  I0523 06:55:03.915378 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2060" for this suite. @ 05/23/24 06:55:03.916
• [4.085 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 05/23/24 06:55:03.919
  I0523 06:55:03.919115 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename dns @ 05/23/24 06:55:03.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:55:03.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:55:03.926
  STEP: Creating a test headless service @ 05/23/24 06:55:03.928
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2441.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-2441.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2441.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-2441.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2441.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2441.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2441.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-2441.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2441.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-2441.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 3.152.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.152.3_udp@PTR;check="$$(dig +tcp +noall +answer +search 3.152.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.152.3_tcp@PTR;sleep 1; done
   @ 05/23/24 06:55:03.943
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2441.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2441.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2441.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2441.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2441.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2441.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2441.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-2441.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2441.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-2441.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 3.152.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.152.3_udp@PTR;check="$$(dig +tcp +noall +answer +search 3.152.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.152.3_tcp@PTR;sleep 1; done
   @ 05/23/24 06:55:03.943
  STEP: creating a pod to probe DNS @ 05/23/24 06:55:03.943
  STEP: submitting the pod to kubernetes @ 05/23/24 06:55:03.943
  E0523 06:55:04.174131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:05.174331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/23/24 06:55:05.952
  STEP: looking for the results for each expected name from probers @ 05/23/24 06:55:05.954
  I0523 06:55:05.962815 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:05.972852 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:05.974172 22 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:05.984250 22 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:06.034269 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:06.044274 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:06.054270 22 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:06.064260 22 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:06.094278 22 dns_common.go:489] Lookups using dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8 failed for: [wheezy_udp@dns-test-service.dns-2441.svc.cluster.local wheezy_tcp@dns-test-service.dns-2441.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local jessie_udp@dns-test-service.dns-2441.svc.cluster.local jessie_tcp@dns-test-service.dns-2441.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local]

  I0523 06:55:06.096481 22 dns_common.go:495] Pod client logs for webserver: 
  I0523 06:55:06.106575 22 dns_common.go:495] Pod client logs for querier: 
  I0523 06:55:06.116593 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E0523 06:55:06.174779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:07.174869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:08.174954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:09.175031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:10.175980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:55:10.956882 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:10.966352 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:10.976827 22 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:10.978091 22 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:11.009267 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:11.018184 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:11.019372 22 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:11.028151 22 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:11.069083 22 dns_common.go:489] Lookups using dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8 failed for: [wheezy_udp@dns-test-service.dns-2441.svc.cluster.local wheezy_tcp@dns-test-service.dns-2441.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local jessie_udp@dns-test-service.dns-2441.svc.cluster.local jessie_tcp@dns-test-service.dns-2441.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local]

  I0523 06:55:11.071296 22 dns_common.go:495] Pod client logs for webserver: 
  I0523 06:55:11.081341 22 dns_common.go:495] Pod client logs for querier: 
  I0523 06:55:11.090848 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E0523 06:55:11.176024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:12.176107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:13.176811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:14.177716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:15.177924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:55:15.956846 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:15.966432 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:15.976385 22 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:15.986360 22 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:16.026377 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:16.036378 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:16.037533 22 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:16.047556 22 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:16.088436 22 dns_common.go:489] Lookups using dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8 failed for: [wheezy_udp@dns-test-service.dns-2441.svc.cluster.local wheezy_tcp@dns-test-service.dns-2441.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local jessie_udp@dns-test-service.dns-2441.svc.cluster.local jessie_tcp@dns-test-service.dns-2441.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local]

  I0523 06:55:16.090584 22 dns_common.go:495] Pod client logs for webserver: 
  I0523 06:55:16.100616 22 dns_common.go:495] Pod client logs for querier: 
  I0523 06:55:16.110220 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E0523 06:55:16.178417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:17.178552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:18.179153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:19.179221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:20.179370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:55:20.957390 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:20.967316 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:20.977343 22 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:20.987306 22 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:21.027317 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:21.028507 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:21.037310 22 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:21.047305 22 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:21.077328 22 dns_common.go:489] Lookups using dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8 failed for: [wheezy_udp@dns-test-service.dns-2441.svc.cluster.local wheezy_tcp@dns-test-service.dns-2441.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local jessie_udp@dns-test-service.dns-2441.svc.cluster.local jessie_tcp@dns-test-service.dns-2441.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local]

  I0523 06:55:21.079542 22 dns_common.go:495] Pod client logs for webserver: 
  I0523 06:55:21.081410 22 dns_common.go:495] Pod client logs for querier: 
  I0523 06:55:21.091143 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E0523 06:55:21.180367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:22.180472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:23.180552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:24.181213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:25.181354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:55:25.957405 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:25.967336 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:25.978546 22 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:25.988565 22 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:26.038583 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:26.048572 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:26.058566 22 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:26.068591 22 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:26.099798 22 dns_common.go:489] Lookups using dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8 failed for: [wheezy_udp@dns-test-service.dns-2441.svc.cluster.local wheezy_tcp@dns-test-service.dns-2441.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local jessie_udp@dns-test-service.dns-2441.svc.cluster.local jessie_tcp@dns-test-service.dns-2441.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local]

  I0523 06:55:26.109888 22 dns_common.go:495] Pod client logs for webserver: 
  I0523 06:55:26.119862 22 dns_common.go:495] Pod client logs for querier: 
  I0523 06:55:26.121761 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E0523 06:55:26.181952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:27.182093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:28.182235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:29.182334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:30.182573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:55:30.966067 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:30.967765 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:30.976034 22 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:30.986045 22 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:31.027473 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:31.037482 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:31.047472 22 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:31.057469 22 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local from pod dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8: the server could not find the requested resource (get pods dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8)
  I0523 06:55:31.097473 22 dns_common.go:489] Lookups using dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8 failed for: [wheezy_udp@dns-test-service.dns-2441.svc.cluster.local wheezy_tcp@dns-test-service.dns-2441.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local jessie_udp@dns-test-service.dns-2441.svc.cluster.local jessie_tcp@dns-test-service.dns-2441.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2441.svc.cluster.local]

  I0523 06:55:31.099666 22 dns_common.go:495] Pod client logs for webserver: 
  I0523 06:55:31.108549 22 dns_common.go:495] Pod client logs for querier: 
  I0523 06:55:31.119708 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E0523 06:55:31.182893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:32.183012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:33.183162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:34.183803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:35.183898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:55:36.068286 22 dns_common.go:527] DNS probes using dns-2441/dns-test-b216b22b-8e17-4fe9-a41f-ab30b6b8d9c8 succeeded

  STEP: deleting the pod @ 05/23/24 06:55:36.068
  STEP: deleting the test service @ 05/23/24 06:55:36.075
  STEP: deleting the test headless service @ 05/23/24 06:55:36.085
  I0523 06:55:36.092476 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2441" for this suite. @ 05/23/24 06:55:36.095
• [32.179 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 05/23/24 06:55:36.098
  I0523 06:55:36.098346 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename emptydir @ 05/23/24 06:55:36.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:55:36.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:55:36.106
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/23/24 06:55:36.109
  E0523 06:55:36.184618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:37.184784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:38.185618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:39.185757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:55:40.118
  I0523 06:55:40.119574 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-545a684e-1f6d-4b0f-a599-daba9c8aa857 container test-container: <nil>
  STEP: delete the pod @ 05/23/24 06:55:40.121
  I0523 06:55:40.127613 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8143" for this suite. @ 05/23/24 06:55:40.129
• [4.033 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 05/23/24 06:55:40.131
  I0523 06:55:40.131288 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename secrets @ 05/23/24 06:55:40.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:55:40.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:55:40.14
  STEP: Creating secret with name s-test-opt-del-cf0875fd-dc0c-497b-a034-c94451b29f69 @ 05/23/24 06:55:40.143
  STEP: Creating secret with name s-test-opt-upd-9749c82a-3220-4c66-b969-d88fbe820285 @ 05/23/24 06:55:40.145
  STEP: Creating the pod @ 05/23/24 06:55:40.147
  E0523 06:55:40.185869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:41.185962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-cf0875fd-dc0c-497b-a034-c94451b29f69 @ 05/23/24 06:55:42.162
  STEP: Updating secret s-test-opt-upd-9749c82a-3220-4c66-b969-d88fbe820285 @ 05/23/24 06:55:42.164
  STEP: Creating secret with name s-test-opt-create-d5fb9c99-c552-413d-8634-26de6b29346d @ 05/23/24 06:55:42.165
  STEP: waiting to observe update in volume @ 05/23/24 06:55:42.167
  E0523 06:55:42.186612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:43.187019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:44.187719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:45.187951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:46.187987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:47.188822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:48.189762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:49.189879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:50.190719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:51.190854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:52.191024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:53.191406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:54.191636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:55.191749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:56.192000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:57.192857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:58.192982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:55:59.193776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:00.193989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:01.194876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:02.195007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:03.195090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:04.195173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:05.195950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:06.196007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:07.196813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:08.196920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:09.197128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:10.197860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:11.198078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:12.198154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:13.198576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:14.199237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:15.200056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:16.200145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:17.200806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:18.201182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:19.202073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:20.202320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:21.202669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:22.202797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:23.202914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:24.203075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:25.203457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:26.203526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:27.203742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:28.204158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:29.204808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:30.205066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:31.205206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:32.205341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:33.206347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:34.207234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:35.207389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:36.207525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:37.207764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:38.208808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:39.209645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:40.209822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:41.210073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:42.210167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:43.210224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:44.211265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:45.211763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:46.211824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:47.212805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:48.212927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:49.213276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:50.213875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:51.213943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:52.214621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:53.215139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:54.215837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:55.216764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:56.216799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:57.216900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:58.217465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:56:59.218465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:00.218624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:01.218763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:02.218895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:03.219805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:04.220814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:57:04.413053 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2124" for this suite. @ 05/23/24 06:57:04.414
• [84.286 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 05/23/24 06:57:04.417
  I0523 06:57:04.417620 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename webhook @ 05/23/24 06:57:04.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:57:04.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:57:04.426
  STEP: Setting up server cert @ 05/23/24 06:57:04.436
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/23/24 06:57:04.769
  STEP: Deploying the webhook pod @ 05/23/24 06:57:04.773
  STEP: Wait for the deployment to be ready @ 05/23/24 06:57:04.779
  I0523 06:57:04.781484 22 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0523 06:57:05.221856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:06.222181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/23/24 06:57:06.785
  STEP: Verifying the service has paired with the endpoint @ 05/23/24 06:57:06.79
  E0523 06:57:07.222888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:57:07.790495 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 05/23/24 06:57:07.793
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/23/24 06:57:07.8
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 05/23/24 06:57:07.804
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/23/24 06:57:07.808
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 05/23/24 06:57:07.813
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/23/24 06:57:07.816
  I0523 06:57:07.834522 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4346" for this suite. @ 05/23/24 06:57:07.836
  STEP: Destroying namespace "webhook-markers-7892" for this suite. @ 05/23/24 06:57:07.838
• [3.424 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1420
  STEP: Creating a kubernetes client @ 05/23/24 06:57:07.841
  I0523 06:57:07.841409 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename services @ 05/23/24 06:57:07.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:57:07.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:57:07.852
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1761 @ 05/23/24 06:57:07.854
  STEP: changing the ExternalName service to type=ClusterIP @ 05/23/24 06:57:07.856
  STEP: creating replication controller externalname-service in namespace services-1761 @ 05/23/24 06:57:07.862
  I0523 06:57:07.866037      22 runners.go:198] Created replication controller with name: externalname-service, namespace: services-1761, replica count: 2
  E0523 06:57:08.222967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:09.223033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:10.223763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:57:10.917589      22 runners.go:198] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0523 06:57:10.917610 22 resource.go:361] Creating new exec pod
  E0523 06:57:11.224323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:12.225309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:13.226251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:57:13.925974 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-1761 exec execpodpknvx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0523 06:57:13.989694 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0523 06:57:13.989725 22 builder.go:147] stdout: ""
  E0523 06:57:14.227070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:57:14.927007 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-1761 exec execpodpknvx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0523 06:57:14.991735 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0523 06:57:14.991776 22 builder.go:147] stdout: "externalname-service-t59d7"
  I0523 06:57:14.991842 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-1761 exec execpodpknvx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.253.220 80'
  I0523 06:57:15.071461 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.253.220 80\nConnection to 10.68.253.220 80 port [tcp/http] succeeded!\n"
  I0523 06:57:15.071497 22 builder.go:147] stdout: "externalname-service-dd985"
  I0523 06:57:15.071570 22 service.go:1429] Cleaning up the ExternalName to ClusterIP test service
  I0523 06:57:15.078682 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1761" for this suite. @ 05/23/24 06:57:15.08
• [7.242 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 05/23/24 06:57:15.083
  I0523 06:57:15.083352 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename downward-api @ 05/23/24 06:57:15.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:57:15.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:57:15.093
  STEP: Creating a pod to test downward API volume plugin @ 05/23/24 06:57:15.094
  E0523 06:57:15.228099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:16.228820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:17.229833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:18.229953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:57:19.105
  I0523 06:57:19.106582 22 output.go:196] Trying to get logs from node k8s-10-255-0-209 pod downwardapi-volume-83c10ee2-c6dd-48db-8f47-448ef162895d container client-container: <nil>
  STEP: delete the pod @ 05/23/24 06:57:19.114
  I0523 06:57:19.120244 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6573" for this suite. @ 05/23/24 06:57:19.121
• [4.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 05/23/24 06:57:19.124
  I0523 06:57:19.124010 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename webhook @ 05/23/24 06:57:19.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:57:19.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:57:19.133
  STEP: Setting up server cert @ 05/23/24 06:57:19.143
  E0523 06:57:19.230254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/23/24 06:57:19.266
  STEP: Deploying the webhook pod @ 05/23/24 06:57:19.269
  STEP: Wait for the deployment to be ready @ 05/23/24 06:57:19.274
  I0523 06:57:19.277937 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0523 06:57:20.231097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:21.231176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/23/24 06:57:21.282
  STEP: Verifying the service has paired with the endpoint @ 05/23/24 06:57:21.286
  E0523 06:57:22.231463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:57:22.287822 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 05/23/24 06:57:22.293
  STEP: create a pod that should be updated by the webhook @ 05/23/24 06:57:22.301
  I0523 06:57:22.339405 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9822" for this suite. @ 05/23/24 06:57:22.341
  STEP: Destroying namespace "webhook-markers-3282" for this suite. @ 05/23/24 06:57:22.344
• [3.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 05/23/24 06:57:22.347
  I0523 06:57:22.347692 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename events @ 05/23/24 06:57:22.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:57:22.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:57:22.358
  STEP: creating a test event @ 05/23/24 06:57:22.359
  STEP: listing all events in all namespaces @ 05/23/24 06:57:22.362
  STEP: patching the test event @ 05/23/24 06:57:22.364
  STEP: fetching the test event @ 05/23/24 06:57:22.366
  STEP: updating the test event @ 05/23/24 06:57:22.369
  STEP: getting the test event @ 05/23/24 06:57:22.372
  STEP: deleting the test event @ 05/23/24 06:57:22.373
  STEP: listing all events in all namespaces @ 05/23/24 06:57:22.375
  I0523 06:57:22.376832 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8793" for this suite. @ 05/23/24 06:57:22.378
• [0.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 05/23/24 06:57:22.381
  I0523 06:57:22.381317 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename gc @ 05/23/24 06:57:22.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:57:22.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:57:22.388
  STEP: create the deployment @ 05/23/24 06:57:22.39
  W0523 06:57:22.392512      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/23/24 06:57:22.392
  STEP: delete the deployment @ 05/23/24 06:57:22.895
  STEP: wait for all rs to be garbage collected @ 05/23/24 06:57:22.897
  STEP: expected 0 pods, got 2 pods @ 05/23/24 06:57:22.899
  E0523 06:57:23.232134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/23/24 06:57:23.412
  W0523 06:57:23.415502      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0523 06:57:23.415527 22 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0523 06:57:23.415628 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6963" for this suite. @ 05/23/24 06:57:23.417
• [1.038 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 05/23/24 06:57:23.419
  I0523 06:57:23.419397 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename emptydir @ 05/23/24 06:57:23.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:57:23.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:57:23.426
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 05/23/24 06:57:23.428
  E0523 06:57:24.233035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:25.233269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:26.234265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:27.234403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:57:27.438
  I0523 06:57:27.440315 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-f8008896-dc54-4af5-b2f4-96345b609c7b container test-container: <nil>
  STEP: delete the pod @ 05/23/24 06:57:27.442
  I0523 06:57:27.451138 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9489" for this suite. @ 05/23/24 06:57:27.452
• [4.035 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 05/23/24 06:57:27.454
  I0523 06:57:27.454850 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename downward-api @ 05/23/24 06:57:27.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:57:27.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:57:27.464
  STEP: Creating a pod to test downward API volume plugin @ 05/23/24 06:57:27.465
  E0523 06:57:28.234933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:29.235120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:30.236155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:31.236829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:57:31.475
  I0523 06:57:31.479415 22 output.go:196] Trying to get logs from node k8s-10-255-0-209 pod downwardapi-volume-06c479d3-631e-4cc3-98dc-d172db080eed container client-container: <nil>
  STEP: delete the pod @ 05/23/24 06:57:31.482
  I0523 06:57:31.489417 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5868" for this suite. @ 05/23/24 06:57:31.491
• [4.040 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 05/23/24 06:57:31.494
  I0523 06:57:31.494952 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename configmap @ 05/23/24 06:57:31.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:57:31.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:57:31.508
  STEP: Creating configMap that has name configmap-test-emptyKey-188b4cc1-2544-499f-b5e8-2c80c069289a @ 05/23/24 06:57:31.509
  I0523 06:57:31.510573 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4304" for this suite. @ 05/23/24 06:57:31.512
• [0.020 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 05/23/24 06:57:31.515
  I0523 06:57:31.515695 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename watch @ 05/23/24 06:57:31.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:57:31.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:57:31.525
  STEP: creating a new configmap @ 05/23/24 06:57:31.527
  STEP: modifying the configmap once @ 05/23/24 06:57:31.529
  STEP: modifying the configmap a second time @ 05/23/24 06:57:31.532
  STEP: deleting the configmap @ 05/23/24 06:57:31.535
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 05/23/24 06:57:31.537
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 05/23/24 06:57:31.537
  I0523 06:57:31.537620 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6380  6577e60c-19ce-41ef-be5b-2f9069043ddd 72090 0 2024-05-23 06:57:31 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-05-23 06:57:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0523 06:57:31.537707 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6380  6577e60c-19ce-41ef-be5b-2f9069043ddd 72091 0 2024-05-23 06:57:31 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-05-23 06:57:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0523 06:57:31.537759 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6380" for this suite. @ 05/23/24 06:57:31.539
• [0.026 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 05/23/24 06:57:31.542
  I0523 06:57:31.542381 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename statefulset @ 05/23/24 06:57:31.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:57:31.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:57:31.55
  STEP: Creating service test in namespace statefulset-8431 @ 05/23/24 06:57:31.552
  STEP: Creating stateful set ss in namespace statefulset-8431 @ 05/23/24 06:57:31.554
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8431 @ 05/23/24 06:57:31.561
  I0523 06:57:31.568849 22 wait.go:40] Found 0 stateful pods, waiting for 1
  E0523 06:57:32.237356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:33.237570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:34.238268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:35.238532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:36.238929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:37.239061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:38.239182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:39.239266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:40.239481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:41.239606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:57:41.563977 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 05/23/24 06:57:41.564
  I0523 06:57:41.565328 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=statefulset-8431 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0523 06:57:41.628560 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0523 06:57:41.628592 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0523 06:57:41.628601 22 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0523 06:57:41.629948 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0523 06:57:42.240578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:43.240818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:44.240851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:45.240985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:46.241036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:47.241268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:48.241393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:49.242458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:50.242524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:57:51.243208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:57:51.630600 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0523 06:57:51.630630 22 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0523 06:57:51.636813 22 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I0523 06:57:51.636854 22 resource.go:175] ss-0  k8s-10-255-0-208  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-23 06:57:32 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-23 06:57:31 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-23 06:57:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-23 06:57:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-23 06:57:31 +0000 UTC  }]
  I0523 06:57:51.636865 22 resource.go:178] 
  I0523 06:57:51.636877 22 statefulset.go:2147] StatefulSet ss has not reached scale 3, at 1
  E0523 06:57:52.243490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:57:52.638936 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 8.998517929s
  E0523 06:57:53.243834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:57:53.641154 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 7.996418462s
  E0523 06:57:54.244735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:57:54.643289 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 6.994198514s
  E0523 06:57:55.244887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:57:55.645369 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 5.99211419s
  E0523 06:57:56.244938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:57:56.648538 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 4.989006709s
  E0523 06:57:57.245099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:57:57.651664 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 3.985840164s
  E0523 06:57:58.245791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:57:58.654370 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 2.983147079s
  E0523 06:57:59.245865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:57:59.656606 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 1.981032479s
  E0523 06:58:00.246186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:58:00.658377 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 978.805638ms
  E0523 06:58:01.247167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8431 @ 05/23/24 06:58:01.659
  I0523 06:58:01.661549 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=statefulset-8431 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0523 06:58:01.722496 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0523 06:58:01.722526 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0523 06:58:01.722540 22 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0523 06:58:01.722653 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=statefulset-8431 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0523 06:58:01.786810 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0523 06:58:01.786839 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0523 06:58:01.786847 22 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0523 06:58:01.786887 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=statefulset-8431 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0523 06:58:01.854233 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0523 06:58:01.854264 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0523 06:58:01.854275 22 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0523 06:58:01.856232 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0523 06:58:02.247582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:03.248350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:04.249356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:05.249589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:06.249663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:07.249945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:08.250078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:09.250205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:10.250379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:11.250499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:58:11.857451 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0523 06:58:11.857477 22 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0523 06:58:11.857483 22 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 05/23/24 06:58:11.857
  I0523 06:58:11.858876 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=statefulset-8431 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0523 06:58:11.919548 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0523 06:58:11.919578 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0523 06:58:11.919590 22 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0523 06:58:11.919628 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=statefulset-8431 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0523 06:58:11.985094 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0523 06:58:11.985122 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0523 06:58:11.985130 22 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0523 06:58:11.985175 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=statefulset-8431 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0523 06:58:12.047965 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0523 06:58:12.047995 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0523 06:58:12.048005 22 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0523 06:58:12.048059 22 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0523 06:58:12.049354 22 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0523 06:58:12.250640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:13.250741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:14.250808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:15.251540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:16.251993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:17.252807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:18.252929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:19.253012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:20.253256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:21.254051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:58:22.052254 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0523 06:58:22.052276 22 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0523 06:58:22.052283 22 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0523 06:58:22.057992 22 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I0523 06:58:22.058033 22 resource.go:175] ss-0  k8s-10-255-0-208  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-23 06:57:32 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-23 06:57:31 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-23 06:58:12 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-23 06:58:12 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-23 06:57:31 +0000 UTC  }]
  I0523 06:58:22.058062 22 resource.go:175] ss-1  k8s-10-255-0-207  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-23 06:57:52 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-23 06:57:51 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-23 06:58:12 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-23 06:58:12 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-23 06:57:51 +0000 UTC  }]
  I0523 06:58:22.058085 22 resource.go:175] ss-2  k8s-10-255-0-209  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-23 06:57:52 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-23 06:57:51 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-23 06:58:12 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-23 06:58:12 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-23 06:57:51 +0000 UTC  }]
  I0523 06:58:22.058092 22 resource.go:178] 
  I0523 06:58:22.058100 22 statefulset.go:2147] StatefulSet ss has not reached scale 0, at 3
  E0523 06:58:22.254208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:58:23.060996 22 resource.go:168] POD   NODE              PHASE      GRACE  CONDITIONS
  I0523 06:58:23.061039 22 resource.go:175] ss-1  k8s-10-255-0-207  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-05-23 06:58:22 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-23 06:57:51 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-23 06:58:12 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-23 06:58:12 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-23 06:57:51 +0000 UTC  }]
  I0523 06:58:23.061046 22 resource.go:178] 
  I0523 06:58:23.061053 22 statefulset.go:2147] StatefulSet ss has not reached scale 0, at 1
  E0523 06:58:23.255233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:58:24.062814 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 7.995500588s
  E0523 06:58:24.256163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:58:25.064886 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 6.993555929s
  E0523 06:58:25.256178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:58:26.067605 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 5.990735555s
  E0523 06:58:26.256808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:58:27.070142 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 4.988248249s
  E0523 06:58:27.257423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:58:28.071941 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 3.986417673s
  E0523 06:58:28.258293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:58:29.074351 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 2.983942953s
  E0523 06:58:29.258702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:58:30.076148 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 1.982216787s
  E0523 06:58:30.259489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:58:31.078446 22 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 979.939113ms
  E0523 06:58:31.259745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8431 @ 05/23/24 06:58:32.078
  I0523 06:58:32.080959 22 rest.go:150] Scaling statefulset ss to 0
  I0523 06:58:32.090884 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0523 06:58:32.091944 22 statefulset.go:135] Deleting all statefulset in ns statefulset-8431
  I0523 06:58:32.092963 22 rest.go:150] Scaling statefulset ss to 0
  I0523 06:58:32.096564 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0523 06:58:32.097471 22 rest.go:88] Deleting statefulset ss
  I0523 06:58:32.103344 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8431" for this suite. @ 05/23/24 06:58:32.104
• [60.565 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 05/23/24 06:58:32.107
  I0523 06:58:32.107502 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename pod-network-test @ 05/23/24 06:58:32.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:58:32.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:58:32.114
  STEP: Performing setup for networking test in namespace pod-network-test-4333 @ 05/23/24 06:58:32.115
  STEP: creating a selector @ 05/23/24 06:58:32.115
  STEP: Creating the service pods in kubernetes @ 05/23/24 06:58:32.115
  I0523 06:58:32.115996 22 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0523 06:58:32.260049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:33.261058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:34.261960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:35.262162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:36.262644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:37.262730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:38.263632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:39.263717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:40.263796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:41.264822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:42.265739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:43.265872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/23/24 06:58:44.153
  E0523 06:58:44.266628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:45.266865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:58:46.167569 22 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0523 06:58:46.167594 22 utils.go:472] Going to poll 172.20.254.30 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0523 06:58:46.168522 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.20.254.30:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4333 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 06:58:46.168541 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 06:58:46.168883 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 06:58:46.168922 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-4333/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.20.254.30%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0523 06:58:46.194553 22 utils.go:489] Found all 1 expected endpoints: [netserver-0]
  I0523 06:58:46.194581 22 utils.go:472] Going to poll 172.20.64.135 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0523 06:58:46.195613 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.20.64.135:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4333 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 06:58:46.195631 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 06:58:46.195983 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 06:58:46.196025 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-4333/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.20.64.135%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0523 06:58:46.220859 22 utils.go:489] Found all 1 expected endpoints: [netserver-1]
  I0523 06:58:46.220894 22 utils.go:472] Going to poll 172.20.69.166 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0523 06:58:46.221998 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.20.69.166:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4333 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 06:58:46.222013 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 06:58:46.222328 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 06:58:46.222370 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-4333/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.20.69.166%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0523 06:58:46.244824 22 utils.go:489] Found all 1 expected endpoints: [netserver-2]
  I0523 06:58:46.244923 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4333" for this suite. @ 05/23/24 06:58:46.246
• [14.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 05/23/24 06:58:46.249
  I0523 06:58:46.249883 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/23/24 06:58:46.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:58:46.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:58:46.258
  I0523 06:58:46.260995 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7908" for this suite. @ 05/23/24 06:58:46.262
• [0.014 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3656
  STEP: Creating a kubernetes client @ 05/23/24 06:58:46.264
  I0523 06:58:46.264544 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename services @ 05/23/24 06:58:46.265
  E0523 06:58:46.267309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:58:46.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:58:46.272
  STEP: creating service multiprotocol-test in namespace services-8970 @ 05/23/24 06:58:46.274
  STEP: creating pod pod1 in namespace services-8970 @ 05/23/24 06:58:46.278
  STEP: Creating pod pod1 in namespace services-8970 @ 05/23/24 06:58:46.278
  E0523 06:58:47.267763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:48.268828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-8970 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 05/23/24 06:58:48.297
  I0523 06:58:48.301563 22 service.go:4351] successfully validated that service multiprotocol-test in namespace services-8970 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 05/23/24 06:58:48.301
  I0523 06:58:48.301603 22 resource.go:361] Creating new exec pod
  E0523 06:58:49.269604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:50.270334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:58:50.308286 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-8970 exec execpodxvl4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.126.246 80'
  I0523 06:58:50.371822 22 builder.go:146] stderr: "+ nc -v -t -w 2 10.68.126.246 80\nConnection to 10.68.126.246 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0523 06:58:50.371855 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0523 06:58:50.371929 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-8970 exec execpodxvl4j -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.126.246 80'
  E0523 06:58:51.271217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:52.271265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:53.272142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:54.272311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:58:54.434412 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.68.126.246 80\nConnection to 10.68.126.246 80 port [udp/*] succeeded!\n"
  I0523 06:58:54.434442 22 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 05/23/24 06:58:54.434
  I0523 06:58:54.438377 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-8970 exec execpodxvl4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.126.246 80'
  I0523 06:58:54.507050 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.126.246 80\nConnection to 10.68.126.246 80 port [tcp/http] succeeded!\n"
  I0523 06:58:54.507088 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0523 06:58:54.507173 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-8970 exec execpodxvl4j -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.126.246 80'
  I0523 06:58:54.580112 22 builder.go:135] rc: 1
  I0523 06:58:54.580160 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-8970 exec execpodxvl4j -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.126.246 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.68.126.246 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0523 06:58:55.272901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:56.273698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:58:56.508082 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-8970 exec execpodxvl4j -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.126.246 80'
  I0523 06:58:56.569928 22 builder.go:135] rc: 1
  I0523 06:58:56.569981 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-8970 exec execpodxvl4j -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.126.246 80:
  Command stdout:

  stderr:
  + + echonc hostName -v
   -u -w 2 10.68.126.246 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0523 06:58:57.274609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:58:58.275496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:58:58.507878 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-8970 exec execpodxvl4j -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.126.246 80'
  I0523 06:58:58.569257 22 builder.go:135] rc: 1
  I0523 06:58:58.569302 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-8970 exec execpodxvl4j -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.126.246 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.68.126.246 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0523 06:58:59.275750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:00.276831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:59:00.508222 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-8970 exec execpodxvl4j -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.126.246 80'
  I0523 06:59:00.569273 22 builder.go:135] rc: 1
  I0523 06:59:00.569322 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-8970 exec execpodxvl4j -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.126.246 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.68.126.246 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  STEP: Checking if the Service forwards traffic to UDP only @ 05/23/24 06:59:00.569
  I0523 06:59:00.572867 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-8970 exec execpodxvl4j -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.126.246 80'
  I0523 06:59:00.648838 22 builder.go:135] rc: 1
  I0523 06:59:00.648907 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-8970 exec execpodxvl4j -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.126.246 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.68.126.246 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0523 06:59:01.277619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:02.277746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:59:02.572978 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-8970 exec execpodxvl4j -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.126.246 80'
  E0523 06:59:03.278219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:04.278250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:05.278987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:06.279572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:59:06.638864 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.68.126.246 80\nConnection to 10.68.126.246 80 port [udp/*] succeeded!\n"
  I0523 06:59:06.638894 22 builder.go:147] stdout: "pod1"
  I0523 06:59:06.639046 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-8970 exec execpodxvl4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.126.246 80'
  I0523 06:59:06.701916 22 builder.go:135] rc: 1
  I0523 06:59:06.701963 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-8970 exec execpodxvl4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.126.246 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.68.126.246 80
  nc: connect to 10.68.126.246 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0523 06:59:07.280351      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:08.280808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:59:08.639140 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-8970 exec execpodxvl4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.126.246 80'
  I0523 06:59:08.700901 22 builder.go:135] rc: 1
  I0523 06:59:08.700950 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-8970 exec execpodxvl4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.126.246 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.68.126.246 80
  nc: connect to 10.68.126.246 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0523 06:59:09.281620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:10.281960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:59:10.639430 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-8970 exec execpodxvl4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.126.246 80'
  I0523 06:59:10.701697 22 builder.go:135] rc: 1
  I0523 06:59:10.701741 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-8970 exec execpodxvl4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.126.246 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.68.126.246 80
  nc: connect to 10.68.126.246 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0523 06:59:11.282911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:12.283487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:59:12.639999 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-8970 exec execpodxvl4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.126.246 80'
  I0523 06:59:12.702229 22 builder.go:135] rc: 1
  I0523 06:59:12.702279 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=services-8970 exec execpodxvl4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.126.246 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.68.126.246 80
  nc: connect to 10.68.126.246 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0523 06:59:12.702435 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8970" for this suite. @ 05/23/24 06:59:12.704
• [26.443 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 05/23/24 06:59:12.707
  I0523 06:59:12.707527 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename resourcequota @ 05/23/24 06:59:12.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:59:12.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:59:12.716
  E0523 06:59:13.284176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:14.284239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:15.284812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:16.285214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:17.286197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:18.287024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:19.287687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:20.287703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:21.288514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:22.289195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:23.289973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:24.290542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:25.290595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:26.291286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:27.291752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:28.292802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:29.293424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 05/23/24 06:59:29.719
  E0523 06:59:30.294006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:31.294735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:32.295732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:33.296554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:34.297442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/23/24 06:59:34.721
  STEP: Ensuring resource quota status is calculated @ 05/23/24 06:59:34.724
  E0523 06:59:35.297857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:36.297994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 05/23/24 06:59:36.727
  STEP: Ensuring resource quota status captures configMap creation @ 05/23/24 06:59:36.732
  E0523 06:59:37.298219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:38.298302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 05/23/24 06:59:38.734
  STEP: Ensuring resource quota status released usage @ 05/23/24 06:59:38.736
  E0523 06:59:39.298685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:40.298799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:59:40.738703 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6660" for this suite. @ 05/23/24 06:59:40.74
• [28.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 05/23/24 06:59:40.745
  I0523 06:59:40.745979 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename webhook @ 05/23/24 06:59:40.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:59:40.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:59:40.757
  STEP: Setting up server cert @ 05/23/24 06:59:40.766
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/23/24 06:59:40.936
  STEP: Deploying the webhook pod @ 05/23/24 06:59:40.94
  STEP: Wait for the deployment to be ready @ 05/23/24 06:59:40.946
  I0523 06:59:40.949775 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0523 06:59:41.299087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:42.299738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/23/24 06:59:42.954
  STEP: Verifying the service has paired with the endpoint @ 05/23/24 06:59:42.959
  E0523 06:59:43.299824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 06:59:43.960333 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/23/24 06:59:43.963
  I0523 06:59:43.986707 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1027" for this suite. @ 05/23/24 06:59:43.988
  STEP: Destroying namespace "webhook-markers-3102" for this suite. @ 05/23/24 06:59:43.992
• [3.249 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 05/23/24 06:59:43.995
  I0523 06:59:43.995562 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename container-runtime @ 05/23/24 06:59:43.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:59:44.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:59:44.005
  STEP: create the container @ 05/23/24 06:59:44.006
  W0523 06:59:44.010164      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/23/24 06:59:44.01
  E0523 06:59:44.300000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:45.300130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:46.300821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 05/23/24 06:59:47.019
  STEP: the container should be terminated @ 05/23/24 06:59:47.02
  STEP: the termination message should be set @ 05/23/24 06:59:47.02
  I0523 06:59:47.020466 22 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/23/24 06:59:47.02
  I0523 06:59:47.026451 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1870" for this suite. @ 05/23/24 06:59:47.027
• [3.034 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 05/23/24 06:59:47.029
  I0523 06:59:47.029886 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename downward-api @ 05/23/24 06:59:47.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:59:47.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:59:47.037
  STEP: Creating a pod to test downward API volume plugin @ 05/23/24 06:59:47.039
  E0523 06:59:47.300871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:48.301754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:49.302568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:50.303245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:59:51.048
  I0523 06:59:51.050184 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-8c54783b-cf9f-4da3-b2d3-00c8bbdf718b container client-container: <nil>
  STEP: delete the pod @ 05/23/24 06:59:51.062
  I0523 06:59:51.068107 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3723" for this suite. @ 05/23/24 06:59:51.069
• [4.042 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1048
  STEP: Creating a kubernetes client @ 05/23/24 06:59:51.071
  I0523 06:59:51.071817 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename kubectl @ 05/23/24 06:59:51.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:59:51.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:59:51.081
  STEP: create deployment with httpd image @ 05/23/24 06:59:51.082
  I0523 06:59:51.082819 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-5552 create -f -'
  I0523 06:59:51.142131 22 builder.go:146] stderr: ""
  I0523 06:59:51.142159 22 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 05/23/24 06:59:51.142
  I0523 06:59:51.142214 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-5552 diff -f -'
  I0523 06:59:51.212812 22 builder.go:135] rc: 1
  I0523 06:59:51.212942 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-5552 delete -f -'
  I0523 06:59:51.259329 22 builder.go:146] stderr: ""
  I0523 06:59:51.259361 22 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0523 06:59:51.259505 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5552" for this suite. @ 05/23/24 06:59:51.261
• [0.192 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 05/23/24 06:59:51.263
  I0523 06:59:51.263780 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename pods @ 05/23/24 06:59:51.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:59:51.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:59:51.271
  E0523 06:59:51.303960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:52.304812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:53.304998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:54.305339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:55.306200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:56.306321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 06:59:57.297
  I0523 06:59:57.298398 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod client-envvars-7ccdd382-635d-4c7f-8eff-60d45eca8b1e container env3cont: <nil>
  E0523 06:59:57.307312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 05/23/24 06:59:57.311
  I0523 06:59:57.317334 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5474" for this suite. @ 05/23/24 06:59:57.318
• [6.057 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 05/23/24 06:59:57.321
  I0523 06:59:57.321188 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 06:59:57.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 06:59:57.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 06:59:57.33
  STEP: Creating secret with name projected-secret-test-797d3f30-dac5-4101-a525-e3240c071b1e @ 05/23/24 06:59:57.332
  STEP: Creating a pod to test consume secrets @ 05/23/24 06:59:57.333
  E0523 06:59:58.307762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 06:59:59.308565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:00.309008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:01.309086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:00:01.343
  I0523 07:00:01.345253 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-secrets-b629c10d-a93b-491e-b778-d9933ccfad1a container secret-volume-test: <nil>
  STEP: delete the pod @ 05/23/24 07:00:01.357
  I0523 07:00:01.364664 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6802" for this suite. @ 05/23/24 07:00:01.366
• [4.050 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 05/23/24 07:00:01.371
  I0523 07:00:01.371593 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename statefulset @ 05/23/24 07:00:01.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:00:01.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:00:01.379
  STEP: Creating service test in namespace statefulset-8035 @ 05/23/24 07:00:01.382
  STEP: Looking for a node to schedule stateful set and pod @ 05/23/24 07:00:01.384
  STEP: Creating pod with conflicting port in namespace statefulset-8035 @ 05/23/24 07:00:01.385
  STEP: Waiting until pod test-pod will start running in namespace statefulset-8035 @ 05/23/24 07:00:01.389
  E0523 07:00:02.309189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:03.309521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-8035 @ 05/23/24 07:00:03.392
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-8035 @ 05/23/24 07:00:03.394
  I0523 07:00:03.403277 22 statefulset.go:866] Observed stateful pod in namespace: statefulset-8035, name: ss-0, uid: 73df5979-cb33-4d45-8921-269fb6e9719e, status phase: Pending. Waiting for statefulset controller to delete.
  I0523 07:00:03.406953 22 statefulset.go:866] Observed stateful pod in namespace: statefulset-8035, name: ss-0, uid: 73df5979-cb33-4d45-8921-269fb6e9719e, status phase: Failed. Waiting for statefulset controller to delete.
  I0523 07:00:03.412515 22 statefulset.go:866] Observed stateful pod in namespace: statefulset-8035, name: ss-0, uid: 73df5979-cb33-4d45-8921-269fb6e9719e, status phase: Failed. Waiting for statefulset controller to delete.
  I0523 07:00:03.415245 22 statefulset.go:860] Observed delete event for stateful pod ss-0 in namespace statefulset-8035
  STEP: Removing pod with conflicting port in namespace statefulset-8035 @ 05/23/24 07:00:03.415
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-8035 and will be in running state @ 05/23/24 07:00:03.422
  E0523 07:00:04.310065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:05.310198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:00:05.428363 22 statefulset.go:135] Deleting all statefulset in ns statefulset-8035
  I0523 07:00:05.429533 22 rest.go:150] Scaling statefulset ss to 0
  E0523 07:00:06.311054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:07.311248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:08.311687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:09.311894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:10.311978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:11.312129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:12.312807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:13.312933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:14.313747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:15.313840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:00:15.444581 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0523 07:00:15.446065 22 rest.go:88] Deleting statefulset ss
  I0523 07:00:15.450734 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8035" for this suite. @ 05/23/24 07:00:15.453
• [14.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 05/23/24 07:00:15.455
  I0523 07:00:15.455933 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 07:00:15.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:00:15.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:00:15.463
  STEP: Creating projection with secret that has name projected-secret-test-522b8339-3c57-41e3-92b8-9b9877783b83 @ 05/23/24 07:00:15.466
  STEP: Creating a pod to test consume secrets @ 05/23/24 07:00:15.467
  E0523 07:00:16.313945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:17.314251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:18.314400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:19.315254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:00:19.478
  I0523 07:00:19.479629 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-secrets-4bbb125d-5853-4097-b12e-ab5789d63553 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/23/24 07:00:19.492
  I0523 07:00:19.498458 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2599" for this suite. @ 05/23/24 07:00:19.499
• [4.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 05/23/24 07:00:19.502
  I0523 07:00:19.502855 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename pod-network-test @ 05/23/24 07:00:19.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:00:19.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:00:19.51
  STEP: Performing setup for networking test in namespace pod-network-test-2972 @ 05/23/24 07:00:19.512
  STEP: creating a selector @ 05/23/24 07:00:19.512
  STEP: Creating the service pods in kubernetes @ 05/23/24 07:00:19.512
  I0523 07:00:19.512688 22 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0523 07:00:20.315770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:21.316819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:22.317828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:23.317965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:24.318138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:25.318271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:26.319348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:27.320205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:28.320815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:29.321098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:30.322098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:31.322239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:32.322812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:33.322954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:34.323815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:35.323923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:36.324090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:37.324834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:38.324920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:39.325177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:40.325812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:41.326310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/23/24 07:00:41.557
  E0523 07:00:42.327368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:43.327598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:00:43.565758 22 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0523 07:00:43.565784 22 networking.go:42] Breadth first check of 172.20.254.23 on host 10.255.0.207...
  I0523 07:00:43.566946 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.64.164:9080/dial?request=hostname&protocol=http&host=172.20.254.23&port=8083&tries=1'] Namespace:pod-network-test-2972 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 07:00:43.566965 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 07:00:43.567303 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 07:00:43.567345 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-2972/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.64.164%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.20.254.23%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0523 07:00:43.593019 22 utils.go:331] Waiting for responses: map[]
  I0523 07:00:43.593050 22 utils.go:335] reached 172.20.254.23 after 0/1 tries
  I0523 07:00:43.593062 22 networking.go:42] Breadth first check of 172.20.64.157 on host 10.255.0.208...
  I0523 07:00:43.594247 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.64.164:9080/dial?request=hostname&protocol=http&host=172.20.64.157&port=8083&tries=1'] Namespace:pod-network-test-2972 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 07:00:43.594269 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 07:00:43.594654 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 07:00:43.594698 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-2972/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.64.164%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.20.64.157%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0523 07:00:43.624509 22 utils.go:331] Waiting for responses: map[]
  I0523 07:00:43.624531 22 utils.go:335] reached 172.20.64.157 after 0/1 tries
  I0523 07:00:43.624563 22 networking.go:42] Breadth first check of 172.20.69.162 on host 10.255.0.209...
  I0523 07:00:43.625692 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.64.164:9080/dial?request=hostname&protocol=http&host=172.20.69.162&port=8083&tries=1'] Namespace:pod-network-test-2972 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 07:00:43.625707 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 07:00:43.626031 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 07:00:43.626072 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-2972/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.64.164%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.20.69.162%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0523 07:00:43.649281 22 utils.go:331] Waiting for responses: map[]
  I0523 07:00:43.649298 22 utils.go:335] reached 172.20.69.162 after 0/1 tries
  I0523 07:00:43.649305 22 networking.go:53] Going to retry 0 out of 3 pods....
  I0523 07:00:43.649358 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2972" for this suite. @ 05/23/24 07:00:43.65
• [24.151 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 05/23/24 07:00:43.653
  I0523 07:00:43.653981 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename resourcequota @ 05/23/24 07:00:43.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:00:43.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:00:43.662
  STEP: Counting existing ResourceQuota @ 05/23/24 07:00:43.664
  E0523 07:00:44.328082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:45.328810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:46.328947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:47.329762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:48.330632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/23/24 07:00:48.666
  STEP: Ensuring resource quota status is calculated @ 05/23/24 07:00:48.668
  E0523 07:00:49.331536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:50.331638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 05/23/24 07:00:50.67
  STEP: Ensuring resource quota status captures replication controller creation @ 05/23/24 07:00:50.676
  E0523 07:00:51.332392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:52.333267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 05/23/24 07:00:52.678
  STEP: Ensuring resource quota status released usage @ 05/23/24 07:00:52.681
  E0523 07:00:53.333344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:54.333408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:00:54.683695 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1960" for this suite. @ 05/23/24 07:00:54.685
• [11.034 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 05/23/24 07:00:54.688
  I0523 07:00:54.688241 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename subpath @ 05/23/24 07:00:54.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:00:54.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:00:54.696
  STEP: Setting up data @ 05/23/24 07:00:54.698
  STEP: Creating pod pod-subpath-test-downwardapi-ldd2 @ 05/23/24 07:00:54.701
  STEP: Creating a pod to test atomic-volume-subpath @ 05/23/24 07:00:54.701
  E0523 07:00:55.333497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:56.333578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:57.333704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:58.333776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:00:59.334590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:00.334731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:01.335164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:02.335308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:03.336211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:04.336461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:05.337031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:06.337179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:07.337193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:08.337319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:09.338074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:10.338220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:11.338963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:12.339103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:13.339900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:14.340571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:15.341604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:16.341732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:01:16.73
  I0523 07:01:16.731944 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-subpath-test-downwardapi-ldd2 container test-container-subpath-downwardapi-ldd2: <nil>
  STEP: delete the pod @ 05/23/24 07:01:16.734
  STEP: Deleting pod pod-subpath-test-downwardapi-ldd2 @ 05/23/24 07:01:16.74
  I0523 07:01:16.740542 22 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-ldd2" in namespace "subpath-8918"
  I0523 07:01:16.741507 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8918" for this suite. @ 05/23/24 07:01:16.742
• [22.057 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:779
  STEP: Creating a kubernetes client @ 05/23/24 07:01:16.745
  I0523 07:01:16.745059 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename services @ 05/23/24 07:01:16.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:01:16.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:01:16.753
  I0523 07:01:16.756054 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9430" for this suite. @ 05/23/24 07:01:16.757
• [0.015 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 05/23/24 07:01:16.76
  I0523 07:01:16.760531 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename pods @ 05/23/24 07:01:16.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:01:16.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:01:16.768
  I0523 07:01:16.769800 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: creating the pod @ 05/23/24 07:01:16.77
  STEP: submitting the pod to kubernetes @ 05/23/24 07:01:16.77
  E0523 07:01:17.341834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:18.342894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:01:18.812505 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4882" for this suite. @ 05/23/24 07:01:18.814
• [2.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 05/23/24 07:01:18.817
  I0523 07:01:18.817246 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 07:01:18.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:01:18.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:01:18.825
  STEP: Creating a pod to test downward API volume plugin @ 05/23/24 07:01:18.826
  E0523 07:01:19.343270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:20.343362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:01:20.833
  I0523 07:01:20.834630 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-6dd50567-c38d-4ba6-b1f2-9ed7737a1bc6 container client-container: <nil>
  STEP: delete the pod @ 05/23/24 07:01:20.836
  I0523 07:01:20.843004 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4646" for this suite. @ 05/23/24 07:01:20.844
• [2.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 05/23/24 07:01:20.846
  I0523 07:01:20.846814 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename downward-api @ 05/23/24 07:01:20.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:01:20.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:01:20.855
  STEP: Creating a pod to test downward api env vars @ 05/23/24 07:01:20.857
  E0523 07:01:21.344339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:22.344824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:01:22.864
  I0523 07:01:22.865514 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod downward-api-d97d2f33-9e00-446e-83e0-419f129ce64d container dapi-container: <nil>
  STEP: delete the pod @ 05/23/24 07:01:22.867
  I0523 07:01:22.873638 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-175" for this suite. @ 05/23/24 07:01:22.875
• [2.031 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 05/23/24 07:01:22.878
  I0523 07:01:22.878055 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename secrets @ 05/23/24 07:01:22.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:01:22.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:01:22.885
  STEP: creating secret secrets-2920/secret-test-eea90a4c-3e2f-4ae5-b199-796e6756e434 @ 05/23/24 07:01:22.886
  STEP: Creating a pod to test consume secrets @ 05/23/24 07:01:22.888
  E0523 07:01:23.345847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:24.346060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:25.347056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:26.347139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:01:26.899
  I0523 07:01:26.900558 22 output.go:196] Trying to get logs from node k8s-10-255-0-209 pod pod-configmaps-2b1c4c5f-01ee-43d1-8043-ff99e2c935b5 container env-test: <nil>
  STEP: delete the pod @ 05/23/24 07:01:26.906
  I0523 07:01:26.914047 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2920" for this suite. @ 05/23/24 07:01:26.915
• [4.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 05/23/24 07:01:26.917
  I0523 07:01:26.917893 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename webhook @ 05/23/24 07:01:26.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:01:26.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:01:26.926
  STEP: Setting up server cert @ 05/23/24 07:01:26.937
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/23/24 07:01:27.293
  STEP: Deploying the webhook pod @ 05/23/24 07:01:27.296
  STEP: Wait for the deployment to be ready @ 05/23/24 07:01:27.302
  I0523 07:01:27.306923 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0523 07:01:27.347998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:28.348832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/23/24 07:01:29.311
  STEP: Verifying the service has paired with the endpoint @ 05/23/24 07:01:29.316
  E0523 07:01:29.349182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:01:30.316717 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 05/23/24 07:01:30.319
  I0523 07:01:30.337075 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8393" for this suite. @ 05/23/24 07:01:30.339
  STEP: Destroying namespace "webhook-markers-9443" for this suite. @ 05/23/24 07:01:30.344
• [3.430 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 05/23/24 07:01:30.347
  I0523 07:01:30.347838 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename var-expansion @ 05/23/24 07:01:30.348
  E0523 07:01:30.349664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:01:30.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:01:30.356
  STEP: Creating a pod to test env composition @ 05/23/24 07:01:30.358
  E0523 07:01:31.350079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:32.350221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:33.350699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:34.351032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:01:34.368
  I0523 07:01:34.369420 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod var-expansion-8d0a70c4-cf35-40fb-906a-690f019dbfa1 container dapi-container: <nil>
  STEP: delete the pod @ 05/23/24 07:01:34.371
  I0523 07:01:34.379319 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7341" for this suite. @ 05/23/24 07:01:34.38
• [4.035 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 05/23/24 07:01:34.382
  I0523 07:01:34.382886 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename svcaccounts @ 05/23/24 07:01:34.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:01:34.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:01:34.391
  I0523 07:01:34.400070 22 service_accounts.go:253] created pod pod-service-account-defaultsa
  I0523 07:01:34.400087 22 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I0523 07:01:34.402156 22 service_accounts.go:253] created pod pod-service-account-mountsa
  I0523 07:01:34.402168 22 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I0523 07:01:34.404962 22 service_accounts.go:253] created pod pod-service-account-nomountsa
  I0523 07:01:34.404977 22 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I0523 07:01:34.408352 22 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I0523 07:01:34.408366 22 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0523 07:01:34.413377 22 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I0523 07:01:34.413397 22 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0523 07:01:34.416315 22 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I0523 07:01:34.416331 22 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0523 07:01:34.419127 22 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I0523 07:01:34.419140 22 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0523 07:01:34.422850 22 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I0523 07:01:34.422866 22 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0523 07:01:34.426823 22 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I0523 07:01:34.426837 22 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0523 07:01:34.426912 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1832" for this suite. @ 05/23/24 07:01:34.428
• [0.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 05/23/24 07:01:34.434
  I0523 07:01:34.434369 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename webhook @ 05/23/24 07:01:34.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:01:34.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:01:34.448
  STEP: Setting up server cert @ 05/23/24 07:01:34.464
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/23/24 07:01:34.632
  STEP: Deploying the webhook pod @ 05/23/24 07:01:34.635
  STEP: Wait for the deployment to be ready @ 05/23/24 07:01:34.642
  I0523 07:01:34.646717 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0523 07:01:35.351432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:36.351606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/23/24 07:01:36.65
  STEP: Verifying the service has paired with the endpoint @ 05/23/24 07:01:36.655
  E0523 07:01:37.351763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:01:37.656197 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0523 07:01:37.659312 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 05/23/24 07:01:38.167
  STEP: Creating a custom resource that should be denied by the webhook @ 05/23/24 07:01:38.175
  E0523 07:01:38.352800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:39.353120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 05/23/24 07:01:40.187
  STEP: Updating the custom resource with disallowed data should be denied @ 05/23/24 07:01:40.19
  STEP: Deleting the custom resource should be denied @ 05/23/24 07:01:40.193
  STEP: Remove the offending key and value from the custom resource data @ 05/23/24 07:01:40.195
  STEP: Deleting the updated custom resource should be successful @ 05/23/24 07:01:40.199
  E0523 07:01:40.353427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:01:40.729583 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3559" for this suite. @ 05/23/24 07:01:40.731
  STEP: Destroying namespace "webhook-markers-1666" for this suite. @ 05/23/24 07:01:40.733
• [6.302 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 05/23/24 07:01:40.736
  I0523 07:01:40.736435 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 07:01:40.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:01:40.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:01:40.744
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-4cb8c8d1-781f-493d-8b43-34430bcebd68 @ 05/23/24 07:01:40.748
  STEP: Creating the pod @ 05/23/24 07:01:40.749
  E0523 07:01:41.353999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:42.354071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-4cb8c8d1-781f-493d-8b43-34430bcebd68 @ 05/23/24 07:01:42.759
  STEP: waiting to observe update in volume @ 05/23/24 07:01:42.761
  E0523 07:01:43.354369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:44.354411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:45.355066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:46.355212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:47.356066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:48.356144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:49.356310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:50.356792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:51.357595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:52.358277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:53.358524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:54.359061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:55.359129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:56.359263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:57.360153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:58.360808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:01:59.361577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:00.361703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:01.361728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:02.361799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:03.361869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:04.362182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:05.362727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:06.362781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:07.362894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:08.363011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:09.363300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:10.363425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:11.363501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:12.363793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:13.364808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:14.365057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:15.365225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:16.365343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:17.366409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:18.366540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:19.366700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:20.367566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:21.368198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:22.368285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:23.368517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:24.368877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:25.369759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:26.369876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:27.370356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:28.370567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:29.371501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:30.371597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:31.371767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:32.372819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:33.373562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:34.374483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:35.374741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:36.374820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:37.375566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:38.375694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:39.376406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:40.377332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:41.377483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:42.378159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:43.378854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:44.379052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:45.379888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:46.380815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:47.380975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:48.381114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:49.381835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:50.382598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:51.383030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:52.383991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:53.384392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:54.384568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:55.384832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:56.384922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:57.385740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:58.386683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:02:59.387397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:00.387528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:03:00.940023 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5539" for this suite. @ 05/23/24 07:03:00.941
• [80.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 05/23/24 07:03:00.944
  I0523 07:03:00.944075 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename field-validation @ 05/23/24 07:03:00.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:03:00.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:03:00.952
  STEP: apply creating a deployment @ 05/23/24 07:03:00.953
  I0523 07:03:00.957939 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6813" for this suite. @ 05/23/24 07:03:00.959
• [0.018 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 05/23/24 07:03:00.961
  I0523 07:03:00.961940 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename replicaset @ 05/23/24 07:03:00.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:03:00.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:03:00.97
  STEP: Create a Replicaset @ 05/23/24 07:03:00.973
  STEP: Verify that the required pods have come up. @ 05/23/24 07:03:00.975
  I0523 07:03:00.979065 22 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0523 07:03:01.387609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:02.388524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:03.389566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:04.390511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:05.390629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:03:05.980989 22 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/23/24 07:03:05.981
  STEP: Getting /status @ 05/23/24 07:03:05.981
  I0523 07:03:05.982556 22 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 05/23/24 07:03:05.982
  I0523 07:03:05.987350 22 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 05/23/24 07:03:05.987
  I0523 07:03:05.988699 22 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0523 07:03:05.988770 22 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0523 07:03:05.988905 22 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0523 07:03:05.988969 22 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0523 07:03:05.988987 22 replica_set.go:682] Found replicaset test-rs in namespace replicaset-5585 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0523 07:03:05.988996 22 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 05/23/24 07:03:05.989
  I0523 07:03:05.989021 22 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0523 07:03:05.992332 22 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 05/23/24 07:03:05.992
  I0523 07:03:05.993391 22 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0523 07:03:05.993462 22 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0523 07:03:05.993527 22 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0523 07:03:05.993643 22 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0523 07:03:05.993662 22 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-5585 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0523 07:03:05.993710 22 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0523 07:03:05.993722 22 replica_set.go:718] Found replicaset test-rs in namespace replicaset-5585 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0523 07:03:05.993733 22 replica_set.go:729] Replicaset test-rs has a patched status
  I0523 07:03:05.993792 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5585" for this suite. @ 05/23/24 07:03:05.995
• [5.037 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 05/23/24 07:03:05.999
  I0523 07:03:05.999275 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename resourcequota @ 05/23/24 07:03:05.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:03:06.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:03:06.009
  STEP: Creating a ResourceQuota with terminating scope @ 05/23/24 07:03:06.012
  STEP: Ensuring ResourceQuota status is calculated @ 05/23/24 07:03:06.015
  E0523 07:03:06.390709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:07.390836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 05/23/24 07:03:08.017
  STEP: Ensuring ResourceQuota status is calculated @ 05/23/24 07:03:08.02
  E0523 07:03:08.391213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:09.391452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 05/23/24 07:03:10.022
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 05/23/24 07:03:10.029
  E0523 07:03:10.392471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:11.392804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 05/23/24 07:03:12.031
  E0523 07:03:12.393766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:13.394488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/23/24 07:03:14.033
  STEP: Ensuring resource quota status released the pod usage @ 05/23/24 07:03:14.039
  E0523 07:03:14.394989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:15.395907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 05/23/24 07:03:16.041
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 05/23/24 07:03:16.046
  E0523 07:03:16.396145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:17.396808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 05/23/24 07:03:18.048
  E0523 07:03:18.396912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:19.396998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/23/24 07:03:20.051
  STEP: Ensuring resource quota status released the pod usage @ 05/23/24 07:03:20.058
  E0523 07:03:20.397985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:21.398073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:03:22.060555 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5161" for this suite. @ 05/23/24 07:03:22.062
• [16.065 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 05/23/24 07:03:22.064
  I0523 07:03:22.064567 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/23/24 07:03:22.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:03:22.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:03:22.071
  STEP: create the container to handle the HTTPGet hook request. @ 05/23/24 07:03:22.076
  E0523 07:03:22.399072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:23.400117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/23/24 07:03:24.084
  E0523 07:03:24.400781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:25.400828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 05/23/24 07:03:26.091
  E0523 07:03:26.401652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:27.401744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 05/23/24 07:03:28.096
  I0523 07:03:28.099519 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8808" for this suite. @ 05/23/24 07:03:28.101
• [6.039 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 05/23/24 07:03:28.103
  I0523 07:03:28.103241 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename emptydir @ 05/23/24 07:03:28.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:03:28.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:03:28.111
  STEP: Creating Pod @ 05/23/24 07:03:28.112
  E0523 07:03:28.402578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:29.403342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 05/23/24 07:03:30.121
  I0523 07:03:30.121130 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-3126 PodName:pod-sharedvolume-5743e3a5-2ec0-4461-b3b6-29dbc17d787c ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 07:03:30.121142 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 07:03:30.121484 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 07:03:30.121520 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/emptydir-3126/pods/pod-sharedvolume-5743e3a5-2ec0-4461-b3b6-29dbc17d787c/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I0523 07:03:30.146391 22 exec_util.go:106] Exec stderr: ""
  I0523 07:03:30.146481 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3126" for this suite. @ 05/23/24 07:03:30.148
• [2.047 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 05/23/24 07:03:30.15
  I0523 07:03:30.150408 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename subpath @ 05/23/24 07:03:30.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:03:30.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:03:30.159
  STEP: Setting up data @ 05/23/24 07:03:30.16
  STEP: Creating pod pod-subpath-test-secret-h8mg @ 05/23/24 07:03:30.164
  STEP: Creating a pod to test atomic-volume-subpath @ 05/23/24 07:03:30.164
  E0523 07:03:30.403435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:31.403954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:32.404364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:33.404997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:34.405245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:35.405379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:36.406187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:37.406330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:38.407246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:39.407460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:40.408320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:41.408408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:42.409440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:43.409575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:44.410609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:45.410754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:46.411178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:47.411324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:48.412258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:49.412551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:50.412648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:51.412776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:03:52.194
  I0523 07:03:52.195739 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-subpath-test-secret-h8mg container test-container-subpath-secret-h8mg: <nil>
  STEP: delete the pod @ 05/23/24 07:03:52.198
  STEP: Deleting pod pod-subpath-test-secret-h8mg @ 05/23/24 07:03:52.204
  I0523 07:03:52.204630 22 delete.go:62] Deleting pod "pod-subpath-test-secret-h8mg" in namespace "subpath-6414"
  I0523 07:03:52.205702 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6414" for this suite. @ 05/23/24 07:03:52.207
• [22.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 05/23/24 07:03:52.209
  I0523 07:03:52.209568 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename resourcequota @ 05/23/24 07:03:52.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:03:52.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:03:52.217
  STEP: Creating resourceQuota "e2e-rq-status-h5fzc" @ 05/23/24 07:03:52.227
  I0523 07:03:52.230294 22 resource_quota.go:1051] Resource quota "e2e-rq-status-h5fzc" reports spec: hard cpu limit of 500m
  I0523 07:03:52.230311 22 resource_quota.go:1053] Resource quota "e2e-rq-status-h5fzc" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-h5fzc" /status @ 05/23/24 07:03:52.23
  STEP: Confirm /status for "e2e-rq-status-h5fzc" resourceQuota via watch @ 05/23/24 07:03:52.234
  I0523 07:03:52.234756 22 resource_quota.go:1080] observed resourceQuota "e2e-rq-status-h5fzc" in namespace "resourcequota-7334" with hard status: v1.ResourceList(nil)
  I0523 07:03:52.234803 22 resource_quota.go:1083] Found resourceQuota "e2e-rq-status-h5fzc" in namespace "resourcequota-7334" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0523 07:03:52.234817 22 resource_quota.go:1090] ResourceQuota "e2e-rq-status-h5fzc" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 05/23/24 07:03:52.235
  I0523 07:03:52.237702 22 resource_quota.go:1101] Resource quota "e2e-rq-status-h5fzc" reports spec: hard cpu limit of 1
  I0523 07:03:52.237714 22 resource_quota.go:1102] Resource quota "e2e-rq-status-h5fzc" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-h5fzc" /status @ 05/23/24 07:03:52.237
  STEP: Confirm /status for "e2e-rq-status-h5fzc" resourceQuota via watch @ 05/23/24 07:03:52.24
  I0523 07:03:52.241279 22 resource_quota.go:1124] observed resourceQuota "e2e-rq-status-h5fzc" in namespace "resourcequota-7334" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0523 07:03:52.241305 22 resource_quota.go:1127] Found resourceQuota "e2e-rq-status-h5fzc" in namespace "resourcequota-7334" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0523 07:03:52.241319 22 resource_quota.go:1134] ResourceQuota "e2e-rq-status-h5fzc" /status was patched
  STEP: Get "e2e-rq-status-h5fzc" /status @ 05/23/24 07:03:52.241
  I0523 07:03:52.242548 22 resource_quota.go:1145] Resourcequota "e2e-rq-status-h5fzc" reports status: hard cpu of 1
  I0523 07:03:52.242564 22 resource_quota.go:1147] Resourcequota "e2e-rq-status-h5fzc" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-h5fzc" /status before checking Spec is unchanged @ 05/23/24 07:03:52.243
  I0523 07:03:52.245566 22 resource_quota.go:1167] Resourcequota "e2e-rq-status-h5fzc" reports status: hard cpu of 2
  I0523 07:03:52.245586 22 resource_quota.go:1169] Resourcequota "e2e-rq-status-h5fzc" reports status: hard memory of 2Gi
  I0523 07:03:52.246181 22 resource_quota.go:1181] Found resourceQuota "e2e-rq-status-h5fzc" in namespace "resourcequota-7334" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0523 07:03:52.247132 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966cd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966d08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966d38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:03:52.413276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:53.413575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:54.413659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:55.414185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:56.414319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:03:57.247984 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b82d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b83c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b8438), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:03:57.415226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:58.415437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:03:59.415671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:00.415746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:01.416801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:04:02.248666 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b8780), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b8810), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b8840), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:04:02.416852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:03.417666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:04.417809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:05.417877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:06.418364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:04:07.248061 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0031c6168), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0031c61e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0031c6228), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:04:07.419306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:08.419391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:09.419621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:10.419752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:11.419850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:04:12.248138 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0031c6588), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0031c6600), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0031c6660), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:04:12.420382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:13.420808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:14.421099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:15.421190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:16.421317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:04:17.248919 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966150), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966180), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049661c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:04:17.422168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:18.422696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:19.423708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:20.423749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:21.424804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:04:22.247948 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b8c30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b8c90), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b8cc0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:04:22.425191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:23.426150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:24.427108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:25.427153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:26.427279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:04:27.248084 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966408), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966438), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966468), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:04:27.428284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:28.429033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:29.429561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:30.429643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:31.429764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:04:32.248166 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b9068), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b90e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b9140), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:04:32.430338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:33.430461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:34.430507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:35.430586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:36.431140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:04:37.249074 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0031c6ae0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0031c6b58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0031c6ba0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:04:37.431285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:38.431418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:39.431476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:40.431604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:41.431705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:04:42.248236 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0031c6ee8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0031c6f90), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0031c7008), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:04:42.432476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:43.432568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:44.433528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:45.434522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:46.434647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:04:47.248421 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0031c7380), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0031c73c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0031c7470), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:04:47.435683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:48.435749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:49.435981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:50.436059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:51.436232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:04:52.248823 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966690), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049666f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966720), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:04:52.437063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:53.437973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:54.438270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:55.438384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:56.438510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:04:57.248347 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966858), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966888), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049668b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:04:57.438549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:58.438677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:04:59.439692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:00.439772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:01.439974      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:05:02.248889 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966a38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966a80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966ab0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:05:02.440096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:03.440521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:04.441567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:05.441691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:06.441778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:05:07.248506 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966cd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966d08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966d38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:05:07.442712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:08.442837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:09.442994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:10.443083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:11.443213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:05:12.248410 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966ea0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966ed0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966f00), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:05:12.443694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:13.443760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:14.444011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:15.444811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:16.444878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:05:17.248503 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0031c7d28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0031c7d88), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0031c7e48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:05:17.445777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:18.445904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:19.446147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:20.446624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:21.447430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:05:22.247986 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b9728), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b97a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b9830), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:05:22.448267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:23.448807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:24.448912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:25.449582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:26.449782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:05:27.248388 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004967140), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004967170), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049671b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:05:27.450649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:28.451631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:29.451746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:30.451809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:31.451914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:05:32.248628 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049672d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004967308), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004967338), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:05:32.452809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:33.452890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:34.453231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:35.453362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:36.453487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:05:37.248659 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491e2a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491e300), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491e378), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:05:37.453765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:38.454745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:39.454907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:40.455035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:41.455120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:05:42.248059 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491e570), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491e5e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491e648), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:05:42.455286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:43.456324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:44.456505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:45.456808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:46.456940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:05:47.248638 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004967548), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004967578), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049675d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:05:47.457921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:48.458712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:49.459706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:50.459745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:51.459828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:05:52.248753 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491e8b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491e900), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491e960), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:05:52.459916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:53.460170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:54.460720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:55.460933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:56.461057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:05:57.248660 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b8210), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b82d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b8330), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:05:57.461941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:58.462029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:05:59.462690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:00.462818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:01.462900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:06:02.248109 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049660a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049660d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966108), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:06:02.463304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:03.463395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:04.463519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:05.463601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:06.463699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:06:07.249149 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491e0f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491e180), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491e210), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:06:07.464448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:08.464533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:09.464645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:10.464771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:11.465784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:06:12.248260 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491e450), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491e4b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491e4e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:06:12.466535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:13.467575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:14.468581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:15.468812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:16.468933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:06:17.248681 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b88b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b8930), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b89a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:06:17.469975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:18.470097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:19.470404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:20.470543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:21.470648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:06:22.248487 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491e798), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491e7f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491e828), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:06:22.470733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:23.470888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:24.470979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:25.471104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:26.471311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:06:27.248293 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049662d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966318), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966348), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:06:27.471388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:28.472307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:29.472616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:30.472805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:31.472931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:06:32.248794 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491ec00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491ec30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491ec78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:06:32.473019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:33.473142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:34.473451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:35.474366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:36.474499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:06:37.248031 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966588), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049665b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049665e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:06:37.475262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:38.475390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:39.476425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:40.476916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:41.477130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:06:42.248348 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966798), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049667c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049667f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:06:42.477653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:43.477778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:44.478065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:45.478190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:46.478318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:06:47.249026 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966960), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966990), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049669c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:06:47.479325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:48.479452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:49.479611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:50.479746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:51.480812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:06:52.248636 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491efd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491f050), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491f080), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:06:52.480890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:53.480966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:54.481266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:55.481388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:56.481518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:06:57.248578 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491f338), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491f380), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491f3c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:06:57.481882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:58.482006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:06:59.482176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:00.482297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:01.483209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:07:02.248244 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966bd0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966c30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966c60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:07:02.483542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:03.483685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:04.483981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:05.484070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:06.484802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:07:07.248349 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b8ff0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b9020), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b9068), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:07:07.485603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:08.486139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:09.486306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:10.486432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:11.487433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:07:12.248026 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491f6c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491f710), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491f7a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:07:12.488344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:13.488809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:14.489013      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:15.489589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:16.489711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:07:17.248827 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491f9e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491fa10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491fa88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:07:17.490146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:18.490959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:19.491740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:20.491759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:21.492809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:07:22.248484 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491fcc8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491fcf8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00491fd58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:07:22.493758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:23.494301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:24.494602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:25.494732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:26.494869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:07:27.248296 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0031c60a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0031c60f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0031c6168), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:07:27.495628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:28.495750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:29.495848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:30.496816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:31.496940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:07:32.248520 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b9470), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b94d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b9500), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:07:32.497851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:33.498654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:34.498996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:35.499133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:36.499218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:07:37.248561 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b9830), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b98f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040b9980), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:07:37.499882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:38.500803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:39.500987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:40.501109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:41.501202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:07:42.249025 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966eb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966ee8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004966f18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:07:42.501231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:43.501364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:44.501559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:45.501643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:46.501729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:07:47.248454 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h5fzc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h5fzc", GenerateName:"", Namespace:"resourcequota-7334", SelfLink:"", UID:"c5c34335-d6ea-4a53-aa97-063b9151b2d7", ResourceVersion:"74478", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h5fzc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049670c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004967128), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 3, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004967158), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0523 07:07:47.502780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:48.503578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:49.504204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:50.504809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:51.505867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:07:52.248180 22 resource_quota.go:1209] ResourceQuota "e2e-rq-status-h5fzc" Spec was unchanged and /status reset
  I0523 07:07:52.248281 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7334" for this suite. @ 05/23/24 07:07:52.25
• [240.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 05/23/24 07:07:52.252
  I0523 07:07:52.252736 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename endpointslicemirroring @ 05/23/24 07:07:52.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:07:52.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:07:52.262
  STEP: mirroring a new custom Endpoint @ 05/23/24 07:07:52.269
  I0523 07:07:52.272915 22 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E0523 07:07:52.506249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:53.506598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 05/23/24 07:07:54.275
  I0523 07:07:54.279132 22 endpointslicemirroring.go:171] Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0523 07:07:54.506529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:55.506592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 05/23/24 07:07:56.281
  I0523 07:07:56.285323 22 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  E0523 07:07:56.507662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:57.507750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:07:58.287365 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-9087" for this suite. @ 05/23/24 07:07:58.289
• [6.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 05/23/24 07:07:58.291
  I0523 07:07:58.291974 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename runtimeclass @ 05/23/24 07:07:58.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:07:58.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:07:58.3
  STEP: Deleting RuntimeClass runtimeclass-5375-delete-me @ 05/23/24 07:07:58.303
  STEP: Waiting for the RuntimeClass to disappear @ 05/23/24 07:07:58.305
  I0523 07:07:58.308641 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5375" for this suite. @ 05/23/24 07:07:58.309
• [0.020 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 05/23/24 07:07:58.312
  I0523 07:07:58.312016 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/23/24 07:07:58.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:07:58.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:07:58.319
  I0523 07:07:58.321299 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  E0523 07:07:58.508394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:07:59.508646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:00.509274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:08:01.353249 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3246" for this suite. @ 05/23/24 07:08:01.355
• [3.046 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 05/23/24 07:08:01.358
  I0523 07:08:01.358129 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 05/23/24 07:08:01.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:08:01.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:08:01.367
  STEP: Setting up the test @ 05/23/24 07:08:01.368
  STEP: Creating hostNetwork=false pod @ 05/23/24 07:08:01.369
  E0523 07:08:01.509724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:02.510225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 05/23/24 07:08:03.393
  E0523 07:08:03.511059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:04.511150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 05/23/24 07:08:05.403
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 05/23/24 07:08:05.403
  I0523 07:08:05.403772 22 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8445 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 07:08:05.403787 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 07:08:05.404145 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 07:08:05.404179 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8445/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0523 07:08:05.428354 22 exec_util.go:106] Exec stderr: ""
  I0523 07:08:05.428387 22 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8445 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 07:08:05.428394 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 07:08:05.428739 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 07:08:05.428776 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8445/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0523 07:08:05.449402 22 exec_util.go:106] Exec stderr: ""
  I0523 07:08:05.449430 22 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8445 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 07:08:05.449439 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 07:08:05.449803 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 07:08:05.449846 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8445/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0523 07:08:05.473327 22 exec_util.go:106] Exec stderr: ""
  I0523 07:08:05.473361 22 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8445 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 07:08:05.473370 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 07:08:05.473720 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 07:08:05.473762 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8445/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0523 07:08:05.494281 22 exec_util.go:106] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 05/23/24 07:08:05.494
  I0523 07:08:05.494333 22 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8445 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 07:08:05.494343 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 07:08:05.494704 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 07:08:05.494746 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8445/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  E0523 07:08:05.511715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:08:05.517109 22 exec_util.go:106] Exec stderr: ""
  I0523 07:08:05.517129 22 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8445 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 07:08:05.517136 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 07:08:05.517459 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 07:08:05.517496 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8445/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0523 07:08:05.537890 22 exec_util.go:106] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 05/23/24 07:08:05.537
  I0523 07:08:05.537943 22 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8445 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 07:08:05.537955 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 07:08:05.538323 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 07:08:05.538362 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8445/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0523 07:08:05.560908 22 exec_util.go:106] Exec stderr: ""
  I0523 07:08:05.560949 22 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8445 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 07:08:05.560957 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 07:08:05.561347 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 07:08:05.561393 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8445/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0523 07:08:05.582692 22 exec_util.go:106] Exec stderr: ""
  I0523 07:08:05.582724 22 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8445 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 07:08:05.582731 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 07:08:05.583118 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 07:08:05.583160 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8445/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0523 07:08:05.605245 22 exec_util.go:106] Exec stderr: ""
  I0523 07:08:05.605287 22 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8445 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 07:08:05.605296 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 07:08:05.605658 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 07:08:05.605695 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8445/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0523 07:08:05.627286 22 exec_util.go:106] Exec stderr: ""
  I0523 07:08:05.627411 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-8445" for this suite. @ 05/23/24 07:08:05.629
• [4.273 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 05/23/24 07:08:05.631
  I0523 07:08:05.631487 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename dns @ 05/23/24 07:08:05.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:08:05.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:08:05.64
  STEP: Creating a test headless service @ 05/23/24 07:08:05.641
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2775 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-2775;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2775 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-2775;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2775.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-2775.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2775.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-2775.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2775.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-2775.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2775.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-2775.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2775.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-2775.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2775.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-2775.svc;check="$$(dig +notcp +noall +answer +search 211.190.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.190.211_udp@PTR;check="$$(dig +tcp +noall +answer +search 211.190.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.190.211_tcp@PTR;sleep 1; done
   @ 05/23/24 07:08:05.648
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2775 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2775;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2775 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2775;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2775.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2775.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2775.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2775.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2775.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-2775.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2775.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-2775.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2775.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-2775.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2775.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-2775.svc;check="$$(dig +notcp +noall +answer +search 211.190.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.190.211_udp@PTR;check="$$(dig +tcp +noall +answer +search 211.190.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.190.211_tcp@PTR;sleep 1; done
   @ 05/23/24 07:08:05.648
  STEP: creating a pod to probe DNS @ 05/23/24 07:08:05.648
  STEP: submitting the pod to kubernetes @ 05/23/24 07:08:05.648
  E0523 07:08:06.511775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:07.512812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/23/24 07:08:07.658
  STEP: looking for the results for each expected name from probers @ 05/23/24 07:08:07.66
  I0523 07:08:07.661893 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:07.671968 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:07.681868 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:07.691883 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:07.701877 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:07.711890 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:07.721948 22 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:07.723040 22 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:07.761886 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:07.771900 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:07.781901 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:07.791892 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:07.793048 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:07.794126 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:07.803072 22 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:07.811922 22 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:07.851919 22 dns_common.go:489] Lookups using dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-2775 wheezy_tcp@dns-test-service.dns-2775 wheezy_udp@dns-test-service.dns-2775.svc wheezy_tcp@dns-test-service.dns-2775.svc wheezy_udp@_http._tcp.dns-test-service.dns-2775.svc wheezy_tcp@_http._tcp.dns-test-service.dns-2775.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2775 jessie_tcp@dns-test-service.dns-2775 jessie_udp@dns-test-service.dns-2775.svc jessie_tcp@dns-test-service.dns-2775.svc jessie_udp@_http._tcp.dns-test-service.dns-2775.svc jessie_tcp@_http._tcp.dns-test-service.dns-2775.svc]

  I0523 07:08:07.863308 22 dns_common.go:495] Pod client logs for webserver: 
  I0523 07:08:07.867536 22 dns_common.go:495] Pod client logs for querier: 
  I0523 07:08:07.877567 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E0523 07:08:08.513259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:09.513508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:10.513641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:11.513779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:12.514657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:08:12.672777 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:12.682792 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:12.692792 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:12.702791 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:12.703962 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:12.713971 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:12.715136 22 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:12.723994 22 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:12.764843 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:12.765907 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:12.774847 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:12.784853 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:12.785932 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:12.794853 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:12.804874 22 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:12.806014 22 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:12.844893 22 dns_common.go:489] Lookups using dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-2775 wheezy_tcp@dns-test-service.dns-2775 wheezy_udp@dns-test-service.dns-2775.svc wheezy_tcp@dns-test-service.dns-2775.svc wheezy_udp@_http._tcp.dns-test-service.dns-2775.svc wheezy_tcp@_http._tcp.dns-test-service.dns-2775.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2775 jessie_tcp@dns-test-service.dns-2775 jessie_udp@dns-test-service.dns-2775.svc jessie_tcp@dns-test-service.dns-2775.svc jessie_udp@_http._tcp.dns-test-service.dns-2775.svc jessie_tcp@_http._tcp.dns-test-service.dns-2775.svc]

  I0523 07:08:12.847130 22 dns_common.go:495] Pod client logs for webserver: 
  I0523 07:08:12.857160 22 dns_common.go:495] Pod client logs for querier: 
  I0523 07:08:12.866689 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E0523 07:08:13.515478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:14.515587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:15.515689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:16.515754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:17.515850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:08:17.663088 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:17.673009 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:17.683006 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:17.684196 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:17.692606 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:17.702604 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:17.713000 22 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:17.723003 22 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:17.773035 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:17.774133 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:17.775317 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:17.784152 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:17.793026 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:17.803050 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:17.813079 22 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:17.823058 22 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:17.863107 22 dns_common.go:489] Lookups using dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-2775 wheezy_tcp@dns-test-service.dns-2775 wheezy_udp@dns-test-service.dns-2775.svc wheezy_tcp@dns-test-service.dns-2775.svc wheezy_udp@_http._tcp.dns-test-service.dns-2775.svc wheezy_tcp@_http._tcp.dns-test-service.dns-2775.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2775 jessie_tcp@dns-test-service.dns-2775 jessie_udp@dns-test-service.dns-2775.svc jessie_tcp@dns-test-service.dns-2775.svc jessie_udp@_http._tcp.dns-test-service.dns-2775.svc jessie_tcp@_http._tcp.dns-test-service.dns-2775.svc]

  I0523 07:08:17.873067 22 dns_common.go:495] Pod client logs for webserver: 
  I0523 07:08:17.883061 22 dns_common.go:495] Pod client logs for querier: 
  I0523 07:08:17.893059 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E0523 07:08:18.516805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:19.516893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:20.516982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:21.517051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:22.518038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:08:22.673063 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:22.683066 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:22.684297 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:22.693078 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:22.703101 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:22.713090 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:22.723083 22 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:22.733126 22 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:22.783133 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:22.793140 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:22.803156 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:22.813148 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:22.814352 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:22.823122 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:22.833131 22 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:22.834281 22 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:22.873162 22 dns_common.go:489] Lookups using dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-2775 wheezy_tcp@dns-test-service.dns-2775 wheezy_udp@dns-test-service.dns-2775.svc wheezy_tcp@dns-test-service.dns-2775.svc wheezy_udp@_http._tcp.dns-test-service.dns-2775.svc wheezy_tcp@_http._tcp.dns-test-service.dns-2775.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2775 jessie_tcp@dns-test-service.dns-2775 jessie_udp@dns-test-service.dns-2775.svc jessie_tcp@dns-test-service.dns-2775.svc jessie_udp@_http._tcp.dns-test-service.dns-2775.svc jessie_tcp@_http._tcp.dns-test-service.dns-2775.svc]

  I0523 07:08:22.883135 22 dns_common.go:495] Pod client logs for webserver: 
  I0523 07:08:22.893140 22 dns_common.go:495] Pod client logs for querier: 
  I0523 07:08:22.903146 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E0523 07:08:23.518524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:24.518655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:25.519581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:26.519744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:27.520805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:08:27.663040 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:27.673026 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:27.674243 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:27.682990 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:27.692581 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:27.702590 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:27.712592 22 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:27.722606 22 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:27.772625 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:27.782623 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:27.783756 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:27.784809 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:27.793769 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:27.803766 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:27.804890 22 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:27.813802 22 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:27.846021 22 dns_common.go:489] Lookups using dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-2775 wheezy_tcp@dns-test-service.dns-2775 wheezy_udp@dns-test-service.dns-2775.svc wheezy_tcp@dns-test-service.dns-2775.svc wheezy_udp@_http._tcp.dns-test-service.dns-2775.svc wheezy_tcp@_http._tcp.dns-test-service.dns-2775.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2775 jessie_tcp@dns-test-service.dns-2775 jessie_udp@dns-test-service.dns-2775.svc jessie_tcp@dns-test-service.dns-2775.svc jessie_udp@_http._tcp.dns-test-service.dns-2775.svc jessie_tcp@_http._tcp.dns-test-service.dns-2775.svc]

  I0523 07:08:27.848220 22 dns_common.go:495] Pod client logs for webserver: 
  I0523 07:08:27.856039 22 dns_common.go:495] Pod client logs for querier: 
  I0523 07:08:27.864889 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E0523 07:08:28.521585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:29.521757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:30.521925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:31.522073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:32.522149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:08:32.662408 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:32.672357 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:32.682347 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:32.693298 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:32.703292 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:32.704474 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:32.713324 22 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:32.723314 22 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:32.773322 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:32.783337 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:32.793346 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:32.803324 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:32.813324 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:32.823327 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:32.833329 22 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:32.843334 22 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:32.883350 22 dns_common.go:489] Lookups using dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-2775 wheezy_tcp@dns-test-service.dns-2775 wheezy_udp@dns-test-service.dns-2775.svc wheezy_tcp@dns-test-service.dns-2775.svc wheezy_udp@_http._tcp.dns-test-service.dns-2775.svc wheezy_tcp@_http._tcp.dns-test-service.dns-2775.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2775 jessie_tcp@dns-test-service.dns-2775 jessie_udp@dns-test-service.dns-2775.svc jessie_tcp@dns-test-service.dns-2775.svc jessie_udp@_http._tcp.dns-test-service.dns-2775.svc jessie_tcp@_http._tcp.dns-test-service.dns-2775.svc]

  I0523 07:08:32.893338 22 dns_common.go:495] Pod client logs for webserver: 
  I0523 07:08:32.903346 22 dns_common.go:495] Pod client logs for querier: 
  I0523 07:08:32.913352 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E0523 07:08:33.523113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:34.523196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:35.523399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:36.524395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:37.524815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:08:37.663163 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:37.674946 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:37.684928 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:37.695920 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:37.697063 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:37.707071 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:37.715915 22 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:37.725911 22 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:37.766966 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:37.775957 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:37.785970 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:37.787074 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-2775 from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:37.795950 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:37.805996 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:37.815983 22 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:37.825981 22 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2775.svc from pod dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287: the server could not find the requested resource (get pods dns-test-f12e1bf2-a498-4791-a898-509b62f87287)
  I0523 07:08:37.866022 22 dns_common.go:489] Lookups using dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-2775 wheezy_tcp@dns-test-service.dns-2775 wheezy_udp@dns-test-service.dns-2775.svc wheezy_tcp@dns-test-service.dns-2775.svc wheezy_udp@_http._tcp.dns-test-service.dns-2775.svc wheezy_tcp@_http._tcp.dns-test-service.dns-2775.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2775 jessie_tcp@dns-test-service.dns-2775 jessie_udp@dns-test-service.dns-2775.svc jessie_tcp@dns-test-service.dns-2775.svc jessie_udp@_http._tcp.dns-test-service.dns-2775.svc jessie_tcp@_http._tcp.dns-test-service.dns-2775.svc]

  I0523 07:08:37.868340 22 dns_common.go:495] Pod client logs for webserver: 
  I0523 07:08:37.877912 22 dns_common.go:495] Pod client logs for querier: 
  I0523 07:08:37.887919 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E0523 07:08:38.525703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:39.525868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:40.525953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:41.526603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:42.527424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:08:42.853919 22 dns_common.go:527] DNS probes using dns-2775/dns-test-f12e1bf2-a498-4791-a898-509b62f87287 succeeded

  STEP: deleting the pod @ 05/23/24 07:08:42.854
  STEP: deleting the test service @ 05/23/24 07:08:42.861
  STEP: deleting the test headless service @ 05/23/24 07:08:42.875
  I0523 07:08:42.880181 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2775" for this suite. @ 05/23/24 07:08:42.882
• [37.253 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 05/23/24 07:08:42.884
  I0523 07:08:42.884947 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename gc @ 05/23/24 07:08:42.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:08:42.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:08:42.894
  STEP: create the rc @ 05/23/24 07:08:42.896
  W0523 07:08:42.899368      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0523 07:08:43.527840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:44.528063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:45.528110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:46.528877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:47.528999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 05/23/24 07:08:47.902
  STEP: wait for all pods to be garbage collected @ 05/23/24 07:08:47.904
  E0523 07:08:48.529371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:49.529570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:50.529664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:51.530247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:52.530413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/23/24 07:08:52.907
  W0523 07:08:52.909893      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0523 07:08:52.909916 22 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0523 07:08:52.910019 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4370" for this suite. @ 05/23/24 07:08:52.911
• [10.029 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 05/23/24 07:08:52.913
  I0523 07:08:52.913687 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename emptydir @ 05/23/24 07:08:52.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:08:52.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:08:52.922
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/23/24 07:08:52.923
  E0523 07:08:53.530670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:54.531730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:55.531748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:56.531752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:08:56.932
  I0523 07:08:56.933379 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-a68ab66c-2fda-467c-9c38-848515a2a786 container test-container: <nil>
  STEP: delete the pod @ 05/23/24 07:08:56.935
  I0523 07:08:56.941410 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4363" for this suite. @ 05/23/24 07:08:56.942
• [4.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 05/23/24 07:08:56.944
  I0523 07:08:56.944937 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename resourcequota @ 05/23/24 07:08:56.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:08:56.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:08:56.953
  STEP: Creating a ResourceQuota @ 05/23/24 07:08:56.954
  STEP: Getting a ResourceQuota @ 05/23/24 07:08:56.956
  STEP: Listing all ResourceQuotas with LabelSelector @ 05/23/24 07:08:56.957
  STEP: Patching the ResourceQuota @ 05/23/24 07:08:56.958
  STEP: Deleting a Collection of ResourceQuotas @ 05/23/24 07:08:56.961
  STEP: Verifying the deleted ResourceQuota @ 05/23/24 07:08:56.964
  I0523 07:08:56.965549 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2880" for this suite. @ 05/23/24 07:08:56.966
• [0.024 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 05/23/24 07:08:56.968
  I0523 07:08:56.968973 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename replicaset @ 05/23/24 07:08:56.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:08:56.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:08:56.976
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 05/23/24 07:08:56.98
  I0523 07:08:56.984708 22 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0523 07:08:57.532410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:58.532443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:08:59.532651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:00.532789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:01.532932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:09:01.987090 22 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/23/24 07:09:01.987
  STEP: getting scale subresource @ 05/23/24 07:09:01.987
  STEP: updating a scale subresource @ 05/23/24 07:09:01.989
  STEP: verifying the replicaset Spec.Replicas was modified @ 05/23/24 07:09:01.992
  STEP: Patch a scale subresource @ 05/23/24 07:09:01.993
  I0523 07:09:01.998824 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9779" for this suite. @ 05/23/24 07:09:02.006
• [5.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 05/23/24 07:09:02.013
  I0523 07:09:02.013872 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename secrets @ 05/23/24 07:09:02.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:09:02.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:09:02.03
  STEP: creating a secret @ 05/23/24 07:09:02.032
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 05/23/24 07:09:02.034
  STEP: patching the secret @ 05/23/24 07:09:02.035
  STEP: deleting the secret using a LabelSelector @ 05/23/24 07:09:02.039
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 05/23/24 07:09:02.042
  I0523 07:09:02.043800 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2068" for this suite. @ 05/23/24 07:09:02.045
• [0.034 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 05/23/24 07:09:02.048
  I0523 07:09:02.048229 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename container-probe @ 05/23/24 07:09:02.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:09:02.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:09:02.058
  E0523 07:09:02.533155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:03.533274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:04.533370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:05.533514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:06.533976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:07.534934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:08.535753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:09.536709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:10.537704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:11.538647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:12.539627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:13.539746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:14.540817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:15.540911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:16.541804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:17.541930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:18.542548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:19.542710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:20.543701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:21.543785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:22.544697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:23.544842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:09:24.091521 22 container_probe.go:92] Container started at 2024-05-23 07:09:02 +0000 UTC, pod became ready at 2024-05-23 07:09:22 +0000 UTC
  I0523 07:09:24.091606 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-132" for this suite. @ 05/23/24 07:09:24.093
• [22.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 05/23/24 07:09:24.096
  I0523 07:09:24.096200 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename container-probe @ 05/23/24 07:09:24.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:09:24.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:09:24.104
  STEP: Creating pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759 @ 05/23/24 07:09:24.105
  E0523 07:09:24.545673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:25.545976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/23/24 07:09:26.112
  I0523 07:09:26.113516 22 container_probe.go:1749] Initial restart count of pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 is 0
  I0523 07:09:26.114589 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:09:26.546076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:27.546200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:09:28.116651 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:09:28.547174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:29.547343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:09:30.118668 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:09:30.548113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:31.548825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:09:32.121366 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:09:32.549846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:33.549947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:09:34.123442 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:09:34.550893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:35.550975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:09:36.125456 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:09:36.551863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:37.552814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:09:38.128180 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:09:38.553649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:39.553819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:09:40.130228 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:09:40.554758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:41.554892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:09:42.132261 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:09:42.555457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:43.555579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:09:44.134820 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:09:44.556388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:45.556812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:09:46.137192 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:09:46.557713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:47.557798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:09:48.139093 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:09:48.558545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:49.558722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:09:50.141126 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:09:50.559624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:51.559767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:09:52.143242 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:09:52.560764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:53.561104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:09:54.145476 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:09:54.560999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:55.561875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:09:56.147178 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:09:56.562629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:57.562772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:09:58.149063 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:09:58.563525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:09:59.563711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:10:00.151212 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:10:00.564655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:01.564792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:10:02.154029 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:10:02.565494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:03.565624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:10:04.156513 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:10:04.566088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:05.567123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:10:06.158673 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:10:06.567838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:07.568811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:10:08.161257 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:10:08.569708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:09.569865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:10:10.163439 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:10:10.570887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:11.571012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:10:12.165347 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:10:12.571784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:13.572810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:10:14.167736 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:10:14.573263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:15.573389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:10:16.170658 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:10:16.574171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:17.574272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:10:18.172572 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:10:18.574973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:19.575134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:10:20.174650 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:10:20.576033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:21.576800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:10:22.177366 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:10:22.577758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:23.577850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:10:24.179439 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:10:24.577903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:25.578024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:10:26.181517 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:10:26.578937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:27.579016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:10:28.183540 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  E0523 07:10:28.580030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:29.580189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:10:30.185614 22 container_probe.go:1759] Get pod test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 in namespace container-probe-2759
  I0523 07:10:30.185642 22 container_probe.go:1763] Restart count of pod container-probe-2759/test-grpc-fcfbe15d-8127-4288-b1a9-9cdb2be47af5 is now 1 (1m4.072101388s elapsed)
  STEP: deleting the pod @ 05/23/24 07:10:30.185
  I0523 07:10:30.191020 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2759" for this suite. @ 05/23/24 07:10:30.192
• [66.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 05/23/24 07:10:30.194
  I0523 07:10:30.194889 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename replication-controller @ 05/23/24 07:10:30.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:10:30.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:10:30.203
  I0523 07:10:30.204524 22 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0523 07:10:30.580664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 05/23/24 07:10:31.209
  STEP: Checking rc "condition-test" has the desired failure condition set @ 05/23/24 07:10:31.213
  E0523 07:10:31.580742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 05/23/24 07:10:32.216
  I0523 07:10:32.219783 22 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 05/23/24 07:10:32.219
  E0523 07:10:32.581319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:10:33.222783 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1526" for this suite. @ 05/23/24 07:10:33.224
• [3.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 05/23/24 07:10:33.226
  I0523 07:10:33.226883 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename svcaccounts @ 05/23/24 07:10:33.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:10:33.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:10:33.235
  STEP: creating a ServiceAccount @ 05/23/24 07:10:33.237
  STEP: watching for the ServiceAccount to be added @ 05/23/24 07:10:33.241
  STEP: patching the ServiceAccount @ 05/23/24 07:10:33.242
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 05/23/24 07:10:33.244
  STEP: deleting the ServiceAccount @ 05/23/24 07:10:33.245
  I0523 07:10:33.250290 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3607" for this suite. @ 05/23/24 07:10:33.252
• [0.028 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 05/23/24 07:10:33.255
  I0523 07:10:33.255488 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename webhook @ 05/23/24 07:10:33.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:10:33.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:10:33.263
  STEP: Setting up server cert @ 05/23/24 07:10:33.273
  E0523 07:10:33.582022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/23/24 07:10:33.69
  STEP: Deploying the webhook pod @ 05/23/24 07:10:33.693
  STEP: Wait for the deployment to be ready @ 05/23/24 07:10:33.698
  I0523 07:10:33.702331 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0523 07:10:34.582348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:35.582543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/23/24 07:10:35.706
  STEP: Verifying the service has paired with the endpoint @ 05/23/24 07:10:35.713
  E0523 07:10:36.583001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:10:36.714251 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 05/23/24 07:10:36.717
  STEP: Creating a custom resource definition that should be denied by the webhook @ 05/23/24 07:10:36.724
  I0523 07:10:36.724340 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 07:10:36.747054 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3974" for this suite. @ 05/23/24 07:10:36.75
  STEP: Destroying namespace "webhook-markers-6389" for this suite. @ 05/23/24 07:10:36.752
• [3.500 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 05/23/24 07:10:36.755
  I0523 07:10:36.755716 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename sched-preemption @ 05/23/24 07:10:36.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:10:36.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:10:36.765
  I0523 07:10:36.773089 22 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0523 07:10:37.584035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:38.584809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:39.585084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:40.585224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:41.585965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:42.586104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:43.586574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:44.586638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:45.587080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:46.587839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:47.588822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:48.588912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:49.589630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:50.589782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:51.590338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:52.590463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:53.591098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:54.591367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:55.591788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:56.591832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:57.592814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:58.592972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:10:59.593658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:00.593872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:01.594607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:02.594831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:03.595027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:04.595345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:05.595760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:06.595849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:07.595936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:08.596018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:09.596776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:10.596876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:11.597777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:12.597899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:13.598624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:14.598844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:15.598931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:16.599000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:17.599496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:18.599579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:19.600329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:20.600437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:21.600518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:22.600813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:23.601571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:24.601664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:25.602056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:26.602181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:27.602988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:28.603113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:29.603894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:30.604836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:31.605597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:32.606639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:33.606767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:34.606803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:35.606868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:36.607735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:11:36.776190 22 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/23/24 07:11:36.777
  I0523 07:11:36.777581 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/23/24 07:11:36.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:11:36.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:11:36.788
  I0523 07:11:36.795227 22 preemption.go:818] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0523 07:11:36.796387 22 preemption.go:824] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I0523 07:11:36.825598 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4906" for this suite. @ 05/23/24 07:11:36.827
  I0523 07:11:36.829902 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7907" for this suite. @ 05/23/24 07:11:36.831
• [60.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 05/23/24 07:11:36.835
  I0523 07:11:36.835093 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename kubectl @ 05/23/24 07:11:36.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:11:36.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:11:36.843
  I0523 07:11:36.844254 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-9786 version'
  I0523 07:11:36.878694 22 builder.go:146] stderr: ""
  I0523 07:11:36.878766 22 builder.go:147] stdout: "Client Version: v1.30.1\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.30.1\n"
  I0523 07:11:36.878939 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9786" for this suite. @ 05/23/24 07:11:36.88
• [0.048 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 05/23/24 07:11:36.883
  I0523 07:11:36.883128 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename deployment @ 05/23/24 07:11:36.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:11:36.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:11:36.891
  I0523 07:11:36.900632 22 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  E0523 07:11:37.607772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:38.608839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:39.609016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:40.609155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:41.609245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:11:41.903240 22 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/23/24 07:11:41.903
  I0523 07:11:41.903300 22 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0523 07:11:42.610020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:43.610139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:11:43.905291 22 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0523 07:11:43.908849 22 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0523 07:11:44.610772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:45.610910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:11:45.912101 22 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0523 07:11:45.914458 22 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0523 07:11:45.916564 22 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0523 07:11:45.920795 22 deployment.go:313] Updating deployment test-rollover-deployment
  I0523 07:11:45.920814 22 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0523 07:11:46.611542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:47.612273      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:11:47.924448 22 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0523 07:11:47.926993 22 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0523 07:11:47.929095 22 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0523 07:11:47.929134 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 23, 7, 11, 43, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 7, 11, 43, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 23, 7, 11, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 7, 11, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0523 07:11:48.612348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:49.612424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:11:49.933032 22 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0523 07:11:49.933081 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 23, 7, 11, 43, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 7, 11, 43, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 23, 7, 11, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 7, 11, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0523 07:11:50.612653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:51.612748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:11:51.933347 22 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0523 07:11:51.933392 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 23, 7, 11, 43, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 7, 11, 43, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 23, 7, 11, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 7, 11, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0523 07:11:52.613732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:53.614750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:11:53.932573 22 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0523 07:11:53.932623 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 23, 7, 11, 43, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 7, 11, 43, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 23, 7, 11, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 7, 11, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0523 07:11:54.615328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:55.615469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:11:55.933127 22 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0523 07:11:55.933167 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 23, 7, 11, 43, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 7, 11, 43, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 23, 7, 11, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 23, 7, 11, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0523 07:11:56.616145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:57.616819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:11:57.932393 22 deployment.go:94] 
  I0523 07:11:57.932429 22 deployment.go:974] Ensure that both old replica sets have no replicas
  I0523 07:11:57.935634 22 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9339",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fa2ab2e8-ed91-45bf-abac-55216b83c8d1",
      ResourceVersion: (string) (len=5) "76038",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045103,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045117,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045103,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045103,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045117,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045103,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-679c966bdf\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0523 07:11:57.937821 22 deployment.go:39] New ReplicaSet "test-rollover-deployment-679c966bdf" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-679c966bdf",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9339",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e9a3f6c7-ea83-4fa6-8ff3-b478192140c1",
      ResourceVersion: (string) (len=5) "76028",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045105,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "fa2ab2e8-ed91-45bf-abac-55216b83c8d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 61 32 61 62 32  65 38 2d 65 64 39 31 2d  |\"fa2ab2e8-ed91-|
              00000120  34 35 62 66 2d 61 62 61  63 2d 35 35 32 31 36 62  |45bf-abac-55216b|
              00000130  38 33 63 38 64 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |83c8d1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045117,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0523 07:11:57.938357 22 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0523 07:11:57.938498 22 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9339",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9af570ab-2ce7-427c-a304-e1dc1cdf6071",
      ResourceVersion: (string) (len=5) "76037",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045096,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "fa2ab2e8-ed91-45bf-abac-55216b83c8d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045117,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  66 61 32 61 62 32 65 38  2d 65 64 39 31 2d 34 35  |fa2ab2e8-ed91-45|
              000000c0  62 66 2d 61 62 61 63 2d  35 35 32 31 36 62 38 33  |bf-abac-55216b83|
              000000d0  63 38 64 31 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |c8d1\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045117,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0523 07:11:57.939147 22 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-65bd487b4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9339",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ea23cac7-a8f5-4bb5-a63a-ee94c3837b66",
      ResourceVersion: (string) (len=5) "75995",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045103,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "fa2ab2e8-ed91-45bf-abac-55216b83c8d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 61 32 61 62 32  65 38 2d 65 64 39 31 2d  |\"fa2ab2e8-ed91-|
              00000120  34 35 62 66 2d 61 62 61  63 2d 35 35 32 31 36 62  |45bf-abac-55216b|
              00000130  38 33 63 38 64 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |83c8d1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0523 07:11:57.941122 22 deployment.go:67] Pod "test-rollover-deployment-679c966bdf-kmgwj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-679c966bdf-kmgwj",
      GenerateName: (string) (len=36) "test-rollover-deployment-679c966bdf-",
      Namespace: (string) (len=15) "deployment-9339",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8360039a-c97a-475c-babf-5e9f6d2e3b7f",
      ResourceVersion: (string) (len=5) "76009",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045105,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-679c966bdf",
          UID: (types.UID) (len=36) "e9a3f6c7-ea83-4fa6-8ff3-b478192140c1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  61 33 66 36 63 37 2d 65  |d\":\"e9a3f6c7-e|
              00000090  61 38 33 2d 34 66 61 36  2d 38 66 66 33 2d 62 34  |a83-4fa6-8ff3-b4|
              000000a0  37 38 31 39 32 31 34 30  63 31 5c 22 7d 22 3a 7b  |78192140c1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 34 37 5c 22 7d 22 3a  |2.20.64.147\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fclbt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fclbt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.147",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.147"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045105,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852045106,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://9ba02327a725ae0152f2a8cb76d682074ab31ccd5c9f3ea99bb7ab4bf1e5418b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:11:57.942281 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9339" for this suite. @ 05/23/24 07:11:57.943
• [21.063 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 05/23/24 07:11:57.945
  I0523 07:11:57.945888 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename namespaces @ 05/23/24 07:11:57.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:11:57.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:11:57.954
  STEP: creating a Namespace @ 05/23/24 07:11:57.956
  STEP: patching the Namespace @ 05/23/24 07:11:57.962
  STEP: get the Namespace and ensuring it has the label @ 05/23/24 07:11:57.965
  I0523 07:11:57.966391 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1184" for this suite. @ 05/23/24 07:11:57.967
  STEP: Destroying namespace "nspatchtest-7001531b-53d9-40e8-80c5-0d705a620f3c-5215" for this suite. @ 05/23/24 07:11:57.969
• [0.027 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 05/23/24 07:11:57.972
  I0523 07:11:57.972848 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 07:11:57.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:11:57.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:11:57.98
  STEP: Creating projection with secret that has name projected-secret-test-35b2bfeb-0da5-424d-8cf3-2ea60ba3dc5f @ 05/23/24 07:11:57.982
  STEP: Creating a pod to test consume secrets @ 05/23/24 07:11:57.984
  E0523 07:11:58.617465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:11:59.617472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:00.618315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:01.618399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:12:01.992
  I0523 07:12:01.993848 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-secrets-9955059c-3595-445a-803d-84f67090e78d container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/23/24 07:12:02
  I0523 07:12:02.006572 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-289" for this suite. @ 05/23/24 07:12:02.008
• [4.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 05/23/24 07:12:02.01
  I0523 07:12:02.010717 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename kubelet-test @ 05/23/24 07:12:02.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:12:02.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:12:02.018
  STEP: Waiting for pod completion @ 05/23/24 07:12:02.023
  E0523 07:12:02.618505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:03.618672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:12:04.034383 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-939" for this suite. @ 05/23/24 07:12:04.035
• [2.028 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 05/23/24 07:12:04.038
  I0523 07:12:04.038966 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename cronjob @ 05/23/24 07:12:04.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:12:04.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:12:04.046
  STEP: Creating a ForbidConcurrent cronjob @ 05/23/24 07:12:04.047
  STEP: Ensuring a job is scheduled @ 05/23/24 07:12:04.049
  E0523 07:12:04.619644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:05.619797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:06.620631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:07.620773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:08.621608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:09.621671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:10.622669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:11.622814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:12.623533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:13.623864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:14.624805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:15.624959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:16.626005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:17.626439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:18.627327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:19.627564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:20.627982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:21.628083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:22.628813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:23.628908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:24.628990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:25.629131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:26.630053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:27.630215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:28.630703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:29.631759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:30.632710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:31.632837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:32.633605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:33.633727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:34.634586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:35.634712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:36.635577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:37.635686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:38.636697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:39.636829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:40.637711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:41.637816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:42.638287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:43.638431      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:44.639470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:45.639559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:46.640353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:47.640423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:48.641401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:49.641623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:50.642217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:51.642352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:52.643268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:53.643362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:54.644334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:55.644803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:56.645823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:57.646812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:58.647144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:12:59.647303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:00.647852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:01.648817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 05/23/24 07:13:02.051
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/23/24 07:13:02.053
  STEP: Ensuring no more jobs are scheduled @ 05/23/24 07:13:02.054
  STEP: Removing cronjob @ 05/23/24 07:13:02.055
  I0523 07:13:02.057344 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-387" for this suite. @ 05/23/24 07:13:02.058
• [58.024 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 05/23/24 07:13:02.062
  I0523 07:13:02.062634 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename var-expansion @ 05/23/24 07:13:02.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:13:02.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:13:02.073
  STEP: creating the pod @ 05/23/24 07:13:02.075
  STEP: waiting for pod running @ 05/23/24 07:13:02.077
  E0523 07:13:02.649704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:03.649867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 05/23/24 07:13:04.081
  I0523 07:13:04.082540 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-5838 PodName:var-expansion-07a03510-6480-45e8-b3fa-ea4562b84cff ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 07:13:04.082561 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 07:13:04.082937 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 07:13:04.082980 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/var-expansion-5838/pods/var-expansion-07a03510-6480-45e8-b3fa-ea4562b84cff/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 05/23/24 07:13:04.108
  I0523 07:13:04.109649 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-5838 PodName:var-expansion-07a03510-6480-45e8-b3fa-ea4562b84cff ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 07:13:04.109670 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 07:13:04.110017 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 07:13:04.110058 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/var-expansion-5838/pods/var-expansion-07a03510-6480-45e8-b3fa-ea4562b84cff/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 05/23/24 07:13:04.134
  I0523 07:13:04.641014 22 pod_client.go:141] Successfully updated pod "var-expansion-07a03510-6480-45e8-b3fa-ea4562b84cff"
  STEP: waiting for annotated pod running @ 05/23/24 07:13:04.641
  STEP: deleting the pod gracefully @ 05/23/24 07:13:04.642
  I0523 07:13:04.643007 22 delete.go:62] Deleting pod "var-expansion-07a03510-6480-45e8-b3fa-ea4562b84cff" in namespace "var-expansion-5838"
  I0523 07:13:04.645579 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-07a03510-6480-45e8-b3fa-ea4562b84cff" to be fully deleted
  E0523 07:13:04.650697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:05.650836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:06.651696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:07.651769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:08.652596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:09.653411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:10.653603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:11.654363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:12.654481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:13.655307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:14.655309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:15.655759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:16.656824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:17.657455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:18.657544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:19.657579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:20.657706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:21.657752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:22.657888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:23.657942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:24.658410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:25.658487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:26.658623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:27.659331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:28.659832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:29.660809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:30.660918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:31.661122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:32.661267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:33.661509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:34.661811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:35.662662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:36.663718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:13:36.683559 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5838" for this suite. @ 05/23/24 07:13:36.685
• [34.626 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 05/23/24 07:13:36.688
  I0523 07:13:36.688327 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename configmap @ 05/23/24 07:13:36.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:13:36.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:13:36.697
  STEP: Creating configMap configmap-7013/configmap-test-aba46f82-240b-44f0-bea5-0306a51558f9 @ 05/23/24 07:13:36.699
  STEP: Creating a pod to test consume configMaps @ 05/23/24 07:13:36.7
  E0523 07:13:37.663766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:38.664822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:13:38.707
  I0523 07:13:38.708300 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-configmaps-7adc5606-b57c-4c49-a430-9c64683714ff container env-test: <nil>
  STEP: delete the pod @ 05/23/24 07:13:38.715
  I0523 07:13:38.721782 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7013" for this suite. @ 05/23/24 07:13:38.723
• [2.037 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 05/23/24 07:13:38.725
  I0523 07:13:38.725290 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename var-expansion @ 05/23/24 07:13:38.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:13:38.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:13:38.733
  STEP: Creating a pod to test substitution in container's args @ 05/23/24 07:13:38.734
  E0523 07:13:39.664871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:40.665007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:13:40.741
  I0523 07:13:40.743094 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod var-expansion-6fcbc8ad-f8df-436b-b968-e9cddd3c0a02 container dapi-container: <nil>
  STEP: delete the pod @ 05/23/24 07:13:40.745
  I0523 07:13:40.751225 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9732" for this suite. @ 05/23/24 07:13:40.752
• [2.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 05/23/24 07:13:40.755
  I0523 07:13:40.755046 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename ingressclass @ 05/23/24 07:13:40.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:13:40.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:13:40.763
  STEP: getting /apis @ 05/23/24 07:13:40.764
  STEP: getting /apis/networking.k8s.io @ 05/23/24 07:13:40.766
  STEP: getting /apis/networking.k8s.iov1 @ 05/23/24 07:13:40.767
  STEP: creating @ 05/23/24 07:13:40.767
  STEP: getting @ 05/23/24 07:13:40.773
  STEP: listing @ 05/23/24 07:13:40.774
  STEP: watching @ 05/23/24 07:13:40.774
  I0523 07:13:40.774982 22 ingressclass.go:348] starting watch
  STEP: patching @ 05/23/24 07:13:40.775
  STEP: updating @ 05/23/24 07:13:40.777
  I0523 07:13:40.779061 22 ingressclass.go:364] waiting for watch events with expected annotations
  I0523 07:13:40.779079 22 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 05/23/24 07:13:40.779
  STEP: deleting a collection @ 05/23/24 07:13:40.782
  I0523 07:13:40.794868 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-3582" for this suite. @ 05/23/24 07:13:40.796
• [0.044 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 05/23/24 07:13:40.799
  I0523 07:13:40.799041 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename secrets @ 05/23/24 07:13:40.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:13:40.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:13:40.805
  STEP: Creating secret with name secret-test-1c81db1c-a48b-40f0-ba22-17a474cf58ed @ 05/23/24 07:13:40.807
  STEP: Creating a pod to test consume secrets @ 05/23/24 07:13:40.809
  E0523 07:13:41.665659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:42.666504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:13:42.815
  I0523 07:13:42.816853 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-secrets-fa03a727-b8c2-4208-b51b-22db431bb713 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/23/24 07:13:42.819
  I0523 07:13:42.825004 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2823" for this suite. @ 05/23/24 07:13:42.826
• [2.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 05/23/24 07:13:42.829
  I0523 07:13:42.829568 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename security-context-test @ 05/23/24 07:13:42.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:13:42.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:13:42.839
  E0523 07:13:43.667347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:44.667684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:45.667755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:46.668821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:47.668912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:48.669041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:13:48.853406 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3864" for this suite. @ 05/23/24 07:13:48.854
• [6.027 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 05/23/24 07:13:48.857
  I0523 07:13:48.857103 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename dns @ 05/23/24 07:13:48.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:13:48.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:13:48.865
  STEP: Creating a test externalName service @ 05/23/24 07:13:48.866
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2632.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-2632.svc.cluster.local; sleep 1; done
   @ 05/23/24 07:13:48.868
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2632.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2632.svc.cluster.local; sleep 1; done
   @ 05/23/24 07:13:48.868
  STEP: creating a pod to probe DNS @ 05/23/24 07:13:48.868
  STEP: submitting the pod to kubernetes @ 05/23/24 07:13:48.868
  E0523 07:13:49.669341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:50.669475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/23/24 07:13:50.875
  STEP: looking for the results for each expected name from probers @ 05/23/24 07:13:50.876
  I0523 07:13:50.884702 22 dns_common.go:552] DNS probes using dns-test-c892055e-b083-4e32-967e-263f84c9f6f7 succeeded

  STEP: changing the externalName to bar.example.com @ 05/23/24 07:13:50.884
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2632.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-2632.svc.cluster.local; sleep 1; done
   @ 05/23/24 07:13:50.887
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2632.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2632.svc.cluster.local; sleep 1; done
   @ 05/23/24 07:13:50.887
  STEP: creating a second pod to probe DNS @ 05/23/24 07:13:50.887
  STEP: submitting the pod to kubernetes @ 05/23/24 07:13:50.887
  E0523 07:13:51.670028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:52.670164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/23/24 07:13:52.894
  STEP: looking for the results for each expected name from probers @ 05/23/24 07:13:52.895
  I0523 07:13:52.904078 22 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-2632.svc.cluster.local from pod  dns-2632/dns-test-eef46d20-b393-40ce-929c-caa471d35e45 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0523 07:13:52.906813 22 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-2632.svc.cluster.local from pod  dns-2632/dns-test-eef46d20-b393-40ce-929c-caa471d35e45 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0523 07:13:52.906840 22 dns_common.go:489] Lookups using dns-2632/dns-test-eef46d20-b393-40ce-929c-caa471d35e45 failed for: [wheezy_udp@dns-test-service-3.dns-2632.svc.cluster.local jessie_udp@dns-test-service-3.dns-2632.svc.cluster.local]

  I0523 07:13:52.915476 22 dns_common.go:495] Pod client logs for webserver: 
  I0523 07:13:52.925511 22 dns_common.go:495] Pod client logs for querier: 
  I0523 07:13:52.935482 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E0523 07:13:53.670300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:54.670634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:55.670763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:56.670906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:57.671041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:13:57.907703 22 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-2632.svc.cluster.local from pod  dns-2632/dns-test-eef46d20-b393-40ce-929c-caa471d35e45 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0523 07:13:57.909137 22 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-2632.svc.cluster.local from pod  dns-2632/dns-test-eef46d20-b393-40ce-929c-caa471d35e45 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0523 07:13:57.909161 22 dns_common.go:489] Lookups using dns-2632/dns-test-eef46d20-b393-40ce-929c-caa471d35e45 failed for: [wheezy_udp@dns-test-service-3.dns-2632.svc.cluster.local jessie_udp@dns-test-service-3.dns-2632.svc.cluster.local]

  I0523 07:13:57.917681 22 dns_common.go:495] Pod client logs for webserver: 
  I0523 07:13:57.929153 22 dns_common.go:495] Pod client logs for querier: 
  I0523 07:13:57.938061 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E0523 07:13:58.671940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:13:59.672826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:00.672952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:01.673076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:02.673219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:14:02.908323 22 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-2632.svc.cluster.local from pod  dns-2632/dns-test-eef46d20-b393-40ce-929c-caa471d35e45 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0523 07:14:02.918320 22 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-2632.svc.cluster.local from pod  dns-2632/dns-test-eef46d20-b393-40ce-929c-caa471d35e45 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0523 07:14:02.918346 22 dns_common.go:489] Lookups using dns-2632/dns-test-eef46d20-b393-40ce-929c-caa471d35e45 failed for: [wheezy_udp@dns-test-service-3.dns-2632.svc.cluster.local jessie_udp@dns-test-service-3.dns-2632.svc.cluster.local]

  I0523 07:14:02.920712 22 dns_common.go:495] Pod client logs for webserver: 
  I0523 07:14:02.922579 22 dns_common.go:495] Pod client logs for querier: 
  I0523 07:14:02.931914 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E0523 07:14:03.673309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:04.673426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:05.673565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:06.673703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:07.673860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:14:07.898226 22 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-2632.svc.cluster.local from pod  dns-2632/dns-test-eef46d20-b393-40ce-929c-caa471d35e45 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0523 07:14:07.908204 22 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-2632.svc.cluster.local from pod  dns-2632/dns-test-eef46d20-b393-40ce-929c-caa471d35e45 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0523 07:14:07.908238 22 dns_common.go:489] Lookups using dns-2632/dns-test-eef46d20-b393-40ce-929c-caa471d35e45 failed for: [wheezy_udp@dns-test-service-3.dns-2632.svc.cluster.local jessie_udp@dns-test-service-3.dns-2632.svc.cluster.local]

  I0523 07:14:07.910723 22 dns_common.go:495] Pod client logs for webserver: 
  I0523 07:14:07.912728 22 dns_common.go:495] Pod client logs for querier: 
  I0523 07:14:07.918182 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E0523 07:14:08.674020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:09.674802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:10.674945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:11.675090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:12.675234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:14:12.898714 22 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-2632.svc.cluster.local from pod  dns-2632/dns-test-eef46d20-b393-40ce-929c-caa471d35e45 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0523 07:14:12.908667 22 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-2632.svc.cluster.local from pod  dns-2632/dns-test-eef46d20-b393-40ce-929c-caa471d35e45 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0523 07:14:12.908701 22 dns_common.go:489] Lookups using dns-2632/dns-test-eef46d20-b393-40ce-929c-caa471d35e45 failed for: [wheezy_udp@dns-test-service-3.dns-2632.svc.cluster.local jessie_udp@dns-test-service-3.dns-2632.svc.cluster.local]

  I0523 07:14:12.918680 22 dns_common.go:495] Pod client logs for webserver: 
  I0523 07:14:12.930084 22 dns_common.go:495] Pod client logs for querier: 
  I0523 07:14:12.940087 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E0523 07:14:13.675762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:14.676823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:15.676953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:16.677596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:17.677736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:14:17.907960 22 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-2632.svc.cluster.local from pod  dns-2632/dns-test-eef46d20-b393-40ce-929c-caa471d35e45 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0523 07:14:17.909563 22 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-2632.svc.cluster.local from pod  dns-2632/dns-test-eef46d20-b393-40ce-929c-caa471d35e45 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0523 07:14:17.909587 22 dns_common.go:489] Lookups using dns-2632/dns-test-eef46d20-b393-40ce-929c-caa471d35e45 failed for: [wheezy_udp@dns-test-service-3.dns-2632.svc.cluster.local jessie_udp@dns-test-service-3.dns-2632.svc.cluster.local]

  I0523 07:14:17.919538 22 dns_common.go:495] Pod client logs for webserver: 
  I0523 07:14:17.929519 22 dns_common.go:495] Pod client logs for querier: 
  I0523 07:14:17.937953 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E0523 07:14:18.677777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:19.677959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:20.678039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:21.678167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:22.679005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:14:22.908346 22 dns_common.go:552] DNS probes using dns-test-eef46d20-b393-40ce-929c-caa471d35e45 succeeded

  STEP: changing the service to type=ClusterIP @ 05/23/24 07:14:22.908
  W0523 07:14:22.914710      22 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2632.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-2632.svc.cluster.local; sleep 1; done
   @ 05/23/24 07:14:22.914
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2632.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-2632.svc.cluster.local; sleep 1; done
   @ 05/23/24 07:14:22.914
  STEP: creating a third pod to probe DNS @ 05/23/24 07:14:22.914
  STEP: submitting the pod to kubernetes @ 05/23/24 07:14:22.915
  E0523 07:14:23.679922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:24.680198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/23/24 07:14:24.924
  STEP: looking for the results for each expected name from probers @ 05/23/24 07:14:24.925
  I0523 07:14:24.944186 22 dns_common.go:552] DNS probes using dns-test-d1c09e6a-1630-4f04-86ce-9294e8772550 succeeded

  STEP: deleting the pod @ 05/23/24 07:14:24.944
  STEP: deleting the pod @ 05/23/24 07:14:24.95
  STEP: deleting the pod @ 05/23/24 07:14:24.956
  STEP: deleting the test externalName service @ 05/23/24 07:14:24.962
  I0523 07:14:24.968839 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2632" for this suite. @ 05/23/24 07:14:24.97
• [36.116 seconds]
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 05/23/24 07:14:24.972
  I0523 07:14:24.972802 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename configmap @ 05/23/24 07:14:24.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:14:24.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:14:24.983
  I0523 07:14:25.002347 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-235" for this suite. @ 05/23/24 07:14:25.004
• [0.034 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 05/23/24 07:14:25.006
  I0523 07:14:25.006886 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename kubectl @ 05/23/24 07:14:25.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:14:25.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:14:25.016
  STEP: Starting the proxy @ 05/23/24 07:14:25.018
  I0523 07:14:25.018432 22 util.go:592] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-1172 proxy --unix-socket=/tmp/kubectl-proxy-unix2685612132/test'
  STEP: retrieving proxy /api/ output @ 05/23/24 07:14:25.055
  I0523 07:14:25.056081 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1172" for this suite. @ 05/23/24 07:14:25.057
• [0.054 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 05/23/24 07:14:25.061
  I0523 07:14:25.061181 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename subpath @ 05/23/24 07:14:25.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:14:25.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:14:25.069
  STEP: Setting up data @ 05/23/24 07:14:25.071
  STEP: Creating pod pod-subpath-test-projected-hmlp @ 05/23/24 07:14:25.074
  STEP: Creating a pod to test atomic-volume-subpath @ 05/23/24 07:14:25.074
  E0523 07:14:25.680833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:26.680969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:27.682020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:28.682746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:29.683752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:30.684821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:31.685664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:32.685872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:33.686775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:34.687016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:35.687936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:36.688830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:37.689793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:38.689879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:39.690782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:40.690883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:41.691841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:42.692823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:43.693483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:44.693727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:45.694629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:46.694767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:14:47.102
  I0523 07:14:47.103274 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-subpath-test-projected-hmlp container test-container-subpath-projected-hmlp: <nil>
  STEP: delete the pod @ 05/23/24 07:14:47.105
  STEP: Deleting pod pod-subpath-test-projected-hmlp @ 05/23/24 07:14:47.111
  I0523 07:14:47.111514 22 delete.go:62] Deleting pod "pod-subpath-test-projected-hmlp" in namespace "subpath-6239"
  I0523 07:14:47.112476 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6239" for this suite. @ 05/23/24 07:14:47.113
• [22.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 05/23/24 07:14:47.115
  I0523 07:14:47.115979 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 07:14:47.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:14:47.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:14:47.125
  STEP: Creating projection with secret that has name projected-secret-test-cbb61f7f-cd9b-499e-90f1-52f1abffc1b2 @ 05/23/24 07:14:47.126
  STEP: Creating a pod to test consume secrets @ 05/23/24 07:14:47.128
  E0523 07:14:47.695754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:48.695819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:49.696821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:50.696904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:14:51.136
  I0523 07:14:51.137552 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-secrets-68c64bc9-7929-4950-b8a3-0abc64b0e1e5 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/23/24 07:14:51.139
  I0523 07:14:51.145844 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7666" for this suite. @ 05/23/24 07:14:51.147
• [4.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 05/23/24 07:14:51.15
  I0523 07:14:51.150316 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename deployment @ 05/23/24 07:14:51.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:14:51.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:14:51.157
  I0523 07:14:51.158863 22 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0523 07:14:51.169014 22 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0523 07:14:51.697683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:52.697910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:53.698042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:54.698330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:55.699066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:14:56.171144 22 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/23/24 07:14:56.171
  I0523 07:14:56.171197 22 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0523 07:14:56.174638 22 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0523 07:14:56.176953 22 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0523 07:14:56.699366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:57.699516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:14:58.181210 22 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0523 07:14:58.182272 22 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0523 07:14:58.185478 22 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9754",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a0a682cf-4132-4f8f-8ea0-8b217bae0943",
      ResourceVersion: (string) (len=5) "77006",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045296,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6f4b778cd6\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0523 07:14:58.187437 22 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-6f4b778cd6" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6f4b778cd6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9754",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "399ec719-2585-4262-ae16-b90990a6f797",
      ResourceVersion: (string) (len=5) "76996",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045296,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "a0a682cf-4132-4f8f-8ea0-8b217bae0943",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 30 61 36 38 32  63 66 2d 34 31 33 32 2d  |\"a0a682cf-4132-|
              00000120  34 66 38 66 2d 38 65 61  30 2d 38 62 32 31 37 62  |4f8f-8ea0-8b217b|
              00000130  61 65 30 39 34 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ae0943\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0523 07:14:58.187893 22 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0523 07:14:58.188034 22 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9754",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "54026b3f-d72f-495f-9501-90f02eded895",
      ResourceVersion: (string) (len=5) "77005",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045291,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "a0a682cf-4132-4f8f-8ea0-8b217bae0943",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045291,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 61 30 61 36 38 32 63  |"uid\":\"a0a682c|
              000000b0  66 2d 34 31 33 32 2d 34  66 38 66 2d 38 65 61 30  |f-4132-4f8f-8ea0|
              000000c0  2d 38 62 32 31 37 62 61  65 30 39 34 33 5c 22 7d  |-8b217bae0943\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0523 07:14:58.189971 22 deployment.go:67] Pod "test-rolling-update-deployment-6f4b778cd6-fc6nd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6f4b778cd6-fc6nd",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6f4b778cd6-",
      Namespace: (string) (len=15) "deployment-9754",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "23b54036-99c7-42f7-a762-3c92b17d1f81",
      ResourceVersion: (string) (len=5) "76995",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045296,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6f4b778cd6",
          UID: (types.UID) (len=36) "399ec719-2585-4262-ae16-b90990a6f797",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 39  39 65 63 37 31 39 2d 32  |d\":\"399ec719-2|
              00000090  35 38 35 2d 34 32 36 32  2d 61 65 31 36 2d 62 39  |585-4262-ae16-b9|
              000000a0  30 39 39 30 61 36 66 37  39 37 5c 22 7d 22 3a 7b  |0990a6f797\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 35 31 5c 22 7d 22 3a  |2.20.64.151\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7z4wx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7z4wx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.151",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.151"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045296,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852045296,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://86573793ff8672aa3c2c0651fc6716814d32cb3bf10df976a43f0095c42b2b9c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:14:58.191110 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9754" for this suite. @ 05/23/24 07:14:58.192
• [7.044 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 05/23/24 07:14:58.194
  I0523 07:14:58.194837 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename taint-single-pod @ 05/23/24 07:14:58.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:14:58.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:14:58.203
  I0523 07:14:58.204631 22 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0523 07:14:58.699823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:14:59.700200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:00.700697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:01.700746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:02.701620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:03.701709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:04.702500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:05.702648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:06.703149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:07.703352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:08.703428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:09.703697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:10.704518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:11.704821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:12.705591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:13.705670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:14.706666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:15.706750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:16.706981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:17.707636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:18.707898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:19.708820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:20.709230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:21.709374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:22.709838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:23.709981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:24.710997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:25.711995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:26.712070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:27.712822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:28.713324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:29.713553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:30.713650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:31.713791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:32.714399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:33.714813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:34.714770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:35.714913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:36.715373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:37.715501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:38.715565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:39.715750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:40.716132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:41.716219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:42.717285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:43.718297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:44.719171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:45.719734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:46.720551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:47.721241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:48.721325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:49.721416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:50.721869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:51.722715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:52.723005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:53.723129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:54.723923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:55.724002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:56.724191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:57.724811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:15:58.205480 22 util.go:400] Waiting for terminating namespaces to be deleted...
  I0523 07:15:58.207284 22 taints.go:150] Starting informer...
  STEP: Starting pod... @ 05/23/24 07:15:58.207
  I0523 07:15:58.415168 22 taints.go:300] Pod is running on k8s-10-255-0-208. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/23/24 07:15:58.415
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/23/24 07:15:58.42
  STEP: Waiting short time to make sure Pod is queued for deletion @ 05/23/24 07:15:58.422
  I0523 07:15:58.422534 22 taints.go:319] Pod wasn't evicted. Proceeding
  I0523 07:15:58.422576 22 taints.go:326] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/23/24 07:15:58.428
  STEP: Waiting some time to make sure that toleration time passed. @ 05/23/24 07:15:58.429
  E0523 07:15:58.725685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:15:59.726013      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:00.726155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:01.726525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:02.727584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:03.728067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:04.728082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:05.728133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:06.729126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:07.729280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:08.729407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:09.729621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:10.729737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:11.730577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:12.730701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:13.730786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:14.730827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:15.731103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:16.731168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:17.731296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:18.731385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:19.731566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:20.731645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:21.731765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:22.732796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:23.732919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:24.733820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:25.734494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:26.735441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:27.735527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:28.735579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:29.736261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:30.737239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:31.737946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:32.738071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:33.738512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:34.738785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:35.739172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:36.740173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:37.740807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:38.741804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:39.742680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:40.742811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:41.742893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:42.743023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:43.743216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:44.743525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:45.743751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:46.743750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:47.744806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:48.744932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:49.745859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:50.745947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:51.746077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:52.746981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:53.747069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:54.747160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:55.747392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:56.747642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:57.747750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:58.748823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:16:59.749106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:00.750052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:01.750141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:02.750266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:03.750386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:04.750476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:05.750632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:06.750759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:07.751572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:08.751676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:09.752632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:10.752754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:11.752876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:12.753002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:17:13.429734 22 taints.go:335] Pod wasn't evicted. Test successful
  I0523 07:17:13.429888 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-1120" for this suite. @ 05/23/24 07:17:13.431
• [135.240 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 05/23/24 07:17:13.435
  I0523 07:17:13.435166 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename downward-api @ 05/23/24 07:17:13.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:17:13.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:17:13.443
  STEP: Creating the pod @ 05/23/24 07:17:13.445
  E0523 07:17:13.753877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:14.754004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:15.754862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:17:15.968061 22 pod_client.go:141] Successfully updated pod "labelsupdate2140950c-e152-49dc-bc62-e156d21782ec"
  E0523 07:17:16.755698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:17.755777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:17:17.975045 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1412" for this suite. @ 05/23/24 07:17:17.976
• [4.545 seconds]
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 05/23/24 07:17:17.979
  I0523 07:17:17.979741 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/23/24 07:17:17.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:17:17.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:17:17.988
  STEP: Creating two CSIDrivers @ 05/23/24 07:17:17.989
  STEP: Getting "inline-driver-21ecab3c-86c6-4509-a31d-9686f88ac710" & "inline-driver-20da716a-85d0-4489-8a88-5e415637a22a" @ 05/23/24 07:17:17.995
  STEP: Patching the CSIDriver "inline-driver-20da716a-85d0-4489-8a88-5e415637a22a" @ 05/23/24 07:17:17.997
  STEP: Updating the CSIDriver "inline-driver-20da716a-85d0-4489-8a88-5e415637a22a" @ 05/23/24 07:17:17.999
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-4359" @ 05/23/24 07:17:18.001
  STEP: Deleting CSIDriver "inline-driver-21ecab3c-86c6-4509-a31d-9686f88ac710" @ 05/23/24 07:17:18.002
  STEP: Confirm deletion of CSIDriver "inline-driver-21ecab3c-86c6-4509-a31d-9686f88ac710" @ 05/23/24 07:17:18.004
  STEP: Deleting CSIDriver "inline-driver-20da716a-85d0-4489-8a88-5e415637a22a" via DeleteCollection @ 05/23/24 07:17:18.005
  STEP: Confirm deletion of CSIDriver "inline-driver-20da716a-85d0-4489-8a88-5e415637a22a" @ 05/23/24 07:17:18.007
  I0523 07:17:18.008469 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4359" for this suite. @ 05/23/24 07:17:18.009
• [0.032 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 05/23/24 07:17:18.011
  I0523 07:17:18.011798 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename statefulset @ 05/23/24 07:17:18.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:17:18.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:17:18.019
  STEP: Creating service test in namespace statefulset-5999 @ 05/23/24 07:17:18.021
  STEP: Creating statefulset ss in namespace statefulset-5999 @ 05/23/24 07:17:18.023
  I0523 07:17:18.036324 22 wait.go:40] Found 0 stateful pods, waiting for 1
  E0523 07:17:18.756802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:19.757049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:20.757130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:21.757200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:22.757290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:23.757829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:24.758073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:25.758164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:26.758282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:27.758369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:17:28.028676 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 05/23/24 07:17:28.031
  STEP: updating a scale subresource @ 05/23/24 07:17:28.032
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/23/24 07:17:28.035
  STEP: Patch a scale subresource @ 05/23/24 07:17:28.036
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/23/24 07:17:28.039
  I0523 07:17:28.043945 22 statefulset.go:135] Deleting all statefulset in ns statefulset-5999
  I0523 07:17:28.046276 22 rest.go:150] Scaling statefulset ss to 0
  E0523 07:17:28.758448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:29.758461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:30.758604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:31.758737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:32.759101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:33.759355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:34.759358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:35.759496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:36.759566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:37.759704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:17:38.053992 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0523 07:17:38.055135 22 rest.go:88] Deleting statefulset ss
  I0523 07:17:38.060148 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5999" for this suite. @ 05/23/24 07:17:38.061
• [20.052 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 05/23/24 07:17:38.064
  I0523 07:17:38.064246 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/23/24 07:17:38.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:17:38.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:17:38.072
  I0523 07:17:38.073745 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  E0523 07:17:38.759767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:39.760800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:40.761185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:17:41.126466 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3301" for this suite. @ 05/23/24 07:17:41.128
• [3.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 05/23/24 07:17:41.13
  I0523 07:17:41.130513 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename security-context-test @ 05/23/24 07:17:41.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:17:41.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:17:41.138
  E0523 07:17:41.761895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:42.762864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:17:43.152155 22 security_context.go:538] Got logs for pod "busybox-privileged-false-f00ff4e0-7809-4149-92c0-40c89fa5bd65": "ip: RTNETLINK answers: Operation not permitted\n"
  I0523 07:17:43.152234 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3231" for this suite. @ 05/23/24 07:17:43.153
• [2.025 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 05/23/24 07:17:43.155
  I0523 07:17:43.155906 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename limitrange @ 05/23/24 07:17:43.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:17:43.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:17:43.163
  STEP: Creating a LimitRange @ 05/23/24 07:17:43.165
  STEP: Setting up watch @ 05/23/24 07:17:43.165
  STEP: Submitting a LimitRange @ 05/23/24 07:17:43.266
  STEP: Verifying LimitRange creation was observed @ 05/23/24 07:17:43.268
  STEP: Fetching the LimitRange to ensure it has proper values @ 05/23/24 07:17:43.268
  I0523 07:17:43.270153 22 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0523 07:17:43.270177 22 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 05/23/24 07:17:43.27
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 05/23/24 07:17:43.273
  I0523 07:17:43.274328 22 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0523 07:17:43.274348 22 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 05/23/24 07:17:43.274
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 05/23/24 07:17:43.276
  I0523 07:17:43.278301 22 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0523 07:17:43.278319 22 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 05/23/24 07:17:43.278
  STEP: Failing to create a Pod with more than max resources @ 05/23/24 07:17:43.279
  STEP: Updating a LimitRange @ 05/23/24 07:17:43.28
  STEP: Verifying LimitRange updating is effective @ 05/23/24 07:17:43.283
  E0523 07:17:43.763598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:44.763761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 05/23/24 07:17:45.284
  STEP: Failing to create a Pod with more than max resources @ 05/23/24 07:17:45.287
  STEP: Deleting a LimitRange @ 05/23/24 07:17:45.288
  STEP: Verifying the LimitRange was deleted @ 05/23/24 07:17:45.292
  E0523 07:17:45.764813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:46.764954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:47.765162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:48.765305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:49.765549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:17:50.294586 22 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 05/23/24 07:17:50.294
  I0523 07:17:50.297936 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-7587" for this suite. @ 05/23/24 07:17:50.299
• [7.147 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 05/23/24 07:17:50.306
  I0523 07:17:50.306926 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename secrets @ 05/23/24 07:17:50.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:17:50.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:17:50.315
  STEP: Creating secret with name secret-test-map-9f1c0bb7-5df9-449d-977b-7ca49bc05418 @ 05/23/24 07:17:50.316
  STEP: Creating a pod to test consume secrets @ 05/23/24 07:17:50.317
  E0523 07:17:50.766382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:51.766565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:52.767072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:53.767816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:17:54.328
  I0523 07:17:54.330178 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-secrets-6527e065-1b86-4fec-8fc6-00d0f308990c container secret-volume-test: <nil>
  STEP: delete the pod @ 05/23/24 07:17:54.342
  I0523 07:17:54.347913 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1116" for this suite. @ 05/23/24 07:17:54.349
• [4.044 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:397
  STEP: Creating a kubernetes client @ 05/23/24 07:17:54.351
  I0523 07:17:54.351370 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename kubectl @ 05/23/24 07:17:54.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:17:54.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:17:54.359
  STEP: creating all guestbook components @ 05/23/24 07:17:54.361
  I0523 07:17:54.361286 22 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0523 07:17:54.361345 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-697 create -f -'
  I0523 07:17:54.438308 22 builder.go:146] stderr: ""
  I0523 07:17:54.438350 22 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0523 07:17:54.438390 22 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0523 07:17:54.438504 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-697 create -f -'
  I0523 07:17:54.520560 22 builder.go:146] stderr: ""
  I0523 07:17:54.520590 22 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0523 07:17:54.520663 22 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0523 07:17:54.520732 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-697 create -f -'
  I0523 07:17:54.605751 22 builder.go:146] stderr: ""
  I0523 07:17:54.605785 22 builder.go:147] stdout: "service/frontend created\n"
  I0523 07:17:54.605896 22 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0523 07:17:54.605978 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-697 create -f -'
  I0523 07:17:54.668580 22 builder.go:146] stderr: ""
  I0523 07:17:54.668608 22 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0523 07:17:54.668722 22 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0523 07:17:54.668794 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-697 create -f -'
  I0523 07:17:54.736076 22 builder.go:146] stderr: ""
  I0523 07:17:54.736105 22 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0523 07:17:54.736223 22 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0523 07:17:54.736304 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-697 create -f -'
  E0523 07:17:54.768563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:17:54.793458 22 builder.go:146] stderr: ""
  I0523 07:17:54.793490 22 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 05/23/24 07:17:54.793
  I0523 07:17:54.793529 22 kubectl.go:2271] Waiting for all frontend pods to be Running.
  E0523 07:17:55.768787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:56.769751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:57.770704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:58.771626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:17:59.771745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:17:59.844933 22 kubectl.go:2275] Waiting for frontend to serve content.
  I0523 07:17:59.851379 22 kubectl.go:2280] Trying to add a new entry to the guestbook.
  I0523 07:17:59.857184 22 kubectl.go:2285] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 05/23/24 07:17:59.861
  I0523 07:17:59.861439 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-697 delete --grace-period=0 --force -f -'
  I0523 07:17:59.907708 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0523 07:17:59.907740 22 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 05/23/24 07:17:59.907
  I0523 07:17:59.907841 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-697 delete --grace-period=0 --force -f -'
  I0523 07:17:59.959671 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0523 07:17:59.959704 22 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/23/24 07:17:59.959
  I0523 07:17:59.959854 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-697 delete --grace-period=0 --force -f -'
  I0523 07:18:00.007069 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0523 07:18:00.007117 22 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/23/24 07:18:00.007
  I0523 07:18:00.007235 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-697 delete --grace-period=0 --force -f -'
  I0523 07:18:00.049560 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0523 07:18:00.049588 22 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/23/24 07:18:00.049
  I0523 07:18:00.049677 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-697 delete --grace-period=0 --force -f -'
  I0523 07:18:00.099465 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0523 07:18:00.099503 22 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/23/24 07:18:00.099
  I0523 07:18:00.099643 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-697 delete --grace-period=0 --force -f -'
  I0523 07:18:00.162015 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0523 07:18:00.162045 22 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0523 07:18:00.162135 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-697" for this suite. @ 05/23/24 07:18:00.163
• [5.816 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 05/23/24 07:18:00.167
  I0523 07:18:00.167441 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename init-container @ 05/23/24 07:18:00.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:18:00.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:18:00.177
  STEP: creating the pod @ 05/23/24 07:18:00.179
  I0523 07:18:00.179206 22 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0523 07:18:00.772821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:01.773537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:02.774431      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:03.774445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:04.774924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:05.775489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:06.775617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:07.776168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:08.776258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:09.776559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:10.776801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:11.776927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:12.777010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:13.777670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:14.777732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:15.778667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:16.778801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:17.778914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:18.779057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:19.779975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:20.780047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:21.780803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:22.780934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:23.781065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:24.781282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:25.782190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:26.782262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:27.782343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:28.782447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:29.782664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:30.782763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:31.782898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:32.783023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:33.783162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:34.783226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:35.783347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:36.784223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:37.784312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:38.784521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:39.785343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:18:40.320809 22 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-44f86d1c-490a-489e-bc3a-679ada038de4", GenerateName:"", Namespace:"init-container-8594", SelfLink:"", UID:"6fbd2a3e-2a9e-40d8-b80c-ac8a5ddefc7e", ResourceVersion:"77994", Generation:0, CreationTimestamp:time.Date(2024, time.May, 23, 7, 18, 0, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"179197600"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 18, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0031c6768), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 23, 7, 18, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0031c6798), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-wp6rd", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00501f180), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-wp6rd", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-wp6rd", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-wp6rd", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc006b64ae8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"k8s-10-255-0-209", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0007a7800), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc006b64b70)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc006b64b90)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc006b64b98), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc006b64b9c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000ef5130), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 23, 7, 18, 1, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 23, 7, 18, 0, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 23, 7, 18, 0, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 23, 7, 18, 0, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 23, 7, 18, 0, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.255.0.209", HostIPs:[]v1.HostIP{v1.HostIP{IP:"10.255.0.209"}}, PodIP:"172.20.69.186", PodIPs:[]v1.PodIP{v1.PodIP{IP:"172.20.69.186"}}, StartTime:time.Date(2024, time.May, 23, 7, 18, 0, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0002c6460)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0002c64d0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://76662eaf8e4e469762d4fed77898f407d98b0177514d0b90616b02c4e2fe0277", Started:(*bool)(0xc006b64c3a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00501f200), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc006b64c4f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00501f1e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc006b64c1f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0523 07:18:40.320912 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8594" for this suite. @ 05/23/24 07:18:40.322
• [40.157 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 05/23/24 07:18:40.324
  I0523 07:18:40.324631 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 07:18:40.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:18:40.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:18:40.333
  STEP: Creating a pod to test downward API volume plugin @ 05/23/24 07:18:40.335
  E0523 07:18:40.786248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:41.786831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:18:42.341
  I0523 07:18:42.342507 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-f75764d4-0112-4a62-9a01-678524880dde container client-container: <nil>
  STEP: delete the pod @ 05/23/24 07:18:42.345
  I0523 07:18:42.352383 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-457" for this suite. @ 05/23/24 07:18:42.353
• [2.031 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 05/23/24 07:18:42.356
  I0523 07:18:42.356055 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 07:18:42.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:18:42.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:18:42.363
  STEP: Creating the pod @ 05/23/24 07:18:42.365
  E0523 07:18:42.786933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:43.787144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:44.787634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:18:44.882671 22 pod_client.go:141] Successfully updated pod "annotationupdate30648403-5e8b-4b54-a536-2a1c36462830"
  E0523 07:18:45.787752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:46.787838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:18:46.889288 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9359" for this suite. @ 05/23/24 07:18:46.89
• [4.538 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 05/23/24 07:18:46.894
  I0523 07:18:46.894133 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename svc-latency @ 05/23/24 07:18:46.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:18:46.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:18:46.901
  I0523 07:18:46.904175 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-1376 @ 05/23/24 07:18:46.904
  I0523 07:18:46.906897      22 runners.go:198] Created replication controller with name: svc-latency-rc, namespace: svc-latency-1376, replica count: 1
  E0523 07:18:47.788812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:18:47.958112      22 runners.go:198] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0523 07:18:48.789275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:18:48.958593      22 runners.go:198] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0523 07:18:49.064298 22 service_latency.go:356] Created: latency-svc-57pt8
  I0523 07:18:49.067333 22 service_latency.go:363] Got endpoints: latency-svc-57pt8 [8.665489ms]
  I0523 07:18:49.075780 22 service_latency.go:356] Created: latency-svc-45xm4
  I0523 07:18:49.079095 22 service_latency.go:363] Got endpoints: latency-svc-45xm4 [11.691315ms]
  I0523 07:18:49.080189 22 service_latency.go:356] Created: latency-svc-xxknz
  I0523 07:18:49.083077 22 service_latency.go:356] Created: latency-svc-zcpbq
  I0523 07:18:49.083345 22 service_latency.go:363] Got endpoints: latency-svc-xxknz [15.822641ms]
  I0523 07:18:49.085672 22 service_latency.go:356] Created: latency-svc-tfhq8
  I0523 07:18:49.089461 22 service_latency.go:363] Got endpoints: latency-svc-tfhq8 [21.777297ms]
  I0523 07:18:49.089682 22 service_latency.go:363] Got endpoints: latency-svc-zcpbq [22.096028ms]
  I0523 07:18:49.091938 22 service_latency.go:356] Created: latency-svc-mvwct
  I0523 07:18:49.094945 22 service_latency.go:363] Got endpoints: latency-svc-mvwct [27.245174ms]
  I0523 07:18:49.095977 22 service_latency.go:356] Created: latency-svc-6d9p9
  I0523 07:18:49.099033 22 service_latency.go:356] Created: latency-svc-k82k7
  I0523 07:18:49.099722 22 service_latency.go:363] Got endpoints: latency-svc-6d9p9 [10.178734ms]
  I0523 07:18:49.102522 22 service_latency.go:363] Got endpoints: latency-svc-k82k7 [12.775587ms]
  I0523 07:18:49.103794 22 service_latency.go:356] Created: latency-svc-m9v6v
  I0523 07:18:49.106729 22 service_latency.go:363] Got endpoints: latency-svc-m9v6v [38.892275ms]
  I0523 07:18:49.107840 22 service_latency.go:356] Created: latency-svc-mvbzm
  I0523 07:18:49.111706 22 service_latency.go:363] Got endpoints: latency-svc-mvbzm [43.866965ms]
  I0523 07:18:49.111872 22 service_latency.go:356] Created: latency-svc-tzpmn
  I0523 07:18:49.113925 22 service_latency.go:363] Got endpoints: latency-svc-tzpmn [46.044603ms]
  I0523 07:18:49.114859 22 service_latency.go:356] Created: latency-svc-pk8tg
  I0523 07:18:49.118724 22 service_latency.go:363] Got endpoints: latency-svc-pk8tg [50.785288ms]
  I0523 07:18:49.120303 22 service_latency.go:356] Created: latency-svc-jgx5v
  I0523 07:18:49.122335 22 service_latency.go:363] Got endpoints: latency-svc-jgx5v [54.437798ms]
  I0523 07:18:49.123707 22 service_latency.go:356] Created: latency-svc-6vkk7
  I0523 07:18:49.125735 22 service_latency.go:363] Got endpoints: latency-svc-6vkk7 [57.76166ms]
  I0523 07:18:49.127434 22 service_latency.go:356] Created: latency-svc-xfkqb
  I0523 07:18:49.131231 22 service_latency.go:363] Got endpoints: latency-svc-xfkqb [63.307632ms]
  I0523 07:18:49.132227 22 service_latency.go:356] Created: latency-svc-v4m57
  I0523 07:18:49.134999 22 service_latency.go:363] Got endpoints: latency-svc-v4m57 [66.999922ms]
  I0523 07:18:49.135819 22 service_latency.go:356] Created: latency-svc-6c8f9
  I0523 07:18:49.137208 22 service_latency.go:363] Got endpoints: latency-svc-6c8f9 [58.090062ms]
  I0523 07:18:49.138149 22 service_latency.go:356] Created: latency-svc-xlzpc
  I0523 07:18:49.138289 22 service_latency.go:356] Created: latency-svc-dz4zr
  I0523 07:18:49.141786 22 service_latency.go:363] Got endpoints: latency-svc-dz4zr [58.419648ms]
  I0523 07:18:49.144534 22 service_latency.go:356] Created: latency-svc-vb64z
  I0523 07:18:49.145837 22 service_latency.go:363] Got endpoints: latency-svc-xlzpc [78.071693ms]
  I0523 07:18:49.147401 22 service_latency.go:356] Created: latency-svc-dtxlt
  I0523 07:18:49.147948 22 service_latency.go:363] Got endpoints: latency-svc-vb64z [80.164179ms]
  I0523 07:18:49.151901 22 service_latency.go:363] Got endpoints: latency-svc-dtxlt [56.92943ms]
  I0523 07:18:49.153734 22 service_latency.go:356] Created: latency-svc-nx475
  I0523 07:18:49.154776 22 service_latency.go:363] Got endpoints: latency-svc-nx475 [55.031584ms]
  I0523 07:18:49.156249 22 service_latency.go:356] Created: latency-svc-6kmv7
  I0523 07:18:49.159542 22 service_latency.go:356] Created: latency-svc-6r2nq
  I0523 07:18:49.161012 22 service_latency.go:363] Got endpoints: latency-svc-6kmv7 [58.469746ms]
  I0523 07:18:49.163417 22 service_latency.go:363] Got endpoints: latency-svc-6r2nq [56.669008ms]
  I0523 07:18:49.163542 22 service_latency.go:356] Created: latency-svc-wfhtf
  I0523 07:18:49.168158 22 service_latency.go:363] Got endpoints: latency-svc-wfhtf [56.432693ms]
  I0523 07:18:49.168727 22 service_latency.go:356] Created: latency-svc-sgncc
  I0523 07:18:49.171294 22 service_latency.go:356] Created: latency-svc-fw47l
  I0523 07:18:49.172630 22 service_latency.go:363] Got endpoints: latency-svc-sgncc [58.680346ms]
  I0523 07:18:49.176974 22 service_latency.go:356] Created: latency-svc-q7hqx
  I0523 07:18:49.178969 22 service_latency.go:363] Got endpoints: latency-svc-fw47l [60.225283ms]
  I0523 07:18:49.181916 22 service_latency.go:363] Got endpoints: latency-svc-q7hqx [59.559975ms]
  I0523 07:18:49.182318 22 service_latency.go:356] Created: latency-svc-rkc2q
  I0523 07:18:49.185001 22 service_latency.go:356] Created: latency-svc-59dq7
  I0523 07:18:49.186453 22 service_latency.go:363] Got endpoints: latency-svc-rkc2q [60.698121ms]
  I0523 07:18:49.187950 22 service_latency.go:363] Got endpoints: latency-svc-59dq7 [56.69813ms]
  I0523 07:18:49.190844 22 service_latency.go:356] Created: latency-svc-vjw9f
  I0523 07:18:49.192114 22 service_latency.go:356] Created: latency-svc-85krq
  I0523 07:18:49.195343 22 service_latency.go:363] Got endpoints: latency-svc-85krq [58.114448ms]
  I0523 07:18:49.195355 22 service_latency.go:363] Got endpoints: latency-svc-vjw9f [60.333733ms]
  I0523 07:18:49.197064 22 service_latency.go:356] Created: latency-svc-jqnj6
  I0523 07:18:49.199877 22 service_latency.go:356] Created: latency-svc-8d4dn
  I0523 07:18:49.202119 22 service_latency.go:356] Created: latency-svc-wqtb9
  I0523 07:18:49.204187 22 service_latency.go:356] Created: latency-svc-x66b7
  I0523 07:18:49.210127 22 service_latency.go:356] Created: latency-svc-sdkxx
  I0523 07:18:49.212706 22 service_latency.go:356] Created: latency-svc-kjjhb
  I0523 07:18:49.216097 22 service_latency.go:356] Created: latency-svc-ctxjh
  I0523 07:18:49.217746 22 service_latency.go:363] Got endpoints: latency-svc-jqnj6 [75.931615ms]
  I0523 07:18:49.218971 22 service_latency.go:356] Created: latency-svc-zbndd
  I0523 07:18:49.222763 22 service_latency.go:356] Created: latency-svc-kfwxc
  I0523 07:18:49.225286 22 service_latency.go:356] Created: latency-svc-9rvlc
  I0523 07:18:49.227963 22 service_latency.go:356] Created: latency-svc-kvf6p
  I0523 07:18:49.231233 22 service_latency.go:356] Created: latency-svc-lv2hp
  I0523 07:18:49.234183 22 service_latency.go:356] Created: latency-svc-jdbhs
  I0523 07:18:49.236141 22 service_latency.go:356] Created: latency-svc-6xkrx
  I0523 07:18:49.238422 22 service_latency.go:356] Created: latency-svc-vjg9n
  I0523 07:18:49.240482 22 service_latency.go:356] Created: latency-svc-wvsnb
  I0523 07:18:49.268293 22 service_latency.go:363] Got endpoints: latency-svc-8d4dn [122.434508ms]
  I0523 07:18:49.273409 22 service_latency.go:356] Created: latency-svc-krmvb
  I0523 07:18:49.317803 22 service_latency.go:363] Got endpoints: latency-svc-wqtb9 [169.823548ms]
  I0523 07:18:49.322752 22 service_latency.go:356] Created: latency-svc-r2n2b
  I0523 07:18:49.367492 22 service_latency.go:363] Got endpoints: latency-svc-x66b7 [215.498791ms]
  I0523 07:18:49.373134 22 service_latency.go:356] Created: latency-svc-gj4mc
  I0523 07:18:49.416905 22 service_latency.go:363] Got endpoints: latency-svc-sdkxx [262.106369ms]
  I0523 07:18:49.421747 22 service_latency.go:356] Created: latency-svc-p4rfx
  I0523 07:18:49.468056 22 service_latency.go:363] Got endpoints: latency-svc-kjjhb [307.023102ms]
  I0523 07:18:49.472808 22 service_latency.go:356] Created: latency-svc-97bwj
  I0523 07:18:49.517518 22 service_latency.go:363] Got endpoints: latency-svc-ctxjh [354.0689ms]
  I0523 07:18:49.521859 22 service_latency.go:356] Created: latency-svc-b994z
  I0523 07:18:49.567516 22 service_latency.go:363] Got endpoints: latency-svc-zbndd [399.322231ms]
  I0523 07:18:49.572269 22 service_latency.go:356] Created: latency-svc-r7vp8
  I0523 07:18:49.617332 22 service_latency.go:363] Got endpoints: latency-svc-kfwxc [444.68242ms]
  I0523 07:18:49.622959 22 service_latency.go:356] Created: latency-svc-6k2cr
  I0523 07:18:49.666830 22 service_latency.go:363] Got endpoints: latency-svc-9rvlc [487.83522ms]
  I0523 07:18:49.671456 22 service_latency.go:356] Created: latency-svc-r29ls
  I0523 07:18:49.719970 22 service_latency.go:363] Got endpoints: latency-svc-kvf6p [538.03226ms]
  I0523 07:18:49.724738 22 service_latency.go:356] Created: latency-svc-pxwpx
  I0523 07:18:49.767213 22 service_latency.go:363] Got endpoints: latency-svc-lv2hp [580.740038ms]
  I0523 07:18:49.772118 22 service_latency.go:356] Created: latency-svc-7bj8t
  E0523 07:18:49.790298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:18:49.817244 22 service_latency.go:363] Got endpoints: latency-svc-jdbhs [629.266344ms]
  I0523 07:18:49.822491 22 service_latency.go:356] Created: latency-svc-pqg4g
  I0523 07:18:49.866776 22 service_latency.go:363] Got endpoints: latency-svc-6xkrx [671.410366ms]
  I0523 07:18:49.871271 22 service_latency.go:356] Created: latency-svc-qmdt2
  I0523 07:18:49.918031 22 service_latency.go:363] Got endpoints: latency-svc-vjg9n [722.650804ms]
  I0523 07:18:49.922693 22 service_latency.go:356] Created: latency-svc-mg8zr
  I0523 07:18:49.967116 22 service_latency.go:363] Got endpoints: latency-svc-wvsnb [749.346051ms]
  I0523 07:18:49.972224 22 service_latency.go:356] Created: latency-svc-mzsvk
  I0523 07:18:50.017464 22 service_latency.go:363] Got endpoints: latency-svc-krmvb [749.137819ms]
  I0523 07:18:50.023858 22 service_latency.go:356] Created: latency-svc-gmd2h
  I0523 07:18:50.067094 22 service_latency.go:363] Got endpoints: latency-svc-r2n2b [749.254985ms]
  I0523 07:18:50.071582 22 service_latency.go:356] Created: latency-svc-cs7d6
  I0523 07:18:50.117840 22 service_latency.go:363] Got endpoints: latency-svc-gj4mc [750.310149ms]
  I0523 07:18:50.122670 22 service_latency.go:356] Created: latency-svc-zhw74
  I0523 07:18:50.168355 22 service_latency.go:363] Got endpoints: latency-svc-p4rfx [751.414439ms]
  I0523 07:18:50.173132 22 service_latency.go:356] Created: latency-svc-skxqk
  I0523 07:18:50.218055 22 service_latency.go:363] Got endpoints: latency-svc-97bwj [749.963264ms]
  I0523 07:18:50.223934 22 service_latency.go:356] Created: latency-svc-hml7l
  I0523 07:18:50.267542 22 service_latency.go:363] Got endpoints: latency-svc-b994z [749.989238ms]
  I0523 07:18:50.271976 22 service_latency.go:356] Created: latency-svc-2zq2j
  I0523 07:18:50.318545 22 service_latency.go:363] Got endpoints: latency-svc-r7vp8 [750.992473ms]
  I0523 07:18:50.323239 22 service_latency.go:356] Created: latency-svc-zh7nk
  I0523 07:18:50.368711 22 service_latency.go:363] Got endpoints: latency-svc-6k2cr [751.34418ms]
  I0523 07:18:50.373498 22 service_latency.go:356] Created: latency-svc-qr678
  I0523 07:18:50.418304 22 service_latency.go:363] Got endpoints: latency-svc-r29ls [751.426435ms]
  I0523 07:18:50.423104 22 service_latency.go:356] Created: latency-svc-2f6j6
  I0523 07:18:50.467695 22 service_latency.go:363] Got endpoints: latency-svc-pxwpx [747.686228ms]
  I0523 07:18:50.473286 22 service_latency.go:356] Created: latency-svc-pdsgs
  I0523 07:18:50.517433 22 service_latency.go:363] Got endpoints: latency-svc-7bj8t [750.189013ms]
  I0523 07:18:50.522316 22 service_latency.go:356] Created: latency-svc-2dfql
  I0523 07:18:50.568128 22 service_latency.go:363] Got endpoints: latency-svc-pqg4g [750.797491ms]
  I0523 07:18:50.573496 22 service_latency.go:356] Created: latency-svc-2vjd8
  I0523 07:18:50.617518 22 service_latency.go:363] Got endpoints: latency-svc-qmdt2 [750.701787ms]
  I0523 07:18:50.623695 22 service_latency.go:356] Created: latency-svc-sjjrh
  I0523 07:18:50.668000 22 service_latency.go:363] Got endpoints: latency-svc-mg8zr [749.930207ms]
  I0523 07:18:50.672423 22 service_latency.go:356] Created: latency-svc-6nmk6
  I0523 07:18:50.719161 22 service_latency.go:363] Got endpoints: latency-svc-mzsvk [752.009363ms]
  I0523 07:18:50.723811 22 service_latency.go:356] Created: latency-svc-t26vl
  I0523 07:18:50.768919 22 service_latency.go:363] Got endpoints: latency-svc-gmd2h [751.423486ms]
  I0523 07:18:50.774046 22 service_latency.go:356] Created: latency-svc-qdm2x
  E0523 07:18:50.791120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:18:50.817527 22 service_latency.go:363] Got endpoints: latency-svc-cs7d6 [750.40182ms]
  I0523 07:18:50.823325 22 service_latency.go:356] Created: latency-svc-56ftx
  I0523 07:18:50.867825 22 service_latency.go:363] Got endpoints: latency-svc-zhw74 [749.950669ms]
  I0523 07:18:50.872411 22 service_latency.go:356] Created: latency-svc-6n7p5
  I0523 07:18:50.918138 22 service_latency.go:363] Got endpoints: latency-svc-skxqk [749.750191ms]
  I0523 07:18:50.922641 22 service_latency.go:356] Created: latency-svc-dn2v4
  I0523 07:18:50.967558 22 service_latency.go:363] Got endpoints: latency-svc-hml7l [749.468952ms]
  I0523 07:18:50.972400 22 service_latency.go:356] Created: latency-svc-bzf67
  I0523 07:18:51.019090 22 service_latency.go:363] Got endpoints: latency-svc-2zq2j [751.510026ms]
  I0523 07:18:51.023814 22 service_latency.go:356] Created: latency-svc-hfbld
  I0523 07:18:51.067256 22 service_latency.go:363] Got endpoints: latency-svc-zh7nk [748.674498ms]
  I0523 07:18:51.072764 22 service_latency.go:356] Created: latency-svc-z2gqv
  I0523 07:18:51.118599 22 service_latency.go:363] Got endpoints: latency-svc-qr678 [749.856726ms]
  I0523 07:18:51.123563 22 service_latency.go:356] Created: latency-svc-v5bpb
  I0523 07:18:51.167884 22 service_latency.go:363] Got endpoints: latency-svc-2f6j6 [749.538023ms]
  I0523 07:18:51.172267 22 service_latency.go:356] Created: latency-svc-8tmzn
  I0523 07:18:51.218885 22 service_latency.go:363] Got endpoints: latency-svc-pdsgs [751.153214ms]
  I0523 07:18:51.223418 22 service_latency.go:356] Created: latency-svc-lgxbh
  I0523 07:18:51.267056 22 service_latency.go:363] Got endpoints: latency-svc-2dfql [749.592221ms]
  I0523 07:18:51.272133 22 service_latency.go:356] Created: latency-svc-v4776
  I0523 07:18:51.317244 22 service_latency.go:363] Got endpoints: latency-svc-2vjd8 [749.083463ms]
  I0523 07:18:51.323517 22 service_latency.go:356] Created: latency-svc-kpfvq
  I0523 07:18:51.368988 22 service_latency.go:363] Got endpoints: latency-svc-sjjrh [751.432008ms]
  I0523 07:18:51.373564 22 service_latency.go:356] Created: latency-svc-52htf
  I0523 07:18:51.418963 22 service_latency.go:363] Got endpoints: latency-svc-6nmk6 [750.926443ms]
  I0523 07:18:51.423417 22 service_latency.go:356] Created: latency-svc-n5v6c
  I0523 07:18:51.468987 22 service_latency.go:363] Got endpoints: latency-svc-t26vl [749.791581ms]
  I0523 07:18:51.473542 22 service_latency.go:356] Created: latency-svc-n7tx7
  I0523 07:18:51.518559 22 service_latency.go:363] Got endpoints: latency-svc-qdm2x [749.608854ms]
  I0523 07:18:51.524449 22 service_latency.go:356] Created: latency-svc-lv9hc
  I0523 07:18:51.567080 22 service_latency.go:363] Got endpoints: latency-svc-56ftx [749.522035ms]
  I0523 07:18:51.572116 22 service_latency.go:356] Created: latency-svc-x7k4h
  I0523 07:18:51.618375 22 service_latency.go:363] Got endpoints: latency-svc-6n7p5 [750.51674ms]
  I0523 07:18:51.623107 22 service_latency.go:356] Created: latency-svc-c7lk7
  I0523 07:18:51.667893 22 service_latency.go:363] Got endpoints: latency-svc-dn2v4 [749.723062ms]
  I0523 07:18:51.672254 22 service_latency.go:356] Created: latency-svc-pp9fv
  I0523 07:18:51.716799 22 service_latency.go:363] Got endpoints: latency-svc-bzf67 [749.199164ms]
  I0523 07:18:51.722346 22 service_latency.go:356] Created: latency-svc-kqthp
  I0523 07:18:51.767050 22 service_latency.go:363] Got endpoints: latency-svc-hfbld [747.925118ms]
  I0523 07:18:51.772007 22 service_latency.go:356] Created: latency-svc-rwltj
  E0523 07:18:51.792019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:18:51.818349 22 service_latency.go:363] Got endpoints: latency-svc-z2gqv [750.983935ms]
  I0523 07:18:51.823267 22 service_latency.go:356] Created: latency-svc-hsng9
  I0523 07:18:51.868135 22 service_latency.go:363] Got endpoints: latency-svc-v5bpb [749.499785ms]
  I0523 07:18:51.872614 22 service_latency.go:356] Created: latency-svc-5bxp4
  I0523 07:18:51.917239 22 service_latency.go:363] Got endpoints: latency-svc-8tmzn [749.317788ms]
  I0523 07:18:51.922867 22 service_latency.go:356] Created: latency-svc-h82jj
  I0523 07:18:51.968955 22 service_latency.go:363] Got endpoints: latency-svc-lgxbh [750.036877ms]
  I0523 07:18:51.973825 22 service_latency.go:356] Created: latency-svc-knfd8
  I0523 07:18:52.017700 22 service_latency.go:363] Got endpoints: latency-svc-v4776 [750.606313ms]
  I0523 07:18:52.022806 22 service_latency.go:356] Created: latency-svc-88dxr
  I0523 07:18:52.067918 22 service_latency.go:363] Got endpoints: latency-svc-kpfvq [750.640396ms]
  I0523 07:18:52.072454 22 service_latency.go:356] Created: latency-svc-9kg42
  I0523 07:18:52.118770 22 service_latency.go:363] Got endpoints: latency-svc-52htf [749.750221ms]
  I0523 07:18:52.123417 22 service_latency.go:356] Created: latency-svc-nqvtx
  I0523 07:18:52.167299 22 service_latency.go:363] Got endpoints: latency-svc-n5v6c [748.295644ms]
  I0523 07:18:52.172088 22 service_latency.go:356] Created: latency-svc-fmhjj
  I0523 07:18:52.217995 22 service_latency.go:363] Got endpoints: latency-svc-n7tx7 [748.961651ms]
  I0523 07:18:52.222689 22 service_latency.go:356] Created: latency-svc-2768t
  I0523 07:18:52.267699 22 service_latency.go:363] Got endpoints: latency-svc-lv9hc [749.107342ms]
  I0523 07:18:52.272455 22 service_latency.go:356] Created: latency-svc-xpcl8
  I0523 07:18:52.317101 22 service_latency.go:363] Got endpoints: latency-svc-x7k4h [749.985972ms]
  I0523 07:18:52.321817 22 service_latency.go:356] Created: latency-svc-5z9rn
  I0523 07:18:52.367198 22 service_latency.go:363] Got endpoints: latency-svc-c7lk7 [748.78603ms]
  I0523 07:18:52.372623 22 service_latency.go:356] Created: latency-svc-qws42
  I0523 07:18:52.418811 22 service_latency.go:363] Got endpoints: latency-svc-pp9fv [750.880053ms]
  I0523 07:18:52.423253 22 service_latency.go:356] Created: latency-svc-mlw9s
  I0523 07:18:52.468218 22 service_latency.go:363] Got endpoints: latency-svc-kqthp [751.376922ms]
  I0523 07:18:52.473227 22 service_latency.go:356] Created: latency-svc-hdp4k
  I0523 07:18:52.518470 22 service_latency.go:363] Got endpoints: latency-svc-rwltj [751.381864ms]
  I0523 07:18:52.523468 22 service_latency.go:356] Created: latency-svc-9bthq
  I0523 07:18:52.567775 22 service_latency.go:363] Got endpoints: latency-svc-hsng9 [749.388797ms]
  I0523 07:18:52.572110 22 service_latency.go:356] Created: latency-svc-f9jwh
  I0523 07:18:52.617399 22 service_latency.go:363] Got endpoints: latency-svc-5bxp4 [749.216753ms]
  I0523 07:18:52.621770 22 service_latency.go:356] Created: latency-svc-gzgqg
  I0523 07:18:52.668266 22 service_latency.go:363] Got endpoints: latency-svc-h82jj [750.988354ms]
  I0523 07:18:52.673234 22 service_latency.go:356] Created: latency-svc-hkcpz
  I0523 07:18:52.717862 22 service_latency.go:363] Got endpoints: latency-svc-knfd8 [748.874195ms]
  I0523 07:18:52.722836 22 service_latency.go:356] Created: latency-svc-2xhr9
  I0523 07:18:52.767621 22 service_latency.go:363] Got endpoints: latency-svc-88dxr [749.888503ms]
  I0523 07:18:52.771875 22 service_latency.go:356] Created: latency-svc-mj6wr
  E0523 07:18:52.792999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:18:52.818042 22 service_latency.go:363] Got endpoints: latency-svc-9kg42 [750.090621ms]
  I0523 07:18:52.823911 22 service_latency.go:356] Created: latency-svc-7fkb4
  I0523 07:18:52.868811 22 service_latency.go:363] Got endpoints: latency-svc-nqvtx [750.005546ms]
  I0523 07:18:52.873974 22 service_latency.go:356] Created: latency-svc-bkd2z
  I0523 07:18:52.917993 22 service_latency.go:363] Got endpoints: latency-svc-fmhjj [750.652682ms]
  I0523 07:18:52.922771 22 service_latency.go:356] Created: latency-svc-zc7nz
  I0523 07:18:52.968019 22 service_latency.go:363] Got endpoints: latency-svc-2768t [749.990962ms]
  I0523 07:18:52.972492 22 service_latency.go:356] Created: latency-svc-k2mk7
  I0523 07:18:53.016997 22 service_latency.go:363] Got endpoints: latency-svc-xpcl8 [749.268521ms]
  I0523 07:18:53.022668 22 service_latency.go:356] Created: latency-svc-7nbk6
  I0523 07:18:53.067051 22 service_latency.go:363] Got endpoints: latency-svc-5z9rn [749.914688ms]
  I0523 07:18:53.072035 22 service_latency.go:356] Created: latency-svc-lbdt9
  I0523 07:18:53.116977 22 service_latency.go:363] Got endpoints: latency-svc-qws42 [749.745728ms]
  I0523 07:18:53.121472 22 service_latency.go:356] Created: latency-svc-rfd6q
  I0523 07:18:53.167052 22 service_latency.go:363] Got endpoints: latency-svc-mlw9s [748.196641ms]
  I0523 07:18:53.172239 22 service_latency.go:356] Created: latency-svc-6rdk4
  I0523 07:18:53.217161 22 service_latency.go:363] Got endpoints: latency-svc-hdp4k [748.900761ms]
  I0523 07:18:53.222830 22 service_latency.go:356] Created: latency-svc-mmjlx
  I0523 07:18:53.268173 22 service_latency.go:363] Got endpoints: latency-svc-9bthq [749.670019ms]
  I0523 07:18:53.274371 22 service_latency.go:356] Created: latency-svc-4mcb8
  I0523 07:18:53.317968 22 service_latency.go:363] Got endpoints: latency-svc-f9jwh [750.159923ms]
  I0523 07:18:53.322816 22 service_latency.go:356] Created: latency-svc-27qfj
  I0523 07:18:53.369325 22 service_latency.go:363] Got endpoints: latency-svc-gzgqg [751.888818ms]
  I0523 07:18:53.374356 22 service_latency.go:356] Created: latency-svc-kpgnr
  I0523 07:18:53.417251 22 service_latency.go:363] Got endpoints: latency-svc-hkcpz [748.94563ms]
  I0523 07:18:53.421658 22 service_latency.go:356] Created: latency-svc-z8n5k
  I0523 07:18:53.468384 22 service_latency.go:363] Got endpoints: latency-svc-2xhr9 [750.476859ms]
  I0523 07:18:53.473237 22 service_latency.go:356] Created: latency-svc-t2t4l
  I0523 07:18:53.518162 22 service_latency.go:363] Got endpoints: latency-svc-mj6wr [750.497157ms]
  I0523 07:18:53.523134 22 service_latency.go:356] Created: latency-svc-jtgv2
  I0523 07:18:53.568462 22 service_latency.go:363] Got endpoints: latency-svc-7fkb4 [750.387362ms]
  I0523 07:18:53.573363 22 service_latency.go:356] Created: latency-svc-6zjcj
  I0523 07:18:53.617334 22 service_latency.go:363] Got endpoints: latency-svc-bkd2z [748.478395ms]
  I0523 07:18:53.622130 22 service_latency.go:356] Created: latency-svc-bx7rq
  I0523 07:18:53.669093 22 service_latency.go:363] Got endpoints: latency-svc-zc7nz [751.064213ms]
  I0523 07:18:53.673604 22 service_latency.go:356] Created: latency-svc-trrh4
  I0523 07:18:53.717352 22 service_latency.go:363] Got endpoints: latency-svc-k2mk7 [749.297503ms]
  I0523 07:18:53.723230 22 service_latency.go:356] Created: latency-svc-vn2v6
  I0523 07:18:53.767166 22 service_latency.go:363] Got endpoints: latency-svc-7nbk6 [750.134746ms]
  I0523 07:18:53.771833 22 service_latency.go:356] Created: latency-svc-t22rj
  E0523 07:18:53.793031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:18:53.818493 22 service_latency.go:363] Got endpoints: latency-svc-lbdt9 [751.404528ms]
  I0523 07:18:53.822898 22 service_latency.go:356] Created: latency-svc-2c2xb
  I0523 07:18:53.867446 22 service_latency.go:363] Got endpoints: latency-svc-rfd6q [750.428351ms]
  I0523 07:18:53.872602 22 service_latency.go:356] Created: latency-svc-2wcx9
  I0523 07:18:53.918960 22 service_latency.go:363] Got endpoints: latency-svc-6rdk4 [751.875611ms]
  I0523 07:18:53.924935 22 service_latency.go:356] Created: latency-svc-lw6gs
  I0523 07:18:53.967578 22 service_latency.go:363] Got endpoints: latency-svc-mmjlx [750.388287ms]
  I0523 07:18:53.972240 22 service_latency.go:356] Created: latency-svc-9x9xc
  I0523 07:18:54.017677 22 service_latency.go:363] Got endpoints: latency-svc-4mcb8 [749.471354ms]
  I0523 07:18:54.023074 22 service_latency.go:356] Created: latency-svc-lcdkg
  I0523 07:18:54.068300 22 service_latency.go:363] Got endpoints: latency-svc-27qfj [750.297279ms]
  I0523 07:18:54.073300 22 service_latency.go:356] Created: latency-svc-zh4zb
  I0523 07:18:54.116981 22 service_latency.go:363] Got endpoints: latency-svc-kpgnr [747.623308ms]
  I0523 07:18:54.122275 22 service_latency.go:356] Created: latency-svc-k4hxs
  I0523 07:18:54.169603 22 service_latency.go:363] Got endpoints: latency-svc-z8n5k [752.32075ms]
  I0523 07:18:54.174573 22 service_latency.go:356] Created: latency-svc-cv6bq
  I0523 07:18:54.218783 22 service_latency.go:363] Got endpoints: latency-svc-t2t4l [750.37044ms]
  I0523 07:18:54.223849 22 service_latency.go:356] Created: latency-svc-rsgxb
  I0523 07:18:54.267551 22 service_latency.go:363] Got endpoints: latency-svc-jtgv2 [749.355607ms]
  I0523 07:18:54.272845 22 service_latency.go:356] Created: latency-svc-zg5jl
  I0523 07:18:54.318052 22 service_latency.go:363] Got endpoints: latency-svc-6zjcj [749.553958ms]
  I0523 07:18:54.323556 22 service_latency.go:356] Created: latency-svc-7dkx6
  I0523 07:18:54.368603 22 service_latency.go:363] Got endpoints: latency-svc-bx7rq [751.233552ms]
  I0523 07:18:54.373129 22 service_latency.go:356] Created: latency-svc-d28q9
  I0523 07:18:54.417346 22 service_latency.go:363] Got endpoints: latency-svc-trrh4 [748.215853ms]
  I0523 07:18:54.422085 22 service_latency.go:356] Created: latency-svc-hsdxk
  I0523 07:18:54.468287 22 service_latency.go:363] Got endpoints: latency-svc-vn2v6 [750.901739ms]
  I0523 07:18:54.472726 22 service_latency.go:356] Created: latency-svc-cs2r7
  I0523 07:18:54.519141 22 service_latency.go:363] Got endpoints: latency-svc-t22rj [751.935712ms]
  I0523 07:18:54.523958 22 service_latency.go:356] Created: latency-svc-mfrw7
  I0523 07:18:54.567734 22 service_latency.go:363] Got endpoints: latency-svc-2c2xb [749.206261ms]
  I0523 07:18:54.573931 22 service_latency.go:356] Created: latency-svc-8x2gz
  I0523 07:18:54.618252 22 service_latency.go:363] Got endpoints: latency-svc-2wcx9 [750.773326ms]
  I0523 07:18:54.623137 22 service_latency.go:356] Created: latency-svc-zkwhw
  I0523 07:18:54.668564 22 service_latency.go:363] Got endpoints: latency-svc-lw6gs [749.568156ms]
  I0523 07:18:54.673772 22 service_latency.go:356] Created: latency-svc-h8d45
  I0523 07:18:54.716948 22 service_latency.go:363] Got endpoints: latency-svc-9x9xc [749.339489ms]
  I0523 07:18:54.721649 22 service_latency.go:356] Created: latency-svc-gnc4j
  I0523 07:18:54.767881 22 service_latency.go:363] Got endpoints: latency-svc-lcdkg [750.164476ms]
  I0523 07:18:54.773778 22 service_latency.go:356] Created: latency-svc-xwzrn
  E0523 07:18:54.793837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:18:54.817290 22 service_latency.go:363] Got endpoints: latency-svc-zh4zb [748.955601ms]
  I0523 07:18:54.822022 22 service_latency.go:356] Created: latency-svc-qtxbz
  I0523 07:18:54.867736 22 service_latency.go:363] Got endpoints: latency-svc-k4hxs [750.720248ms]
  I0523 07:18:54.872151 22 service_latency.go:356] Created: latency-svc-24d9c
  I0523 07:18:54.917308 22 service_latency.go:363] Got endpoints: latency-svc-cv6bq [747.667739ms]
  I0523 07:18:54.923161 22 service_latency.go:356] Created: latency-svc-mh996
  I0523 07:18:54.968120 22 service_latency.go:363] Got endpoints: latency-svc-rsgxb [749.300439ms]
  I0523 07:18:54.974093 22 service_latency.go:356] Created: latency-svc-27t8p
  I0523 07:18:55.017142 22 service_latency.go:363] Got endpoints: latency-svc-zg5jl [749.558046ms]
  I0523 07:18:55.022004 22 service_latency.go:356] Created: latency-svc-7c28m
  I0523 07:18:55.068870 22 service_latency.go:363] Got endpoints: latency-svc-7dkx6 [750.778372ms]
  I0523 07:18:55.073545 22 service_latency.go:356] Created: latency-svc-7pkv7
  I0523 07:18:55.117710 22 service_latency.go:363] Got endpoints: latency-svc-d28q9 [749.073612ms]
  I0523 07:18:55.122657 22 service_latency.go:356] Created: latency-svc-lvkdj
  I0523 07:18:55.168413 22 service_latency.go:363] Got endpoints: latency-svc-hsdxk [751.028511ms]
  I0523 07:18:55.173966 22 service_latency.go:356] Created: latency-svc-bpjr2
  I0523 07:18:55.217812 22 service_latency.go:363] Got endpoints: latency-svc-cs2r7 [749.495535ms]
  I0523 07:18:55.222436 22 service_latency.go:356] Created: latency-svc-szxnn
  I0523 07:18:55.267037 22 service_latency.go:363] Got endpoints: latency-svc-mfrw7 [747.858655ms]
  I0523 07:18:55.272490 22 service_latency.go:356] Created: latency-svc-p2zfm
  I0523 07:18:55.317856 22 service_latency.go:363] Got endpoints: latency-svc-8x2gz [750.082277ms]
  I0523 07:18:55.322380 22 service_latency.go:356] Created: latency-svc-c95bl
  I0523 07:18:55.368839 22 service_latency.go:363] Got endpoints: latency-svc-zkwhw [750.549954ms]
  I0523 07:18:55.373579 22 service_latency.go:356] Created: latency-svc-bpghm
  I0523 07:18:55.417533 22 service_latency.go:363] Got endpoints: latency-svc-h8d45 [748.933496ms]
  I0523 07:18:55.423033 22 service_latency.go:356] Created: latency-svc-45r44
  I0523 07:18:55.467939 22 service_latency.go:363] Got endpoints: latency-svc-gnc4j [750.953694ms]
  I0523 07:18:55.472384 22 service_latency.go:356] Created: latency-svc-9cqn5
  I0523 07:18:55.519266 22 service_latency.go:363] Got endpoints: latency-svc-xwzrn [751.342463ms]
  I0523 07:18:55.523913 22 service_latency.go:356] Created: latency-svc-s7xpg
  I0523 07:18:55.567572 22 service_latency.go:363] Got endpoints: latency-svc-qtxbz [750.253749ms]
  I0523 07:18:55.573012 22 service_latency.go:356] Created: latency-svc-8dnh9
  I0523 07:18:55.616905 22 service_latency.go:363] Got endpoints: latency-svc-24d9c [749.118371ms]
  I0523 07:18:55.622364 22 service_latency.go:356] Created: latency-svc-9kf2q
  I0523 07:18:55.667294 22 service_latency.go:363] Got endpoints: latency-svc-mh996 [749.948936ms]
  I0523 07:18:55.672423 22 service_latency.go:356] Created: latency-svc-mr99d
  I0523 07:18:55.719746 22 service_latency.go:363] Got endpoints: latency-svc-27t8p [751.581973ms]
  I0523 07:18:55.724522 22 service_latency.go:356] Created: latency-svc-f2z6p
  I0523 07:18:55.768614 22 service_latency.go:363] Got endpoints: latency-svc-7c28m [751.438628ms]
  I0523 07:18:55.773128 22 service_latency.go:356] Created: latency-svc-mpjb4
  E0523 07:18:55.794214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:18:55.817575 22 service_latency.go:363] Got endpoints: latency-svc-7pkv7 [748.672387ms]
  I0523 07:18:55.823886 22 service_latency.go:356] Created: latency-svc-q2mwk
  I0523 07:18:55.867657 22 service_latency.go:363] Got endpoints: latency-svc-lvkdj [749.890458ms]
  I0523 07:18:55.872118 22 service_latency.go:356] Created: latency-svc-l5btg
  I0523 07:18:55.918817 22 service_latency.go:363] Got endpoints: latency-svc-bpjr2 [750.373152ms]
  I0523 07:18:55.923454 22 service_latency.go:356] Created: latency-svc-kx7k2
  I0523 07:18:55.969287 22 service_latency.go:363] Got endpoints: latency-svc-szxnn [751.443017ms]
  I0523 07:18:55.974076 22 service_latency.go:356] Created: latency-svc-8xrnf
  I0523 07:18:56.017458 22 service_latency.go:363] Got endpoints: latency-svc-p2zfm [750.391898ms]
  I0523 07:18:56.021972 22 service_latency.go:356] Created: latency-svc-mxb57
  I0523 07:18:56.067888 22 service_latency.go:363] Got endpoints: latency-svc-c95bl [749.98871ms]
  I0523 07:18:56.072582 22 service_latency.go:356] Created: latency-svc-j86qf
  I0523 07:18:56.119395 22 service_latency.go:363] Got endpoints: latency-svc-bpghm [750.522746ms]
  I0523 07:18:56.124520 22 service_latency.go:356] Created: latency-svc-vmgk7
  I0523 07:18:56.167207 22 service_latency.go:363] Got endpoints: latency-svc-45r44 [749.643241ms]
  I0523 07:18:56.172162 22 service_latency.go:356] Created: latency-svc-f8778
  I0523 07:18:56.218726 22 service_latency.go:363] Got endpoints: latency-svc-9cqn5 [750.750305ms]
  I0523 07:18:56.223583 22 service_latency.go:356] Created: latency-svc-pmm5s
  I0523 07:18:56.267172 22 service_latency.go:363] Got endpoints: latency-svc-s7xpg [747.855117ms]
  I0523 07:18:56.274825 22 service_latency.go:356] Created: latency-svc-5264r
  I0523 07:18:56.318581 22 service_latency.go:363] Got endpoints: latency-svc-8dnh9 [750.978908ms]
  I0523 07:18:56.323275 22 service_latency.go:356] Created: latency-svc-7dwjr
  I0523 07:18:56.368516 22 service_latency.go:363] Got endpoints: latency-svc-9kf2q [751.580025ms]
  I0523 07:18:56.373173 22 service_latency.go:356] Created: latency-svc-wmm2v
  I0523 07:18:56.417260 22 service_latency.go:363] Got endpoints: latency-svc-mr99d [749.933859ms]
  I0523 07:18:56.423224 22 service_latency.go:356] Created: latency-svc-jqxrt
  I0523 07:18:56.467238 22 service_latency.go:363] Got endpoints: latency-svc-f2z6p [747.453835ms]
  I0523 07:18:56.472795 22 service_latency.go:356] Created: latency-svc-b9lnv
  I0523 07:18:56.518293 22 service_latency.go:363] Got endpoints: latency-svc-mpjb4 [749.645973ms]
  I0523 07:18:56.527926 22 service_latency.go:356] Created: latency-svc-tjqmn
  I0523 07:18:56.570124 22 service_latency.go:363] Got endpoints: latency-svc-q2mwk [752.519038ms]
  I0523 07:18:56.574919 22 service_latency.go:356] Created: latency-svc-xbdlt
  I0523 07:18:56.619111 22 service_latency.go:363] Got endpoints: latency-svc-l5btg [751.422322ms]
  I0523 07:18:56.624986 22 service_latency.go:356] Created: latency-svc-dj74s
  I0523 07:18:56.668844 22 service_latency.go:363] Got endpoints: latency-svc-kx7k2 [749.999639ms]
  I0523 07:18:56.674284 22 service_latency.go:356] Created: latency-svc-rxvg9
  I0523 07:18:56.718414 22 service_latency.go:363] Got endpoints: latency-svc-8xrnf [749.087192ms]
  I0523 07:18:56.723543 22 service_latency.go:356] Created: latency-svc-6bb92
  I0523 07:18:56.768321 22 service_latency.go:363] Got endpoints: latency-svc-mxb57 [750.828759ms]
  I0523 07:18:56.773104 22 service_latency.go:356] Created: latency-svc-bm66l
  E0523 07:18:56.795247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:18:56.818390 22 service_latency.go:363] Got endpoints: latency-svc-j86qf [750.475439ms]
  I0523 07:18:56.823157 22 service_latency.go:356] Created: latency-svc-sc55g
  I0523 07:18:56.868588 22 service_latency.go:363] Got endpoints: latency-svc-vmgk7 [749.161306ms]
  I0523 07:18:56.873035 22 service_latency.go:356] Created: latency-svc-p7b6c
  I0523 07:18:56.917714 22 service_latency.go:363] Got endpoints: latency-svc-f8778 [750.472955ms]
  I0523 07:18:56.967221 22 service_latency.go:363] Got endpoints: latency-svc-pmm5s [748.458219ms]
  I0523 07:18:57.017266 22 service_latency.go:363] Got endpoints: latency-svc-5264r [750.049629ms]
  I0523 07:18:57.067238 22 service_latency.go:363] Got endpoints: latency-svc-7dwjr [748.619282ms]
  I0523 07:18:57.118895 22 service_latency.go:363] Got endpoints: latency-svc-wmm2v [750.337903ms]
  I0523 07:18:57.167167 22 service_latency.go:363] Got endpoints: latency-svc-jqxrt [749.871116ms]
  I0523 07:18:57.218874 22 service_latency.go:363] Got endpoints: latency-svc-b9lnv [751.603418ms]
  I0523 07:18:57.269397 22 service_latency.go:363] Got endpoints: latency-svc-tjqmn [751.06612ms]
  I0523 07:18:57.317873 22 service_latency.go:363] Got endpoints: latency-svc-xbdlt [747.709048ms]
  I0523 07:18:57.368841 22 service_latency.go:363] Got endpoints: latency-svc-dj74s [749.694164ms]
  I0523 07:18:57.418546 22 service_latency.go:363] Got endpoints: latency-svc-rxvg9 [749.673318ms]
  I0523 07:18:57.468765 22 service_latency.go:363] Got endpoints: latency-svc-6bb92 [750.32218ms]
  I0523 07:18:57.517094 22 service_latency.go:363] Got endpoints: latency-svc-bm66l [748.745194ms]
  I0523 07:18:57.568721 22 service_latency.go:363] Got endpoints: latency-svc-sc55g [750.298094ms]
  I0523 07:18:57.616904 22 service_latency.go:363] Got endpoints: latency-svc-p7b6c [748.285042ms]
  I0523 07:18:57.616999 22 service_latency.go:114] Latencies: [10.178734ms 11.691315ms 12.775587ms 15.822641ms 21.777297ms 22.096028ms 27.245174ms 38.892275ms 43.866965ms 46.044603ms 50.785288ms 54.437798ms 55.031584ms 56.432693ms 56.669008ms 56.69813ms 56.92943ms 57.76166ms 58.090062ms 58.114448ms 58.419648ms 58.469746ms 58.680346ms 59.559975ms 60.225283ms 60.333733ms 60.698121ms 63.307632ms 66.999922ms 75.931615ms 78.071693ms 80.164179ms 122.434508ms 169.823548ms 215.498791ms 262.106369ms 307.023102ms 354.0689ms 399.322231ms 444.68242ms 487.83522ms 538.03226ms 580.740038ms 629.266344ms 671.410366ms 722.650804ms 747.453835ms 747.623308ms 747.667739ms 747.686228ms 747.709048ms 747.855117ms 747.858655ms 747.925118ms 748.196641ms 748.215853ms 748.285042ms 748.295644ms 748.458219ms 748.478395ms 748.619282ms 748.672387ms 748.674498ms 748.745194ms 748.78603ms 748.874195ms 748.900761ms 748.933496ms 748.94563ms 748.955601ms 748.961651ms 749.073612ms 749.083463ms 749.087192ms 749.107342ms 749.118371ms 749.137819ms 749.161306ms 749.199164ms 749.206261ms 749.216753ms 749.254985ms 749.268521ms 749.297503ms 749.300439ms 749.317788ms 749.339489ms 749.346051ms 749.355607ms 749.388797ms 749.468952ms 749.471354ms 749.495535ms 749.499785ms 749.522035ms 749.538023ms 749.553958ms 749.558046ms 749.568156ms 749.592221ms 749.608854ms 749.643241ms 749.645973ms 749.670019ms 749.673318ms 749.694164ms 749.723062ms 749.745728ms 749.750191ms 749.750221ms 749.791581ms 749.856726ms 749.871116ms 749.888503ms 749.890458ms 749.914688ms 749.930207ms 749.933859ms 749.948936ms 749.950669ms 749.963264ms 749.985972ms 749.98871ms 749.989238ms 749.990962ms 749.999639ms 750.005546ms 750.036877ms 750.049629ms 750.082277ms 750.090621ms 750.134746ms 750.159923ms 750.164476ms 750.189013ms 750.253749ms 750.297279ms 750.298094ms 750.310149ms 750.32218ms 750.337903ms 750.37044ms 750.373152ms 750.387362ms 750.388287ms 750.391898ms 750.40182ms 750.428351ms 750.472955ms 750.475439ms 750.476859ms 750.497157ms 750.51674ms 750.522746ms 750.549954ms 750.606313ms 750.640396ms 750.652682ms 750.701787ms 750.720248ms 750.750305ms 750.773326ms 750.778372ms 750.797491ms 750.828759ms 750.880053ms 750.901739ms 750.926443ms 750.953694ms 750.978908ms 750.983935ms 750.988354ms 750.992473ms 751.028511ms 751.064213ms 751.06612ms 751.153214ms 751.233552ms 751.342463ms 751.34418ms 751.376922ms 751.381864ms 751.404528ms 751.414439ms 751.422322ms 751.423486ms 751.426435ms 751.432008ms 751.438628ms 751.443017ms 751.510026ms 751.580025ms 751.581973ms 751.603418ms 751.875611ms 751.888818ms 751.935712ms 752.009363ms 752.32075ms 752.519038ms]
  I0523 07:18:57.617048 22 service_latency.go:118] 50 %ile: 749.608854ms
  I0523 07:18:57.617057 22 service_latency.go:119] 90 %ile: 751.376922ms
  I0523 07:18:57.617064 22 service_latency.go:120] 99 %ile: 752.32075ms
  I0523 07:18:57.617070 22 service_latency.go:121] Total sample count: 200
  I0523 07:18:57.617141 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-1376" for this suite. @ 05/23/24 07:18:57.619
• [10.728 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 05/23/24 07:18:57.622
  I0523 07:18:57.622014 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename emptydir @ 05/23/24 07:18:57.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:18:57.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:18:57.631
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/23/24 07:18:57.633
  E0523 07:18:57.796183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:58.796488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:18:59.796535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:00.796815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:19:01.642
  I0523 07:19:01.644052 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-7cc1342e-3cbd-40e1-8a3c-4de3132a0f6e container test-container: <nil>
  STEP: delete the pod @ 05/23/24 07:19:01.646
  I0523 07:19:01.651717 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5517" for this suite. @ 05/23/24 07:19:01.653
• [4.034 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 05/23/24 07:19:01.655
  I0523 07:19:01.655976 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename watch @ 05/23/24 07:19:01.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:19:01.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:19:01.664
  STEP: creating a watch on configmaps with a certain label @ 05/23/24 07:19:01.665
  STEP: creating a new configmap @ 05/23/24 07:19:01.665
  STEP: modifying the configmap once @ 05/23/24 07:19:01.667
  STEP: changing the label value of the configmap @ 05/23/24 07:19:01.67
  STEP: Expecting to observe a delete notification for the watched object @ 05/23/24 07:19:01.674
  I0523 07:19:01.674187 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-338  5c03c4bf-970d-4fd2-a702-b19b083cc390 78977 0 2024-05-23 07:19:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-23 07:19:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0523 07:19:01.674294 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-338  5c03c4bf-970d-4fd2-a702-b19b083cc390 78978 0 2024-05-23 07:19:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-23 07:19:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0523 07:19:01.674360 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-338  5c03c4bf-970d-4fd2-a702-b19b083cc390 78979 0 2024-05-23 07:19:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-23 07:19:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 05/23/24 07:19:01.674
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 05/23/24 07:19:01.676
  E0523 07:19:01.797169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:02.797299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:03.797564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:04.797877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:05.798090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:06.798215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:07.799050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:08.799369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:09.799540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:10.799630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 05/23/24 07:19:11.677
  STEP: modifying the configmap a third time @ 05/23/24 07:19:11.681
  STEP: deleting the configmap @ 05/23/24 07:19:11.684
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 05/23/24 07:19:11.691
  I0523 07:19:11.691816 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-338  5c03c4bf-970d-4fd2-a702-b19b083cc390 79831 0 2024-05-23 07:19:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-23 07:19:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0523 07:19:11.691895 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-338  5c03c4bf-970d-4fd2-a702-b19b083cc390 79832 0 2024-05-23 07:19:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-23 07:19:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0523 07:19:11.691976 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-338  5c03c4bf-970d-4fd2-a702-b19b083cc390 79833 0 2024-05-23 07:19:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-23 07:19:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0523 07:19:11.692043 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-338" for this suite. @ 05/23/24 07:19:11.693
• [10.039 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 05/23/24 07:19:11.695
  I0523 07:19:11.695540 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename podtemplate @ 05/23/24 07:19:11.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:19:11.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:19:11.704
  STEP: Create set of pod templates @ 05/23/24 07:19:11.705
  I0523 07:19:11.707658 22 podtemplates.go:143] created test-podtemplate-1
  I0523 07:19:11.709390 22 podtemplates.go:143] created test-podtemplate-2
  I0523 07:19:11.711010 22 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 05/23/24 07:19:11.711
  STEP: delete collection of pod templates @ 05/23/24 07:19:11.712
  I0523 07:19:11.712068 22 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 05/23/24 07:19:11.717
  I0523 07:19:11.717330 22 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0523 07:19:11.718286 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2859" for this suite. @ 05/23/24 07:19:11.719
• [0.026 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 05/23/24 07:19:11.721
  I0523 07:19:11.721644 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename webhook @ 05/23/24 07:19:11.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:19:11.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:19:11.732
  STEP: Setting up server cert @ 05/23/24 07:19:11.742
  E0523 07:19:11.800192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/23/24 07:19:12.015
  STEP: Deploying the webhook pod @ 05/23/24 07:19:12.018
  STEP: Wait for the deployment to be ready @ 05/23/24 07:19:12.024
  I0523 07:19:12.027605 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0523 07:19:12.800434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:13.801329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/23/24 07:19:14.031
  STEP: Verifying the service has paired with the endpoint @ 05/23/24 07:19:14.036
  E0523 07:19:14.801943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:19:15.037296 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/23/24 07:19:15.065
  STEP: Creating a configMap that should be mutated @ 05/23/24 07:19:15.072
  STEP: Deleting the collection of validation webhooks @ 05/23/24 07:19:15.083
  STEP: Creating a configMap that should not be mutated @ 05/23/24 07:19:15.098
  I0523 07:19:15.115377 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9768" for this suite. @ 05/23/24 07:19:15.117
  STEP: Destroying namespace "webhook-markers-9551" for this suite. @ 05/23/24 07:19:15.122
• [3.405 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 05/23/24 07:19:15.126
  I0523 07:19:15.126578 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/23/24 07:19:15.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:19:15.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:19:15.136
  I0523 07:19:15.139628 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-106" for this suite. @ 05/23/24 07:19:15.142
• [0.018 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 05/23/24 07:19:15.145
  I0523 07:19:15.145311 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename security-context-test @ 05/23/24 07:19:15.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:19:15.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:19:15.153
  E0523 07:19:15.802007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:16.802146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:19:17.163003 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5200" for this suite. @ 05/23/24 07:19:17.164
• [2.021 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 05/23/24 07:19:17.166
  I0523 07:19:17.166867 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename subpath @ 05/23/24 07:19:17.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:19:17.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:19:17.175
  STEP: Setting up data @ 05/23/24 07:19:17.177
  STEP: Creating pod pod-subpath-test-configmap-5jcj @ 05/23/24 07:19:17.18
  STEP: Creating a pod to test atomic-volume-subpath @ 05/23/24 07:19:17.18
  E0523 07:19:17.802465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:18.803205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:19.804181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:20.804823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:21.805767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:22.805886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:23.805910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:24.806148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:25.807115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:26.807705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:27.808073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:28.808136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:29.808834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:30.808901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:31.809790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:32.809920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:33.810365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:34.810440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:35.811296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:36.811439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:37.812475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:38.812806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:19:39.21
  I0523 07:19:39.211613 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-subpath-test-configmap-5jcj container test-container-subpath-configmap-5jcj: <nil>
  STEP: delete the pod @ 05/23/24 07:19:39.213
  STEP: Deleting pod pod-subpath-test-configmap-5jcj @ 05/23/24 07:19:39.219
  I0523 07:19:39.219473 22 delete.go:62] Deleting pod "pod-subpath-test-configmap-5jcj" in namespace "subpath-826"
  I0523 07:19:39.220520 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-826" for this suite. @ 05/23/24 07:19:39.221
• [22.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 05/23/24 07:19:39.224
  I0523 07:19:39.224020 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename deployment @ 05/23/24 07:19:39.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:19:39.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:19:39.232
  I0523 07:19:39.233632 22 deployment.go:1196] Creating deployment "webserver-deployment"
  I0523 07:19:39.235751 22 deployment.go:1200] Waiting for observed generation 1
  E0523 07:19:39.813108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:40.813322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:19:41.239506 22 deployment.go:1205] Waiting for all required pods to come up
  I0523 07:19:41.241486 22 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 05/23/24 07:19:41.241
  I0523 07:19:41.241558 22 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0523 07:19:41.243631 22 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0523 07:19:41.247056 22 deployment.go:313] Updating deployment webserver-deployment
  I0523 07:19:41.247073 22 deployment.go:1224] Waiting for observed generation 2
  E0523 07:19:41.814326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:42.814462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:19:43.250865 22 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0523 07:19:43.252136 22 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0523 07:19:43.253206 22 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0523 07:19:43.256204 22 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0523 07:19:43.256229 22 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0523 07:19:43.257162 22 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0523 07:19:43.258985 22 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0523 07:19:43.259000 22 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0523 07:19:43.263285 22 deployment.go:313] Updating deployment webserver-deployment
  I0523 07:19:43.263306 22 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0523 07:19:43.265285 22 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0523 07:19:43.266260 22 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  E0523 07:19:43.815317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:44.815760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:19:45.271624 22 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "40d3431f-5ecb-4657-87bc-d09cd070a070",
      ResourceVersion: (string) (len=5) "80589",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045579,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      UnavailableReplicas: (int32) 13,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-67c89d485c\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0523 07:19:45.273725 22 deployment.go:39] New ReplicaSet "webserver-deployment-67c89d485c" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-67c89d485c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "03cd8906-8be9-41b2-ba44-f39742260fca",
      ResourceVersion: (string) (len=5) "80404",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045581,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "40d3431f-5ecb-4657-87bc-d09cd070a070",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 30 64 33 34 33  31 66 2d 35 65 63 62 2d  |\"40d3431f-5ecb-|
              00000120  34 36 35 37 2d 38 37 62  63 2d 64 30 39 63 64 30  |4657-87bc-d09cd0|
              00000130  37 30 61 30 37 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |70a070\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0523 07:19:45.274248 22 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I0523 07:19:45.274484 22 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-77db57d8df",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "01a268af-e2d4-4360-a816-7d9c9ef08afe",
      ResourceVersion: (string) (len=5) "80588",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045579,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "40d3431f-5ecb-4657-87bc-d09cd070a070",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 30 64 33 34 33  31 66 2d 35 65 63 62 2d  |\"40d3431f-5ecb-|
              00000120  34 36 35 37 2d 38 37 62  63 2d 64 30 39 63 64 30  |4657-87bc-d09cd0|
              00000130  37 30 61 30 37 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |70a070\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0523 07:19:45.277899 22 deployment.go:67] Pod "webserver-deployment-67c89d485c-2vr5b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-2vr5b",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "baf47578-3a2c-44dc-9f3c-f2926bae9633",
      ResourceVersion: (string) (len=5) "80419",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045581,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "03cd8906-8be9-41b2-ba44-f39742260fca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 33  63 64 38 39 30 36 2d 38  |d\":\"03cd8906-8|
              00000090  62 65 39 2d 34 31 62 32  2d 62 61 34 34 2d 66 33  |be9-41b2-ba44-f3|
              000000a0  39 37 34 32 32 36 30 66  63 61 5c 22 7d 22 3a 7b  |9742260fca\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 37 32 2e 32  |:{\"ip\":\"172.2|
              00000290  30 2e 36 39 2e 31 33 38  5c 22 7d 22 3a 7b 22 2e  |0.69.138\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6x9jd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6x9jd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-209",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.209",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.209"
        }
      },
      PodIP: (string) (len=13) "172.20.69.138",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.69.138"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045581,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.279141 22 deployment.go:67] Pod "webserver-deployment-67c89d485c-69qf6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-69qf6",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9f3889e8-c241-4a6c-8202-050910e0a438",
      ResourceVersion: (string) (len=5) "80494",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045581,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "03cd8906-8be9-41b2-ba44-f39742260fca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 33  63 64 38 39 30 36 2d 38  |d\":\"03cd8906-8|
              00000090  62 65 39 2d 34 31 62 32  2d 62 61 34 34 2d 66 33  |be9-41b2-ba44-f3|
              000000a0  39 37 34 32 32 36 30 66  63 61 5c 22 7d 22 3a 7b  |9742260fca\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 37 32 2e 32  |:{\"ip\":\"172.2|
              00000290  30 2e 32 35 34 2e 31 33  5c 22 7d 22 3a 7b 22 2e  |0.254.13\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7vn5f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7vn5f",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=13) "172.20.254.13",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.254.13"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045581,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.280620 22 deployment.go:67] Pod "webserver-deployment-67c89d485c-6mqhv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-6mqhv",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bbafa6b7-538b-4208-a6d0-a53fb6778298",
      ResourceVersion: (string) (len=5) "80388",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "03cd8906-8be9-41b2-ba44-f39742260fca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 33  63 64 38 39 30 36 2d 38  |d\":\"03cd8906-8|
              00000090  62 65 39 2d 34 31 62 32  2d 62 61 34 34 2d 66 33  |be9-41b2-ba44-f3|
              000000a0  39 37 34 32 32 36 30 66  63 61 5c 22 7d 22 3a 7b  |9742260fca\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j8hwt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j8hwt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-209",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.209",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.209"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.282022 22 deployment.go:67] Pod "webserver-deployment-67c89d485c-7drtb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-7drtb",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8228af62-8af0-4b6e-bece-63d2a2e8fe86",
      ResourceVersion: (string) (len=5) "80337",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "03cd8906-8be9-41b2-ba44-f39742260fca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 33  63 64 38 39 30 36 2d 38  |d\":\"03cd8906-8|
              00000090  62 65 39 2d 34 31 62 32  2d 62 61 34 34 2d 66 33  |be9-41b2-ba44-f3|
              000000a0  39 37 34 32 32 36 30 66  63 61 5c 22 7d 22 3a 7b  |9742260fca\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m584k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m584k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.283515 22 deployment.go:67] Pod "webserver-deployment-67c89d485c-fc799" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-fc799",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb6c42d3-58d0-4690-9172-57fd9c4e632a",
      ResourceVersion: (string) (len=5) "80514",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045581,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "03cd8906-8be9-41b2-ba44-f39742260fca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 33  63 64 38 39 30 36 2d 38  |d\":\"03cd8906-8|
              00000090  62 65 39 2d 34 31 62 32  2d 62 61 34 34 2d 66 33  |be9-41b2-ba44-f3|
              000000a0  39 37 34 32 32 36 30 66  63 61 5c 22 7d 22 3a 7b  |9742260fca\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 37 32 2e 32  |:{\"ip\":\"172.2|
              00000290  30 2e 36 34 2e 31 33 35  5c 22 7d 22 3a 7b 22 2e  |0.64.135\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xsdbs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xsdbs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.135",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.135"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045581,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.285037 22 deployment.go:67] Pod "webserver-deployment-67c89d485c-fkhct" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-fkhct",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a6c85c21-fe93-4ab5-9ac4-01774dadad83",
      ResourceVersion: (string) (len=5) "80394",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "03cd8906-8be9-41b2-ba44-f39742260fca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 33  63 64 38 39 30 36 2d 38  |d\":\"03cd8906-8|
              00000090  62 65 39 2d 34 31 62 32  2d 62 61 34 34 2d 66 33  |be9-41b2-ba44-f3|
              000000a0  39 37 34 32 32 36 30 66  63 61 5c 22 7d 22 3a 7b  |9742260fca\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qff7l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qff7l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.286494 22 deployment.go:67] Pod "webserver-deployment-67c89d485c-fppk9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-fppk9",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7a351ed7-f7d9-4651-b1ab-334dcec43ba8",
      ResourceVersion: (string) (len=5) "80396",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "03cd8906-8be9-41b2-ba44-f39742260fca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 33  63 64 38 39 30 36 2d 38  |d\":\"03cd8906-8|
              00000090  62 65 39 2d 34 31 62 32  2d 62 61 34 34 2d 66 33  |be9-41b2-ba44-f3|
              000000a0  39 37 34 32 32 36 30 66  63 61 5c 22 7d 22 3a 7b  |9742260fca\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-864cx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-864cx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.287957 22 deployment.go:67] Pod "webserver-deployment-67c89d485c-jgcmw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-jgcmw",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c921cf31-c5f8-41df-bc8c-6a5562c0c513",
      ResourceVersion: (string) (len=5) "80380",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "03cd8906-8be9-41b2-ba44-f39742260fca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 33  63 64 38 39 30 36 2d 38  |d\":\"03cd8906-8|
              00000090  62 65 39 2d 34 31 62 32  2d 62 61 34 34 2d 66 33  |be9-41b2-ba44-f3|
              000000a0  39 37 34 32 32 36 30 66  63 61 5c 22 7d 22 3a 7b  |9742260fca\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cvd98",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cvd98",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.289697 22 deployment.go:67] Pod "webserver-deployment-67c89d485c-q79xw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-q79xw",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8353a195-f250-4c3b-b06c-053941f194e7",
      ResourceVersion: (string) (len=5) "80510",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045581,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "03cd8906-8be9-41b2-ba44-f39742260fca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 33  63 64 38 39 30 36 2d 38  |d\":\"03cd8906-8|
              00000090  62 65 39 2d 34 31 62 32  2d 62 61 34 34 2d 66 33  |be9-41b2-ba44-f3|
              000000a0  39 37 34 32 32 36 30 66  63 61 5c 22 7d 22 3a 7b  |9742260fca\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 37 32 2e 32  |:{\"ip\":\"172.2|
              00000290  30 2e 36 34 2e 31 36 37  5c 22 7d 22 3a 7b 22 2e  |0.64.167\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9j9z6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9j9z6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.167",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.167"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045581,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.291072 22 deployment.go:67] Pod "webserver-deployment-67c89d485c-sv8nb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-sv8nb",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3a84e053-f11e-42de-b0a7-f1806246b48a",
      ResourceVersion: (string) (len=5) "80400",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "03cd8906-8be9-41b2-ba44-f39742260fca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 33  63 64 38 39 30 36 2d 38  |d\":\"03cd8906-8|
              00000090  62 65 39 2d 34 31 62 32  2d 62 61 34 34 2d 66 33  |be9-41b2-ba44-f3|
              000000a0  39 37 34 32 32 36 30 66  63 61 5c 22 7d 22 3a 7b  |9742260fca\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mcqwx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mcqwx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.292802 22 deployment.go:67] Pod "webserver-deployment-67c89d485c-x2b5v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-x2b5v",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ea7a7d7b-d9f8-4a97-81ce-8767ed2cd0a3",
      ResourceVersion: (string) (len=5) "80413",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "03cd8906-8be9-41b2-ba44-f39742260fca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 33  63 64 38 39 30 36 2d 38  |d\":\"03cd8906-8|
              00000090  62 65 39 2d 34 31 62 32  2d 62 61 34 34 2d 66 33  |be9-41b2-ba44-f3|
              000000a0  39 37 34 32 32 36 30 66  63 61 5c 22 7d 22 3a 7b  |9742260fca\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gnwgt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gnwgt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.294145 22 deployment.go:67] Pod "webserver-deployment-67c89d485c-xqt68" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-xqt68",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6be43988-e5b9-4df5-8445-c690165f4bc1",
      ResourceVersion: (string) (len=5) "80352",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "03cd8906-8be9-41b2-ba44-f39742260fca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 33  63 64 38 39 30 36 2d 38  |d\":\"03cd8906-8|
              00000090  62 65 39 2d 34 31 62 32  2d 62 61 34 34 2d 66 33  |be9-41b2-ba44-f3|
              000000a0  39 37 34 32 32 36 30 66  63 61 5c 22 7d 22 3a 7b  |9742260fca\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x8fbr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x8fbr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-209",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.209",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.209"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.295419 22 deployment.go:67] Pod "webserver-deployment-67c89d485c-xxrbg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-xxrbg",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c003cfbe-79c5-4e4d-9452-f844374708ee",
      ResourceVersion: (string) (len=5) "80422",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045581,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "03cd8906-8be9-41b2-ba44-f39742260fca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 33  63 64 38 39 30 36 2d 38  |d\":\"03cd8906-8|
              00000090  62 65 39 2d 34 31 62 32  2d 62 61 34 34 2d 66 33  |be9-41b2-ba44-f3|
              000000a0  39 37 34 32 32 36 30 66  63 61 5c 22 7d 22 3a 7b  |9742260fca\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 37 32 2e 32  |:{\"ip\":\"172.2|
              00000290  30 2e 36 39 2e 31 34 35  5c 22 7d 22 3a 7b 22 2e  |0.69.145\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8jbrj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8jbrj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-209",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.209",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.209"
        }
      },
      PodIP: (string) (len=13) "172.20.69.145",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.69.145"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045581,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.296734 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-26zbl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-26zbl",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d6759ec4-0e05-4200-b48e-e273ab69089c",
      ResourceVersion: (string) (len=5) "80206",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045579,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "01a268af-e2d4-4360-a816-7d9c9ef08afe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  61 32 36 38 61 66 2d 65  |d\":\"01a268af-e|
              00000090  32 64 34 2d 34 33 36 30  2d 61 38 31 36 2d 37 64  |2d4-4360-a816-7d|
              000000a0  39 63 39 65 66 30 38 61  66 65 5c 22 7d 22 3a 7b  |9c9ef08afe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 35 39 5c 22 7d 22 3a  |2.20.64.159\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-76dsl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-76dsl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.159",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.159"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045579,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852045579,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d763119429ef995ef70f5059a6c5e30a746f41ad2eae834ffafb5a946d4dc6be",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.298156 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-29ln2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-29ln2",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "25c3b6b9-fc0e-4233-a552-b00dc3820add",
      ResourceVersion: (string) (len=5) "80212",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045579,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "01a268af-e2d4-4360-a816-7d9c9ef08afe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  61 32 36 38 61 66 2d 65  |d\":\"01a268af-e|
              00000090  32 64 34 2d 34 33 36 30  2d 61 38 31 36 2d 37 64  |2d4-4360-a816-7d|
              000000a0  39 63 39 65 66 30 38 61  66 65 5c 22 7d 22 3a 7b  |9c9ef08afe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 39 2e  31 33 36 5c 22 7d 22 3a  |2.20.69.136\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7ms46",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7ms46",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-209",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.209",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.209"
        }
      },
      PodIP: (string) (len=13) "172.20.69.136",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.69.136"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045579,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852045579,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c74c197b0f60304f7cf4755431885e4f2d92abf1037c7a725839f5e4ff9b31b0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.299331 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-48pql" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-48pql",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "80194ea7-24c0-4c46-80c4-5bbbc1059ee9",
      ResourceVersion: (string) (len=5) "80542",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "01a268af-e2d4-4360-a816-7d9c9ef08afe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  61 32 36 38 61 66 2d 65  |d\":\"01a268af-e|
              00000090  32 64 34 2d 34 33 36 30  2d 61 38 31 36 2d 37 64  |2d4-4360-a816-7d|
              000000a0  39 63 39 65 66 30 38 61  66 65 5c 22 7d 22 3a 7b  |9c9ef08afe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 39 2e  31 37 39 5c 22 7d 22 3a  |2.20.69.179\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2885j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2885j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-209",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.209",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.209"
        }
      },
      PodIP: (string) (len=13) "172.20.69.179",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.69.179"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852045584,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7eb836fb2c2954743cb9a0759ad578a052892c65fb1b0a73dce3bbbac71b0a23",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.300740 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-4dsvk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-4dsvk",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "00683ce1-b20b-42fc-92cd-16e456318caa",
      ResourceVersion: (string) (len=5) "80564",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "01a268af-e2d4-4360-a816-7d9c9ef08afe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  61 32 36 38 61 66 2d 65  |d\":\"01a268af-e|
              00000090  32 64 34 2d 34 33 36 30  2d 61 38 31 36 2d 37 64  |2d4-4360-a816-7d|
              000000a0  39 63 39 65 66 30 38 61  66 65 5c 22 7d 22 3a 7b  |9c9ef08afe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 35 34  2e 31 36 5c 22 7d 22 3a  |2.20.254.16\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qb65l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qb65l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=13) "172.20.254.16",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.254.16"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852045584,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c120313e989e5a5a366184b2fc6763c8016ddb7c5436eba8962e0b9a250c8910",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.302141 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-5bcgz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-5bcgz",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3fdd2466-5366-4d87-b403-33ecd395c91d",
      ResourceVersion: (string) (len=5) "80566",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "01a268af-e2d4-4360-a816-7d9c9ef08afe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  61 32 36 38 61 66 2d 65  |d\":\"01a268af-e|
              00000090  32 64 34 2d 34 33 36 30  2d 61 38 31 36 2d 37 64  |2d4-4360-a816-7d|
              000000a0  39 63 39 65 66 30 38 61  66 65 5c 22 7d 22 3a 7b  |9c9ef08afe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 35 34  2e 33 39 5c 22 7d 22 3a  |2.20.254.39\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lpwxf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lpwxf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=13) "172.20.254.39",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.254.39"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852045584,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5ee3a2e57a6dd3b1966289e4d6110a6014c8b447c3fadd237f9ba1a4a69867a9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.304099 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-5pv25" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-5pv25",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2e6f4ee3-516f-4da1-8b10-8afea8cfb7bb",
      ResourceVersion: (string) (len=5) "80579",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "01a268af-e2d4-4360-a816-7d9c9ef08afe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  61 32 36 38 61 66 2d 65  |d\":\"01a268af-e|
              00000090  32 64 34 2d 34 33 36 30  2d 61 38 31 36 2d 37 64  |2d4-4360-a816-7d|
              000000a0  39 63 39 65 66 30 38 61  66 65 5c 22 7d 22 3a 7b  |9c9ef08afe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 36 32 5c 22 7d 22 3a  |2.20.64.162\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b8d6z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b8d6z",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.162",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.162"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852045584,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ddec84a7f168b470bf94fc618c4c835ded46764383c1296075b33dae29665687",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.305202 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-75qt2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-75qt2",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "af221d18-43c2-40f7-9012-0dedf4ed61e8",
      ResourceVersion: (string) (len=5) "80210",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045579,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "01a268af-e2d4-4360-a816-7d9c9ef08afe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  61 32 36 38 61 66 2d 65  |d\":\"01a268af-e|
              00000090  32 64 34 2d 34 33 36 30  2d 61 38 31 36 2d 37 64  |2d4-4360-a816-7d|
              000000a0  39 63 39 65 66 30 38 61  66 65 5c 22 7d 22 3a 7b  |9c9ef08afe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 39 2e  31 34 36 5c 22 7d 22 3a  |2.20.69.146\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xbm5n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xbm5n",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-209",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.209",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.209"
        }
      },
      PodIP: (string) (len=13) "172.20.69.146",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.69.146"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045579,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852045579,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://652cba5f4953b0fcbb9305a4f51ee8d62c029e6a79477d56106774b79bf75a9a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.306717 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-8whsk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-8whsk",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6f1121f4-39fb-420f-a0e5-6f9643f0fc65",
      ResourceVersion: (string) (len=5) "80586",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "01a268af-e2d4-4360-a816-7d9c9ef08afe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  61 32 36 38 61 66 2d 65  |d\":\"01a268af-e|
              00000090  32 64 34 2d 34 33 36 30  2d 61 38 31 36 2d 37 64  |2d4-4360-a816-7d|
              000000a0  39 63 39 65 66 30 38 61  66 65 5c 22 7d 22 3a 7b  |9c9ef08afe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 37 35 5c 22 7d 22 3a  |2.20.64.175\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vt29g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vt29g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.175",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.175"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852045584,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8ee0301ea21ae9ceae567dedda6fdc85613a86fb72405bc31d8916bd486fc432",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.308091 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-ckvqt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-ckvqt",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "da4c15de-0fe7-4668-8e67-bd17c78dd16c",
      ResourceVersion: (string) (len=5) "80547",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "01a268af-e2d4-4360-a816-7d9c9ef08afe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  61 32 36 38 61 66 2d 65  |d\":\"01a268af-e|
              00000090  32 64 34 2d 34 33 36 30  2d 61 38 31 36 2d 37 64  |2d4-4360-a816-7d|
              000000a0  39 63 39 65 66 30 38 61  66 65 5c 22 7d 22 3a 7b  |9c9ef08afe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 39 2e  31 37 38 5c 22 7d 22 3a  |2.20.69.178\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qxn8q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qxn8q",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-209",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.209",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.209"
        }
      },
      PodIP: (string) (len=13) "172.20.69.178",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.69.178"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852045584,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d833cefe1ab00093c593662f736553114607518277455b4b55216b544e8097c1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.309309 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-cw6cm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-cw6cm",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "02c6a5c7-8f39-4778-9b45-3581cbd31e0b",
      ResourceVersion: (string) (len=5) "80574",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "01a268af-e2d4-4360-a816-7d9c9ef08afe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  61 32 36 38 61 66 2d 65  |d\":\"01a268af-e|
              00000090  32 64 34 2d 34 33 36 30  2d 61 38 31 36 2d 37 64  |2d4-4360-a816-7d|
              000000a0  39 63 39 65 66 30 38 61  66 65 5c 22 7d 22 3a 7b  |9c9ef08afe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 35 37 5c 22 7d 22 3a  |2.20.64.157\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xvl9c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xvl9c",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.157",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.157"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852045584,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5ee786101f2260e7d3a9c34967de6a9bcdfb8c21f382e4428de258e6f1d564b0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.310523 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-g5srh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-g5srh",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5b17e538-ae42-459e-a5cb-030d3dea85ef",
      ResourceVersion: (string) (len=5) "80569",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "01a268af-e2d4-4360-a816-7d9c9ef08afe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  61 32 36 38 61 66 2d 65  |d\":\"01a268af-e|
              00000090  32 64 34 2d 34 33 36 30  2d 61 38 31 36 2d 37 64  |2d4-4360-a816-7d|
              000000a0  39 63 39 65 66 30 38 61  66 65 5c 22 7d 22 3a 7b  |9c9ef08afe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 35 34  2e 35 39 5c 22 7d 22 3a  |2.20.254.59\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b8khc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b8khc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=13) "172.20.254.59",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.254.59"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852045584,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://683b0eff8705cf14943ee91f53c1573667df7b978ca1a1f02b1e3a4c666e37d5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.311770 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-gb2jv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-gb2jv",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2fc05db8-fa3a-4f00-942d-4332ef723373",
      ResourceVersion: (string) (len=5) "80577",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "01a268af-e2d4-4360-a816-7d9c9ef08afe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  61 32 36 38 61 66 2d 65  |d\":\"01a268af-e|
              00000090  32 64 34 2d 34 33 36 30  2d 61 38 31 36 2d 37 64  |2d4-4360-a816-7d|
              000000a0  39 63 39 65 66 30 38 61  66 65 5c 22 7d 22 3a 7b  |9c9ef08afe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 33 34 5c 22 7d 22 3a  |2.20.64.134\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fd9gs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fd9gs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.134",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.134"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852045584,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://63e74b8c71416bcae69a33b3826fe1eaea598caf815b9202340a4c6b0de50571",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.312876 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-gchbv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-gchbv",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "835ef626-1290-4072-9a4c-75592f0f65ff",
      ResourceVersion: (string) (len=5) "80222",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045579,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "01a268af-e2d4-4360-a816-7d9c9ef08afe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  61 32 36 38 61 66 2d 65  |d\":\"01a268af-e|
              00000090  32 64 34 2d 34 33 36 30  2d 61 38 31 36 2d 37 64  |2d4-4360-a816-7d|
              000000a0  39 63 39 65 66 30 38 61  66 65 5c 22 7d 22 3a 7b  |9c9ef08afe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 35 34  2e 31 34 5c 22 7d 22 3a  |2.20.254.14\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9q9m8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9q9m8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=13) "172.20.254.14",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.254.14"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045579,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852045579,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d076cb418903d443d58db4571743aec7962ef89bc9621ddbe99ccda949a76bb6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.314075 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-kfqgt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-kfqgt",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3c7b5a9b-ae70-43e9-af8a-62b8cf7f9a7b",
      ResourceVersion: (string) (len=5) "80202",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045579,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "01a268af-e2d4-4360-a816-7d9c9ef08afe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  61 32 36 38 61 66 2d 65  |d\":\"01a268af-e|
              00000090  32 64 34 2d 34 33 36 30  2d 61 38 31 36 2d 37 64  |2d4-4360-a816-7d|
              000000a0  39 63 39 65 66 30 38 61  66 65 5c 22 7d 22 3a 7b  |9c9ef08afe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 37 34 5c 22 7d 22 3a  |2.20.64.174\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tsfvf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tsfvf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.174",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.174"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045579,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852045579,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f29d0e34e447dde8859093bf3b26d39d3fe125b0d391a71cdb138b4a2aba4a31",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.315299 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-kqv44" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-kqv44",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e1ba8f15-7eb1-4ce6-8944-061b48ca402c",
      ResourceVersion: (string) (len=5) "80550",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "01a268af-e2d4-4360-a816-7d9c9ef08afe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  61 32 36 38 61 66 2d 65  |d\":\"01a268af-e|
              00000090  32 64 34 2d 34 33 36 30  2d 61 38 31 36 2d 37 64  |2d4-4360-a816-7d|
              000000a0  39 63 39 65 66 30 38 61  66 65 5c 22 7d 22 3a 7b  |9c9ef08afe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 39 2e  31 38 38 5c 22 7d 22 3a  |2.20.69.188\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9bltm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9bltm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-209",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.209",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.209"
        }
      },
      PodIP: (string) (len=13) "172.20.69.188",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.69.188"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852045584,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://49d0a722e1f0efa4eacb75b4669ec0ec50ebce047b604da7dc6be705b560ed96",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.316548 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-pp2d8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-pp2d8",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d1710285-d0a7-4d6d-956e-814a0f2a77a3",
      ResourceVersion: (string) (len=5) "80224",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045579,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "01a268af-e2d4-4360-a816-7d9c9ef08afe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  61 32 36 38 61 66 2d 65  |d\":\"01a268af-e|
              00000090  32 64 34 2d 34 33 36 30  2d 61 38 31 36 2d 37 64  |2d4-4360-a816-7d|
              000000a0  39 63 39 65 66 30 38 61  66 65 5c 22 7d 22 3a 7b  |9c9ef08afe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 35 34  2e 32 32 5c 22 7d 22 3a  |2.20.254.22\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d49gn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d49gn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=13) "172.20.254.22",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.254.22"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045579,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852045579,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cbe4aa2ea8215272f60f285305748d20ebf7ce1fc0c242f2f135b3fa4ff92730",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.317780 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-pqh54" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-pqh54",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "11f70a79-b267-431d-a0c8-5e63a6da98c8",
      ResourceVersion: (string) (len=5) "80545",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "01a268af-e2d4-4360-a816-7d9c9ef08afe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  61 32 36 38 61 66 2d 65  |d\":\"01a268af-e|
              00000090  32 64 34 2d 34 33 36 30  2d 61 38 31 36 2d 37 64  |2d4-4360-a816-7d|
              000000a0  39 63 39 65 66 30 38 61  66 65 5c 22 7d 22 3a 7b  |9c9ef08afe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 39 2e  31 37 34 5c 22 7d 22 3a  |2.20.69.174\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k6nzh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k6nzh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-209",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.209",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.209"
        }
      },
      PodIP: (string) (len=13) "172.20.69.174",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.69.174"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852045583,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1fce78224bae7de3e2b449f89863daaa07d6545330321f12a4e741fbee8adcf1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.319007 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-wmmhq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-wmmhq",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2e9f2b26-2344-455c-9d6f-b4ff7637948a",
      ResourceVersion: (string) (len=5) "80216",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045579,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "01a268af-e2d4-4360-a816-7d9c9ef08afe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  61 32 36 38 61 66 2d 65  |d\":\"01a268af-e|
              00000090  32 64 34 2d 34 33 36 30  2d 61 38 31 36 2d 37 64  |2d4-4360-a816-7d|
              000000a0  39 63 39 65 66 30 38 61  66 65 5c 22 7d 22 3a 7b  |9c9ef08afe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 39 2e  31 35 38 5c 22 7d 22 3a  |2.20.69.158\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-trzr7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-trzr7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-209",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045580,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.209",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.209"
        }
      },
      PodIP: (string) (len=13) "172.20.69.158",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.69.158"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045579,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852045579,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9f3d137996a873e6d0b1cc0db0f6a5b097faa74b581c7d1706055759e51d9861",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.320287 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-zhhjw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-zhhjw",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2db0c512-71da-4a80-9a65-84551b013a33",
      ResourceVersion: (string) (len=5) "80192",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045579,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "01a268af-e2d4-4360-a816-7d9c9ef08afe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  61 32 36 38 61 66 2d 65  |d\":\"01a268af-e|
              00000090  32 64 34 2d 34 33 36 30  2d 61 38 31 36 2d 37 64  |2d4-4360-a816-7d|
              000000a0  39 63 39 65 66 30 38 61  66 65 5c 22 7d 22 3a 7b  |9c9ef08afe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 35 34  2e 35 30 5c 22 7d 22 3a  |2.20.254.50\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zm9p4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zm9p4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=13) "172.20.254.50",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.254.50"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045579,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852045579,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://66306b972bb94cc215945f7469438e165f68d6fcc28fe8dcdc68043980fa7bf4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.321546 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-zmq4s" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-zmq4s",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f9a4b72-6d08-4350-8748-fef265ce4d55",
      ResourceVersion: (string) (len=5) "80582",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "01a268af-e2d4-4360-a816-7d9c9ef08afe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  61 32 36 38 61 66 2d 65  |d\":\"01a268af-e|
              00000090  32 64 34 2d 34 33 36 30  2d 61 38 31 36 2d 37 64  |2d4-4360-a816-7d|
              000000a0  39 63 39 65 66 30 38 61  66 65 5c 22 7d 22 3a 7b  |9c9ef08afe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 36 33 5c 22 7d 22 3a  |2.20.64.163\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7pp4p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7pp4p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045585,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852045583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.163",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.163"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852045583,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852045584,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8dedd5bd82ee92185b5a4740aee7a02dbba24e42d11227f761e2846a60016145",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:19:45.322621 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5978" for this suite. @ 05/23/24 07:19:45.324
• [6.103 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3345
  STEP: Creating a kubernetes client @ 05/23/24 07:19:45.327
  I0523 07:19:45.327625 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename services @ 05/23/24 07:19:45.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:19:45.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:19:45.336
  STEP: creating a Service @ 05/23/24 07:19:45.344
  STEP: watching for the Service to be added @ 05/23/24 07:19:45.35
  I0523 07:19:45.351048 22 service.go:3397] Found Service test-service-xc496 in namespace services-811 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31560}]
  I0523 07:19:45.351064 22 service.go:3404] Service test-service-xc496 created
  STEP: Getting /status @ 05/23/24 07:19:45.351
  I0523 07:19:45.352418 22 service.go:3415] Service test-service-xc496 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 05/23/24 07:19:45.352
  STEP: watching for the Service to be patched @ 05/23/24 07:19:45.355
  I0523 07:19:45.356212 22 service.go:3438] observed Service test-service-xc496 in namespace services-811 with annotations: map[] & LoadBalancer: {[]}
  I0523 07:19:45.356235 22 service.go:3441] Found Service test-service-xc496 in namespace services-811 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc0051d12d0 []}]}
  I0523 07:19:45.356245 22 service.go:3448] Service test-service-xc496 has service status patched
  STEP: updating the ServiceStatus @ 05/23/24 07:19:45.356
  I0523 07:19:45.359904 22 service.go:3468] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 05/23/24 07:19:45.359
  I0523 07:19:45.360644 22 service.go:3479] Observed Service test-service-xc496 in namespace services-811 with annotations: map[] & Conditions: {[]}
  I0523 07:19:45.360745 22 service.go:3494] Observed event: &Service{ObjectMeta:{test-service-xc496  services-811  dea79c10-62d0-48d5-b674-fc9465061956 80602 0 2024-05-23 07:19:45 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-05-23 07:19:45 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-05-23 07:19:45 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:31560,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.68.85.162,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.68.85.162],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,TrafficDistribution:nil,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:*VIP,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  I0523 07:19:45.360772 22 service.go:3486] Found Service test-service-xc496 in namespace services-811 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0523 07:19:45.360789 22 service.go:3498] Service test-service-xc496 has service status updated
  STEP: patching the service @ 05/23/24 07:19:45.36
  STEP: watching for the Service to be patched @ 05/23/24 07:19:45.364
  I0523 07:19:45.365100 22 service.go:3521] observed Service test-service-xc496 in namespace services-811 with labels: map[test-service-static:true]
  I0523 07:19:45.365123 22 service.go:3521] observed Service test-service-xc496 in namespace services-811 with labels: map[test-service-static:true]
  I0523 07:19:45.365187 22 service.go:3521] observed Service test-service-xc496 in namespace services-811 with labels: map[test-service-static:true]
  I0523 07:19:45.365211 22 service.go:3524] Found Service test-service-xc496 in namespace services-811 with labels: map[test-service:patched test-service-static:true]
  I0523 07:19:45.365226 22 service.go:3531] Service test-service-xc496 patched
  STEP: deleting the service @ 05/23/24 07:19:45.365
  STEP: watching for the Service to be deleted @ 05/23/24 07:19:45.372
  I0523 07:19:45.373309 22 service.go:3555] Observed event: ADDED
  I0523 07:19:45.373438 22 service.go:3555] Observed event: MODIFIED
  I0523 07:19:45.373453 22 service.go:3555] Observed event: MODIFIED
  I0523 07:19:45.373464 22 service.go:3555] Observed event: MODIFIED
  I0523 07:19:45.373509 22 service.go:3551] Found Service test-service-xc496 in namespace services-811 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0523 07:19:45.373526 22 service.go:3560] Service test-service-xc496 deleted
  I0523 07:19:45.373605 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-811" for this suite. @ 05/23/24 07:19:45.375
• [0.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 05/23/24 07:19:45.378
  I0523 07:19:45.378041 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename pods @ 05/23/24 07:19:45.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:19:45.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:19:45.388
  STEP: creating a Pod with a static label @ 05/23/24 07:19:45.392
  STEP: watching for Pod to be ready @ 05/23/24 07:19:45.397
  I0523 07:19:45.398096 22 pods.go:945] observed Pod pod-test in namespace pods-2560 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0523 07:19:45.399417 22 pods.go:945] observed Pod pod-test in namespace pods-2560 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-23 07:19:45 +0000 UTC  }]
  I0523 07:19:45.404848 22 pods.go:945] observed Pod pod-test in namespace pods-2560 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-05-23 07:19:45 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-23 07:19:45 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-23 07:19:45 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-23 07:19:45 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-23 07:19:45 +0000 UTC  }]
  E0523 07:19:45.816045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:19:46.106724 22 pods.go:948] Found Pod pod-test in namespace pods-2560 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-23 07:19:46 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-23 07:19:45 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-05-23 07:19:46 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-05-23 07:19:46 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-23 07:19:45 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 05/23/24 07:19:46.111
  STEP: getting the Pod and ensuring that it's patched @ 05/23/24 07:19:46.116
  STEP: replacing the Pod's status Ready condition to False @ 05/23/24 07:19:46.117
  STEP: check the Pod again to ensure its Ready conditions are False @ 05/23/24 07:19:46.124
  STEP: deleting the Pod via a Collection with a LabelSelector @ 05/23/24 07:19:46.124
  STEP: watching for the Pod to be deleted @ 05/23/24 07:19:46.127
  I0523 07:19:46.128370 22 pods.go:1058] observed event type MODIFIED
  E0523 07:19:46.816828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:47.817255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:19:48.100708 22 pods.go:1058] observed event type MODIFIED
  I0523 07:19:48.222811 22 pods.go:1058] observed event type MODIFIED
  E0523 07:19:48.818306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:19:49.102058 22 pods.go:1058] observed event type MODIFIED
  I0523 07:19:49.105515 22 pods.go:1058] observed event type MODIFIED
  I0523 07:19:49.107555 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2560" for this suite. @ 05/23/24 07:19:49.109
• [3.737 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 05/23/24 07:19:49.115
  I0523 07:19:49.115169 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 07:19:49.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:19:49.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:19:49.122
  STEP: Creating configMap with name projected-configmap-test-volume-map-e98e874f-cc32-4189-af20-dad4481e2135 @ 05/23/24 07:19:49.123
  STEP: Creating a pod to test consume configMaps @ 05/23/24 07:19:49.125
  E0523 07:19:49.818522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:50.819530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:51.819763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:52.819847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:19:53.137
  I0523 07:19:53.138292 22 output.go:196] Trying to get logs from node k8s-10-255-0-209 pod pod-projected-configmaps-c31b3ca3-c77c-4bf1-998b-c5f431e1e8bb container agnhost-container: <nil>
  STEP: delete the pod @ 05/23/24 07:19:53.144
  I0523 07:19:53.150229 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3560" for this suite. @ 05/23/24 07:19:53.151
• [4.038 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 05/23/24 07:19:53.153
  I0523 07:19:53.153622 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename sched-preemption @ 05/23/24 07:19:53.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:19:53.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:19:53.163
  I0523 07:19:53.169122 22 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0523 07:19:53.820605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:54.820720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:55.821026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:56.821681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:57.821761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:58.822300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:19:59.822993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:00.823719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:01.823750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:02.824816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:03.825755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:04.825790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:05.826444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:06.826581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:07.827172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:08.827255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:09.827528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:10.828488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:11.828550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:12.828869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:13.829267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:14.829306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:15.830231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:16.830427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:17.831025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:18.831161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:19.831900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:20.832809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:21.833345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:22.833466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:23.833937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:24.834184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:25.835095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:26.835130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:27.835217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:28.835309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:29.836007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:30.836809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:31.836907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:32.836998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:33.837076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:34.838085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:35.838176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:36.838303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:37.839058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:38.839188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:39.839882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:40.840867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:41.841358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:42.841473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:43.841602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:44.842043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:45.842235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:46.842375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:47.843233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:48.843357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:49.843751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:50.844814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:51.845322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:52.845692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:20:53.171955 22 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/23/24 07:20:53.173
  I0523 07:20:53.173178 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/23/24 07:20:53.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:20:53.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:20:53.185
  STEP: Finding an available node @ 05/23/24 07:20:53.187
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/23/24 07:20:53.187
  E0523 07:20:53.845876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:54.846225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/23/24 07:20:55.195
  I0523 07:20:55.200635 22 preemption.go:583] found a healthy node: k8s-10-255-0-208
  E0523 07:20:55.847100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:56.847168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:57.847738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:58.847770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:20:59.848532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:00.848617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:21:01.228914 22 preemption.go:706] pods created so far: [1 1 1]
  I0523 07:21:01.228937 22 preemption.go:707] length of pods created so far: 3
  E0523 07:21:01.848894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:02.849061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:21:03.234260 22 preemption.go:724] pods created so far: [2 2 1]
  E0523 07:21:03.849894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:04.850193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:05.850253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:06.851239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:07.851364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:08.851588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:09.851748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:21:10.261635 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9066" for this suite. @ 05/23/24 07:21:10.262
  I0523 07:21:10.264916 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2748" for this suite. @ 05/23/24 07:21:10.266
• [77.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 05/23/24 07:21:10.269
  I0523 07:21:10.269367 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename resourcequota @ 05/23/24 07:21:10.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:21:10.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:21:10.276
  STEP: Counting existing ResourceQuota @ 05/23/24 07:21:10.278
  E0523 07:21:10.852138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:11.852828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:12.853886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:13.854564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:14.855617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/23/24 07:21:15.28
  STEP: Ensuring resource quota status is calculated @ 05/23/24 07:21:15.283
  E0523 07:21:15.856043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:16.856821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:21:17.286137 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7836" for this suite. @ 05/23/24 07:21:17.287
• [7.021 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 05/23/24 07:21:17.29
  I0523 07:21:17.290272 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename watch @ 05/23/24 07:21:17.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:21:17.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:21:17.298
  STEP: creating a watch on configmaps with label A @ 05/23/24 07:21:17.299
  STEP: creating a watch on configmaps with label B @ 05/23/24 07:21:17.3
  STEP: creating a watch on configmaps with label A or B @ 05/23/24 07:21:17.3
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 05/23/24 07:21:17.301
  I0523 07:21:17.302930 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7870  08d3479c-b63c-44f7-9a88-cd98d329620c 81396 0 2024-05-23 07:21:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-23 07:21:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0523 07:21:17.303014 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7870  08d3479c-b63c-44f7-9a88-cd98d329620c 81396 0 2024-05-23 07:21:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-23 07:21:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 05/23/24 07:21:17.303
  I0523 07:21:17.306395 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7870  08d3479c-b63c-44f7-9a88-cd98d329620c 81397 0 2024-05-23 07:21:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-23 07:21:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0523 07:21:17.306473 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7870  08d3479c-b63c-44f7-9a88-cd98d329620c 81397 0 2024-05-23 07:21:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-23 07:21:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 05/23/24 07:21:17.306
  I0523 07:21:17.309113 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7870  08d3479c-b63c-44f7-9a88-cd98d329620c 81398 0 2024-05-23 07:21:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-23 07:21:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0523 07:21:17.309190 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7870  08d3479c-b63c-44f7-9a88-cd98d329620c 81398 0 2024-05-23 07:21:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-23 07:21:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 05/23/24 07:21:17.309
  I0523 07:21:17.311104 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7870  08d3479c-b63c-44f7-9a88-cd98d329620c 81399 0 2024-05-23 07:21:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-23 07:21:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0523 07:21:17.311130 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7870  08d3479c-b63c-44f7-9a88-cd98d329620c 81399 0 2024-05-23 07:21:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-23 07:21:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 05/23/24 07:21:17.311
  I0523 07:21:17.312775 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7870  d47f9d2a-f8fc-4fa2-bfc5-3165f5efa23c 81400 0 2024-05-23 07:21:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-23 07:21:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0523 07:21:17.312829 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7870  d47f9d2a-f8fc-4fa2-bfc5-3165f5efa23c 81400 0 2024-05-23 07:21:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-23 07:21:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0523 07:21:17.856900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:18.857573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:19.858519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:20.858605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:21.858737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:22.859226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:23.859348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:24.859708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:25.859756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:26.860800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 05/23/24 07:21:27.313
  I0523 07:21:27.316185 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7870  d47f9d2a-f8fc-4fa2-bfc5-3165f5efa23c 81426 0 2024-05-23 07:21:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-23 07:21:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0523 07:21:27.316220 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7870  d47f9d2a-f8fc-4fa2-bfc5-3165f5efa23c 81426 0 2024-05-23 07:21:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-23 07:21:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0523 07:21:27.861827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:28.862826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:29.862899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:30.863026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:31.863817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:32.864804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:33.865083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:34.865390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:35.865475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:36.866194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:21:37.316775 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7870" for this suite. @ 05/23/24 07:21:37.318
• [20.031 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 05/23/24 07:21:37.321
  I0523 07:21:37.321259 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename apf @ 05/23/24 07:21:37.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:21:37.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:21:37.329
  STEP: getting /apis @ 05/23/24 07:21:37.331
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/23/24 07:21:37.333
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/23/24 07:21:37.333
  STEP: creating @ 05/23/24 07:21:37.333
  STEP: getting @ 05/23/24 07:21:37.339
  STEP: listing @ 05/23/24 07:21:37.34
  STEP: watching @ 05/23/24 07:21:37.341
  I0523 07:21:37.341873 22 flowcontrol.go:620] starting watch
  STEP: patching @ 05/23/24 07:21:37.342
  STEP: updating @ 05/23/24 07:21:37.344
  I0523 07:21:37.346941 22 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 05/23/24 07:21:37.347
  STEP: patching /status @ 05/23/24 07:21:37.348
  STEP: updating /status @ 05/23/24 07:21:37.349
  STEP: deleting @ 05/23/24 07:21:37.353
  STEP: deleting a collection @ 05/23/24 07:21:37.357
  I0523 07:21:37.362870 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-1314" for this suite. @ 05/23/24 07:21:37.364
• [0.045 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 05/23/24 07:21:37.366
  I0523 07:21:37.366267 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename downward-api @ 05/23/24 07:21:37.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:21:37.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:21:37.374
  STEP: Creating a pod to test downward API volume plugin @ 05/23/24 07:21:37.375
  E0523 07:21:37.866489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:38.866709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:39.867469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:40.867620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:21:41.385
  I0523 07:21:41.386274 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-e03e6e52-d35f-445e-982d-24f4e6ea0dcf container client-container: <nil>
  STEP: delete the pod @ 05/23/24 07:21:41.398
  I0523 07:21:41.404036 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6015" for this suite. @ 05/23/24 07:21:41.405
• [4.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 05/23/24 07:21:41.408
  I0523 07:21:41.408453 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename emptydir @ 05/23/24 07:21:41.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:21:41.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:21:41.417
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/23/24 07:21:41.418
  E0523 07:21:41.867724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:42.867748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:43.868470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:44.869493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:21:45.426
  I0523 07:21:45.427813 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-8e15028c-c719-4e26-b7b9-db8d296b0115 container test-container: <nil>
  STEP: delete the pod @ 05/23/24 07:21:45.43
  I0523 07:21:45.436142 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1065" for this suite. @ 05/23/24 07:21:45.437
• [4.031 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 05/23/24 07:21:45.439
  I0523 07:21:45.439836 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename configmap @ 05/23/24 07:21:45.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:21:45.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:21:45.447
  STEP: Creating configMap with name configmap-test-volume-b16496ce-6912-4989-bf4c-a6ec35c7f1f1 @ 05/23/24 07:21:45.449
  STEP: Creating a pod to test consume configMaps @ 05/23/24 07:21:45.451
  E0523 07:21:45.869867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:46.869873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:21:47.456
  I0523 07:21:47.458045 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-configmaps-748391ea-a3f3-4c21-9ec7-61ba574aac4c container agnhost-container: <nil>
  STEP: delete the pod @ 05/23/24 07:21:47.46
  I0523 07:21:47.465176 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8436" for this suite. @ 05/23/24 07:21:47.466
• [2.029 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 05/23/24 07:21:47.468
  I0523 07:21:47.468709 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename downward-api @ 05/23/24 07:21:47.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:21:47.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:21:47.477
  STEP: Creating a pod to test downward API volume plugin @ 05/23/24 07:21:47.478
  E0523 07:21:47.870644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:48.870712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:21:49.485
  I0523 07:21:49.486516 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-96dc7c7b-0e7e-46a8-9d76-9038c3c43736 container client-container: <nil>
  STEP: delete the pod @ 05/23/24 07:21:49.488
  I0523 07:21:49.494571 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-100" for this suite. @ 05/23/24 07:21:49.496
• [2.029 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 05/23/24 07:21:49.498
  I0523 07:21:49.498145 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename emptydir @ 05/23/24 07:21:49.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:21:49.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:21:49.506
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/23/24 07:21:49.508
  E0523 07:21:49.871547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:50.871663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:21:51.515
  I0523 07:21:51.516990 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-0fc8f076-548e-431a-9196-fe2722b628cc container test-container: <nil>
  STEP: delete the pod @ 05/23/24 07:21:51.519
  I0523 07:21:51.525100 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5074" for this suite. @ 05/23/24 07:21:51.526
• [2.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 05/23/24 07:21:51.53
  I0523 07:21:51.530777 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/23/24 07:21:51.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:21:51.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:21:51.538
  STEP: Creating 50 configmaps @ 05/23/24 07:21:51.541
  STEP: Creating RC which spawns configmap-volume pods @ 05/23/24 07:21:51.784
  E0523 07:21:51.872575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:21:51.893985 22 resource.go:87] Pod name wrapped-volume-race-ceb92f7d-2b37-4660-9a02-10fd4f8f67d4: Found 4 pods out of 5
  E0523 07:21:52.873604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:53.873732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:54.874033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:55.874177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:56.874304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:21:56.897598 22 resource.go:87] Pod name wrapped-volume-race-ceb92f7d-2b37-4660-9a02-10fd4f8f67d4: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/23/24 07:21:56.897
  STEP: Creating RC which spawns configmap-volume pods @ 05/23/24 07:21:56.905
  I0523 07:21:56.919048 22 resource.go:87] Pod name wrapped-volume-race-7ecb3c3c-7a99-48ff-9215-7c2a89c2e2f1: Found 0 pods out of 5
  E0523 07:21:57.875080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:58.875213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:21:59.876114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:00.876829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:01.876992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:22:01.922648 22 resource.go:87] Pod name wrapped-volume-race-7ecb3c3c-7a99-48ff-9215-7c2a89c2e2f1: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/23/24 07:22:01.922
  STEP: Creating RC which spawns configmap-volume pods @ 05/23/24 07:22:01.93
  I0523 07:22:01.938378 22 resource.go:87] Pod name wrapped-volume-race-b7aa2063-b934-4348-a180-1bc91582941f: Found 0 pods out of 5
  E0523 07:22:02.877103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:03.877367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:04.877702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:05.877833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:06.877940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:22:06.943605 22 resource.go:87] Pod name wrapped-volume-race-b7aa2063-b934-4348-a180-1bc91582941f: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/23/24 07:22:06.943
  STEP: deleting ReplicationController wrapped-volume-race-b7aa2063-b934-4348-a180-1bc91582941f in namespace emptydir-wrapper-9314, will wait for the garbage collector to delete the pods @ 05/23/24 07:22:06.95
  I0523 07:22:07.005344 22 resources.go:139] Deleting ReplicationController wrapped-volume-race-b7aa2063-b934-4348-a180-1bc91582941f took: 2.738813ms
  I0523 07:22:07.105688 22 resources.go:163] Terminating ReplicationController wrapped-volume-race-b7aa2063-b934-4348-a180-1bc91582941f pods took: 100.33206ms
  E0523 07:22:07.878831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-7ecb3c3c-7a99-48ff-9215-7c2a89c2e2f1 in namespace emptydir-wrapper-9314, will wait for the garbage collector to delete the pods @ 05/23/24 07:22:08.006
  I0523 07:22:08.061494 22 resources.go:139] Deleting ReplicationController wrapped-volume-race-7ecb3c3c-7a99-48ff-9215-7c2a89c2e2f1 took: 2.723804ms
  I0523 07:22:08.161958 22 resources.go:163] Terminating ReplicationController wrapped-volume-race-7ecb3c3c-7a99-48ff-9215-7c2a89c2e2f1 pods took: 100.460525ms
  E0523 07:22:08.879402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-ceb92f7d-2b37-4660-9a02-10fd4f8f67d4 in namespace emptydir-wrapper-9314, will wait for the garbage collector to delete the pods @ 05/23/24 07:22:09.562
  I0523 07:22:09.617191 22 resources.go:139] Deleting ReplicationController wrapped-volume-race-ceb92f7d-2b37-4660-9a02-10fd4f8f67d4 took: 2.600687ms
  I0523 07:22:09.717850 22 resources.go:163] Terminating ReplicationController wrapped-volume-race-ceb92f7d-2b37-4660-9a02-10fd4f8f67d4 pods took: 100.655338ms
  E0523 07:22:09.880233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 05/23/24 07:22:10.419
  I0523 07:22:10.511014 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-9314" for this suite. @ 05/23/24 07:22:10.512
• [18.992 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 05/23/24 07:22:10.522
  I0523 07:22:10.522879 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename pods @ 05/23/24 07:22:10.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:22:10.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:22:10.53
  STEP: creating the pod @ 05/23/24 07:22:10.532
  STEP: setting up watch @ 05/23/24 07:22:10.532
  STEP: submitting the pod to kubernetes @ 05/23/24 07:22:10.642
  STEP: verifying the pod is in kubernetes @ 05/23/24 07:22:10.646
  STEP: verifying pod creation was observed @ 05/23/24 07:22:10.647
  E0523 07:22:10.880657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:11.881532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 05/23/24 07:22:12.653
  STEP: verifying pod deletion was observed @ 05/23/24 07:22:12.655
  E0523 07:22:12.882326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:22:13.394969 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2810" for this suite. @ 05/23/24 07:22:13.396
• [2.876 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 05/23/24 07:22:13.398
  I0523 07:22:13.398778 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename container-probe @ 05/23/24 07:22:13.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:22:13.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:22:13.407
  STEP: Creating pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069 @ 05/23/24 07:22:13.408
  E0523 07:22:13.882952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:14.883123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/23/24 07:22:15.415
  I0523 07:22:15.416845 22 container_probe.go:1749] Initial restart count of pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 is 0
  I0523 07:22:15.417863 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:22:15.883382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:16.883506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:22:17.419950 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:22:17.884466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:18.885187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:22:19.422728 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:22:19.886214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:20.886359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:22:21.424933 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:22:21.886400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:22.886475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:22:23.426908 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:22:23.887486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:24.887731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:22:25.428972 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:22:25.888451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:26.888540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:22:27.430971 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:22:27.889472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:28.889604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:22:29.433252 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:22:29.889736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:30.889819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:22:31.435427 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:22:31.889880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:32.889937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:22:33.437368 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:22:33.890975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:34.891167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:22:35.439697 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:22:35.891184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:36.891276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:22:37.442470 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:22:37.891983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:38.892830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:22:39.445230 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:22:39.893717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:40.893791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:22:41.447508 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:22:41.894010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:42.894139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:22:43.449680 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:22:43.895066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:44.895082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:22:45.452600 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:22:45.896087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:46.896811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:22:47.455368 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:22:47.897456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:48.897542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:22:49.458100 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:22:49.898288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:50.898349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:22:51.461083 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:22:51.898510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:52.898633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:22:53.463216 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:22:53.898812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:54.899034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:22:55.465467 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:22:55.899954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:56.900807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:22:57.468306 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:22:57.901765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:22:58.901891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:22:59.470446 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:22:59.902893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:00.902977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:01.472610 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:01.902999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:02.903971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:03.475498 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:03.904949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:04.905118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:05.477504 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:05.906119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:06.907077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:07.479545 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:07.907970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:08.908805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:09.482138 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:09.909625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:10.909759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:11.484515 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:11.909990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:12.910470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:13.486654 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:13.910964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:14.912005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:15.489476 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:15.912810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:16.913537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:17.491733 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:17.914234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:18.914356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:19.493828 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:19.915270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:20.915350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:21.501922 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:21.916329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:22.916408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:23.503805 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:23.917323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:24.918087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:25.506541 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:25.919042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:26.919149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:27.509245 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:27.919713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:28.919750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:29.511201 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:29.920714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:30.920754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:31.513591 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:31.920968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:32.921261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:33.515719 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:33.922048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:34.922219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:35.518409 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:35.922836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:36.922970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:37.520452 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:37.923850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:38.924812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:39.522310 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:39.925755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:40.925910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:41.524448 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:41.926881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:42.927052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:43.526570 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:43.927941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:44.928117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:45.528605 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:45.928839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:46.929128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:47.530601 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:47.930094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:48.931056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:49.532507 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:49.931932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:50.932806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:51.535443 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:51.933684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:52.934358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:53.537566 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:53.934963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:54.935133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:55.539603 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:55.935729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:56.935753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:57.542141 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:57.936670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:23:58.936790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:23:59.544463 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:23:59.937681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:00.938648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:01.547428 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:01.938673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:02.938693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:03.550257 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:03.939723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:04.939748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:05.552174 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:05.940597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:06.940802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:07.554365 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:07.941715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:08.942017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:09.556649 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:09.943094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:10.943164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:11.558932 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:11.943340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:12.943467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:13.561546 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:13.943960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:14.944880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:15.563369 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:15.945656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:16.945745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:17.565382 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:17.945809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:18.945930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:19.567366 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:19.946749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:20.947337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:21.569514 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:21.947610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:22.947723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:23.572363 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:23.948763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:24.948840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:25.574164 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:25.949541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:26.949900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:27.576073 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:27.950479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:28.951086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:29.578614 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:29.952085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:30.952806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:31.581569 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:31.952845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:32.952973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:33.583513 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:33.953970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:34.954777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:35.586357 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:35.955746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:36.955828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:37.588437 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:37.956797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:38.956886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:39.590495 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:39.957775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:40.958308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:41.593101 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:41.958418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:42.958469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:43.595428 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:43.958762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:44.958980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:45.597487 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:45.959625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:46.959744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:47.600366 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:47.960756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:48.961196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:49.603040 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:49.961375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:50.961501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:51.605846 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:51.962254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:52.962339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:53.607937 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:53.962360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:54.962451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:55.610558 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:55.962948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:56.963076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:57.612442 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:57.963635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:24:58.963754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:24:59.614401 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:24:59.964770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:00.964896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:01.616554 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:01.965916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:02.966012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:03.618501 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:03.966972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:04.967137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:05.620462 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:05.967731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:06.967751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:07.622263 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:07.968619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:08.968817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:09.624384 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:09.969770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:10.969856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:11.626519 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:11.969892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:12.970097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:13.628574 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:13.970991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:14.971157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:15.630450 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:15.971795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:16.972810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:17.632396 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:17.973746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:18.973868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:19.634144 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:19.974505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:20.974629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:21.636294 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:21.975667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:22.975747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:23.638865 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:23.976402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:24.976631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:25.640837 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:25.977211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:26.977336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:27.642636 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:27.978026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:28.978625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:29.645392 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:29.978744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:30.978872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:31.647604 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:31.978921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:32.979040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:33.649504 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:33.979954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:34.980815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:35.651389 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:35.981669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:36.981802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:37.653314 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:37.982667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:38.982803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:39.656200 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:39.983580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:40.983686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:41.658434 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:41.983727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:42.983747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:43.660357 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:43.984583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:44.985353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:45.663055 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:45.985370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:46.986035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:47.665433 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:47.986760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:48.987740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:49.667244 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:49.988569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:50.988655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:51.670260 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:51.989618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:52.990508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:53.673118 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:53.991545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:54.991775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:55.675189 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:55.992539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:56.992611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:57.677969 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:57.993026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:25:58.993353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:25:59.679959 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:25:59.994289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:00.994383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:26:01.682140 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:26:01.994414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:02.994541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:26:03.684072 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:26:03.995515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:04.995695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:26:05.686456 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:26:05.995762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:06.996805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:26:07.689106 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:26:07.997443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:08.997709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:26:09.691403 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:26:09.998760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:10.998885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:26:11.693653 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:26:11.999009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:12.999094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:26:13.695614 22 container_probe.go:1759] Get pod test-grpc-c6264815-17d0-4f2e-a67f-71faac4c80f9 in namespace container-probe-6069
  E0523 07:26:14.000027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:15.000794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/23/24 07:26:15.696
  I0523 07:26:15.704931 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6069" for this suite. @ 05/23/24 07:26:15.706
• [242.310 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 05/23/24 07:26:15.708
  I0523 07:26:15.708796 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 07:26:15.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:26:15.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:26:15.715
  STEP: Creating configMap with name cm-test-opt-del-199b8e58-6c5e-4779-bf4c-ca2f3caf4be5 @ 05/23/24 07:26:15.721
  STEP: Creating configMap with name cm-test-opt-upd-d82a5047-63a8-41c6-b2bd-6ddeb162b8b8 @ 05/23/24 07:26:15.723
  STEP: Creating the pod @ 05/23/24 07:26:15.725
  E0523 07:26:16.000904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:17.001878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-199b8e58-6c5e-4779-bf4c-ca2f3caf4be5 @ 05/23/24 07:26:17.753
  STEP: Updating configmap cm-test-opt-upd-d82a5047-63a8-41c6-b2bd-6ddeb162b8b8 @ 05/23/24 07:26:17.755
  STEP: Creating configMap with name cm-test-opt-create-fbeb02d1-4307-44fc-ae78-5b01e27c1e7a @ 05/23/24 07:26:17.757
  STEP: waiting to observe update in volume @ 05/23/24 07:26:17.759
  E0523 07:26:18.002526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:19.002634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:20.002680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:21.003306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:22.003488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:23.003623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:24.003950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:25.004840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:26.005058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:27.005195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:28.005266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:29.005520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:30.005731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:31.005827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:32.006137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:33.006220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:34.007224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:35.007346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:36.008127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:37.008801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:38.009143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:39.009448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:40.010204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:41.011181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:42.011745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:43.011754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:44.012236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:45.012808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:46.013081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:47.013209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:48.014166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:49.014510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:50.014792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:51.014954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:52.015386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:53.016442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:54.017390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:55.017650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:56.018541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:57.019276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:58.019384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:26:59.019470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:00.019765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:01.019839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:02.019878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:03.020819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:04.021023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:05.021841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:06.022649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:07.022828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:08.023857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:09.024826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:10.025299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:11.026223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:12.026314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:13.026447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:14.026781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:15.027001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:16.027099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:17.027200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:18.027663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:19.027763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:20.028417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:21.028507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:22.029174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:23.029260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:24.029912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:25.030129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:26.030320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:27.030462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:28.030885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:29.031014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:27:29.966755 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9597" for this suite. @ 05/23/24 07:27:29.968
• [74.263 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:601
  STEP: Creating a kubernetes client @ 05/23/24 07:27:29.971
  I0523 07:27:29.971763 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename job @ 05/23/24 07:27:29.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:27:29.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:27:29.979
  STEP: Creating a job @ 05/23/24 07:27:29.981
  STEP: Ensuring job reaches completions @ 05/23/24 07:27:29.984
  E0523 07:27:30.031302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:31.031408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:32.031728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:33.031835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:34.031883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:35.032084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:36.032800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:37.032945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:38.033830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:39.034365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:27:39.985828 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4270" for this suite. @ 05/23/24 07:27:39.987
• [10.018 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 05/23/24 07:27:39.989
  I0523 07:27:39.989510 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename discovery @ 05/23/24 07:27:39.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:27:39.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:27:39.998
  STEP: Setting up server cert @ 05/23/24 07:27:40
  E0523 07:27:40.034762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Requesting APIResourceList from "/api/v1" @ 05/23/24 07:27:40.226
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 05/23/24 07:27:40.227
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 05/23/24 07:27:40.228
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 05/23/24 07:27:40.229
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 05/23/24 07:27:40.229
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 05/23/24 07:27:40.229
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 05/23/24 07:27:40.23
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 05/23/24 07:27:40.23
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 05/23/24 07:27:40.231
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 05/23/24 07:27:40.231
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 05/23/24 07:27:40.232
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 05/23/24 07:27:40.232
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 05/23/24 07:27:40.233
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 05/23/24 07:27:40.233
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 05/23/24 07:27:40.233
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 05/23/24 07:27:40.234
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 05/23/24 07:27:40.234
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 05/23/24 07:27:40.235
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 05/23/24 07:27:40.235
  I0523 07:27:40.235988 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-4018" for this suite. @ 05/23/24 07:27:40.237
• [0.251 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 05/23/24 07:27:40.24
  I0523 07:27:40.240511 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename field-validation @ 05/23/24 07:27:40.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:27:40.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:27:40.248
  I0523 07:27:40.250070 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  W0523 07:27:40.250505      22 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc00521c120 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0523 07:27:41.034918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:42.035888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0523 07:27:42.777628      22 warnings.go:70] unknown field "alpha"
  W0523 07:27:42.777645      22 warnings.go:70] unknown field "beta"
  W0523 07:27:42.777649      22 warnings.go:70] unknown field "delta"
  W0523 07:27:42.777652      22 warnings.go:70] unknown field "epsilon"
  W0523 07:27:42.777655      22 warnings.go:70] unknown field "gamma"
  E0523 07:27:43.036481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:27:43.303620 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2768" for this suite. @ 05/23/24 07:27:43.305
• [3.067 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 05/23/24 07:27:43.307
  I0523 07:27:43.307273 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/23/24 07:27:43.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:27:43.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:27:43.315
  I0523 07:27:43.317041 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  E0523 07:27:44.036816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:45.036885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:46.037691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:27:46.357995 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-346" for this suite. @ 05/23/24 07:27:46.359
• [3.055 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 05/23/24 07:27:46.362
  I0523 07:27:46.362159 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename watch @ 05/23/24 07:27:46.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:27:46.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:27:46.373
  STEP: getting a starting resourceVersion @ 05/23/24 07:27:46.374
  STEP: starting a background goroutine to produce watch events @ 05/23/24 07:27:46.375
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 05/23/24 07:27:46.375
  E0523 07:27:47.038415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:48.039250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:49.040076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:27:49.165139 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-361" for this suite. @ 05/23/24 07:27:49.215
• [2.904 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 05/23/24 07:27:49.266
  I0523 07:27:49.266321 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/23/24 07:27:49.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:27:49.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:27:49.275
  I0523 07:27:49.276688 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  E0523 07:27:50.040730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/23/24 07:27:50.448
  I0523 07:27:50.448395 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-3448 --namespace=crd-publish-openapi-3448 create -f -'
  E0523 07:27:51.041419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:52.041471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:27:52.498326 22 builder.go:146] stderr: ""
  I0523 07:27:52.498353 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-937-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0523 07:27:52.498396 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-3448 --namespace=crd-publish-openapi-3448 delete e2e-test-crd-publish-openapi-937-crds test-cr'
  I0523 07:27:52.538886 22 builder.go:146] stderr: ""
  I0523 07:27:52.538918 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-937-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0523 07:27:52.538958 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-3448 --namespace=crd-publish-openapi-3448 apply -f -'
  I0523 07:27:52.582257 22 builder.go:146] stderr: ""
  I0523 07:27:52.582286 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-937-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0523 07:27:52.582370 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-3448 --namespace=crd-publish-openapi-3448 delete e2e-test-crd-publish-openapi-937-crds test-cr'
  I0523 07:27:52.622537 22 builder.go:146] stderr: ""
  I0523 07:27:52.622568 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-937-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 05/23/24 07:27:52.622
  I0523 07:27:52.622689 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-3448 explain e2e-test-crd-publish-openapi-937-crds'
  I0523 07:27:52.661023 22 builder.go:146] stderr: ""
  I0523 07:27:52.661112 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-937-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0523 07:27:53.041995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:27:53.838262 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3448" for this suite. @ 05/23/24 07:27:53.842
• [4.578 seconds]
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 05/23/24 07:27:53.844
  I0523 07:27:53.844586 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename replication-controller @ 05/23/24 07:27:53.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:27:53.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:27:53.852
  STEP: Creating replication controller my-hostname-basic-f7f8d0c7-dd8c-461b-a690-08d8003dd75c @ 05/23/24 07:27:53.854
  I0523 07:27:53.858525 22 resource.go:87] Pod name my-hostname-basic-f7f8d0c7-dd8c-461b-a690-08d8003dd75c: Found 0 pods out of 1
  E0523 07:27:54.042931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:55.043093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:56.043848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:57.044866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:27:58.045075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:27:58.860583 22 resource.go:87] Pod name my-hostname-basic-f7f8d0c7-dd8c-461b-a690-08d8003dd75c: Found 1 pods out of 1
  I0523 07:27:58.860608 22 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-f7f8d0c7-dd8c-461b-a690-08d8003dd75c" are running
  I0523 07:27:58.861813 22 rc.go:523] Pod "my-hostname-basic-f7f8d0c7-dd8c-461b-a690-08d8003dd75c-nr6gc" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-23 07:27:54 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-23 07:27:53 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-23 07:27:54 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-23 07:27:54 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-23 07:27:53 +0000 UTC Reason: Message:}])
  I0523 07:27:58.861830 22 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/23/24 07:27:58.861
  I0523 07:27:58.865799 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1529" for this suite. @ 05/23/24 07:27:58.867
• [5.025 seconds]
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 05/23/24 07:27:58.869
  I0523 07:27:58.869480 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename var-expansion @ 05/23/24 07:27:58.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:27:58.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:27:58.878
  STEP: Creating a pod to test substitution in container's command @ 05/23/24 07:27:58.88
  E0523 07:27:59.045940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:00.047015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:01.047402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:02.048086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:28:02.889
  I0523 07:28:02.890693 22 output.go:196] Trying to get logs from node k8s-10-255-0-209 pod var-expansion-605c2230-9e26-4417-998c-407f0727e97b container dapi-container: <nil>
  STEP: delete the pod @ 05/23/24 07:28:02.898
  I0523 07:28:02.904178 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9501" for this suite. @ 05/23/24 07:28:02.905
• [4.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:348
  STEP: Creating a kubernetes client @ 05/23/24 07:28:02.907
  I0523 07:28:02.907906 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename disruption @ 05/23/24 07:28:02.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:28:02.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:28:02.915
  STEP: Creating a pdb that targets all three pods in a test replica set @ 05/23/24 07:28:02.917
  STEP: Waiting for the pdb to be processed @ 05/23/24 07:28:02.918
  E0523 07:28:03.049054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:04.049235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 05/23/24 07:28:04.922
  STEP: Waiting for all pods to be running @ 05/23/24 07:28:04.922
  I0523 07:28:04.930966 22 disruption.go:567] pods: 0 < 3
  E0523 07:28:05.050210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:06.050293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 05/23/24 07:28:06.924
  STEP: Updating the pdb to allow a pod to be evicted @ 05/23/24 07:28:06.928
  STEP: Waiting for the pdb to be processed @ 05/23/24 07:28:06.932
  E0523 07:28:07.050318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:08.050762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/23/24 07:28:08.933
  STEP: Waiting for all pods to be running @ 05/23/24 07:28:08.933
  STEP: Waiting for the pdb to observed all healthy pods @ 05/23/24 07:28:08.935
  STEP: Patching the pdb to disallow a pod to be evicted @ 05/23/24 07:28:08.945
  STEP: Waiting for the pdb to be processed @ 05/23/24 07:28:08.955
  E0523 07:28:09.050945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:10.051851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 05/23/24 07:28:10.957
  STEP: locating a running pod @ 05/23/24 07:28:10.958
  STEP: Deleting the pdb to allow a pod to be evicted @ 05/23/24 07:28:10.962
  STEP: Waiting for the pdb to be deleted @ 05/23/24 07:28:10.964
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/23/24 07:28:10.965
  STEP: Waiting for all pods to be running @ 05/23/24 07:28:10.965
  I0523 07:28:10.971468 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4958" for this suite. @ 05/23/24 07:28:10.973
• [8.069 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 05/23/24 07:28:10.977
  I0523 07:28:10.977518 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename field-validation @ 05/23/24 07:28:10.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:28:10.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:28:10.989
  I0523 07:28:10.991256 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  E0523 07:28:11.052244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:12.053168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:13.053377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:28:14.049169 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1769" for this suite. @ 05/23/24 07:28:14.05
  E0523 07:28:14.053406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
• [3.076 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 05/23/24 07:28:14.053
  I0523 07:28:14.053904 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename init-container @ 05/23/24 07:28:14.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:28:14.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:28:14.062
  STEP: creating the pod @ 05/23/24 07:28:14.063
  I0523 07:28:14.063914 22 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0523 07:28:15.054443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:16.054695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:17.054776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:18.055515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:28:18.281473 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1870" for this suite. @ 05/23/24 07:28:18.285
• [4.234 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 05/23/24 07:28:18.288
  I0523 07:28:18.288200 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 07:28:18.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:28:18.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:28:18.297
  STEP: Creating projection with secret that has name projected-secret-test-map-9333e7c7-26c1-495c-a635-5cbd216d3e86 @ 05/23/24 07:28:18.298
  STEP: Creating a pod to test consume secrets @ 05/23/24 07:28:18.3
  E0523 07:28:19.056132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:20.056806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:28:20.308
  I0523 07:28:20.310024 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-secrets-1224b569-70cf-4994-9a34-6da14d0d5dc2 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/23/24 07:28:20.312
  I0523 07:28:20.318103 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6793" for this suite. @ 05/23/24 07:28:20.319
• [2.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 05/23/24 07:28:20.321
  I0523 07:28:20.321700 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 07:28:20.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:28:20.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:28:20.33
  STEP: Creating a pod to test downward API volume plugin @ 05/23/24 07:28:20.332
  E0523 07:28:21.057319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:22.058368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:23.058379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:24.059242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:28:24.341
  I0523 07:28:24.342905 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-cf7ae409-722d-472f-9a3d-eb0ff5cb07dc container client-container: <nil>
  STEP: delete the pod @ 05/23/24 07:28:24.345
  I0523 07:28:24.352033 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9878" for this suite. @ 05/23/24 07:28:24.353
• [4.034 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 05/23/24 07:28:24.355
  I0523 07:28:24.355415 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename namespaces @ 05/23/24 07:28:24.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:28:24.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:28:24.363
  STEP: Creating a test namespace @ 05/23/24 07:28:24.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:28:24.37
  STEP: Creating a service in the namespace @ 05/23/24 07:28:24.372
  STEP: Deleting the namespace @ 05/23/24 07:28:24.379
  STEP: Waiting for the namespace to be removed. @ 05/23/24 07:28:24.382
  E0523 07:28:25.059764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:26.060782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:27.061412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:28.062244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:29.062487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:30.063355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 05/23/24 07:28:30.385
  STEP: Verifying there is no service in the namespace @ 05/23/24 07:28:30.392
  I0523 07:28:30.395529 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2158" for this suite. @ 05/23/24 07:28:30.397
  STEP: Destroying namespace "nsdeletetest-8298" for this suite. @ 05/23/24 07:28:30.399
  I0523 07:28:30.400175 22 framework.go:370] Namespace nsdeletetest-8298 was already deleted
  STEP: Destroying namespace "nsdeletetest-3001" for this suite. @ 05/23/24 07:28:30.4
• [6.047 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 05/23/24 07:28:30.402
  I0523 07:28:30.402973 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/23/24 07:28:30.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:28:30.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:28:30.409
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 05/23/24 07:28:30.411
  I0523 07:28:30.411850 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  E0523 07:28:31.064187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:28:31.621331 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  E0523 07:28:32.064463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:33.064863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:34.065643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:35.065809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:36.065889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:28:36.296780 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3737" for this suite. @ 05/23/24 07:28:36.3
• [5.900 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 05/23/24 07:28:36.303
  I0523 07:28:36.303301 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 07:28:36.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:28:36.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:28:36.311
  STEP: Creating a pod to test downward API volume plugin @ 05/23/24 07:28:36.316
  E0523 07:28:37.066304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:38.066380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:39.067016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:40.067251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:28:40.324
  I0523 07:28:40.325540 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-2bfef65e-6370-4b76-9a9a-603334803bb3 container client-container: <nil>
  STEP: delete the pod @ 05/23/24 07:28:40.327
  I0523 07:28:40.333830 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2756" for this suite. @ 05/23/24 07:28:40.335
• [4.034 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 05/23/24 07:28:40.337
  I0523 07:28:40.337318 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename statefulset @ 05/23/24 07:28:40.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:28:40.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:28:40.345
  STEP: Creating service test in namespace statefulset-5943 @ 05/23/24 07:28:40.346
  STEP: Creating a new StatefulSet @ 05/23/24 07:28:40.349
  I0523 07:28:40.356834 22 wait.go:40] Found 0 stateful pods, waiting for 3
  E0523 07:28:41.067629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:42.067932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:43.068822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:44.069313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:45.069533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:46.069962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:47.070020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:48.070156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:49.070290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:50.071298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:28:50.354471 22 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0523 07:28:50.354496 22 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0523 07:28:50.354503 22 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/23/24 07:28:50.358
  I0523 07:28:50.372576 22 statefulset.go:2241] Updating stateful set ss2
  STEP: Creating a new revision @ 05/23/24 07:28:50.372
  E0523 07:28:51.072302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:52.072800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:53.073039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:54.073686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:55.073937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:56.074065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:57.074141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:58.074224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:28:59.074343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:00.074561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 05/23/24 07:29:00.375
  STEP: Performing a canary update @ 05/23/24 07:29:00.375
  I0523 07:29:00.401154 22 statefulset.go:2241] Updating stateful set ss2
  I0523 07:29:00.404591 22 wait.go:74] Waiting for Pod statefulset-5943/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0523 07:29:01.075462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:02.075937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:03.076383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:04.077400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:05.077875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:06.077960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:07.078773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:08.078859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:09.079906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:10.080820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 05/23/24 07:29:10.405
  I0523 07:29:10.425128 22 wait.go:40] Found 2 stateful pods, waiting for 3
  E0523 07:29:11.081868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:12.082006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:13.082758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:14.083739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:15.083824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:16.084808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:17.084941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:18.085073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:19.085204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:20.085281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:29:20.424784 22 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0523 07:29:20.424806 22 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0523 07:29:20.424812 22 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 05/23/24 07:29:20.427
  I0523 07:29:20.441034 22 statefulset.go:2241] Updating stateful set ss2
  I0523 07:29:20.443462 22 wait.go:74] Waiting for Pod statefulset-5943/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0523 07:29:21.086336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:22.086466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:23.087113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:24.087704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:25.087816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:26.088804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:27.089816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:28.090408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:29.090488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:30.090705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:29:30.460063 22 statefulset.go:2241] Updating stateful set ss2
  I0523 07:29:30.462533 22 wait.go:56] Waiting for StatefulSet statefulset-5943/ss2 to complete update
  I0523 07:29:30.462559 22 wait.go:63] Waiting for Pod statefulset-5943/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0523 07:29:31.091301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:32.091739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:33.091820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:34.092054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:35.092808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:36.092902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:37.093030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:38.093115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:39.093614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:40.093910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:29:40.463546 22 statefulset.go:135] Deleting all statefulset in ns statefulset-5943
  I0523 07:29:40.464596 22 rest.go:150] Scaling statefulset ss2 to 0
  E0523 07:29:41.094917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:42.095008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:43.095097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:44.095289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:45.095795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:46.095831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:47.096804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:48.096896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:49.097745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:50.098312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:29:50.471427 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0523 07:29:50.472610 22 rest.go:88] Deleting statefulset ss2
  I0523 07:29:50.477041 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5943" for this suite. @ 05/23/24 07:29:50.478
• [70.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:420
  STEP: Creating a kubernetes client @ 05/23/24 07:29:50.481
  I0523 07:29:50.481895 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename job @ 05/23/24 07:29:50.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:29:50.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:29:50.49
  STEP: Creating Indexed job @ 05/23/24 07:29:50.491
  STEP: Ensuring job reaches completions @ 05/23/24 07:29:50.494
  E0523 07:29:51.098900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:52.098983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:53.099762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:54.100809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:55.101310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:56.101407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 05/23/24 07:29:56.496
  I0523 07:29:56.497957 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7382" for this suite. @ 05/23/24 07:29:56.499
• [6.021 seconds]
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 05/23/24 07:29:56.502
  I0523 07:29:56.502524 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename deployment @ 05/23/24 07:29:56.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:29:56.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:29:56.512
  I0523 07:29:56.518824 22 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  E0523 07:29:57.101511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:58.101737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:29:59.102267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:00.102580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:01.102717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:30:01.521165 22 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/23/24 07:30:01.521
  I0523 07:30:01.521214 22 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 05/23/24 07:30:01.525
  I0523 07:30:01.529345 22 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9743",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b8ac2610-2c6b-48ef-b298-48ce2d3a799d",
      ResourceVersion: (string) (len=5) "84388",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852046201,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046201,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0523 07:30:01.531672 22 deployment.go:41] New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  I0523 07:30:01.531687 22 deployment.go:44] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0523 07:30:01.531869 22 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9743",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6555fbc0-8bd9-4c0f-aa98-8e40b454096f",
      ResourceVersion: (string) (len=5) "84391",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852046196,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "b8ac2610-2c6b-48ef-b298-48ce2d3a799d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046196,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046198,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046201,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 62 38 61 63 32 36 31  |"uid\":\"b8ac261|
              00000040  30 2d 32 63 36 62 2d 34  38 65 66 2d 62 32 39 38  |0-2c6b-48ef-b298|
              00000050  2d 34 38 63 65 32 64 33  61 37 39 39 64 5c 22 7d  |-48ce2d3a799d\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0523 07:30:01.534993 22 deployment.go:67] Pod "test-cleanup-controller-7rwsp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-7rwsp",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-9743",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1bbb6ee1-08a8-4441-8ca5-f090a2bd8548",
      ResourceVersion: (string) (len=5) "84380",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852046196,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "6555fbc0-8bd9-4c0f-aa98-8e40b454096f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046196,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  36 35 35 35 66 62 63 30  |uid\":\"6555fbc0|
              00000080  2d 38 62 64 39 2d 34 63  30 66 2d 61 61 39 38 2d  |-8bd9-4c0f-aa98-|
              00000090  38 65 34 30 62 34 35 34  30 39 36 66 5c 22 7d 22  |8e40b454096f\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046198,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 39 30 5c 22 7d 22 3a  |2.20.64.190\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rhbg7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rhbg7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046197,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046196,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046197,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046197,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046196,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.190",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.190"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852046196,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852046197,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9471c782d6ee2ed6729dc2fdde3f9dfc49fd24a3976e51d73f746848a78f6499",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:30:01.536124 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9743" for this suite. @ 05/23/24 07:30:01.54
• [5.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 05/23/24 07:30:01.544
  I0523 07:30:01.544300 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename limitrange @ 05/23/24 07:30:01.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:30:01.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:30:01.561
  STEP: Creating LimitRange "e2e-limitrange-qsbhv" in namespace "limitrange-901" @ 05/23/24 07:30:01.563
  STEP: Creating another limitRange in another namespace @ 05/23/24 07:30:01.566
  I0523 07:30:01.573300 22 limit_range.go:299] Namespace "e2e-limitrange-qsbhv-6568" created
  I0523 07:30:01.573317 22 limit_range.go:300] Creating LimitRange "e2e-limitrange-qsbhv" in namespace "e2e-limitrange-qsbhv-6568"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-qsbhv" @ 05/23/24 07:30:01.577
  I0523 07:30:01.578399 22 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-qsbhv" in "limitrange-901" namespace @ 05/23/24 07:30:01.578
  I0523 07:30:01.581384 22 limit_range.go:335] LimitRange "e2e-limitrange-qsbhv" has been patched
  STEP: Delete LimitRange "e2e-limitrange-qsbhv" by Collection with labelSelector: "e2e-limitrange-qsbhv=patched" @ 05/23/24 07:30:01.581
  STEP: Confirm that the limitRange "e2e-limitrange-qsbhv" has been deleted @ 05/23/24 07:30:01.584
  I0523 07:30:01.584325 22 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0523 07:30:01.585285 22 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-qsbhv=patched"
  I0523 07:30:01.585296 22 limit_range.go:344] LimitRange "e2e-limitrange-qsbhv" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-qsbhv" @ 05/23/24 07:30:01.585
  I0523 07:30:01.586586 22 limit_range.go:350] Found 1 limitRange
  I0523 07:30:01.586652 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-901" for this suite. @ 05/23/24 07:30:01.588
  STEP: Destroying namespace "e2e-limitrange-qsbhv-6568" for this suite. @ 05/23/24 07:30:01.59
• [0.048 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 05/23/24 07:30:01.592
  I0523 07:30:01.592843 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename hostport @ 05/23/24 07:30:01.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:30:01.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:30:01.601
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 05/23/24 07:30:01.605
  E0523 07:30:02.103684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:03.103747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.255.0.208 on the node which pod1 resides and expect scheduled @ 05/23/24 07:30:03.614
  E0523 07:30:04.104044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:05.104828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.255.0.208 but use UDP protocol on the node which pod2 resides @ 05/23/24 07:30:05.621
  E0523 07:30:06.105231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:07.105297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:08.106227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:09.107217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:10.107624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:11.107763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:12.108825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:13.108902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:14.109869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:15.110099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:16.110860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:17.110939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:18.111227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:19.111326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 05/23/24 07:30:19.647
  I0523 07:30:19.647094 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.255.0.208 http://127.0.0.1:54323/hostname] Namespace:hostport-2072 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 07:30:19.647106 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 07:30:19.647459 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 07:30:19.647497 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/hostport-2072/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.255.0.208+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.255.0.208, port: 54323 @ 05/23/24 07:30:19.679
  I0523 07:30:19.679678 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.255.0.208:54323/hostname] Namespace:hostport-2072 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 07:30:19.679694 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 07:30:19.680061 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 07:30:19.680100 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/hostport-2072/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.255.0.208%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.255.0.208, port: 54323 UDP @ 05/23/24 07:30:19.71
  I0523 07:30:19.710730 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 10.255.0.208 54323] Namespace:hostport-2072 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 07:30:19.710760 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 07:30:19.711094 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 07:30:19.711135 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/hostport-2072/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+10.255.0.208+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0523 07:30:20.111494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:21.111523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:22.111673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:23.111754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:24.112818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:30:24.736440 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-2072" for this suite. @ 05/23/24 07:30:24.738
• [23.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 05/23/24 07:30:24.741
  I0523 07:30:24.741012 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename replication-controller @ 05/23/24 07:30:24.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:30:24.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:30:24.749
  STEP: Creating ReplicationController "e2e-rc-kbtrz" @ 05/23/24 07:30:24.752
  I0523 07:30:24.754863 22 rc.go:792] Get Replication Controller "e2e-rc-kbtrz" to confirm replicas
  E0523 07:30:25.113455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:30:25.755240 22 rc.go:792] Get Replication Controller "e2e-rc-kbtrz" to confirm replicas
  I0523 07:30:25.756964 22 rc.go:801] Found 1 replicas for "e2e-rc-kbtrz" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-kbtrz" @ 05/23/24 07:30:25.756
  STEP: Updating a scale subresource @ 05/23/24 07:30:25.758
  STEP: Verifying replicas where modified for replication controller "e2e-rc-kbtrz" @ 05/23/24 07:30:25.76
  I0523 07:30:25.760519 22 rc.go:792] Get Replication Controller "e2e-rc-kbtrz" to confirm replicas
  E0523 07:30:26.114157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:30:26.760601 22 rc.go:792] Get Replication Controller "e2e-rc-kbtrz" to confirm replicas
  I0523 07:30:26.762353 22 rc.go:801] Found 2 replicas for "e2e-rc-kbtrz" replication controller
  I0523 07:30:26.762444 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2192" for this suite. @ 05/23/24 07:30:26.764
• [2.025 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 05/23/24 07:30:26.766
  I0523 07:30:26.766316 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename projected @ 05/23/24 07:30:26.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:30:26.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:30:26.774
  STEP: Creating configMap with name projected-configmap-test-volume-03ed9f2e-9859-4d14-a919-f5e66a2f29f8 @ 05/23/24 07:30:26.775
  STEP: Creating a pod to test consume configMaps @ 05/23/24 07:30:26.778
  E0523 07:30:27.114990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:28.115112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:30:28.784
  I0523 07:30:28.785555 22 output.go:196] Trying to get logs from node k8s-10-255-0-209 pod pod-projected-configmaps-b2dc7eee-7888-45e8-ab78-d11da824bf99 container agnhost-container: <nil>
  STEP: delete the pod @ 05/23/24 07:30:28.791
  I0523 07:30:28.800865 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2893" for this suite. @ 05/23/24 07:30:28.802
• [2.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 05/23/24 07:30:28.805
  I0523 07:30:28.805442 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename emptydir @ 05/23/24 07:30:28.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:30:28.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:30:28.813
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/23/24 07:30:28.814
  E0523 07:30:29.116028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:30.117061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:31.117631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:32.117782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:30:32.823
  I0523 07:30:32.824447 22 output.go:196] Trying to get logs from node k8s-10-255-0-209 pod pod-a94bbb9d-0a14-4e0e-bfcd-02011bdc5795 container test-container: <nil>
  STEP: delete the pod @ 05/23/24 07:30:32.826
  I0523 07:30:32.832935 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5817" for this suite. @ 05/23/24 07:30:32.834
• [4.031 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 05/23/24 07:30:32.836
  I0523 07:30:32.836437 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename deployment @ 05/23/24 07:30:32.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:30:32.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:30:32.845
  I0523 07:30:32.847828 22 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0523 07:30:32.850663 22 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0523 07:30:32.853130 22 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  E0523 07:30:33.118465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:34.119352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:30:34.855763 22 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0523 07:30:34.856844 22 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0523 07:30:34.860743 22 deployment.go:313] Updating deployment test-recreate-deployment
  I0523 07:30:34.860764 22 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0523 07:30:34.907847 22 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5304",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "05c800ee-cf39-4629-b8a1-bd39d4fb6daa",
      ResourceVersion: (string) (len=5) "84808",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852046232,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-66b65d9f8f\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0523 07:30:34.909830 22 deployment.go:39] New ReplicaSet "test-recreate-deployment-66b65d9f8f" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-66b65d9f8f",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5304",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "81881861-15bc-49ad-93e4-434b516c7939",
      ResourceVersion: (string) (len=5) "84804",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852046234,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "05c800ee-cf39-4629-b8a1-bd39d4fb6daa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 35 63 38 30 30  65 65 2d 63 66 33 39 2d  |\"05c800ee-cf39-|
              00000120  34 36 32 39 2d 62 38 61  31 2d 62 64 33 39 64 34  |4629-b8a1-bd39d4|
              00000130  66 62 36 64 61 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fb6daa\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0523 07:30:34.910352 22 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0523 07:30:34.910499 22 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-6b6d9cd7b6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5304",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fe21b2b8-ca24-4a9c-9fb0-3215f4312a2a",
      ResourceVersion: (string) (len=5) "84796",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852046232,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "05c800ee-cf39-4629-b8a1-bd39d4fb6daa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 35 63 38 30 30  65 65 2d 63 66 33 39 2d  |\"05c800ee-cf39-|
              00000120  34 36 32 39 2d 62 38 61  31 2d 62 64 33 39 64 34  |4629-b8a1-bd39d4|
              00000130  66 62 36 64 61 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fb6daa\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0523 07:30:34.912446 22 deployment.go:67] Pod "test-recreate-deployment-66b65d9f8f-hr8fs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-66b65d9f8f-hr8fs",
      GenerateName: (string) (len=36) "test-recreate-deployment-66b65d9f8f-",
      Namespace: (string) (len=15) "deployment-5304",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "addc08ee-e87c-4997-a023-0da4a168a935",
      ResourceVersion: (string) (len=5) "84807",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852046234,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-66b65d9f8f",
          UID: (types.UID) (len=36) "81881861-15bc-49ad-93e4-434b516c7939",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 31  38 38 31 38 36 31 2d 31  |d\":\"81881861-1|
              00000090  35 62 63 2d 34 39 61 64  2d 39 33 65 34 2d 34 33  |5bc-49ad-93e4-43|
              000000a0  34 62 35 31 36 63 37 39  33 39 5c 22 7d 22 3a 7b  |4b516c7939\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qgh89",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qgh89",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852046234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852046234,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0523 07:30:34.913480 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5304" for this suite. @ 05/23/24 07:30:34.915
• [2.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 05/23/24 07:30:34.919
  I0523 07:30:34.919169 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/23/24 07:30:34.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:30:34.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:30:34.928
  STEP: creating a target pod @ 05/23/24 07:30:34.93
  E0523 07:30:35.119911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:36.120075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 05/23/24 07:30:36.938
  E0523 07:30:37.120810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:38.120901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 05/23/24 07:30:38.945
  I0523 07:30:38.945149 22 exec_util.go:55] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3588 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0523 07:30:38.945166 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  I0523 07:30:38.945526 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I0523 07:30:38.945563 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/ephemeral-containers-test-3588/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0523 07:30:38.968381 22 exec_util.go:106] Exec stderr: ""
  I0523 07:30:38.979770 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3588" for this suite. @ 05/23/24 07:30:38.981
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:334
  STEP: Creating a kubernetes client @ 05/23/24 07:30:38.983
  I0523 07:30:38.983684 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename sched-pred @ 05/23/24 07:30:38.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:30:38.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:30:38.992
  I0523 07:30:38.994122 22 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0523 07:30:38.996707 22 util.go:400] Waiting for terminating namespaces to be deleted...
  I0523 07:30:38.997736 22 predicates.go:121] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-207 before test
  I0523 07:30:39.000220 22 predicates.go:887] calico-kube-controllers-6946cb87d6-xqpj5 from kube-system started at 2024-05-23 03:37:57 +0000 UTC (1 container statuses recorded)
  I0523 07:30:39.000233 22 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I0523 07:30:39.000242 22 predicates.go:887] calico-node-pgzv7 from kube-system started at 2024-05-23 03:37:57 +0000 UTC (1 container statuses recorded)
  I0523 07:30:39.000248 22 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0523 07:30:39.000257 22 predicates.go:887] coredns-c5768dcc7-tqffs from kube-system started at 2024-05-23 03:38:19 +0000 UTC (1 container statuses recorded)
  I0523 07:30:39.000264 22 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0523 07:30:39.000272 22 predicates.go:887] dashboard-metrics-scraper-69b9b44766-zbgkq from kube-system started at 2024-05-23 03:38:23 +0000 UTC (1 container statuses recorded)
  I0523 07:30:39.000280 22 predicates.go:889] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0523 07:30:39.000288 22 predicates.go:887] kubernetes-dashboard-7df74bff86-69bf5 from kube-system started at 2024-05-23 03:38:23 +0000 UTC (1 container statuses recorded)
  I0523 07:30:39.000296 22 predicates.go:889] 	Container kubernetes-dashboard ready: true, restart count 0
  I0523 07:30:39.000303 22 predicates.go:887] metrics-server-65b5b555f5-xppsl from kube-system started at 2024-05-23 03:38:21 +0000 UTC (1 container statuses recorded)
  I0523 07:30:39.000311 22 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I0523 07:30:39.000320 22 predicates.go:887] node-local-dns-w98ss from kube-system started at 2024-05-23 03:38:20 +0000 UTC (1 container statuses recorded)
  I0523 07:30:39.000326 22 predicates.go:889] 	Container node-cache ready: true, restart count 0
  I0523 07:30:39.000335 22 predicates.go:887] sonobuoy-systemd-logs-daemon-set-d34ec90e00584ff3-2lk5f from sonobuoy started at 2024-05-23 05:58:21 +0000 UTC (2 container statuses recorded)
  I0523 07:30:39.000341 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0523 07:30:39.000348 22 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0523 07:30:39.000354 22 predicates.go:121] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-208 before test
  I0523 07:30:39.002583 22 predicates.go:887] test-recreate-deployment-66b65d9f8f-hr8fs from deployment-5304 started at 2024-05-23 07:30:34 +0000 UTC (1 container statuses recorded)
  I0523 07:30:39.002594 22 predicates.go:889] 	Container httpd ready: false, restart count 0
  I0523 07:30:39.002601 22 predicates.go:887] ephemeral-containers-target-pod from ephemeral-containers-test-3588 started at 2024-05-23 07:30:34 +0000 UTC (1 container statuses recorded)
  I0523 07:30:39.002607 22 predicates.go:889] 	Container test-container-1 ready: true, restart count 0
  I0523 07:30:39.002614 22 predicates.go:887] calico-node-bm447 from kube-system started at 2024-05-23 03:46:33 +0000 UTC (1 container statuses recorded)
  I0523 07:30:39.002623 22 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0523 07:30:39.002631 22 predicates.go:887] node-local-dns-w8dtr from kube-system started at 2024-05-23 03:46:33 +0000 UTC (1 container statuses recorded)
  I0523 07:30:39.002637 22 predicates.go:889] 	Container node-cache ready: true, restart count 0
  I0523 07:30:39.002645 22 predicates.go:887] sonobuoy from sonobuoy started at 2024-05-23 05:58:21 +0000 UTC (1 container statuses recorded)
  I0523 07:30:39.002652 22 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0523 07:30:39.002660 22 predicates.go:887] sonobuoy-systemd-logs-daemon-set-d34ec90e00584ff3-bgdnv from sonobuoy started at 2024-05-23 05:58:21 +0000 UTC (2 container statuses recorded)
  I0523 07:30:39.002693 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0523 07:30:39.002701 22 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0523 07:30:39.002708 22 predicates.go:121] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-209 before test
  I0523 07:30:39.004822 22 predicates.go:887] calico-node-cns77 from kube-system started at 2024-05-23 03:48:56 +0000 UTC (1 container statuses recorded)
  I0523 07:30:39.004836 22 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0523 07:30:39.004843 22 predicates.go:887] node-local-dns-n86hx from kube-system started at 2024-05-23 03:48:56 +0000 UTC (1 container statuses recorded)
  I0523 07:30:39.004850 22 predicates.go:889] 	Container node-cache ready: true, restart count 0
  I0523 07:30:39.004858 22 predicates.go:887] sonobuoy-e2e-job-bfc6bc36c48647e3 from sonobuoy started at 2024-05-23 05:58:21 +0000 UTC (2 container statuses recorded)
  I0523 07:30:39.004869 22 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0523 07:30:39.004876 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0523 07:30:39.004884 22 predicates.go:887] sonobuoy-systemd-logs-daemon-set-d34ec90e00584ff3-9qrcn from sonobuoy started at 2024-05-23 05:58:21 +0000 UTC (2 container statuses recorded)
  I0523 07:30:39.004893 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0523 07:30:39.004899 22 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node k8s-10-255-0-207 @ 05/23/24 07:30:39.012
  STEP: verifying the node has the label node k8s-10-255-0-208 @ 05/23/24 07:30:39.02
  STEP: verifying the node has the label node k8s-10-255-0-209 @ 05/23/24 07:30:39.028
  I0523 07:30:39.035557 22 predicates.go:374] Pod test-recreate-deployment-66b65d9f8f-hr8fs requesting resource cpu=0m on Node k8s-10-255-0-208
  I0523 07:30:39.035576 22 predicates.go:374] Pod ephemeral-containers-target-pod requesting resource cpu=0m on Node k8s-10-255-0-208
  I0523 07:30:39.035583 22 predicates.go:374] Pod calico-kube-controllers-6946cb87d6-xqpj5 requesting resource cpu=0m on Node k8s-10-255-0-207
  I0523 07:30:39.035590 22 predicates.go:374] Pod calico-node-bm447 requesting resource cpu=250m on Node k8s-10-255-0-208
  I0523 07:30:39.035598 22 predicates.go:374] Pod calico-node-cns77 requesting resource cpu=250m on Node k8s-10-255-0-209
  I0523 07:30:39.035605 22 predicates.go:374] Pod calico-node-pgzv7 requesting resource cpu=250m on Node k8s-10-255-0-207
  I0523 07:30:39.035613 22 predicates.go:374] Pod coredns-c5768dcc7-tqffs requesting resource cpu=100m on Node k8s-10-255-0-207
  I0523 07:30:39.035620 22 predicates.go:374] Pod dashboard-metrics-scraper-69b9b44766-zbgkq requesting resource cpu=0m on Node k8s-10-255-0-207
  I0523 07:30:39.035626 22 predicates.go:374] Pod kubernetes-dashboard-7df74bff86-69bf5 requesting resource cpu=0m on Node k8s-10-255-0-207
  I0523 07:30:39.035633 22 predicates.go:374] Pod metrics-server-65b5b555f5-xppsl requesting resource cpu=100m on Node k8s-10-255-0-207
  I0523 07:30:39.035641 22 predicates.go:374] Pod node-local-dns-n86hx requesting resource cpu=25m on Node k8s-10-255-0-209
  I0523 07:30:39.035664 22 predicates.go:374] Pod node-local-dns-w8dtr requesting resource cpu=25m on Node k8s-10-255-0-208
  I0523 07:30:39.035671 22 predicates.go:374] Pod node-local-dns-w98ss requesting resource cpu=25m on Node k8s-10-255-0-207
  I0523 07:30:39.035678 22 predicates.go:374] Pod sonobuoy requesting resource cpu=0m on Node k8s-10-255-0-208
  I0523 07:30:39.035684 22 predicates.go:374] Pod sonobuoy-e2e-job-bfc6bc36c48647e3 requesting resource cpu=0m on Node k8s-10-255-0-209
  I0523 07:30:39.035692 22 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-d34ec90e00584ff3-2lk5f requesting resource cpu=0m on Node k8s-10-255-0-207
  I0523 07:30:39.035700 22 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-d34ec90e00584ff3-9qrcn requesting resource cpu=0m on Node k8s-10-255-0-209
  I0523 07:30:39.035707 22 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-d34ec90e00584ff3-bgdnv requesting resource cpu=0m on Node k8s-10-255-0-208
  STEP: Starting Pods to consume most of the cluster CPU. @ 05/23/24 07:30:39.035
  I0523 07:30:39.035732 22 predicates.go:384] Creating a pod which consumes cpu=2467m on Node k8s-10-255-0-207
  I0523 07:30:39.039679 22 predicates.go:384] Creating a pod which consumes cpu=2607m on Node k8s-10-255-0-208
  I0523 07:30:39.043146 22 predicates.go:384] Creating a pod which consumes cpu=2607m on Node k8s-10-255-0-209
  E0523 07:30:39.121637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:40.122676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 05/23/24 07:30:41.054
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c35dfecd-3f0d-45f7-8cb2-01443852a7b8.17d20dabb12345f9], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7087/filler-pod-c35dfecd-3f0d-45f7-8cb2-01443852a7b8 to k8s-10-255-0-207] @ 05/23/24 07:30:41.056
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c35dfecd-3f0d-45f7-8cb2-01443852a7b8.17d20dabcdc7fa40], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/23/24 07:30:41.056
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c35dfecd-3f0d-45f7-8cb2-01443852a7b8.17d20dabce75a1c4], Reason = [Created], Message = [Created container filler-pod-c35dfecd-3f0d-45f7-8cb2-01443852a7b8] @ 05/23/24 07:30:41.056
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c35dfecd-3f0d-45f7-8cb2-01443852a7b8.17d20dabd1779f28], Reason = [Started], Message = [Started container filler-pod-c35dfecd-3f0d-45f7-8cb2-01443852a7b8] @ 05/23/24 07:30:41.056
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ccd7d0d1-7acd-40e7-ba67-120cb24d438f.17d20dabb1b06b27], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7087/filler-pod-ccd7d0d1-7acd-40e7-ba67-120cb24d438f to k8s-10-255-0-208] @ 05/23/24 07:30:41.056
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ccd7d0d1-7acd-40e7-ba67-120cb24d438f.17d20dabcd6bc908], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/23/24 07:30:41.056
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ccd7d0d1-7acd-40e7-ba67-120cb24d438f.17d20dabcdfc3ed4], Reason = [Created], Message = [Created container filler-pod-ccd7d0d1-7acd-40e7-ba67-120cb24d438f] @ 05/23/24 07:30:41.056
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ccd7d0d1-7acd-40e7-ba67-120cb24d438f.17d20dabd04188a2], Reason = [Started], Message = [Started container filler-pod-ccd7d0d1-7acd-40e7-ba67-120cb24d438f] @ 05/23/24 07:30:41.056
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cf8e4851-f271-4bbe-ad4a-f921d8148dfd.17d20dabb22dfe9a], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7087/filler-pod-cf8e4851-f271-4bbe-ad4a-f921d8148dfd to k8s-10-255-0-209] @ 05/23/24 07:30:41.056
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cf8e4851-f271-4bbe-ad4a-f921d8148dfd.17d20dabce4bec84], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/23/24 07:30:41.056
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cf8e4851-f271-4bbe-ad4a-f921d8148dfd.17d20dabcf0a2e6c], Reason = [Created], Message = [Created container filler-pod-cf8e4851-f271-4bbe-ad4a-f921d8148dfd] @ 05/23/24 07:30:41.056
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cf8e4851-f271-4bbe-ad4a-f921d8148dfd.17d20dabd16d18a1], Reason = [Started], Message = [Started container filler-pod-cf8e4851-f271-4bbe-ad4a-f921d8148dfd] @ 05/23/24 07:30:41.056
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17d20dac294377ef], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod.] @ 05/23/24 07:30:41.063
  E0523 07:30:41.123563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node k8s-10-255-0-207 @ 05/23/24 07:30:42.061
  STEP: verifying the node doesn't have the label node @ 05/23/24 07:30:42.066
  STEP: removing the label node off the node k8s-10-255-0-208 @ 05/23/24 07:30:42.068
  STEP: verifying the node doesn't have the label node @ 05/23/24 07:30:42.077
  STEP: removing the label node off the node k8s-10-255-0-209 @ 05/23/24 07:30:42.079
  STEP: verifying the node doesn't have the label node @ 05/23/24 07:30:42.087
  I0523 07:30:42.090944 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7087" for this suite. @ 05/23/24 07:30:42.093
• [3.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 05/23/24 07:30:42.096
  I0523 07:30:42.096774 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename configmap @ 05/23/24 07:30:42.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:30:42.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:30:42.107
  STEP: Creating configMap with name configmap-test-volume-863d1297-b15c-445c-9558-8bb06aea5bd4 @ 05/23/24 07:30:42.109
  STEP: Creating a pod to test consume configMaps @ 05/23/24 07:30:42.111
  E0523 07:30:42.123903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:43.124687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:44.125704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:45.125829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:30:46.121
  I0523 07:30:46.122678 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-configmaps-4743de13-c1f6-47b3-939c-23c1d835444a container agnhost-container: <nil>
  STEP: delete the pod @ 05/23/24 07:30:46.125
  E0523 07:30:46.126045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:30:46.131001 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2538" for this suite. @ 05/23/24 07:30:46.132
• [4.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 05/23/24 07:30:46.134
  I0523 07:30:46.134531 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename kubelet-test @ 05/23/24 07:30:46.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:30:46.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:30:46.143
  E0523 07:30:47.126255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:48.126557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:49.126609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:50.127507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:30:50.151518 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5268" for this suite. @ 05/23/24 07:30:50.153
• [4.021 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 05/23/24 07:30:50.155
  I0523 07:30:50.155590 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/23/24 07:30:50.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:30:50.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:30:50.164
  STEP: create the container to handle the HTTPGet hook request. @ 05/23/24 07:30:50.166
  E0523 07:30:51.127743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:52.128820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/23/24 07:30:52.175
  E0523 07:30:53.129524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:54.130156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 05/23/24 07:30:54.182
  STEP: delete the pod with lifecycle hook @ 05/23/24 07:30:54.184
  E0523 07:30:55.130237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:56.130528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:30:56.191443 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3841" for this suite. @ 05/23/24 07:30:56.193
• [6.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 05/23/24 07:30:56.195
  I0523 07:30:56.195596 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename container-probe @ 05/23/24 07:30:56.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:30:56.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:30:56.204
  STEP: Creating pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240 @ 05/23/24 07:30:56.205
  E0523 07:30:57.130734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:30:58.130914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/23/24 07:30:58.212
  I0523 07:30:58.214274 22 container_probe.go:1749] Initial restart count of pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d is 0
  I0523 07:30:58.215330 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:30:59.131001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:00.131185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:00.218221 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:31:01.131854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:02.131937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:02.221015 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:31:03.132602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:04.133178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:04.223276 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:31:05.134151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:06.134253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:06.225149 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:31:07.135115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:08.135245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:08.227452 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:31:09.135938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:10.136800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:10.229846 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:31:11.137437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:12.138341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:12.232567 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:31:13.138402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:14.139197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:14.235319 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:31:15.140196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:16.140993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:16.238002 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:31:17.141107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:18.141173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:18.240299 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  I0523 07:31:18.240327 22 container_probe.go:1763] Restart count of pod container-probe-3240/liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d is now 1 (20.026032429s elapsed)
  E0523 07:31:19.142248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:20.142505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:20.242457 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:31:21.143476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:22.144339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:22.245439 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:31:23.144825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:24.145028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:24.248194 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:31:25.145271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:26.145407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:26.250519 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:31:27.146311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:28.146446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:28.252462 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:31:29.146758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:30.147242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:30.255357 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:31:31.147754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:32.147820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:32.257932 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:31:33.148820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:34.149005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:34.260264 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:31:35.149257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:36.149406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:36.263856 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:31:37.149812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:38.149892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:38.265975 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  I0523 07:31:38.266002 22 container_probe.go:1763] Restart count of pod container-probe-3240/liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d is now 2 (40.051707201s elapsed)
  E0523 07:31:39.150535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:40.150773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:40.268855 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:31:41.151832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:42.152806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:42.270826 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:31:43.153699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:44.153717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:44.272907 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:31:45.153881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:46.154019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:46.275128 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:31:47.155030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:48.155636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:48.277750 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:31:49.155691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:50.155771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:50.279895 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:31:51.156795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:52.156839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:52.283173 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:31:53.157723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:54.158604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:54.285892 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:31:55.159525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:56.159762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:56.287749 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:31:57.159837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:31:58.160831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:31:58.289894 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  I0523 07:31:58.289922 22 container_probe.go:1763] Restart count of pod container-probe-3240/liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d is now 3 (1m0.075627031s elapsed)
  E0523 07:31:59.161840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:00.161922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:00.291970 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:01.162886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:02.163027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:02.294164 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:03.163980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:04.164779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:04.297102 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:05.164879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:06.165011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:06.299181 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:07.165110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:08.165238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:08.301625 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:09.165461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:10.165677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:10.303782 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:11.166747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:12.166886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:12.306045 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:13.167895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:14.168088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:14.308506 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:15.168174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:16.168818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:16.310731 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:17.169572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:18.169654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:18.312705 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  I0523 07:32:18.312736 22 container_probe.go:1763] Restart count of pod container-probe-3240/liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d is now 4 (1m20.098440418s elapsed)
  E0523 07:32:19.169739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:20.170047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:20.314497 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:21.170672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:22.170796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:22.316809 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:23.171642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:24.171731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:24.319020 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:25.171749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:26.171837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:26.321923 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:27.172797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:28.172877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:28.323851 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:29.172967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:30.173184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:30.326197 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:31.174149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:32.174272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:32.328372 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:33.174586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:34.175198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:34.330426 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:35.175267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:36.175435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:36.332511 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:37.176335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:38.176456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:38.334322 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:39.176663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:40.177110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:40.337161 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:41.178091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:42.178230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:42.339445 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:43.178316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:44.179212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:44.342411 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:45.180291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:46.180823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:46.345008 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:47.181863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:48.182594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:48.347747 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:49.183133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:50.183846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:50.349719 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:51.184805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:52.184910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:52.352031 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:53.185859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:54.186213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:54.354499 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:55.186847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:56.187089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:56.357147 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:57.187853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:32:58.188808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:32:58.359868 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:32:59.188864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:00.189085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:33:00.362212 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:33:01.190044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:02.191021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:33:02.365030 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:33:03.191760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:04.192819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:33:04.367148 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:33:05.192903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:06.193551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:33:06.369745 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:33:07.193643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:08.193804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:33:08.371940 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:33:09.194776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:10.195026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:33:10.374094 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:33:11.196023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:12.196818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:33:12.377007 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:33:13.197482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:14.197971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:33:14.379397 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:33:15.198274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:16.198411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:33:16.381619 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:33:17.199347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:18.199444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:33:18.383709 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  E0523 07:33:19.199481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:20.199714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:33:20.385766 22 container_probe.go:1759] Get pod liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d in namespace container-probe-3240
  I0523 07:33:20.385792 22 container_probe.go:1763] Restart count of pod container-probe-3240/liveness-c09b3f4d-fa14-4e2f-8e07-94c8ce2c148d is now 5 (2m22.17149708s elapsed)
  STEP: deleting the pod @ 05/23/24 07:33:20.385
  I0523 07:33:20.391032 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3240" for this suite. @ 05/23/24 07:33:20.392
• [144.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 05/23/24 07:33:20.395
  I0523 07:33:20.395495 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/23/24 07:33:20.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:33:20.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:33:20.404
  E0523 07:33:21.199767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:22.200822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 05/23/24 07:33:22.417
  STEP: Cleaning up the configmap @ 05/23/24 07:33:22.419
  STEP: Cleaning up the pod @ 05/23/24 07:33:22.421
  I0523 07:33:22.425342 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-1151" for this suite. @ 05/23/24 07:33:22.427
• [2.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 05/23/24 07:33:22.429
  I0523 07:33:22.429620 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename events @ 05/23/24 07:33:22.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:33:22.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:33:22.438
  STEP: creating a test event @ 05/23/24 07:33:22.439
  STEP: listing events in all namespaces @ 05/23/24 07:33:22.442
  STEP: listing events in test namespace @ 05/23/24 07:33:22.443
  STEP: listing events with field selection filtering on source @ 05/23/24 07:33:22.444
  STEP: listing events with field selection filtering on reportingController @ 05/23/24 07:33:22.445
  STEP: getting the test event @ 05/23/24 07:33:22.446
  STEP: patching the test event @ 05/23/24 07:33:22.446
  STEP: getting the test event @ 05/23/24 07:33:22.449
  STEP: updating the test event @ 05/23/24 07:33:22.45
  STEP: getting the test event @ 05/23/24 07:33:22.452
  STEP: deleting the test event @ 05/23/24 07:33:22.453
  STEP: listing events in all namespaces @ 05/23/24 07:33:22.455
  STEP: listing events in test namespace @ 05/23/24 07:33:22.456
  I0523 07:33:22.458303 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6645" for this suite. @ 05/23/24 07:33:22.459
• [0.033 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 05/23/24 07:33:22.462
  I0523 07:33:22.462520 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename field-validation @ 05/23/24 07:33:22.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:33:22.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:33:22.469
  I0523 07:33:22.470941 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  E0523 07:33:23.201620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:24.201886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0523 07:33:24.998240      22 warnings.go:70] unknown field "alpha"
  W0523 07:33:24.998261      22 warnings.go:70] unknown field "beta"
  W0523 07:33:24.998264      22 warnings.go:70] unknown field "delta"
  W0523 07:33:24.998267      22 warnings.go:70] unknown field "epsilon"
  W0523 07:33:24.998270      22 warnings.go:70] unknown field "gamma"
  E0523 07:33:25.202382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:33:25.515169 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3204" for this suite. @ 05/23/24 07:33:25.516
• [3.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 05/23/24 07:33:25.519
  I0523 07:33:25.519626 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename events @ 05/23/24 07:33:25.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:33:25.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:33:25.528
  STEP: Create set of events @ 05/23/24 07:33:25.529
  STEP: get a list of Events with a label in the current namespace @ 05/23/24 07:33:25.534
  STEP: delete a list of events @ 05/23/24 07:33:25.535
  I0523 07:33:25.535669 22 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/23/24 07:33:25.541
  I0523 07:33:25.542942 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-290" for this suite. @ 05/23/24 07:33:25.544
• [0.027 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 05/23/24 07:33:25.546
  I0523 07:33:25.546489 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename container-probe @ 05/23/24 07:33:25.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:33:25.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:33:25.553
  STEP: Creating pod liveness-6b0acf29-9765-4870-9a1d-5238380f4214 in namespace container-probe-7523 @ 05/23/24 07:33:25.555
  E0523 07:33:26.202485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:27.202647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/23/24 07:33:27.56
  I0523 07:33:27.561891 22 container_probe.go:1749] Initial restart count of pod liveness-6b0acf29-9765-4870-9a1d-5238380f4214 is 0
  I0523 07:33:27.562877 22 container_probe.go:1759] Get pod liveness-6b0acf29-9765-4870-9a1d-5238380f4214 in namespace container-probe-7523
  E0523 07:33:28.203635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:29.204693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:33:29.565051 22 container_probe.go:1759] Get pod liveness-6b0acf29-9765-4870-9a1d-5238380f4214 in namespace container-probe-7523
  E0523 07:33:30.204803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:31.204952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:33:31.567135 22 container_probe.go:1759] Get pod liveness-6b0acf29-9765-4870-9a1d-5238380f4214 in namespace container-probe-7523
  E0523 07:33:32.205769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:33.206508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:33:33.569484 22 container_probe.go:1759] Get pod liveness-6b0acf29-9765-4870-9a1d-5238380f4214 in namespace container-probe-7523
  E0523 07:33:34.207225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:35.207406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:33:35.571369 22 container_probe.go:1759] Get pod liveness-6b0acf29-9765-4870-9a1d-5238380f4214 in namespace container-probe-7523
  E0523 07:33:36.208131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:37.208854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:33:37.574166 22 container_probe.go:1759] Get pod liveness-6b0acf29-9765-4870-9a1d-5238380f4214 in namespace container-probe-7523
  E0523 07:33:38.209849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:39.209917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:33:39.576214 22 container_probe.go:1759] Get pod liveness-6b0acf29-9765-4870-9a1d-5238380f4214 in namespace container-probe-7523
  E0523 07:33:40.210520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:41.210641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:33:41.579016 22 container_probe.go:1759] Get pod liveness-6b0acf29-9765-4870-9a1d-5238380f4214 in namespace container-probe-7523
  E0523 07:33:42.211472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:43.211984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:33:43.581185 22 container_probe.go:1759] Get pod liveness-6b0acf29-9765-4870-9a1d-5238380f4214 in namespace container-probe-7523
  E0523 07:33:44.212805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:45.213422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:33:45.583847 22 container_probe.go:1759] Get pod liveness-6b0acf29-9765-4870-9a1d-5238380f4214 in namespace container-probe-7523
  E0523 07:33:46.213507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:47.213600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:33:47.586602 22 container_probe.go:1759] Get pod liveness-6b0acf29-9765-4870-9a1d-5238380f4214 in namespace container-probe-7523
  I0523 07:33:47.586630 22 container_probe.go:1763] Restart count of pod container-probe-7523/liveness-6b0acf29-9765-4870-9a1d-5238380f4214 is now 1 (20.024718558s elapsed)
  STEP: deleting the pod @ 05/23/24 07:33:47.586
  I0523 07:33:47.592346 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7523" for this suite. @ 05/23/24 07:33:47.593
• [22.049 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:355
  STEP: Creating a kubernetes client @ 05/23/24 07:33:47.595
  I0523 07:33:47.595943 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename kubectl @ 05/23/24 07:33:47.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:33:47.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:33:47.604
  STEP: creating a replication controller @ 05/23/24 07:33:47.605
  I0523 07:33:47.605977 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-42 create -f -'
  I0523 07:33:47.682738 22 builder.go:146] stderr: ""
  I0523 07:33:47.682767 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/23/24 07:33:47.682
  I0523 07:33:47.682836 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-42 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0523 07:33:47.723677 22 builder.go:146] stderr: ""
  I0523 07:33:47.723707 22 builder.go:147] stdout: "update-demo-nautilus-nbz9s update-demo-nautilus-nxbbw "
  I0523 07:33:47.723744 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-42 get pods update-demo-nautilus-nbz9s -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0523 07:33:47.762654 22 builder.go:146] stderr: ""
  I0523 07:33:47.762681 22 builder.go:147] stdout: ""
  I0523 07:33:47.762691 22 kubectl.go:2501] update-demo-nautilus-nbz9s is created but not running
  E0523 07:33:48.214236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:49.214448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:50.214703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:51.214959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:52.215025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:33:52.763706 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-42 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0523 07:33:52.803711 22 builder.go:146] stderr: ""
  I0523 07:33:52.803739 22 builder.go:147] stdout: "update-demo-nautilus-nbz9s update-demo-nautilus-nxbbw "
  I0523 07:33:52.803779 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-42 get pods update-demo-nautilus-nbz9s -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0523 07:33:52.842377 22 builder.go:146] stderr: ""
  I0523 07:33:52.842404 22 builder.go:147] stdout: "true"
  I0523 07:33:52.842493 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-42 get pods update-demo-nautilus-nbz9s -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0523 07:33:52.879317 22 builder.go:146] stderr: ""
  I0523 07:33:52.879347 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0523 07:33:52.879356 22 kubectl.go:2392] validating pod update-demo-nautilus-nbz9s
  I0523 07:33:52.886592 22 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0523 07:33:52.886637 22 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0523 07:33:52.886650 22 kubectl.go:2519] update-demo-nautilus-nbz9s is verified up and running
  I0523 07:33:52.886690 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-42 get pods update-demo-nautilus-nxbbw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0523 07:33:52.924357 22 builder.go:146] stderr: ""
  I0523 07:33:52.924384 22 builder.go:147] stdout: "true"
  I0523 07:33:52.924416 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-42 get pods update-demo-nautilus-nxbbw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0523 07:33:52.961954 22 builder.go:146] stderr: ""
  I0523 07:33:52.961980 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0523 07:33:52.961992 22 kubectl.go:2392] validating pod update-demo-nautilus-nxbbw
  I0523 07:33:52.967108 22 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0523 07:33:52.967150 22 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0523 07:33:52.967162 22 kubectl.go:2519] update-demo-nautilus-nxbbw is verified up and running
  STEP: scaling down the replication controller @ 05/23/24 07:33:52.967
  I0523 07:33:52.967912 22 kubectl.go:324] scanned /root for discovery docs: <nil>
  I0523 07:33:52.967939 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-42 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0523 07:33:53.215404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:33:54.014772 22 builder.go:146] stderr: ""
  I0523 07:33:54.014801 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/23/24 07:33:54.014
  I0523 07:33:54.014874 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-42 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0523 07:33:54.054698 22 builder.go:146] stderr: ""
  I0523 07:33:54.054735 22 builder.go:147] stdout: "update-demo-nautilus-nxbbw "
  I0523 07:33:54.054832 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-42 get pods update-demo-nautilus-nxbbw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0523 07:33:54.093353 22 builder.go:146] stderr: ""
  I0523 07:33:54.093382 22 builder.go:147] stdout: "true"
  I0523 07:33:54.093415 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-42 get pods update-demo-nautilus-nxbbw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0523 07:33:54.131991 22 builder.go:146] stderr: ""
  I0523 07:33:54.132020 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0523 07:33:54.132029 22 kubectl.go:2392] validating pod update-demo-nautilus-nxbbw
  I0523 07:33:54.143338 22 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0523 07:33:54.143379 22 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0523 07:33:54.143390 22 kubectl.go:2519] update-demo-nautilus-nxbbw is verified up and running
  STEP: scaling up the replication controller @ 05/23/24 07:33:54.143
  I0523 07:33:54.144098 22 kubectl.go:324] scanned /root for discovery docs: <nil>
  I0523 07:33:54.144122 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-42 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0523 07:33:54.215463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:33:55.193024 22 builder.go:146] stderr: ""
  I0523 07:33:55.193059 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/23/24 07:33:55.193
  I0523 07:33:55.193138 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-42 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0523 07:33:55.216415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:33:55.232997 22 builder.go:146] stderr: ""
  I0523 07:33:55.233032 22 builder.go:147] stdout: "update-demo-nautilus-b7lxp update-demo-nautilus-nxbbw "
  I0523 07:33:55.233073 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-42 get pods update-demo-nautilus-b7lxp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0523 07:33:55.272069 22 builder.go:146] stderr: ""
  I0523 07:33:55.272097 22 builder.go:147] stdout: ""
  I0523 07:33:55.272107 22 kubectl.go:2501] update-demo-nautilus-b7lxp is created but not running
  E0523 07:33:56.217100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:57.217616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:58.218347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:33:59.218486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:00.218563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:34:00.272766 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-42 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0523 07:34:00.312592 22 builder.go:146] stderr: ""
  I0523 07:34:00.312620 22 builder.go:147] stdout: "update-demo-nautilus-b7lxp update-demo-nautilus-nxbbw "
  I0523 07:34:00.312657 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-42 get pods update-demo-nautilus-b7lxp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0523 07:34:00.351160 22 builder.go:146] stderr: ""
  I0523 07:34:00.351189 22 builder.go:147] stdout: "true"
  I0523 07:34:00.351265 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-42 get pods update-demo-nautilus-b7lxp -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0523 07:34:00.389795 22 builder.go:146] stderr: ""
  I0523 07:34:00.389823 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0523 07:34:00.389833 22 kubectl.go:2392] validating pod update-demo-nautilus-b7lxp
  I0523 07:34:00.394523 22 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0523 07:34:00.394563 22 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0523 07:34:00.394576 22 kubectl.go:2519] update-demo-nautilus-b7lxp is verified up and running
  I0523 07:34:00.394619 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-42 get pods update-demo-nautilus-nxbbw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0523 07:34:00.432629 22 builder.go:146] stderr: ""
  I0523 07:34:00.432658 22 builder.go:147] stdout: "true"
  I0523 07:34:00.432697 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-42 get pods update-demo-nautilus-nxbbw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0523 07:34:00.470417 22 builder.go:146] stderr: ""
  I0523 07:34:00.470444 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0523 07:34:00.470456 22 kubectl.go:2392] validating pod update-demo-nautilus-nxbbw
  I0523 07:34:00.477629 22 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0523 07:34:00.477670 22 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0523 07:34:00.477680 22 kubectl.go:2519] update-demo-nautilus-nxbbw is verified up and running
  STEP: using delete to clean up resources @ 05/23/24 07:34:00.477
  I0523 07:34:00.477739 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-42 delete --grace-period=0 --force -f -'
  I0523 07:34:00.517452 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0523 07:34:00.517478 22 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0523 07:34:00.517578 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-42 get rc,svc -l name=update-demo --no-headers'
  I0523 07:34:00.564681 22 builder.go:146] stderr: "No resources found in kubectl-42 namespace.\n"
  I0523 07:34:00.564714 22 builder.go:147] stdout: ""
  I0523 07:34:00.564762 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-42 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0523 07:34:00.611095 22 builder.go:146] stderr: ""
  I0523 07:34:00.611132 22 builder.go:147] stdout: ""
  I0523 07:34:00.611221 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-42" for this suite. @ 05/23/24 07:34:00.612
• [13.019 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 05/23/24 07:34:00.615
  I0523 07:34:00.615283 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename sched-preemption @ 05/23/24 07:34:00.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:34:00.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:34:00.624
  I0523 07:34:00.632453 22 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0523 07:34:01.218966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:02.219172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:03.219880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:04.220832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:05.221731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:06.221870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:07.222435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:08.222521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:09.222600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:10.222828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:11.223420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:12.223566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:13.223758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:14.224806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:15.225413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:16.225555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:17.226603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:18.226681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:19.227161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:20.227583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:21.227566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:22.228112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:23.228188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:24.229247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:25.229415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:26.229548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:27.230538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:28.230657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:29.231081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:30.232066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:31.232815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:32.232943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:33.233668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:34.233860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:35.234651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:36.234776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:37.235365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:38.235491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:39.235590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:40.235746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:41.236802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:42.236892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:43.237080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:44.237248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:45.237861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:46.237992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:47.238720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:48.238838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:49.239438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:50.239663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:51.239743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:52.240806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:53.241603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:54.241801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:55.242568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:56.242686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:57.243392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:58.243481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:34:59.243747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:00.244808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:35:00.635481 22 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/23/24 07:35:00.636
  I0523 07:35:00.646321 22 preemption.go:178] Created pod: pod0-0-sched-preemption-low-priority
  I0523 07:35:00.650693 22 preemption.go:178] Created pod: pod0-1-sched-preemption-medium-priority
  I0523 07:35:00.661290 22 preemption.go:178] Created pod: pod1-0-sched-preemption-medium-priority
  I0523 07:35:00.665782 22 preemption.go:178] Created pod: pod1-1-sched-preemption-medium-priority
  I0523 07:35:00.677266 22 preemption.go:178] Created pod: pod2-0-sched-preemption-medium-priority
  I0523 07:35:00.683143 22 preemption.go:178] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/23/24 07:35:00.683
  E0523 07:35:01.245703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:02.245754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 05/23/24 07:35:02.692
  E0523 07:35:03.246567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:04.246819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:05.246925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:06.247136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:35:06.723558 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3359" for this suite. @ 05/23/24 07:35:06.724
• [66.112 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 05/23/24 07:35:06.727
  I0523 07:35:06.727064 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename resourcequota @ 05/23/24 07:35:06.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:35:06.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:35:06.738
  STEP: Counting existing ResourceQuota @ 05/23/24 07:35:06.739
  E0523 07:35:07.248174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:08.248805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:09.249699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:10.249794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:11.250800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/23/24 07:35:11.741
  STEP: Ensuring resource quota status is calculated @ 05/23/24 07:35:11.744
  E0523 07:35:12.251598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:13.252430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 05/23/24 07:35:13.746
  STEP: Ensuring ResourceQuota status captures the pod usage @ 05/23/24 07:35:13.753
  E0523 07:35:14.253231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:15.253412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 05/23/24 07:35:15.755
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 05/23/24 07:35:15.757
  STEP: Ensuring a pod cannot update its resource requirements @ 05/23/24 07:35:15.758
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 05/23/24 07:35:15.759
  E0523 07:35:16.253610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:17.253733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/23/24 07:35:17.762
  STEP: Ensuring resource quota status released the pod usage @ 05/23/24 07:35:17.767
  E0523 07:35:18.253844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:19.253964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:35:19.769866 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4996" for this suite. @ 05/23/24 07:35:19.771
• [13.047 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 05/23/24 07:35:19.773
  I0523 07:35:19.773897 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename daemonsets @ 05/23/24 07:35:19.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:35:19.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:35:19.782
  STEP: Creating simple DaemonSet "daemon-set" @ 05/23/24 07:35:19.79
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/23/24 07:35:19.792
  I0523 07:35:19.799997 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0523 07:35:19.800015 22 fixtures.go:130] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  E0523 07:35:20.254567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:35:20.797005 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0523 07:35:20.797031 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 05/23/24 07:35:20.798
  STEP: DeleteCollection of the DaemonSets @ 05/23/24 07:35:20.799
  STEP: Verify that ReplicaSets have been deleted @ 05/23/24 07:35:20.801
  I0523 07:35:20.805031 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"86140"},"items":null}

  I0523 07:35:20.806982 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"86140"},"items":[{"metadata":{"name":"daemon-set-jk85v","generateName":"daemon-set-","namespace":"daemonsets-714","uid":"3f5bf2fe-e40f-4a10-ab28-709349ab7a57","resourceVersion":"86132","creationTimestamp":"2024-05-23T07:35:19Z","labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"5b8ca5bc-948c-4603-9a22-17640f9681e3","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-23T07:35:19Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5b8ca5bc-948c-4603-9a22-17640f9681e3\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-23T07:35:20Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.20.254.26\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-slnpw","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-slnpw","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8s-10-255-0-207","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8s-10-255-0-207"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-23T07:35:20Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-23T07:35:19Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-23T07:35:20Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-23T07:35:20Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-23T07:35:19Z"}],"hostIP":"10.255.0.207","hostIPs":[{"ip":"10.255.0.207"}],"podIP":"172.20.254.26","podIPs":[{"ip":"172.20.254.26"}],"startTime":"2024-05-23T07:35:19Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-23T07:35:20Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://2b72221e176a0472471048dc229971fbc357652e435a352e6553d99bf6678d49","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-qwfn8","generateName":"daemon-set-","namespace":"daemonsets-714","uid":"bd910bbb-c4eb-4000-8d68-00e5319aa53c","resourceVersion":"86137","creationTimestamp":"2024-05-23T07:35:19Z","labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"5b8ca5bc-948c-4603-9a22-17640f9681e3","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-23T07:35:19Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5b8ca5bc-948c-4603-9a22-17640f9681e3\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-23T07:35:20Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.20.69.147\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-x6cdz","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-x6cdz","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8s-10-255-0-209","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8s-10-255-0-209"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-23T07:35:20Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-23T07:35:19Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-23T07:35:20Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-23T07:35:20Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-23T07:35:19Z"}],"hostIP":"10.255.0.209","hostIPs":[{"ip":"10.255.0.209"}],"podIP":"172.20.69.147","podIPs":[{"ip":"172.20.69.147"}],"startTime":"2024-05-23T07:35:19Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-23T07:35:20Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://ef328366530d47000f20f20e80a8ed947f90f0039276c1da8a4663555e966465","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-zw5zq","generateName":"daemon-set-","namespace":"daemonsets-714","uid":"529960b8-932c-4f12-a1be-7a3c3431e973","resourceVersion":"86134","creationTimestamp":"2024-05-23T07:35:19Z","labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"5b8ca5bc-948c-4603-9a22-17640f9681e3","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-23T07:35:19Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5b8ca5bc-948c-4603-9a22-17640f9681e3\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-23T07:35:20Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.20.64.141\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-5js9d","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-5js9d","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8s-10-255-0-208","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8s-10-255-0-208"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-23T07:35:20Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-23T07:35:19Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-23T07:35:20Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-23T07:35:20Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-23T07:35:19Z"}],"hostIP":"10.255.0.208","hostIPs":[{"ip":"10.255.0.208"}],"podIP":"172.20.64.141","podIPs":[{"ip":"172.20.64.141"}],"startTime":"2024-05-23T07:35:19Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-23T07:35:20Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://2b992fdb665ab4833f6bbc8c18b1cd2a321123a483c1e20d538ed94335ab15ac","started":true}],"qosClass":"BestEffort"}}]}

  I0523 07:35:20.815410 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-714" for this suite. @ 05/23/24 07:35:20.816
• [1.045 seconds]
------------------------------
SS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 05/23/24 07:35:20.819
  I0523 07:35:20.819065 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename sysctl @ 05/23/24 07:35:20.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:35:20.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:35:20.826
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 05/23/24 07:35:20.828
  STEP: Watching for error events or started pod @ 05/23/24 07:35:20.831
  E0523 07:35:21.255373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:22.255509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 05/23/24 07:35:22.834
  STEP: Checking that the pod succeeded @ 05/23/24 07:35:22.837
  STEP: Getting logs from the pod @ 05/23/24 07:35:22.837
  STEP: Checking that the sysctl is actually updated @ 05/23/24 07:35:22.848
  I0523 07:35:22.848878 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5803" for this suite. @ 05/23/24 07:35:22.85
• [2.033 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 05/23/24 07:35:22.852
  I0523 07:35:22.852528 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename kubectl-logs @ 05/23/24 07:35:22.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:35:22.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:35:22.86
  STEP: creating an pod @ 05/23/24 07:35:22.861
  I0523 07:35:22.861975 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-logs-9908 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0523 07:35:22.904141 22 builder.go:146] stderr: ""
  I0523 07:35:22.904173 22 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 05/23/24 07:35:22.904
  I0523 07:35:22.904242 22 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0523 07:35:23.256457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:24.256613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:35:24.908121 22 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 05/23/24 07:35:24.908
  I0523 07:35:24.908200 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-logs-9908 logs logs-generator logs-generator'
  I0523 07:35:24.949447 22 builder.go:146] stderr: ""
  I0523 07:35:24.949495 22 builder.go:147] stdout: "I0523 07:35:23.418332       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/vsp 498\nI0523 07:35:23.618421       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/jgl 266\nI0523 07:35:23.818939       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/227 442\nI0523 07:35:24.019219       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/ds2m 382\nI0523 07:35:24.218445       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/sdqd 333\nI0523 07:35:24.418728       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/8cjd 429\nI0523 07:35:24.619011       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/cg5c 494\nI0523 07:35:24.819294       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/qzm 510\n"
  STEP: limiting log lines @ 05/23/24 07:35:24.949
  I0523 07:35:24.949567 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-logs-9908 logs logs-generator logs-generator --tail=1'
  I0523 07:35:24.990908 22 builder.go:146] stderr: ""
  I0523 07:35:24.990946 22 builder.go:147] stdout: "I0523 07:35:24.819294       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/qzm 510\n"
  I0523 07:35:24.990959 22 logs.go:127] got output "I0523 07:35:24.819294       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/qzm 510\n"
  STEP: limiting log bytes @ 05/23/24 07:35:24.991
  I0523 07:35:24.991134 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-logs-9908 logs logs-generator logs-generator --limit-bytes=1'
  I0523 07:35:25.044826 22 builder.go:146] stderr: ""
  I0523 07:35:25.044853 22 builder.go:147] stdout: "I"
  I0523 07:35:25.044861 22 logs.go:133] got output "I"
  STEP: exposing timestamps @ 05/23/24 07:35:25.044
  I0523 07:35:25.044964 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-logs-9908 logs logs-generator logs-generator --tail=1 --timestamps'
  I0523 07:35:25.085535 22 builder.go:146] stderr: ""
  I0523 07:35:25.085566 22 builder.go:147] stdout: "2024-05-23T15:35:25.018563854+08:00 I0523 07:35:25.018519       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/qgxs 303\n"
  I0523 07:35:25.085574 22 logs.go:139] got output "2024-05-23T15:35:25.018563854+08:00 I0523 07:35:25.018519       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/qgxs 303\n"
  STEP: restricting to a time range @ 05/23/24 07:35:25.085
  E0523 07:35:25.256811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:26.257416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:27.257601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:35:27.586024 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-logs-9908 logs logs-generator logs-generator --since=1s'
  I0523 07:35:27.627836 22 builder.go:146] stderr: ""
  I0523 07:35:27.627874 22 builder.go:147] stdout: "I0523 07:35:26.818995       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/5qv 211\nI0523 07:35:27.019272       1 logs_generator.go:76] 18 POST /api/v1/namespaces/ns/pods/c47 554\nI0523 07:35:27.218495       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/nr4g 582\nI0523 07:35:27.418780       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/2h87 304\nI0523 07:35:27.619063       1 logs_generator.go:76] 21 GET /api/v1/namespaces/kube-system/pods/4v2 516\n"
  I0523 07:35:27.627964 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-logs-9908 logs logs-generator logs-generator --since=24h'
  I0523 07:35:27.668840 22 builder.go:146] stderr: ""
  I0523 07:35:27.668880 22 builder.go:147] stdout: "I0523 07:35:23.418332       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/vsp 498\nI0523 07:35:23.618421       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/jgl 266\nI0523 07:35:23.818939       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/227 442\nI0523 07:35:24.019219       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/ds2m 382\nI0523 07:35:24.218445       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/sdqd 333\nI0523 07:35:24.418728       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/8cjd 429\nI0523 07:35:24.619011       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/cg5c 494\nI0523 07:35:24.819294       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/qzm 510\nI0523 07:35:25.018519       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/qgxs 303\nI0523 07:35:25.218801       1 logs_generator.go:76] 9 POST /api/v1/namespaces/default/pods/m5q6 402\nI0523 07:35:25.419085       1 logs_generator.go:76] 10 POST /api/v1/namespaces/kube-system/pods/fz2 214\nI0523 07:35:25.619364       1 logs_generator.go:76] 11 GET /api/v1/namespaces/kube-system/pods/l88 444\nI0523 07:35:25.818642       1 logs_generator.go:76] 12 GET /api/v1/namespaces/kube-system/pods/dpv 415\nI0523 07:35:26.018921       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/ns/pods/mdr 362\nI0523 07:35:26.219206       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/ns/pods/gt4 230\nI0523 07:35:26.418431       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/ns/pods/xsz 333\nI0523 07:35:26.618714       1 logs_generator.go:76] 16 POST /api/v1/namespaces/ns/pods/nh7 329\nI0523 07:35:26.818995       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/5qv 211\nI0523 07:35:27.019272       1 logs_generator.go:76] 18 POST /api/v1/namespaces/ns/pods/c47 554\nI0523 07:35:27.218495       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/nr4g 582\nI0523 07:35:27.418780       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/2h87 304\nI0523 07:35:27.619063       1 logs_generator.go:76] 21 GET /api/v1/namespaces/kube-system/pods/4v2 516\n"
  I0523 07:35:27.668979 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-logs-9908 delete pod logs-generator'
  E0523 07:35:28.258664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:35:28.503113 22 builder.go:146] stderr: ""
  I0523 07:35:28.503141 22 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0523 07:35:28.503270 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-9908" for this suite. @ 05/23/24 07:35:28.504
• [5.655 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 05/23/24 07:35:28.507
  I0523 07:35:28.507494 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename statefulset @ 05/23/24 07:35:28.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:35:28.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:35:28.515
  STEP: Creating service test in namespace statefulset-1097 @ 05/23/24 07:35:28.517
  I0523 07:35:28.530838 22 wait.go:40] Found 0 stateful pods, waiting for 1
  E0523 07:35:29.259689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:30.259748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:31.260826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:32.260967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:33.261038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:34.261202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:35.261451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:36.261573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:37.261653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:38.261779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:35:38.523986 22 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 05/23/24 07:35:38.526
  W0523 07:35:38.529177      22 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  I0523 07:35:38.532659 22 wait.go:40] Found 1 stateful pods, waiting for 2
  E0523 07:35:39.262208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:40.262446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:41.263145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:42.264035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:43.264810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:44.264972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:45.265208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:46.265412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:47.266037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:48.266654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:35:48.532925 22 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0523 07:35:48.532952 22 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 05/23/24 07:35:48.535
  STEP: Delete all of the StatefulSets @ 05/23/24 07:35:48.536
  STEP: Verify that StatefulSets have been deleted @ 05/23/24 07:35:48.539
  I0523 07:35:48.540981 22 statefulset.go:135] Deleting all statefulset in ns statefulset-1097
  I0523 07:35:48.544748 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1097" for this suite. @ 05/23/24 07:35:48.546
• [20.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 05/23/24 07:35:48.552
  I0523 07:35:48.552963 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename field-validation @ 05/23/24 07:35:48.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:35:48.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:35:48.56
  I0523 07:35:48.563221 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  E0523 07:35:49.267575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:50.268031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0523 07:35:51.093081      22 warnings.go:70] unknown field "alpha"
  W0523 07:35:51.093098      22 warnings.go:70] unknown field "beta"
  W0523 07:35:51.093101      22 warnings.go:70] unknown field "delta"
  W0523 07:35:51.093105      22 warnings.go:70] unknown field "epsilon"
  W0523 07:35:51.093109      22 warnings.go:70] unknown field "gamma"
  E0523 07:35:51.268106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:35:51.608108 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6851" for this suite. @ 05/23/24 07:35:51.609
• [3.059 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 05/23/24 07:35:51.611
  I0523 07:35:51.611763 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename kubectl @ 05/23/24 07:35:51.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:35:51.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:35:51.621
  STEP: validating cluster-info @ 05/23/24 07:35:51.623
  I0523 07:35:51.623166 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-5412 cluster-info'
  I0523 07:35:51.668275 22 builder.go:146] stderr: ""
  I0523 07:35:51.668307 22 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.68.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0523 07:35:51.668439 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5412" for this suite. @ 05/23/24 07:35:51.669
• [0.061 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 05/23/24 07:35:51.672
  I0523 07:35:51.672949 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/23/24 07:35:51.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:35:51.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:35:51.679
  I0523 07:35:51.681295 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  E0523 07:35:52.268388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/23/24 07:35:52.834
  I0523 07:35:52.834614 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-6780 --namespace=crd-publish-openapi-6780 create -f -'
  E0523 07:35:53.269446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:54.270304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:35:54.890766 22 builder.go:146] stderr: ""
  I0523 07:35:54.890797 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1593-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0523 07:35:54.890834 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-6780 --namespace=crd-publish-openapi-6780 delete e2e-test-crd-publish-openapi-1593-crds test-cr'
  I0523 07:35:54.931075 22 builder.go:146] stderr: ""
  I0523 07:35:54.931108 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1593-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0523 07:35:54.931146 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-6780 --namespace=crd-publish-openapi-6780 apply -f -'
  I0523 07:35:54.976969 22 builder.go:146] stderr: ""
  I0523 07:35:54.977005 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1593-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0523 07:35:54.977040 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-6780 --namespace=crd-publish-openapi-6780 delete e2e-test-crd-publish-openapi-1593-crds test-cr'
  I0523 07:35:55.030830 22 builder.go:146] stderr: ""
  I0523 07:35:55.030861 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1593-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/23/24 07:35:55.03
  I0523 07:35:55.030924 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=crd-publish-openapi-6780 explain e2e-test-crd-publish-openapi-1593-crds'
  I0523 07:35:55.069878 22 builder.go:146] stderr: ""
  I0523 07:35:55.069928 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-1593-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0523 07:35:55.270960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:35:56.232436 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6780" for this suite. @ 05/23/24 07:35:56.236
• [4.566 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 05/23/24 07:35:56.238
  I0523 07:35:56.238760 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename secrets @ 05/23/24 07:35:56.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:35:56.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:35:56.246
  I0523 07:35:56.261363 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5274" for this suite. @ 05/23/24 07:35:56.262
• [0.026 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 05/23/24 07:35:56.265
  I0523 07:35:56.265159 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename prestop @ 05/23/24 07:35:56.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:35:56.27
  E0523 07:35:56.271264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:35:56.272
  STEP: Creating server pod server in namespace prestop-7961 @ 05/23/24 07:35:56.273
  STEP: Waiting for pods to come up. @ 05/23/24 07:35:56.277
  E0523 07:35:57.271758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:35:58.272829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-7961 @ 05/23/24 07:35:58.282
  E0523 07:35:59.272907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:00.273157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 05/23/24 07:36:00.288
  E0523 07:36:01.273794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:02.273871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:03.274016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:04.274530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:05.274778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:36:05.293288 22 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 05/23/24 07:36:05.293
  I0523 07:36:05.300191 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-7961" for this suite. @ 05/23/24 07:36:05.301
• [9.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 05/23/24 07:36:05.304
  I0523 07:36:05.304106 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename containers @ 05/23/24 07:36:05.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:36:05.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:36:05.312
  STEP: Creating a pod to test override all @ 05/23/24 07:36:05.313
  E0523 07:36:06.275228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:07.276219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:08.277105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:09.277543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:36:09.322
  I0523 07:36:09.323976 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod client-containers-e376915a-abce-4a0f-a4fb-bc75b21d0af4 container agnhost-container: <nil>
  STEP: delete the pod @ 05/23/24 07:36:09.326
  I0523 07:36:09.332632 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8214" for this suite. @ 05/23/24 07:36:09.333
• [4.032 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 05/23/24 07:36:09.336
  I0523 07:36:09.336048 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename resourcequota @ 05/23/24 07:36:09.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:36:09.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:36:09.344
  STEP: Discovering how many secrets are in namespace by default @ 05/23/24 07:36:09.345
  E0523 07:36:10.277826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:11.278116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:12.279154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:13.279763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:14.280319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 05/23/24 07:36:14.347
  E0523 07:36:15.281022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:16.281628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:17.281726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:18.281808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:19.281847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/23/24 07:36:19.349
  STEP: Ensuring resource quota status is calculated @ 05/23/24 07:36:19.352
  E0523 07:36:20.281919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:21.282352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 05/23/24 07:36:21.354
  STEP: Ensuring resource quota status captures secret creation @ 05/23/24 07:36:21.359
  E0523 07:36:22.282906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:23.282954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 05/23/24 07:36:23.361
  STEP: Ensuring resource quota status released usage @ 05/23/24 07:36:23.364
  E0523 07:36:24.283969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:25.284061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:36:25.365842 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4242" for this suite. @ 05/23/24 07:36:25.367
• [16.034 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 05/23/24 07:36:25.37
  I0523 07:36:25.370442 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename kubectl @ 05/23/24 07:36:25.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:36:25.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:36:25.379
  STEP: creating Agnhost RC @ 05/23/24 07:36:25.38
  I0523 07:36:25.380652 22 kubectl.go:1540] namespace kubectl-9029
  I0523 07:36:25.380686 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-9029 create -f -'
  I0523 07:36:25.456522 22 builder.go:146] stderr: ""
  I0523 07:36:25.456552 22 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/23/24 07:36:25.456
  E0523 07:36:26.284567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:36:26.458676 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0523 07:36:26.458699 22 framework.go:733] Found 0 / 1
  E0523 07:36:27.284793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:36:27.458920 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0523 07:36:27.458946 22 framework.go:733] Found 1 / 1
  I0523 07:36:27.458959 22 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0523 07:36:27.460240 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0523 07:36:27.460255 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0523 07:36:27.460260 22 kubectl.go:1547] wait on agnhost-primary startup in kubectl-9029 
  I0523 07:36:27.460299 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-9029 logs agnhost-primary-dnfs8 agnhost-primary'
  I0523 07:36:27.502329 22 builder.go:146] stderr: ""
  I0523 07:36:27.502366 22 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 05/23/24 07:36:27.502
  I0523 07:36:27.502517 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-9029 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0523 07:36:27.553783 22 builder.go:146] stderr: ""
  I0523 07:36:27.553819 22 builder.go:147] stdout: "service/rm2 exposed\n"
  I0523 07:36:27.556047 22 utils.go:1179] Service rm2 in namespace kubectl-9029 found.
  E0523 07:36:28.285438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:29.285523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 05/23/24 07:36:29.56
  I0523 07:36:29.560119 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-9029 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0523 07:36:29.603374 22 builder.go:146] stderr: ""
  I0523 07:36:29.603404 22 builder.go:147] stdout: "service/rm3 exposed\n"
  I0523 07:36:29.605570 22 utils.go:1179] Service rm3 in namespace kubectl-9029 found.
  E0523 07:36:30.286392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:31.286479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:36:31.608863 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9029" for this suite. @ 05/23/24 07:36:31.61
• [6.242 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 05/23/24 07:36:31.612
  I0523 07:36:31.612800 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename container-probe @ 05/23/24 07:36:31.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:36:31.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:36:31.62
  E0523 07:36:32.287433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:33.287757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:34.288774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:35.289372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:36.290303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:37.290598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:38.290870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:39.291729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:40.292755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:41.293518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:42.294489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:43.295362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:44.295389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:45.295954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:46.296677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:47.296949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:48.297858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:49.298564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:50.299624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:51.300520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:52.301549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:53.302376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:54.302392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:55.303056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:56.304018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:57.304652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:58.305584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:36:59.306396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:00.307321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:01.308187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:02.308819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:03.308921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:04.309881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:05.310302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:06.311048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:07.312012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:08.312718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:09.313753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:10.313830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:11.314727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:12.315628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:13.316541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:14.316598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:15.317197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:16.317252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:17.317632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:18.318483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:19.319519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:20.320383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:21.320816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:22.321070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:23.322034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:24.323028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:25.324059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:26.324806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:27.325849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:28.326599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:29.327533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:30.328565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:31.329136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:37:31.627404 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2671" for this suite. @ 05/23/24 07:37:31.629
• [60.018 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 05/23/24 07:37:31.631
  I0523 07:37:31.631324 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename webhook @ 05/23/24 07:37:31.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:37:31.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:37:31.638
  STEP: Setting up server cert @ 05/23/24 07:37:31.652
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/23/24 07:37:31.95
  STEP: Deploying the webhook pod @ 05/23/24 07:37:31.953
  STEP: Wait for the deployment to be ready @ 05/23/24 07:37:31.958
  I0523 07:37:31.961116 22 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0523 07:37:32.329612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:33.330563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/23/24 07:37:33.965
  STEP: Verifying the service has paired with the endpoint @ 05/23/24 07:37:33.97
  E0523 07:37:34.330942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:37:34.970645 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 05/23/24 07:37:34.973
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 05/23/24 07:37:34.974
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 05/23/24 07:37:34.974
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 05/23/24 07:37:34.974
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 05/23/24 07:37:34.975
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/23/24 07:37:34.975
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/23/24 07:37:34.975
  I0523 07:37:34.999377 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6613" for this suite. @ 05/23/24 07:37:35.001
  STEP: Destroying namespace "webhook-markers-1192" for this suite. @ 05/23/24 07:37:35.004
• [3.375 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 05/23/24 07:37:35.006
  I0523 07:37:35.006508 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename container-probe @ 05/23/24 07:37:35.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:37:35.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:37:35.017
  STEP: Creating pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437 @ 05/23/24 07:37:35.019
  E0523 07:37:35.332002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:36.332228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/23/24 07:37:37.026
  I0523 07:37:37.027992 22 container_probe.go:1749] Initial restart count of pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 is 0
  I0523 07:37:37.028991 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:37:37.332304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:38.332998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:37:39.031544 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:37:39.333863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:40.334005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:37:41.033473 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:37:41.334833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:42.334914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:37:43.035533 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:37:43.335876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:44.336194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:37:45.037722 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:37:45.336828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:46.337686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:37:47.040106 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:37:47.338505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:48.338635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:37:49.042206 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:37:49.339559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:50.339727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:37:51.044331 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:37:51.340659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:52.340791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:37:53.046292 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:37:53.341610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:54.342478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:37:55.049283 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:37:55.342558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:56.342813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:37:57.051175 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:37:57.343484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:37:58.343555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:37:59.053114 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:37:59.344557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:00.344635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:01.055172 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:01.345487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:02.345573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:03.057532 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:03.345812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:04.346120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:05.059608 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:05.346922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:06.347487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:07.061426 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:07.347565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:08.347703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:09.063191 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:09.348562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:10.348812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:11.065080 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:11.349447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:12.349579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:13.067261 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:13.350591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:14.351470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:15.070252 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:15.351594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:16.351703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:17.072359 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:17.352494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:18.352828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:19.074392 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:19.353736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:20.353821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:21.076295 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:21.354623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:22.354745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:23.078260 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:23.355635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:24.356019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:25.080318 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:25.356627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:26.356925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:27.082490 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:27.357668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:28.357789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:29.084367 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:29.358824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:30.358952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:31.086394 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:31.359432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:32.359556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:33.089155 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:33.360337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:34.360639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:35.092056 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:35.361431      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:36.361555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:37.094457 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:37.361710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:38.361836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:39.096766 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:39.362117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:40.362206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:41.098858 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:41.363219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:42.363338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:43.101130 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:43.364380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:44.364414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:45.103782 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:45.364803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:46.364939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:47.106534 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:47.365822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:48.366272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:49.108886 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:49.367263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:50.367386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:51.110882 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:51.368186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:52.368277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:53.112853 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:53.369080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:54.370078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:55.115308 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:55.370578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:56.370668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:57.117275 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:57.371580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:38:58.371715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:38:59.119180 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:38:59.372570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:00.373225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:01.121820 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:01.374104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:02.374238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:03.123850 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:03.375222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:04.375504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:05.126714 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:05.376041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:06.376134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:07.128687 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:07.376805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:08.376870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:09.131514 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:09.376994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:10.377558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:11.134288 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:11.378558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:12.378676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:13.136326 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:13.379349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:14.379434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:15.138601 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:15.379889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:16.380823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:17.141452 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:17.381794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:18.381872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:19.143470 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:19.382848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:20.382938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:21.145474 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:21.383736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:22.383819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:23.147549 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:23.384803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:24.385114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:25.149627 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:25.385923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:26.386773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:27.152410 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:27.387561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:28.388159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:29.154715 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:29.389129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:30.389679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:31.157203 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:31.390470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:32.390572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:33.159796 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:33.391078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:34.391345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:35.162849 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:35.392179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:36.392802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:37.165402 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:37.393653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:38.393770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:39.167244 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:39.394574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:40.394697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:41.169178 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:41.395505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:42.395639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:43.170833 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:43.396073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:44.397007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:45.173923 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:45.397101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:46.397228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:47.175801 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:47.397970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:48.398658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:49.177654 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:49.398915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:50.399606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:51.180516 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:51.399704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:52.399749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:53.183144 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:53.400468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:54.401512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:55.185363 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:55.401571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:56.401849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:57.187578 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:57.402321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:39:58.402409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:39:59.189421 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:39:59.402834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:00.402954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:01.191525 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:01.403734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:02.403754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:03.193485 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:03.404753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:04.405085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:05.196000 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:05.405238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:06.405333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:07.197638 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:07.405877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:08.406005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:09.199704 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:09.406071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:10.406199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:11.201626 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:11.406792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:12.407741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:13.204507 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:13.408743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:14.409065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:15.206832 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:15.410094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:16.410178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:17.208859 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:17.411101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:18.411222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:19.210723 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:19.412046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:20.412807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:21.213449 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:21.413699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:22.413826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:23.215494 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:23.414702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:24.415064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:25.217838 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:25.416064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:26.416801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:27.219766 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:27.416934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:28.417476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:29.222496 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:29.417718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:30.417809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:31.224423 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:31.418656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:32.418736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:33.226454 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:33.419685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:34.420066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:35.228736 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:35.421018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:36.421146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:37.230633 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:37.421858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:38.422310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:39.233328 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:39.422610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:40.422745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:41.235787 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:41.422908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:42.423976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:43.238551 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:43.424762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:44.425076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:45.240887 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:45.426128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:46.427021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:47.243852 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:47.427066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:48.427192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:49.246515 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:49.427814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:50.428805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:51.248333 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:51.429559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:52.430232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:53.250268 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:53.430512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:54.430608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:55.252994 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:55.431196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:56.431358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:57.255105 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:57.432317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:40:58.433246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:40:59.257017 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:40:59.433345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:00.433466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:41:01.258935 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:41:01.434113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:02.434204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:41:03.261370 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:41:03.434598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:04.435526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:41:05.263903 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:41:05.436178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:06.436812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:41:07.266545 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:41:07.437729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:08.437849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:41:09.268468 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:41:09.438748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:10.438876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:41:11.270569 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:41:11.439735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:12.439749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:41:13.272450 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:41:13.440656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:14.440963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:41:15.274764 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:41:15.441977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:16.442111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:41:17.276907 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:41:17.442118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:18.442241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:41:19.279509 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:41:19.442833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:20.442958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:41:21.281496 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:41:21.443700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:22.443754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:41:23.283442 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:41:23.444704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:24.445030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:41:25.285641 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:41:25.445817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:26.446375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:41:27.288130 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:41:27.447342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:28.447797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:41:29.290411 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:41:29.448636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:30.448726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:41:31.292410 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:41:31.449603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:32.449725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:41:33.295289 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:41:33.450449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:34.450499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:41:35.297542 22 container_probe.go:1759] Get pod liveness-9bf79d03-7cfb-4b02-8346-3baa27348e37 in namespace container-probe-3437
  E0523 07:41:35.450799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:36.450915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/23/24 07:41:37.297
  I0523 07:41:37.305957 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3437" for this suite. @ 05/23/24 07:41:37.307
• [242.303 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 05/23/24 07:41:37.31
  I0523 07:41:37.310240 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename downward-api @ 05/23/24 07:41:37.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:41:37.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:41:37.319
  STEP: Creating the pod @ 05/23/24 07:41:37.321
  E0523 07:41:37.451557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:38.451761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:39.452669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:41:39.843908 22 pod_client.go:141] Successfully updated pod "annotationupdateae19f0f4-9fd5-42f4-af63-fe5110da5954"
  E0523 07:41:40.453160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:41.453291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:41:41.849558 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5219" for this suite. @ 05/23/24 07:41:41.851
• [4.543 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 05/23/24 07:41:41.853
  I0523 07:41:41.853532 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename secrets @ 05/23/24 07:41:41.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:41:41.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:41:41.861
  STEP: Creating secret with name secret-test-f47a1e86-1620-45cd-8b88-aec96d1972be @ 05/23/24 07:41:41.87
  STEP: Creating a pod to test consume secrets @ 05/23/24 07:41:41.872
  E0523 07:41:42.453706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:43.453925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:44.454752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:45.454878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/23/24 07:41:45.881
  I0523 07:41:45.882614 22 output.go:196] Trying to get logs from node k8s-10-255-0-208 pod pod-secrets-c8552b74-aa67-4cde-8b87-ddf9cd741594 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/23/24 07:41:45.885
  I0523 07:41:45.891157 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1704" for this suite. @ 05/23/24 07:41:45.892
  STEP: Destroying namespace "secret-namespace-5638" for this suite. @ 05/23/24 07:41:45.895
• [4.044 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 05/23/24 07:41:45.897
  I0523 07:41:45.897411 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename container-probe @ 05/23/24 07:41:45.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:41:45.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:41:45.905
  STEP: Creating pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c in namespace container-probe-6466 @ 05/23/24 07:41:45.906
  E0523 07:41:46.455909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:47.456814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/23/24 07:41:47.914
  I0523 07:41:47.915345 22 container_probe.go:1749] Initial restart count of pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c is 0
  I0523 07:41:47.916373 22 container_probe.go:1759] Get pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c in namespace container-probe-6466
  E0523 07:41:48.456918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:49.457695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:41:49.919366 22 container_probe.go:1759] Get pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c in namespace container-probe-6466
  E0523 07:41:50.457915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:51.457991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:41:51.921202 22 container_probe.go:1759] Get pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c in namespace container-probe-6466
  E0523 07:41:52.458848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:53.459350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:41:53.923615 22 container_probe.go:1759] Get pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c in namespace container-probe-6466
  E0523 07:41:54.460289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:55.460824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:41:55.926224 22 container_probe.go:1759] Get pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c in namespace container-probe-6466
  E0523 07:41:56.461126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:57.461090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:41:57.928530 22 container_probe.go:1759] Get pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c in namespace container-probe-6466
  E0523 07:41:58.461106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:41:59.461265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:41:59.930587 22 container_probe.go:1759] Get pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c in namespace container-probe-6466
  E0523 07:42:00.462163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:01.462299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:42:01.932554 22 container_probe.go:1759] Get pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c in namespace container-probe-6466
  E0523 07:42:02.463136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:03.463203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:42:03.934148 22 container_probe.go:1759] Get pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c in namespace container-probe-6466
  E0523 07:42:04.463811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:05.464807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:42:05.936332 22 container_probe.go:1759] Get pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c in namespace container-probe-6466
  E0523 07:42:06.465700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:07.466305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:42:07.938363 22 container_probe.go:1759] Get pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c in namespace container-probe-6466
  E0523 07:42:08.466878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:09.467468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:42:09.940898 22 container_probe.go:1759] Get pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c in namespace container-probe-6466
  E0523 07:42:10.468069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:11.468804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:42:11.943049 22 container_probe.go:1759] Get pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c in namespace container-probe-6466
  E0523 07:42:12.469613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:13.469735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:42:13.944784 22 container_probe.go:1759] Get pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c in namespace container-probe-6466
  E0523 07:42:14.470172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:15.470591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:42:15.946580 22 container_probe.go:1759] Get pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c in namespace container-probe-6466
  E0523 07:42:16.471072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:17.471359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:42:17.948759 22 container_probe.go:1759] Get pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c in namespace container-probe-6466
  E0523 07:42:18.472301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:19.472448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:42:19.950733 22 container_probe.go:1759] Get pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c in namespace container-probe-6466
  E0523 07:42:20.473032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:21.473119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:42:21.953183 22 container_probe.go:1759] Get pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c in namespace container-probe-6466
  E0523 07:42:22.473630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:23.474590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:42:23.955733 22 container_probe.go:1759] Get pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c in namespace container-probe-6466
  E0523 07:42:24.475366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:25.475459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:42:25.958676 22 container_probe.go:1759] Get pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c in namespace container-probe-6466
  E0523 07:42:26.476092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:27.476816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:42:27.961202 22 container_probe.go:1759] Get pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c in namespace container-probe-6466
  E0523 07:42:28.477819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:29.478714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:42:29.963069 22 container_probe.go:1759] Get pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c in namespace container-probe-6466
  E0523 07:42:30.479617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:31.479762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:42:31.965104 22 container_probe.go:1759] Get pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c in namespace container-probe-6466
  E0523 07:42:32.480671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:33.480800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:42:33.967133 22 container_probe.go:1759] Get pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c in namespace container-probe-6466
  E0523 07:42:34.481783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:35.481872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:42:35.969452 22 container_probe.go:1759] Get pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c in namespace container-probe-6466
  E0523 07:42:36.482918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:37.483052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:42:37.971355 22 container_probe.go:1759] Get pod busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c in namespace container-probe-6466
  I0523 07:42:37.971384 22 container_probe.go:1763] Restart count of pod container-probe-6466/busybox-41cc29c6-2be6-48ab-b622-78fd76c4e41c is now 1 (50.056018424s elapsed)
  STEP: deleting the pod @ 05/23/24 07:42:37.971
  I0523 07:42:37.975534 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6466" for this suite. @ 05/23/24 07:42:37.977
• [52.082 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 05/23/24 07:42:37.979
  I0523 07:42:37.979941 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename replication-controller @ 05/23/24 07:42:37.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:42:37.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:42:37.987
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 05/23/24 07:42:37.989
  E0523 07:42:38.483150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:39.483448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 05/23/24 07:42:39.997
  STEP: Then the orphan pod is adopted @ 05/23/24 07:42:39.999
  E0523 07:42:40.484032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:42:41.003054 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8552" for this suite. @ 05/23/24 07:42:41.004
• [3.027 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 05/23/24 07:42:41.006
  I0523 07:42:41.006825 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename field-validation @ 05/23/24 07:42:41.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:42:41.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:42:41.014
  I0523 07:42:41.016392 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  E0523 07:42:41.484785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:42.485381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:43.485520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0523 07:42:43.542070      22 warnings.go:70] unknown field "alpha"
  W0523 07:42:43.542084      22 warnings.go:70] unknown field "beta"
  W0523 07:42:43.542088      22 warnings.go:70] unknown field "delta"
  W0523 07:42:43.542091      22 warnings.go:70] unknown field "epsilon"
  W0523 07:42:43.542095      22 warnings.go:70] unknown field "gamma"
  I0523 07:42:44.069349 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8186" for this suite. @ 05/23/24 07:42:44.07
• [3.066 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 05/23/24 07:42:44.072
  I0523 07:42:44.072946 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename pods @ 05/23/24 07:42:44.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:42:44.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:42:44.082
  STEP: creating the pod @ 05/23/24 07:42:44.084
  STEP: submitting the pod to kubernetes @ 05/23/24 07:42:44.084
  STEP: verifying QOS class is set on the pod @ 05/23/24 07:42:44.087
  I0523 07:42:44.088422 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6561" for this suite. @ 05/23/24 07:42:44.097
• [0.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 05/23/24 07:42:44.107
  I0523 07:42:44.107059 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename kubectl @ 05/23/24 07:42:44.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:42:44.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:42:44.12
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/23/24 07:42:44.124
  I0523 07:42:44.124362 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-4461 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0523 07:42:44.170660 22 builder.go:146] stderr: ""
  I0523 07:42:44.170689 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/23/24 07:42:44.17
  I0523 07:42:44.171986 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=kubectl-4461 delete pods e2e-test-httpd-pod'
  E0523 07:42:44.486376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:45.486514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:42:46.065614 22 builder.go:146] stderr: ""
  I0523 07:42:46.065649 22 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0523 07:42:46.065789 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4461" for this suite. @ 05/23/24 07:42:46.067
• [1.964 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 05/23/24 07:42:46.071
  I0523 07:42:46.071224 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1618661025
  STEP: Building a namespace api object, basename statefulset @ 05/23/24 07:42:46.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/23/24 07:42:46.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/23/24 07:42:46.081
  STEP: Creating service test in namespace statefulset-3802 @ 05/23/24 07:42:46.083
  STEP: Creating a new StatefulSet @ 05/23/24 07:42:46.085
  I0523 07:42:46.090916 22 wait.go:40] Found 0 stateful pods, waiting for 3
  E0523 07:42:46.487537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:47.489251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:48.489395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:49.489680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:50.490298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:51.490383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:52.490511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:53.490634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:54.491579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:55.491716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:42:56.090647 22 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0523 07:42:56.090673 22 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0523 07:42:56.090680 22 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0523 07:42:56.094403 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=statefulset-3802 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0523 07:42:56.158941 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0523 07:42:56.158972 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0523 07:42:56.158983 22 statefulset.go:2184] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0523 07:42:56.491770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:57.491848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:58.492826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:42:59.493001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:00.493960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:01.494098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:02.494227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:03.494363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:04.494397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:05.494522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/23/24 07:43:06.162
  I0523 07:43:06.176510 22 statefulset.go:2241] Updating stateful set ss2
  STEP: Creating a new revision @ 05/23/24 07:43:06.176
  E0523 07:43:06.495425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:07.495510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:08.495537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:09.495688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:10.495743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:11.496814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:12.496894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:13.496970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:14.497296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:15.498246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 05/23/24 07:43:16.18
  I0523 07:43:16.181786 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=statefulset-3802 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0523 07:43:16.242690 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0523 07:43:16.242719 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0523 07:43:16.242727 22 statefulset.go:2208] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0523 07:43:16.498704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:17.498987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:18.499111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:19.499752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:20.500819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:21.500952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:22.501031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:23.501152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:24.501508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:25.502020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 05/23/24 07:43:26.248
  I0523 07:43:26.248956 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=statefulset-3802 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0523 07:43:26.312776 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0523 07:43:26.312806 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0523 07:43:26.312817 22 statefulset.go:2184] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0523 07:43:26.502782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:27.502912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:28.503047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:29.503090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:30.503794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:31.504808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:32.504928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:33.505009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:34.505144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:35.505268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:43:36.330431 22 statefulset.go:2241] Updating stateful set ss2
  E0523 07:43:36.506151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:37.506278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:38.506410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:39.506489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:40.506617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:41.506758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:42.507197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:43.507782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:44.508021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:45.508109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 05/23/24 07:43:46.334
  I0523 07:43:46.335803 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1618661025 --namespace=statefulset-3802 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0523 07:43:46.398472 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0523 07:43:46.398503 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0523 07:43:46.398514 22 statefulset.go:2208] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0523 07:43:46.508541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:47.509050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:48.509175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:49.509354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:50.509491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:51.509629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:52.509777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:53.509914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:54.510181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:55.510264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:43:56.404548 22 statefulset.go:135] Deleting all statefulset in ns statefulset-3802
  I0523 07:43:56.405538 22 rest.go:150] Scaling statefulset ss2 to 0
  E0523 07:43:56.510521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:57.510538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:58.510719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:43:59.510924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:44:00.511004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:44:01.511549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:44:02.511687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:44:03.511741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:44:04.512739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0523 07:44:05.512869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0523 07:44:06.411671 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0523 07:44:06.412945 22 rest.go:88] Deleting statefulset ss2
  I0523 07:44:06.417241 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3802" for this suite. @ 05/23/24 07:44:06.418
• [80.350 seconds]
------------------------------
SSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0523 07:44:06.421710 22 suites.go:34] Running AfterSuite actions on node 1
  I0523 07:44:06.421723 22 util.go:614] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.035 seconds]
------------------------------

Ran 402 of 7197 Specs in 6331.993 seconds
SUCCESS! -- 402 Passed | 0 Failed | 0 Pending | 6795 Skipped
PASS

Ginkgo ran 1 suite in 1h45m32.598646054s
Test Suite Passed
