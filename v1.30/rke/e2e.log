  I0704 03:22:23.207639      20 e2e.go:109] Starting e2e run "252c0fc8-3647-4ebc-9705-0cb25ddd4e82" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1720063341 - will randomize all specs

Will run 402 of 7197 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0704 03:22:23.846410 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 03:22:23.848000 20 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  E0704 03:22:23.851361      20 progress.go:96] Failed to post progress update to http://localhost:8099/progress: Post "http://localhost:8099/progress": dial tcp 127.0.0.1:8099: connect: connection refused
  E0704 03:22:23.851448      20 progress.go:96] Failed to post progress update to http://localhost:8099/progress: Post "http://localhost:8099/progress": dial tcp 127.0.0.1:8099: connect: connection refused
  I0704 03:22:23.944010 20 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0704 03:22:23.952846 20 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'canal' (0 seconds elapsed)
  I0704 03:22:23.953074 20 e2e.go:245] e2e test version: v1.30.2
  I0704 03:22:23.955401 20 e2e.go:254] kube-apiserver version: v1.30.2
  I0704 03:22:23.955654 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 03:22:23.960493 20 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.114 seconds]
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:342
  STEP: Creating a kubernetes client @ 07/04/24 03:22:24.398
  I0704 03:22:24.398225 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename kubectl @ 07/04/24 03:22:24.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:22:24.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:22:24.428
  STEP: creating a replication controller @ 07/04/24 03:22:24.431
  I0704 03:22:24.432077 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-7764 create -f -'
  I0704 03:22:24.775210 20 builder.go:146] stderr: ""
  I0704 03:22:24.775255 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/04/24 03:22:24.775
  I0704 03:22:24.775353 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-7764 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0704 03:22:24.964336 20 builder.go:146] stderr: ""
  I0704 03:22:24.964392 20 builder.go:147] stdout: "update-demo-nautilus-p59c4 update-demo-nautilus-xprs2 "
  I0704 03:22:24.964456 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-7764 get pods update-demo-nautilus-p59c4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0704 03:22:25.143416 20 builder.go:146] stderr: ""
  I0704 03:22:25.143460 20 builder.go:147] stdout: ""
  I0704 03:22:25.143503 20 kubectl.go:2501] update-demo-nautilus-p59c4 is created but not running
  I0704 03:22:30.143694 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-7764 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0704 03:22:30.244213 20 builder.go:146] stderr: ""
  I0704 03:22:30.244261 20 builder.go:147] stdout: "update-demo-nautilus-p59c4 update-demo-nautilus-xprs2 "
  I0704 03:22:30.244335 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-7764 get pods update-demo-nautilus-p59c4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0704 03:22:30.322515 20 builder.go:146] stderr: ""
  I0704 03:22:30.322640 20 builder.go:147] stdout: ""
  I0704 03:22:30.322658 20 kubectl.go:2501] update-demo-nautilus-p59c4 is created but not running
  I0704 03:22:35.323586 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-7764 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0704 03:22:35.415089 20 builder.go:146] stderr: ""
  I0704 03:22:35.415133 20 builder.go:147] stdout: "update-demo-nautilus-p59c4 update-demo-nautilus-xprs2 "
  I0704 03:22:35.415194 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-7764 get pods update-demo-nautilus-p59c4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0704 03:22:35.489307 20 builder.go:146] stderr: ""
  I0704 03:22:35.489350 20 builder.go:147] stdout: "true"
  I0704 03:22:35.489411 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-7764 get pods update-demo-nautilus-p59c4 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0704 03:22:35.582693 20 builder.go:146] stderr: ""
  I0704 03:22:35.582744 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0704 03:22:35.582762 20 kubectl.go:2392] validating pod update-demo-nautilus-p59c4
  I0704 03:22:35.589587 20 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0704 03:22:35.591236 20 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0704 03:22:35.591256 20 kubectl.go:2519] update-demo-nautilus-p59c4 is verified up and running
  I0704 03:22:35.591313 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-7764 get pods update-demo-nautilus-xprs2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0704 03:22:35.747808 20 builder.go:146] stderr: ""
  I0704 03:22:35.747861 20 builder.go:147] stdout: "true"
  I0704 03:22:35.747930 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-7764 get pods update-demo-nautilus-xprs2 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0704 03:22:35.845729 20 builder.go:146] stderr: ""
  I0704 03:22:35.845776 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0704 03:22:35.845790 20 kubectl.go:2392] validating pod update-demo-nautilus-xprs2
  I0704 03:22:35.851607 20 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0704 03:22:35.851717 20 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0704 03:22:35.851734 20 kubectl.go:2519] update-demo-nautilus-xprs2 is verified up and running
  STEP: using delete to clean up resources @ 07/04/24 03:22:35.851
  I0704 03:22:35.853745 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-7764 delete --grace-period=0 --force -f -'
  I0704 03:22:35.937650 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0704 03:22:35.937739 20 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0704 03:22:35.937881 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-7764 get rc,svc -l name=update-demo --no-headers'
  I0704 03:22:36.033275 20 builder.go:146] stderr: "No resources found in kubectl-7764 namespace.\n"
  I0704 03:22:36.033326 20 builder.go:147] stdout: ""
  I0704 03:22:36.033392 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-7764 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0704 03:22:36.129834 20 builder.go:146] stderr: ""
  I0704 03:22:36.129880 20 builder.go:147] stdout: ""
  I0704 03:22:36.130215 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7764" for this suite. @ 07/04/24 03:22:36.134
â€¢ [11.745 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:833
  STEP: Creating a kubernetes client @ 07/04/24 03:22:36.143
  I0704 03:22:36.143889 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename job @ 07/04/24 03:22:36.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:22:36.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:22:36.181
  STEP: Creating a job @ 07/04/24 03:22:36.184
  STEP: Ensure pods equal to parallelism count is attached to the job @ 07/04/24 03:22:36.198
  STEP: patching /status @ 07/04/24 03:22:40.208
  STEP: updating /status @ 07/04/24 03:22:40.225
  STEP: get /status @ 07/04/24 03:22:40.231
  I0704 03:22:40.234783 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2346" for this suite. @ 07/04/24 03:22:40.237
â€¢ [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 07/04/24 03:22:40.243
  I0704 03:22:40.243124 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename configmap @ 07/04/24 03:22:40.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:22:40.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:22:40.256
  STEP: Creating configMap with name configmap-test-upd-029fa48c-7002-45b6-92a6-512d17bd15f0 @ 07/04/24 03:22:40.261
  STEP: Creating the pod @ 07/04/24 03:22:40.264
  STEP: Updating configmap configmap-test-upd-029fa48c-7002-45b6-92a6-512d17bd15f0 @ 07/04/24 03:22:50.331
  STEP: waiting to observe update in volume @ 07/04/24 03:22:50.338
  I0704 03:22:52.356412 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4001" for this suite. @ 07/04/24 03:22:52.359
â€¢ [12.121 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 07/04/24 03:22:52.372
  I0704 03:22:52.372684 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/04/24 03:22:52.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:22:52.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:22:52.392
  STEP: creating a target pod @ 07/04/24 03:22:52.408
  STEP: adding an ephemeral container @ 07/04/24 03:22:56.442
  STEP: checking pod container endpoints @ 07/04/24 03:22:58.476
  I0704 03:22:58.476783 20 exec_util.go:55] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6153 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 03:22:58.476805 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 03:22:58.477318 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 03:22:58.477401 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-6153/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0704 03:22:58.574190 20 exec_util.go:106] Exec stderr: ""
  I0704 03:22:58.590090 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6153" for this suite. @ 07/04/24 03:22:58.594
â€¢ [6.230 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 07/04/24 03:22:58.602
  I0704 03:22:58.602800 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename field-validation @ 07/04/24 03:22:58.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:22:58.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:22:58.639
  I0704 03:22:58.643281 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  W0704 03:23:01.191140      20 warnings.go:70] unknown field "alpha"
  W0704 03:23:01.191171      20 warnings.go:70] unknown field "beta"
  W0704 03:23:01.191177      20 warnings.go:70] unknown field "delta"
  W0704 03:23:01.191183      20 warnings.go:70] unknown field "epsilon"
  W0704 03:23:01.191189      20 warnings.go:70] unknown field "gamma"
  I0704 03:23:01.786028 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2624" for this suite. @ 07/04/24 03:23:01.794
â€¢ [3.207 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 07/04/24 03:23:01.809
  I0704 03:23:01.809743 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename downward-api @ 07/04/24 03:23:01.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:23:01.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:23:01.858
  STEP: Creating a pod to test downward API volume plugin @ 07/04/24 03:23:01.872
  STEP: Saw pod success @ 07/04/24 03:23:05.904
  I0704 03:23:05.906801 20 output.go:196] Trying to get logs from node 3.142.51.114 pod downwardapi-volume-93818190-d33b-4d77-91f8-6782430307f3 container client-container: <nil>
  STEP: delete the pod @ 07/04/24 03:23:05.918
  I0704 03:23:05.932054 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8656" for this suite. @ 07/04/24 03:23:05.934
â€¢ [4.131 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1284
  STEP: Creating a kubernetes client @ 07/04/24 03:23:05.94
  I0704 03:23:05.940757 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename services @ 07/04/24 03:23:05.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:23:05.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:23:05.958
  STEP: creating service nodeport-test with type=NodePort in namespace services-7354 @ 07/04/24 03:23:05.961
  STEP: creating replication controller nodeport-test in namespace services-7354 @ 07/04/24 03:23:06.005
  I0704 03:23:06.017537      20 runners.go:198] Created replication controller with name: nodeport-test, namespace: services-7354, replica count: 2
  I0704 03:23:09.068404      20 runners.go:198] nodeport-test Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0704 03:23:12.069430      20 runners.go:198] nodeport-test Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0704 03:23:15.070810      20 runners.go:198] nodeport-test Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0704 03:23:18.073063      20 runners.go:198] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0704 03:23:18.073145 20 resource.go:361] Creating new exec pod
  I0704 03:23:21.091041 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-7354 exec execpodws9pc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0704 03:23:21.384829 20 builder.go:146] stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0704 03:23:21.384937 20 builder.go:147] stdout: "nodeport-test-ljkmt"
  I0704 03:23:21.385202 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-7354 exec execpodws9pc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.193.190 80'
  I0704 03:23:21.599418 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.193.190 80\n+ echo hostName\nConnection to 10.43.193.190 80 port [tcp/http] succeeded!\n"
  I0704 03:23:21.599499 20 builder.go:147] stdout: "nodeport-test-hrcxh"
  I0704 03:23:21.599912 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-7354 exec execpodws9pc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.16.55 31104'
  I0704 03:23:21.811221 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.16.55 31104\nConnection to 172.31.16.55 31104 port [tcp/*] succeeded!\n"
  I0704 03:23:21.811276 20 builder.go:147] stdout: "nodeport-test-ljkmt"
  I0704 03:23:21.812013 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-7354 exec execpodws9pc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.23.45 31104'
  I0704 03:23:22.060117 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.23.45 31104\nConnection to 172.31.23.45 31104 port [tcp/*] succeeded!\n"
  I0704 03:23:22.060170 20 builder.go:147] stdout: "nodeport-test-hrcxh"
  I0704 03:23:22.060619 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7354" for this suite. @ 07/04/24 03:23:22.068
â€¢ [16.133 seconds]
------------------------------
SSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 07/04/24 03:23:22.074
  I0704 03:23:22.074284 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename configmap @ 07/04/24 03:23:22.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:23:22.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:23:22.096
  STEP: Creating configMap configmap-1096/configmap-test-4f753b29-9afd-4f95-8ab5-3f19de6bdc8f @ 07/04/24 03:23:22.1
  STEP: Creating a pod to test consume configMaps @ 07/04/24 03:23:22.104
  STEP: Saw pod success @ 07/04/24 03:23:26.126
  I0704 03:23:26.129481 20 output.go:196] Trying to get logs from node 18.118.109.209 pod pod-configmaps-74bf47c1-40d8-424e-900c-be85564d5727 container env-test: <nil>
  STEP: delete the pod @ 07/04/24 03:23:26.158
  I0704 03:23:26.178741 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1096" for this suite. @ 07/04/24 03:23:26.182
â€¢ [4.115 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 07/04/24 03:23:26.189
  I0704 03:23:26.189281 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 03:23:26.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:23:26.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:23:26.218
  STEP: Creating a pod to test downward API volume plugin @ 07/04/24 03:23:26.221
  STEP: Saw pod success @ 07/04/24 03:23:36.273
  I0704 03:23:36.278063 20 output.go:196] Trying to get logs from node 18.118.109.209 pod downwardapi-volume-a343b8a2-1acc-4d0f-a668-5f5054a11e37 container client-container: <nil>
  STEP: delete the pod @ 07/04/24 03:23:36.288
  I0704 03:23:36.308151 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5643" for this suite. @ 07/04/24 03:23:36.31
â€¢ [10.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:882
  STEP: Creating a kubernetes client @ 07/04/24 03:23:36.317
  I0704 03:23:36.317284 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename kubectl @ 07/04/24 03:23:36.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:23:36.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:23:36.339
  STEP: validating api versions @ 07/04/24 03:23:36.342
  I0704 03:23:36.343044 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-6241 api-versions'
  I0704 03:23:36.422232 20 builder.go:146] stderr: ""
  I0704 03:23:36.422286 20 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0704 03:23:36.422379 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6241" for this suite. @ 07/04/24 03:23:36.426
â€¢ [0.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 07/04/24 03:23:36.434
  I0704 03:23:36.434528 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename pv @ 07/04/24 03:23:36.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:23:36.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:23:36.49
  STEP: Creating initial PV and PVC @ 07/04/24 03:23:36.5
  I0704 03:23:36.500680 20 pv.go:390] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-1234" @ 07/04/24 03:23:36.515
  STEP: Listing PVCs in namespace "pv-1234" @ 07/04/24 03:23:36.519
  STEP: Patching the PV "pv-1234-6qhhl" @ 07/04/24 03:23:36.523
  STEP: Patching the PVC "pvc-mvk4c" @ 07/04/24 03:23:36.536
  STEP: Getting PV "pv-1234-6qhhl" @ 07/04/24 03:23:36.545
  STEP: Getting PVC "pvc-mvk4c" @ 07/04/24 03:23:36.549
  STEP: Deleting PVC "pvc-mvk4c" @ 07/04/24 03:23:36.552
  STEP: Confirm deletion of PVC "pvc-mvk4c" @ 07/04/24 03:23:36.56
  STEP: Deleting PV "pv-1234-6qhhl" @ 07/04/24 03:23:38.568
  STEP: Confirm deletion of PV "pv-1234-6qhhl" @ 07/04/24 03:23:38.574
  STEP: Recreating another PV & PVC @ 07/04/24 03:23:40.582
  I0704 03:23:40.582217 20 pv.go:390] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-1234-crbwt" @ 07/04/24 03:23:40.591
  STEP: Updating the PVC "pvc-sxp47" @ 07/04/24 03:23:40.612
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-sxp47=updated" @ 07/04/24 03:23:40.635
  STEP: Deleting PVC "pvc-sxp47" via DeleteCollection @ 07/04/24 03:23:40.64
  STEP: Confirm deletion of PVC "pvc-sxp47" @ 07/04/24 03:23:40.651
  STEP: Deleting PV "pv-1234-crbwt" via DeleteCollection @ 07/04/24 03:23:42.665
  STEP: Confirm deletion of PV "pv-1234-crbwt" @ 07/04/24 03:23:42.671
  I0704 03:23:44.678135 20 persistent_volumes.go:407] AfterEach: deleting 1 PVCs and 1 PVs...
  I0704 03:23:44.678242 20 pv.go:201] Deleting PersistentVolumeClaim "pvc-sxp47"
  I0704 03:23:44.680468 20 pv.go:189] Deleting PersistentVolume "pv-1234-crbwt"
  I0704 03:23:44.682908 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-1234" for this suite. @ 07/04/24 03:23:44.685
â€¢ [8.258 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 07/04/24 03:23:44.692
  I0704 03:23:44.692105 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename configmap @ 07/04/24 03:23:44.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:23:44.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:23:44.71
  STEP: Creating configMap with name configmap-test-volume-5c8bef88-e31c-49eb-9d5c-7c3c4e4a9aba @ 07/04/24 03:23:44.713
  STEP: Creating a pod to test consume configMaps @ 07/04/24 03:23:44.717
  STEP: Saw pod success @ 07/04/24 03:23:48.737
  I0704 03:23:48.749939 20 output.go:196] Trying to get logs from node 3.142.51.114 pod pod-configmaps-3618d741-0375-478e-bc21-5b01204dff5d container configmap-volume-test: <nil>
  STEP: delete the pod @ 07/04/24 03:23:48.758
  I0704 03:23:48.774743 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1784" for this suite. @ 07/04/24 03:23:48.777
â€¢ [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 07/04/24 03:23:48.791
  I0704 03:23:48.791865 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename emptydir @ 07/04/24 03:23:48.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:23:48.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:23:48.809
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/04/24 03:23:48.812
  STEP: Saw pod success @ 07/04/24 03:23:52.83
  I0704 03:23:52.833241 20 output.go:196] Trying to get logs from node 3.142.51.114 pod pod-35a5dd8e-a43e-4a50-9d0a-eeb3b41a6516 container test-container: <nil>
  STEP: delete the pod @ 07/04/24 03:23:52.84
  I0704 03:23:52.856428 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3739" for this suite. @ 07/04/24 03:23:52.861
â€¢ [4.080 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 07/04/24 03:23:52.867
  I0704 03:23:52.867897 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename crd-webhook @ 07/04/24 03:23:52.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:23:52.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:23:52.886
  STEP: Setting up server cert @ 07/04/24 03:23:52.889
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/04/24 03:23:53.311
  STEP: Deploying the custom resource conversion webhook pod @ 07/04/24 03:23:53.326
  STEP: Wait for the deployment to be ready @ 07/04/24 03:23:53.339
  I0704 03:23:53.347542 20 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  I0704 03:23:55.358525 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 4, 3, 23, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 23, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 23, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 23, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-6c44f5d846\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 07/04/24 03:23:57.361
  STEP: Verifying the service has paired with the endpoint @ 07/04/24 03:23:57.37
  I0704 03:23:58.371093 20 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0704 03:23:58.381856 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Creating a v1 custom resource @ 07/04/24 03:24:01.048
  STEP: v2 custom resource should be converted @ 07/04/24 03:24:01.066
  I0704 03:24:01.754973 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-408" for this suite. @ 07/04/24 03:24:01.763
â€¢ [8.974 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:601
  STEP: Creating a kubernetes client @ 07/04/24 03:24:01.842
  I0704 03:24:01.842829 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename job @ 07/04/24 03:24:01.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:24:02.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:24:02.105
  STEP: Creating a job @ 07/04/24 03:24:02.12
  STEP: Ensuring job reaches completions @ 07/04/24 03:24:02.135
  I0704 03:24:12.139182 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2776" for this suite. @ 07/04/24 03:24:12.141
â€¢ [10.304 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 07/04/24 03:24:12.147
  I0704 03:24:12.147299 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename limitrange @ 07/04/24 03:24:12.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:24:12.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:24:12.164
  STEP: Creating LimitRange "e2e-limitrange-jn4v6" in namespace "limitrange-2395" @ 07/04/24 03:24:12.167
  STEP: Creating another limitRange in another namespace @ 07/04/24 03:24:12.172
  I0704 03:24:12.189360 20 limit_range.go:299] Namespace "e2e-limitrange-jn4v6-9843" created
  I0704 03:24:12.189402 20 limit_range.go:300] Creating LimitRange "e2e-limitrange-jn4v6" in namespace "e2e-limitrange-jn4v6-9843"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-jn4v6" @ 07/04/24 03:24:12.198
  I0704 03:24:12.201179 20 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-jn4v6" in "limitrange-2395" namespace @ 07/04/24 03:24:12.201
  I0704 03:24:12.209806 20 limit_range.go:335] LimitRange "e2e-limitrange-jn4v6" has been patched
  STEP: Delete LimitRange "e2e-limitrange-jn4v6" by Collection with labelSelector: "e2e-limitrange-jn4v6=patched" @ 07/04/24 03:24:12.209
  STEP: Confirm that the limitRange "e2e-limitrange-jn4v6" has been deleted @ 07/04/24 03:24:12.215
  I0704 03:24:12.215555 20 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0704 03:24:12.217899 20 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-jn4v6=patched"
  I0704 03:24:12.217944 20 limit_range.go:344] LimitRange "e2e-limitrange-jn4v6" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-jn4v6" @ 07/04/24 03:24:12.217
  I0704 03:24:12.222753 20 limit_range.go:350] Found 1 limitRange
  I0704 03:24:12.223492 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2395" for this suite. @ 07/04/24 03:24:12.226
  STEP: Destroying namespace "e2e-limitrange-jn4v6-9843" for this suite. @ 07/04/24 03:24:12.23
â€¢ [0.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 07/04/24 03:24:12.249
  I0704 03:24:12.249922 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/04/24 03:24:12.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:24:12.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:24:12.309
  STEP: getting /apis @ 07/04/24 03:24:12.32
  STEP: getting /apis/admissionregistration.k8s.io @ 07/04/24 03:24:12.325
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 07/04/24 03:24:12.326
  STEP: creating @ 07/04/24 03:24:12.327
  STEP: getting @ 07/04/24 03:24:12.342
  STEP: listing @ 07/04/24 03:24:12.344
  STEP: watching @ 07/04/24 03:24:12.346
  I0704 03:24:12.346544 20 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 07/04/24 03:24:12.348
  STEP: updating @ 07/04/24 03:24:12.358
  I0704 03:24:12.364563 20 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 07/04/24 03:24:12.364
  STEP: deleting a collection @ 07/04/24 03:24:12.373
  I0704 03:24:12.388990 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9221" for this suite. @ 07/04/24 03:24:12.392
â€¢ [0.148 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 07/04/24 03:24:12.398
  I0704 03:24:12.398287 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename downward-api @ 07/04/24 03:24:12.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:24:12.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:24:12.416
  STEP: Creating a pod to test downward API volume plugin @ 07/04/24 03:24:12.419
  STEP: Saw pod success @ 07/04/24 03:24:16.442
  I0704 03:24:16.444913 20 output.go:196] Trying to get logs from node 18.191.27.132 pod downwardapi-volume-2764323e-93ca-4ea0-ae8d-c8186fb181ae container client-container: <nil>
  STEP: delete the pod @ 07/04/24 03:24:16.453
  I0704 03:24:16.467812 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8638" for this suite. @ 07/04/24 03:24:16.474
â€¢ [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 07/04/24 03:24:16.482
  I0704 03:24:16.483065 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename configmap @ 07/04/24 03:24:16.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:24:16.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:24:16.514
  STEP: Creating configMap that has name configmap-test-emptyKey-066d883b-3621-4268-8f85-bcd88cc82e67 @ 07/04/24 03:24:16.518
  I0704 03:24:16.520265 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3233" for this suite. @ 07/04/24 03:24:16.525
â€¢ [0.052 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 07/04/24 03:24:16.535
  I0704 03:24:16.535615 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename podtemplate @ 07/04/24 03:24:16.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:24:16.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:24:16.561
  STEP: Create set of pod templates @ 07/04/24 03:24:16.565
  I0704 03:24:16.572300 20 podtemplates.go:143] created test-podtemplate-1
  I0704 03:24:16.577015 20 podtemplates.go:143] created test-podtemplate-2
  I0704 03:24:16.583187 20 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 07/04/24 03:24:16.583
  STEP: delete collection of pod templates @ 07/04/24 03:24:16.585
  I0704 03:24:16.585930 20 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 07/04/24 03:24:16.601
  I0704 03:24:16.601688 20 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0704 03:24:16.604100 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9173" for this suite. @ 07/04/24 03:24:16.607
â€¢ [0.079 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 07/04/24 03:24:16.614
  I0704 03:24:16.615010 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/04/24 03:24:16.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:24:16.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:24:16.636
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 07/04/24 03:24:16.642
  I0704 03:24:16.642754 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 03:24:18.472482 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 03:24:24.389415 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7148" for this suite. @ 07/04/24 03:24:24.397
â€¢ [7.787 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 07/04/24 03:24:24.407
  I0704 03:24:24.407343 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename configmap @ 07/04/24 03:24:24.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:24:24.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:24:24.457
  STEP: Creating configMap configmap-5961/configmap-test-3a1556ea-e5eb-44cf-94f6-7bbc9006435f @ 07/04/24 03:24:24.459
  STEP: Creating a pod to test consume configMaps @ 07/04/24 03:24:24.463
  STEP: Saw pod success @ 07/04/24 03:24:28.487
  I0704 03:24:28.490718 20 output.go:196] Trying to get logs from node 18.191.27.132 pod pod-configmaps-846b4f12-bb28-4e7b-abeb-28de8ee7e651 container env-test: <nil>
  STEP: delete the pod @ 07/04/24 03:24:28.5
  I0704 03:24:28.525320 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5961" for this suite. @ 07/04/24 03:24:28.529
â€¢ [4.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 07/04/24 03:24:28.54
  I0704 03:24:28.540506 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename namespaces @ 07/04/24 03:24:28.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:24:28.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:24:28.568
  STEP: Creating a test namespace @ 07/04/24 03:24:28.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:24:28.603
  STEP: Creating a service in the namespace @ 07/04/24 03:24:28.608
  STEP: Deleting the namespace @ 07/04/24 03:24:28.621
  STEP: Waiting for the namespace to be removed. @ 07/04/24 03:24:28.651
  STEP: Recreating the namespace @ 07/04/24 03:24:34.655
  STEP: Verifying there is no service in the namespace @ 07/04/24 03:24:34.674
  I0704 03:24:34.678131 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2974" for this suite. @ 07/04/24 03:24:34.683
  STEP: Destroying namespace "nsdeletetest-8240" for this suite. @ 07/04/24 03:24:34.689
  I0704 03:24:34.693130 20 framework.go:370] Namespace nsdeletetest-8240 was already deleted
  STEP: Destroying namespace "nsdeletetest-3157" for this suite. @ 07/04/24 03:24:34.693
â€¢ [6.158 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 07/04/24 03:24:34.699
  I0704 03:24:34.699109 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename emptydir @ 07/04/24 03:24:34.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:24:34.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:24:34.84
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/04/24 03:24:34.843
  STEP: Saw pod success @ 07/04/24 03:24:38.867
  I0704 03:24:38.870972 20 output.go:196] Trying to get logs from node 18.191.27.132 pod pod-3f5aba4d-5e79-4494-9d1b-4c95e85ae13f container test-container: <nil>
  STEP: delete the pod @ 07/04/24 03:24:38.88
  I0704 03:24:38.898225 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4469" for this suite. @ 07/04/24 03:24:38.901
â€¢ [4.208 seconds]
------------------------------
S
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:789
  STEP: Creating a kubernetes client @ 07/04/24 03:24:38.906
  I0704 03:24:38.906990 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename services @ 07/04/24 03:24:38.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:24:38.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:24:38.925
  STEP: creating service endpoint-test2 in namespace services-345 @ 07/04/24 03:24:38.928
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-345 to expose endpoints map[] @ 07/04/24 03:24:38.948
  I0704 03:24:38.961961 20 service.go:4258] successfully validated that service endpoint-test2 in namespace services-345 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-345 @ 07/04/24 03:24:38.962
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-345 to expose endpoints map[pod1:[80]] @ 07/04/24 03:24:42.997
  I0704 03:24:43.014766 20 service.go:4258] successfully validated that service endpoint-test2 in namespace services-345 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 07/04/24 03:24:43.014
  I0704 03:24:43.014860 20 resource.go:361] Creating new exec pod
  I0704 03:24:48.042116 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-345 exec execpodp6jcx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0704 03:24:48.273869 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0704 03:24:48.273977 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0704 03:24:48.274315 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-345 exec execpodp6jcx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.175.115 80'
  I0704 03:24:48.480822 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.175.115 80\n+ echo hostName\nConnection to 10.43.175.115 80 port [tcp/http] succeeded!\n"
  I0704 03:24:48.480930 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-345 @ 07/04/24 03:24:48.48
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-345 to expose endpoints map[pod1:[80] pod2:[80]] @ 07/04/24 03:24:50.496
  I0704 03:24:50.506185 20 service.go:4258] successfully validated that service endpoint-test2 in namespace services-345 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 07/04/24 03:24:50.506
  I0704 03:24:51.507615 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-345 exec execpodp6jcx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0704 03:24:51.726073 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0704 03:24:51.726185 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0704 03:24:51.726270 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-345 exec execpodp6jcx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.175.115 80'
  I0704 03:24:51.916949 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.175.115 80\nConnection to 10.43.175.115 80 port [tcp/http] succeeded!\n"
  I0704 03:24:51.917014 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-345 @ 07/04/24 03:24:51.917
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-345 to expose endpoints map[pod2:[80]] @ 07/04/24 03:24:51.968
  I0704 03:24:53.017986 20 service.go:4258] successfully validated that service endpoint-test2 in namespace services-345 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 07/04/24 03:24:53.018
  I0704 03:24:54.018505 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-345 exec execpodp6jcx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0704 03:24:54.213671 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0704 03:24:54.213727 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0704 03:24:54.214011 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-345 exec execpodp6jcx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.175.115 80'
  I0704 03:24:54.416150 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.175.115 80\nConnection to 10.43.175.115 80 port [tcp/http] succeeded!\n"
  I0704 03:24:54.416209 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-345 @ 07/04/24 03:24:54.416
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-345 to expose endpoints map[] @ 07/04/24 03:24:54.441
  I0704 03:24:54.451052 20 service.go:4258] successfully validated that service endpoint-test2 in namespace services-345 exposes endpoints map[]
  I0704 03:24:54.486530 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-345" for this suite. @ 07/04/24 03:24:54.501
â€¢ [15.606 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 07/04/24 03:24:54.513
  I0704 03:24:54.513260 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename deployment @ 07/04/24 03:24:54.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:24:54.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:24:54.582
  I0704 03:24:54.586464 20 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0704 03:24:54.596476 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0704 03:24:59.603805 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/04/24 03:24:59.603
  I0704 03:25:01.625939 20 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0704 03:25:01.630523 20 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0704 03:25:01.635602 20 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0704 03:25:03.652353 20 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0704 03:25:03.655245 20 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0704 03:25:03.669478 20 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7364",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "de18e3dd-b278-432c-bf3e-c43159869ae4",
      ResourceVersion: (string) (len=4) "4159",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855660301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855660301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855660303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855660301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855660301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855660303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855660301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6f4b778cd6\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0704 03:25:03.694708 20 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-6f4b778cd6" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6f4b778cd6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7364",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f444b214-0c83-48df-9823-6f95b2f3cbcb",
      ResourceVersion: (string) (len=4) "4149",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855660301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "de18e3dd-b278-432c-bf3e-c43159869ae4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855660301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 65 31 38 65 33  64 64 2d 62 32 37 38 2d  |\"de18e3dd-b278-|
              00000120  34 33 32 63 2d 62 66 33  65 2d 63 34 33 31 35 39  |432c-bf3e-c43159|
              00000130  38 36 39 61 65 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |869ae4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855660303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0704 03:25:03.696009 20 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0704 03:25:03.696416 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7364",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7701ad1d-4c4a-4a36-81a3-2ff74b8cd2ce",
      ResourceVersion: (string) (len=4) "4158",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855660294,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "de18e3dd-b278-432c-bf3e-c43159869ae4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855660294,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855660303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 64 65 31 38 65 33 64  |"uid\":\"de18e3d|
              000000b0  64 2d 62 32 37 38 2d 34  33 32 63 2d 62 66 33 65  |d-b278-432c-bf3e|
              000000c0  2d 63 34 33 31 35 39 38  36 39 61 65 34 5c 22 7d  |-c43159869ae4\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855660303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0704 03:25:03.721087 20 deployment.go:67] Pod "test-rolling-update-deployment-6f4b778cd6-f2wd4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6f4b778cd6-f2wd4",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6f4b778cd6-",
      Namespace: (string) (len=15) "deployment-7364",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c27b6c0d-77ae-41e6-8a0b-1d0e526ec510",
      ResourceVersion: (string) (len=4) "4148",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855660301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d896fd3c4a83975c54b1b8ce68b01c4d1b0c9b9c0fb94e1f2e4de0d77038840b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.16/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.16/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6f4b778cd6",
          UID: (types.UID) (len=36) "f444b214-0c83-48df-9823-6f95b2f3cbcb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855660301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 34  34 34 62 32 31 34 2d 30  |d\":\"f444b214-0|
              00000090  63 38 33 2d 34 38 64 66  2d 39 38 32 33 2d 36 66  |c83-48df-9823-6f|
              000000a0  39 35 62 32 66 33 63 62  63 62 5c 22 7d 22 3a 7b  |95b2f3cbcb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855660302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855660303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 31 36  5c 22 7d 22 3a 7b 22 2e  |.42.2.16\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bcsx5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bcsx5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "3.142.51.114",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855660303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855660301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855660303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855660303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855660301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.23.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.23.45"
        }
      },
      PodIP: (string) (len=10) "10.42.2.16",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.16"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855660301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855660302,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=129) "docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=73) "docker://15a0a20a94b2a0f067b0025050802844105808f92db8dcd10565906d59ad9fc3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:25:03.724964 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7364" for this suite. @ 07/04/24 03:25:03.729
â€¢ [9.227 seconds]
------------------------------
SSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 07/04/24 03:25:03.74
  I0704 03:25:03.740365 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename containers @ 07/04/24 03:25:03.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:25:03.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:25:03.763
  I0704 03:25:05.799079 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7933" for this suite. @ 07/04/24 03:25:05.802
â€¢ [2.067 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 07/04/24 03:25:05.819
  I0704 03:25:05.819106 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename sysctl @ 07/04/24 03:25:05.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:25:05.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:25:05.838
  STEP: Creating a pod with one valid and two invalid sysctls @ 07/04/24 03:25:05.849
  I0704 03:25:05.854119 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6537" for this suite. @ 07/04/24 03:25:05.858
â€¢ [0.051 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 07/04/24 03:25:05.865
  I0704 03:25:05.865226 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename statefulset @ 07/04/24 03:25:05.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:25:05.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:25:05.914
  STEP: Creating service test in namespace statefulset-9723 @ 07/04/24 03:25:05.918
  STEP: Creating statefulset ss in namespace statefulset-9723 @ 07/04/24 03:25:05.923
  I0704 03:25:05.934855 20 wait.go:40] Found 0 stateful pods, waiting for 1
  I0704 03:25:15.944314 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 07/04/24 03:25:15.949
  STEP: updating a scale subresource @ 07/04/24 03:25:15.95
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/04/24 03:25:15.955
  STEP: Patch a scale subresource @ 07/04/24 03:25:15.959
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/04/24 03:25:15.97
  I0704 03:25:15.977127 20 statefulset.go:135] Deleting all statefulset in ns statefulset-9723
  I0704 03:25:15.989498 20 rest.go:150] Scaling statefulset ss to 0
  I0704 03:25:26.054640 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0704 03:25:26.059063 20 rest.go:88] Deleting statefulset ss
  I0704 03:25:26.080995 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9723" for this suite. @ 07/04/24 03:25:26.092
â€¢ [20.253 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 07/04/24 03:25:26.118
  I0704 03:25:26.118741 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename webhook @ 07/04/24 03:25:26.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:25:26.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:25:26.143
  STEP: Setting up server cert @ 07/04/24 03:25:26.167
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/04/24 03:25:26.881
  STEP: Deploying the webhook pod @ 07/04/24 03:25:26.888
  STEP: Wait for the deployment to be ready @ 07/04/24 03:25:26.899
  I0704 03:25:26.915786 20 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 07/04/24 03:25:28.924
  STEP: Verifying the service has paired with the endpoint @ 07/04/24 03:25:28.939
  I0704 03:25:29.939673 20 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/04/24 03:25:29.946
  STEP: create a pod @ 07/04/24 03:25:29.962
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 07/04/24 03:25:31.974
  I0704 03:25:31.974566 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=webhook-6662 attach --namespace=webhook-6662 to-be-attached-pod -i -c=container1'
  I0704 03:25:32.097470 20 builder.go:135] rc: 1
  I0704 03:25:32.151406 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6662" for this suite. @ 07/04/24 03:25:32.158
  STEP: Destroying namespace "webhook-markers-5347" for this suite. @ 07/04/24 03:25:32.171
â€¢ [6.059 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 07/04/24 03:25:32.178
  I0704 03:25:32.178442 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename crd-watch @ 07/04/24 03:25:32.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:25:32.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:25:32.243
  I0704 03:25:32.247456 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Creating first CR  @ 07/04/24 03:25:34.792
  I0704 03:25:34.797061 20 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-04T03:25:34Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-04T03:25:34Z]] name:name1 resourceVersion:4417 uid:51b8d327-d641-4c86-89a2-83ff7f3a44b1] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 07/04/24 03:25:44.797
  I0704 03:25:44.803785 20 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-04T03:25:44Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-04T03:25:44Z]] name:name2 resourceVersion:4458 uid:068eb270-d5f5-41bd-9859-19dbb522f4ec] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 07/04/24 03:25:54.804
  I0704 03:25:54.810612 20 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-04T03:25:34Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-04T03:25:54Z]] name:name1 resourceVersion:4474 uid:51b8d327-d641-4c86-89a2-83ff7f3a44b1] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 07/04/24 03:26:04.811
  I0704 03:26:04.824060 20 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-04T03:25:44Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-04T03:26:04Z]] name:name2 resourceVersion:4490 uid:068eb270-d5f5-41bd-9859-19dbb522f4ec] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 07/04/24 03:26:14.824
  I0704 03:26:14.837168 20 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-04T03:25:34Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-04T03:25:54Z]] name:name1 resourceVersion:4506 uid:51b8d327-d641-4c86-89a2-83ff7f3a44b1] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 07/04/24 03:26:24.837
  I0704 03:26:24.846856 20 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-04T03:25:44Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-04T03:26:04Z]] name:name2 resourceVersion:4522 uid:068eb270-d5f5-41bd-9859-19dbb522f4ec] num:map[num1:9223372036854775807 num2:1000000]]}
  I0704 03:26:35.365677 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-730" for this suite. @ 07/04/24 03:26:35.369
â€¢ [63.197 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 07/04/24 03:26:35.376
  I0704 03:26:35.376372 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 03:26:35.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:26:35.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:26:35.42
  STEP: Creating configMap with name projected-configmap-test-volume-f886916b-b917-4258-ac9a-779effd8ccdf @ 07/04/24 03:26:35.432
  STEP: Creating a pod to test consume configMaps @ 07/04/24 03:26:35.45
  STEP: Saw pod success @ 07/04/24 03:26:39.5
  I0704 03:26:39.502551 20 output.go:196] Trying to get logs from node 3.142.51.114 pod pod-projected-configmaps-fd5af76c-a98f-4f24-8f3a-e2cfeeeba9e2 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 07/04/24 03:26:39.532
  I0704 03:26:39.555587 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-680" for this suite. @ 07/04/24 03:26:39.56
â€¢ [4.191 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 07/04/24 03:26:39.568
  I0704 03:26:39.568271 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 03:26:39.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:26:39.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:26:39.586
  STEP: Creating projection with secret that has name projected-secret-test-28453c01-a442-4255-b025-5dc4ca92565a @ 07/04/24 03:26:39.59
  STEP: Creating a pod to test consume secrets @ 07/04/24 03:26:39.594
  STEP: Saw pod success @ 07/04/24 03:26:43.621
  I0704 03:26:43.623810 20 output.go:196] Trying to get logs from node 3.142.51.114 pod pod-projected-secrets-b0ebcc7d-540e-414e-aa48-380d3b64cf55 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/04/24 03:26:43.631
  I0704 03:26:43.647550 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4053" for this suite. @ 07/04/24 03:26:43.65
â€¢ [4.090 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 07/04/24 03:26:43.657
  I0704 03:26:43.657857 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 03:26:43.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:26:43.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:26:43.692
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-8a9979a6-1294-4db8-997f-3702f8fdbe5b @ 07/04/24 03:26:43.703
  STEP: Creating the pod @ 07/04/24 03:26:43.709
  STEP: Updating configmap projected-configmap-test-upd-8a9979a6-1294-4db8-997f-3702f8fdbe5b @ 07/04/24 03:26:45.762
  STEP: waiting to observe update in volume @ 07/04/24 03:26:45.772
  I0704 03:26:47.790793 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3165" for this suite. @ 07/04/24 03:26:47.794
â€¢ [4.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:697
  STEP: Creating a kubernetes client @ 07/04/24 03:26:47.808
  I0704 03:26:47.808162 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename job @ 07/04/24 03:26:47.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:26:47.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:26:47.836
  STEP: Creating a job @ 07/04/24 03:26:47.839
  STEP: Ensuring active pods == parallelism @ 07/04/24 03:26:47.843
  STEP: Orphaning one of the Job's Pods @ 07/04/24 03:26:51.847
  I0704 03:26:52.376656 20 pod_client.go:141] Successfully updated pod "adopt-release-mqm9q"
  STEP: Checking that the Job readopts the Pod @ 07/04/24 03:26:52.377
  STEP: Removing the labels from the Job's Pod @ 07/04/24 03:26:54.397
  I0704 03:26:54.908367 20 pod_client.go:141] Successfully updated pod "adopt-release-mqm9q"
  STEP: Checking that the Job releases the Pod @ 07/04/24 03:26:54.908
  I0704 03:26:56.918264 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3685" for this suite. @ 07/04/24 03:26:56.921
â€¢ [9.120 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:469
  STEP: Creating a kubernetes client @ 07/04/24 03:26:56.928
  I0704 03:26:56.928855 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename sched-pred @ 07/04/24 03:26:56.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:26:56.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:26:56.971
  I0704 03:26:56.977381 20 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0704 03:26:56.984681 20 util.go:400] Waiting for terminating namespaces to be deleted...
  I0704 03:26:56.989588 20 predicates.go:121] 
  Logging pods the apiserver thinks is on node 18.118.109.209 before test
  I0704 03:26:56.993989 20 predicates.go:887] calico-kube-controllers-5b878c8d6f-qchnq from kube-system started at 2024-07-04 03:00:03 +0000 UTC (1 container statuses recorded)
  I0704 03:26:56.994032 20 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I0704 03:26:56.994045 20 predicates.go:887] canal-7mrtp from kube-system started at 2024-07-04 03:00:03 +0000 UTC (2 container statuses recorded)
  I0704 03:26:56.994508 20 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0704 03:26:56.994705 20 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0704 03:26:56.994730 20 predicates.go:887] coredns-autoscaler-7db8ddc8cf-c6v99 from kube-system started at 2024-07-04 03:00:15 +0000 UTC (1 container statuses recorded)
  I0704 03:26:56.994740 20 predicates.go:889] 	Container autoscaler ready: true, restart count 0
  I0704 03:26:56.994784 20 predicates.go:887] sonobuoy-e2e-job-29e78ee3095b40b0 from sonobuoy started at 2024-07-04 03:22:00 +0000 UTC (2 container statuses recorded)
  I0704 03:26:56.994795 20 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0704 03:26:56.994841 20 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0704 03:26:56.994854 20 predicates.go:887] sonobuoy-systemd-logs-daemon-set-f25fe8f61e184228-dc5qd from sonobuoy started at 2024-07-04 03:22:00 +0000 UTC (2 container statuses recorded)
  I0704 03:26:56.994865 20 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0704 03:26:56.994875 20 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0704 03:26:56.994967 20 predicates.go:121] 
  Logging pods the apiserver thinks is on node 18.191.27.132 before test
  I0704 03:26:56.999662 20 predicates.go:887] adopt-release-mqm9q from job-3685 started at 2024-07-04 03:26:47 +0000 UTC (1 container statuses recorded)
  I0704 03:26:56.999697 20 predicates.go:889] 	Container c ready: true, restart count 0
  I0704 03:26:56.999711 20 predicates.go:887] adopt-release-n8kc2 from job-3685 started at 2024-07-04 03:26:47 +0000 UTC (1 container statuses recorded)
  I0704 03:26:56.999722 20 predicates.go:889] 	Container c ready: true, restart count 0
  I0704 03:26:56.999732 20 predicates.go:887] canal-fjqx2 from kube-system started at 2024-07-04 03:00:03 +0000 UTC (2 container statuses recorded)
  I0704 03:26:56.999742 20 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0704 03:26:56.999755 20 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0704 03:26:56.999765 20 predicates.go:887] coredns-878dbb559-n6nrk from kube-system started at 2024-07-04 03:00:34 +0000 UTC (1 container statuses recorded)
  I0704 03:26:56.999922 20 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0704 03:26:56.999936 20 predicates.go:887] rke-coredns-addon-deploy-job-vl45b from kube-system started at 2024-07-04 03:00:13 +0000 UTC (1 container statuses recorded)
  I0704 03:26:56.999946 20 predicates.go:889] 	Container rke-coredns-addon-pod ready: false, restart count 0
  I0704 03:26:56.999957 20 predicates.go:887] rke-metrics-addon-deploy-job-h5rd9 from kube-system started at 2024-07-04 03:00:20 +0000 UTC (1 container statuses recorded)
  I0704 03:26:57.000063 20 predicates.go:889] 	Container rke-metrics-addon-pod ready: false, restart count 0
  I0704 03:26:57.000078 20 predicates.go:887] rke-network-plugin-deploy-job-p5wc5 from kube-system started at 2024-07-04 03:00:00 +0000 UTC (1 container statuses recorded)
  I0704 03:26:57.000171 20 predicates.go:889] 	Container rke-network-plugin-pod ready: false, restart count 0
  I0704 03:26:57.000186 20 predicates.go:887] sonobuoy from sonobuoy started at 2024-07-04 03:21:56 +0000 UTC (1 container statuses recorded)
  I0704 03:26:57.000195 20 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0704 03:26:57.000207 20 predicates.go:887] sonobuoy-systemd-logs-daemon-set-f25fe8f61e184228-7wp7w from sonobuoy started at 2024-07-04 03:22:00 +0000 UTC (2 container statuses recorded)
  I0704 03:26:57.000217 20 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0704 03:26:57.000493 20 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0704 03:26:57.000582 20 predicates.go:121] 
  Logging pods the apiserver thinks is on node 3.142.51.114 before test
  I0704 03:26:57.005332 20 predicates.go:887] adopt-release-7bknf from job-3685 started at 2024-07-04 03:26:55 +0000 UTC (1 container statuses recorded)
  I0704 03:26:57.005367 20 predicates.go:889] 	Container c ready: false, restart count 0
  I0704 03:26:57.005378 20 predicates.go:887] canal-55jg5 from kube-system started at 2024-07-04 03:00:03 +0000 UTC (2 container statuses recorded)
  I0704 03:26:57.005390 20 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0704 03:26:57.005397 20 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0704 03:26:57.005408 20 predicates.go:887] coredns-878dbb559-x42jf from kube-system started at 2024-07-04 03:00:14 +0000 UTC (1 container statuses recorded)
  I0704 03:26:57.005418 20 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0704 03:26:57.005427 20 predicates.go:887] metrics-server-85f57469bf-24s6n from kube-system started at 2024-07-04 03:00:23 +0000 UTC (1 container statuses recorded)
  I0704 03:26:57.006685 20 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I0704 03:26:57.006730 20 predicates.go:887] sonobuoy-systemd-logs-daemon-set-f25fe8f61e184228-gg2w2 from sonobuoy started at 2024-07-04 03:22:00 +0000 UTC (2 container statuses recorded)
  I0704 03:26:57.006779 20 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0704 03:26:57.006815 20 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/04/24 03:26:57.007
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/04/24 03:26:59.036
  STEP: Trying to apply a random label on the found node. @ 07/04/24 03:26:59.053
  STEP: verifying the node has the label kubernetes.io/e2e-5e7d971a-184d-4a43-9912-92b4062b747a 42 @ 07/04/24 03:26:59.063
  STEP: Trying to relaunch the pod, now with labels. @ 07/04/24 03:26:59.069
  STEP: removing the label kubernetes.io/e2e-5e7d971a-184d-4a43-9912-92b4062b747a off the node 3.142.51.114 @ 07/04/24 03:27:01.109
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-5e7d971a-184d-4a43-9912-92b4062b747a @ 07/04/24 03:27:01.124
  I0704 03:27:01.128660 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6304" for this suite. @ 07/04/24 03:27:01.135
â€¢ [4.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2218
  STEP: Creating a kubernetes client @ 07/04/24 03:27:01.141
  I0704 03:27:01.142115 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename services @ 07/04/24 03:27:01.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:27:01.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:27:01.162
  STEP: creating service in namespace services-384 @ 07/04/24 03:27:01.168
  STEP: creating service affinity-nodeport in namespace services-384 @ 07/04/24 03:27:01.168
  STEP: creating replication controller affinity-nodeport in namespace services-384 @ 07/04/24 03:27:01.185
  I0704 03:27:01.195685      20 runners.go:198] Created replication controller with name: affinity-nodeport, namespace: services-384, replica count: 3
  I0704 03:27:04.247652      20 runners.go:198] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0704 03:27:04.263085 20 resource.go:361] Creating new exec pod
  I0704 03:27:09.288704 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-384 exec execpod-affinitybxd4r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0704 03:27:09.555249 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I0704 03:27:09.555300 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0704 03:27:09.555387 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-384 exec execpod-affinitybxd4r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.22.165 80'
  I0704 03:27:09.710632 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.22.165 80\nConnection to 10.43.22.165 80 port [tcp/http] succeeded!\n"
  I0704 03:27:09.710685 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0704 03:27:09.710762 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-384 exec execpod-affinitybxd4r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.23.45 31311'
  I0704 03:27:09.881152 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.23.45 31311\nConnection to 172.31.23.45 31311 port [tcp/*] succeeded!\n"
  I0704 03:27:09.881200 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0704 03:27:09.881287 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-384 exec execpod-affinitybxd4r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.23.191 31311'
  I0704 03:27:10.073683 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.23.191 31311\nConnection to 172.31.23.191 31311 port [tcp/*] succeeded!\n"
  I0704 03:27:10.073760 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0704 03:27:10.073839 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-384 exec execpod-affinitybxd4r -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.23.191:31311/ ; done'
  I0704 03:27:10.411249 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:31311/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:31311/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:31311/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:31311/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:31311/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:31311/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:31311/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:31311/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:31311/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:31311/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:31311/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:31311/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:31311/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:31311/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:31311/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:31311/\n"
  I0704 03:27:10.411310 20 builder.go:147] stdout: "\naffinity-nodeport-wq8d6\naffinity-nodeport-wq8d6\naffinity-nodeport-wq8d6\naffinity-nodeport-wq8d6\naffinity-nodeport-wq8d6\naffinity-nodeport-wq8d6\naffinity-nodeport-wq8d6\naffinity-nodeport-wq8d6\naffinity-nodeport-wq8d6\naffinity-nodeport-wq8d6\naffinity-nodeport-wq8d6\naffinity-nodeport-wq8d6\naffinity-nodeport-wq8d6\naffinity-nodeport-wq8d6\naffinity-nodeport-wq8d6\naffinity-nodeport-wq8d6"
  I0704 03:27:10.411327 20 service.go:242] Received response from host: affinity-nodeport-wq8d6
  I0704 03:27:10.411339 20 service.go:242] Received response from host: affinity-nodeport-wq8d6
  I0704 03:27:10.411355 20 service.go:242] Received response from host: affinity-nodeport-wq8d6
  I0704 03:27:10.411364 20 service.go:242] Received response from host: affinity-nodeport-wq8d6
  I0704 03:27:10.411410 20 service.go:242] Received response from host: affinity-nodeport-wq8d6
  I0704 03:27:10.411420 20 service.go:242] Received response from host: affinity-nodeport-wq8d6
  I0704 03:27:10.411430 20 service.go:242] Received response from host: affinity-nodeport-wq8d6
  I0704 03:27:10.411492 20 service.go:242] Received response from host: affinity-nodeport-wq8d6
  I0704 03:27:10.411507 20 service.go:242] Received response from host: affinity-nodeport-wq8d6
  I0704 03:27:10.411522 20 service.go:242] Received response from host: affinity-nodeport-wq8d6
  I0704 03:27:10.411558 20 service.go:242] Received response from host: affinity-nodeport-wq8d6
  I0704 03:27:10.411568 20 service.go:242] Received response from host: affinity-nodeport-wq8d6
  I0704 03:27:10.411578 20 service.go:242] Received response from host: affinity-nodeport-wq8d6
  I0704 03:27:10.411588 20 service.go:242] Received response from host: affinity-nodeport-wq8d6
  I0704 03:27:10.411600 20 service.go:242] Received response from host: affinity-nodeport-wq8d6
  I0704 03:27:10.412055 20 service.go:242] Received response from host: affinity-nodeport-wq8d6
  I0704 03:27:10.412255 20 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-384, will wait for the garbage collector to delete the pods @ 07/04/24 03:27:10.476
  I0704 03:27:10.543490 20 resources.go:139] Deleting ReplicationController affinity-nodeport took: 10.273455ms
  I0704 03:27:10.651824 20 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 108.348521ms
  I0704 03:27:14.186717 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-384" for this suite. @ 07/04/24 03:27:14.192
â€¢ [13.069 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 07/04/24 03:27:14.212
  I0704 03:27:14.213014 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename namespaces @ 07/04/24 03:27:14.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:27:14.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:27:14.235
  STEP: Read namespace status @ 07/04/24 03:27:14.238
  I0704 03:27:14.241720 20 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 07/04/24 03:27:14.242
  I0704 03:27:14.248460 20 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 07/04/24 03:27:14.249
  I0704 03:27:14.256556 20 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0704 03:27:14.257374 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4342" for this suite. @ 07/04/24 03:27:14.265
â€¢ [0.060 seconds]
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 07/04/24 03:27:14.272
  I0704 03:27:14.272964 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename svcaccounts @ 07/04/24 03:27:14.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:27:14.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:27:14.305
  STEP: Creating ServiceAccount "e2e-sa-zp2l7"  @ 07/04/24 03:27:14.309
  I0704 03:27:14.314240 20 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-zp2l7"  @ 07/04/24 03:27:14.314
  I0704 03:27:14.332855 20 service_accounts.go:839] AutomountServiceAccountToken: true
  I0704 03:27:14.332958 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4673" for this suite. @ 07/04/24 03:27:14.336
â€¢ [0.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 07/04/24 03:27:14.344
  I0704 03:27:14.344495 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename var-expansion @ 07/04/24 03:27:14.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:27:14.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:27:14.361
  STEP: Creating a pod to test substitution in container's command @ 07/04/24 03:27:14.365
  STEP: Saw pod success @ 07/04/24 03:27:18.397
  I0704 03:27:18.400660 20 output.go:196] Trying to get logs from node 18.191.27.132 pod var-expansion-b504cf16-4e9c-4d4c-a37a-a358db782f75 container dapi-container: <nil>
  STEP: delete the pod @ 07/04/24 03:27:18.415
  I0704 03:27:18.434187 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7519" for this suite. @ 07/04/24 03:27:18.438
â€¢ [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 07/04/24 03:27:18.446
  I0704 03:27:18.446707 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename chunking @ 07/04/24 03:27:18.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:27:18.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:27:18.475
  STEP: creating a large number of resources @ 07/04/24 03:27:18.479
  I0704 03:27:30.153995      20 request.go:697] Waited for 1.002115209s due to client-side throttling, not priority and fairness, request: POST:https://10.43.0.1:443/api/v1/namespaces/chunking-1384/podtemplates
  STEP: retrieving the first page @ 07/04/24 03:27:36.153
  I0704 03:27:36.201569 20 chunking.go:163] Retrieved 40/40 results with rv 5420 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQyMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0
  STEP: retrieving the second page until the token expires @ 07/04/24 03:27:36.201
  I0704 03:27:56.218153 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQyMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0704 03:28:16.216868 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQyMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0704 03:28:36.208861 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQyMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0704 03:28:56.208025 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQyMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0704 03:29:16.210651 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQyMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0704 03:29:36.208248 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQyMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0704 03:29:56.214958 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQyMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0704 03:30:16.207843 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQyMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0704 03:30:36.209616 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQyMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0704 03:30:56.210099 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQyMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0704 03:31:16.206518 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQyMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0704 03:31:36.205669 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQyMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0704 03:31:56.211243 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQyMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0704 03:32:16.207959 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQyMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0704 03:32:36.208354 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQyMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0704 03:32:56.212309 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQyMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0704 03:33:16.206607 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQyMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0704 03:33:36.218225 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQyMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0704 03:33:56.208275 20 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0704 03:33:56.208319 20 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 07/04/24 03:33:56.208
  STEP: retrieving all remaining pages @ 07/04/24 03:33:56.213
  I0704 03:33:56.217064 20 chunking.go:221] Retrieved 40/40 results with rv 5990 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTk5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE5XHUwMDAwIn0
  I0704 03:33:56.221027 20 chunking.go:221] Retrieved 40/40 results with rv 5990 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTk5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTU5XHUwMDAwIn0
  I0704 03:33:56.224626 20 chunking.go:221] Retrieved 40/40 results with rv 5990 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTk5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTk5XHUwMDAwIn0
  I0704 03:33:56.228459 20 chunking.go:221] Retrieved 40/40 results with rv 5990 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTk5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM5XHUwMDAwIn0
  I0704 03:33:56.243201 20 chunking.go:221] Retrieved 40/40 results with rv 5990 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTk5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjc5XHUwMDAwIn0
  I0704 03:33:56.253199 20 chunking.go:221] Retrieved 40/40 results with rv 5990 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTk5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzE5XHUwMDAwIn0
  I0704 03:33:56.270896 20 chunking.go:221] Retrieved 40/40 results with rv 5990 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTk5MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU5XHUwMDAwIn0
  I0704 03:33:56.277508 20 chunking.go:221] Retrieved 40/40 results with rv 5990 and continue 
  I0704 03:33:56.277854 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-1384" for this suite. @ 07/04/24 03:33:56.285
â€¢ [397.850 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 07/04/24 03:33:56.299
  I0704 03:33:56.299027 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename pod-network-test @ 07/04/24 03:33:56.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:33:56.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:33:56.325
  STEP: Performing setup for networking test in namespace pod-network-test-8314 @ 07/04/24 03:33:56.328
  STEP: creating a selector @ 07/04/24 03:33:56.328
  STEP: Creating the service pods in kubernetes @ 07/04/24 03:33:56.328
  I0704 03:33:56.328547 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 07/04/24 03:34:18.472
  I0704 03:34:20.496629 20 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0704 03:34:20.496673 20 networking.go:42] Breadth first check of 10.42.1.8 on host 172.31.23.191...
  I0704 03:34:20.499952 20 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.2.27:9080/dial?request=hostname&protocol=http&host=10.42.1.8&port=8083&tries=1'] Namespace:pod-network-test-8314 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 03:34:20.499996 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 03:34:20.501117 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 03:34:20.501231 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-8314/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.2.27%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.1.8%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0704 03:34:20.628544 20 utils.go:331] Waiting for responses: map[]
  I0704 03:34:20.628951 20 utils.go:335] reached 10.42.1.8 after 0/1 tries
  I0704 03:34:20.629415 20 networking.go:42] Breadth first check of 10.42.0.23 on host 172.31.16.55...
  I0704 03:34:20.635315 20 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.2.27:9080/dial?request=hostname&protocol=http&host=10.42.0.23&port=8083&tries=1'] Namespace:pod-network-test-8314 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 03:34:20.635356 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 03:34:20.636031 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 03:34:20.636184 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-8314/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.2.27%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.0.23%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0704 03:34:20.750110 20 utils.go:331] Waiting for responses: map[]
  I0704 03:34:20.750154 20 utils.go:335] reached 10.42.0.23 after 0/1 tries
  I0704 03:34:20.750170 20 networking.go:42] Breadth first check of 10.42.2.26 on host 172.31.23.45...
  I0704 03:34:20.753602 20 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.2.27:9080/dial?request=hostname&protocol=http&host=10.42.2.26&port=8083&tries=1'] Namespace:pod-network-test-8314 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 03:34:20.753644 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 03:34:20.754287 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 03:34:20.754396 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-8314/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.2.27%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.2.26%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0704 03:34:20.867290 20 utils.go:331] Waiting for responses: map[]
  I0704 03:34:20.867334 20 utils.go:335] reached 10.42.2.26 after 0/1 tries
  I0704 03:34:20.867350 20 networking.go:53] Going to retry 0 out of 3 pods....
  I0704 03:34:20.867760 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8314" for this suite. @ 07/04/24 03:34:20.871
â€¢ [24.580 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 07/04/24 03:34:20.878
  I0704 03:34:20.878984 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename watch @ 07/04/24 03:34:20.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:34:20.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:34:20.918
  STEP: creating a watch on configmaps @ 07/04/24 03:34:20.927
  STEP: creating a new configmap @ 07/04/24 03:34:20.929
  STEP: modifying the configmap once @ 07/04/24 03:34:20.947
  STEP: closing the watch once it receives two notifications @ 07/04/24 03:34:20.957
  I0704 03:34:20.957523 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5500  e40b7c2b-a031-437e-9b16-8f0ec127a29a 6481 0 2024-07-04 03:34:20 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-04 03:34:20 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0704 03:34:20.957773 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5500  e40b7c2b-a031-437e-9b16-8f0ec127a29a 6482 0 2024-07-04 03:34:20 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-04 03:34:20 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 07/04/24 03:34:20.957
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 07/04/24 03:34:20.97
  STEP: deleting the configmap @ 07/04/24 03:34:20.973
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 07/04/24 03:34:20.978
  I0704 03:34:20.978941 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5500  e40b7c2b-a031-437e-9b16-8f0ec127a29a 6483 0 2024-07-04 03:34:20 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-04 03:34:20 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0704 03:34:20.979200 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5500  e40b7c2b-a031-437e-9b16-8f0ec127a29a 6484 0 2024-07-04 03:34:20 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-04 03:34:20 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0704 03:34:20.979552 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5500" for this suite. @ 07/04/24 03:34:20.99
â€¢ [0.120 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 07/04/24 03:34:20.998
  I0704 03:34:20.999019 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename configmap @ 07/04/24 03:34:20.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:34:21.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:34:21.024
  STEP: Creating configMap with name configmap-test-volume-6768c447-c279-49e8-a16b-ab4a6f53d8f0 @ 07/04/24 03:34:21.04
  STEP: Creating a pod to test consume configMaps @ 07/04/24 03:34:21.046
  STEP: Saw pod success @ 07/04/24 03:34:25.086
  I0704 03:34:25.090644 20 output.go:196] Trying to get logs from node 18.191.27.132 pod pod-configmaps-0c0ae069-9fc9-43ba-be04-76861d0cb5f6 container agnhost-container: <nil>
  STEP: delete the pod @ 07/04/24 03:34:25.111
  I0704 03:34:25.149027 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6631" for this suite. @ 07/04/24 03:34:25.156
â€¢ [4.169 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 07/04/24 03:34:25.168
  I0704 03:34:25.168936 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename pods @ 07/04/24 03:34:25.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:34:25.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:34:25.203
  I0704 03:34:25.209209 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: creating the pod @ 07/04/24 03:34:25.21
  STEP: submitting the pod to kubernetes @ 07/04/24 03:34:25.21
  I0704 03:34:29.347324 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4391" for this suite. @ 07/04/24 03:34:29.351
â€¢ [4.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 07/04/24 03:34:29.356
  I0704 03:34:29.356780 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename var-expansion @ 07/04/24 03:34:29.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:34:29.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:34:29.374
  STEP: creating the pod with failed condition @ 07/04/24 03:34:29.377
  STEP: updating the pod @ 07/04/24 03:36:29.389
  I0704 03:36:29.900057 20 pod_client.go:141] Successfully updated pod "var-expansion-813c7856-882f-4468-8395-46f959d6e856"
  STEP: waiting for pod running @ 07/04/24 03:36:29.9
  STEP: deleting the pod gracefully @ 07/04/24 03:36:31.906
  I0704 03:36:31.906409 20 delete.go:62] Deleting pod "var-expansion-813c7856-882f-4468-8395-46f959d6e856" in namespace "var-expansion-2790"
  I0704 03:36:31.927028 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-813c7856-882f-4468-8395-46f959d6e856" to be fully deleted
  I0704 03:37:04.038873 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2790" for this suite. @ 07/04/24 03:37:04.044
â€¢ [154.702 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 07/04/24 03:37:04.059
  I0704 03:37:04.059170 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/04/24 03:37:04.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:37:04.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:37:04.125
  I0704 03:37:04.149172 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 03:37:10.410242 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5745" for this suite. @ 07/04/24 03:37:10.413
â€¢ [6.367 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:779
  STEP: Creating a kubernetes client @ 07/04/24 03:37:10.435
  I0704 03:37:10.435137 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename services @ 07/04/24 03:37:10.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:37:10.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:37:10.461
  I0704 03:37:10.475218 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4289" for this suite. @ 07/04/24 03:37:10.484
â€¢ [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 07/04/24 03:37:10.497
  I0704 03:37:10.497532 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename kubectl @ 07/04/24 03:37:10.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:37:10.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:37:10.534
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/04/24 03:37:10.541
  I0704 03:37:10.541981 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-8365 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0704 03:37:10.631823 20 builder.go:146] stderr: ""
  I0704 03:37:10.631873 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/04/24 03:37:10.631
  I0704 03:37:10.636936 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-8365 delete pods e2e-test-httpd-pod'
  I0704 03:37:12.741480 20 builder.go:146] stderr: ""
  I0704 03:37:12.741525 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0704 03:37:12.741703 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8365" for this suite. @ 07/04/24 03:37:12.756
â€¢ [2.269 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 07/04/24 03:37:12.769
  I0704 03:37:12.769163 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename daemonsets @ 07/04/24 03:37:12.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:37:12.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:37:12.814
  STEP: Creating simple DaemonSet "daemon-set" @ 07/04/24 03:37:12.842
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/04/24 03:37:12.848
  I0704 03:37:12.857823 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0704 03:37:12.857885 20 fixtures.go:130] Node 18.118.109.209 is running 0 daemon pod, expected 1
  I0704 03:37:13.861779 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0704 03:37:13.861821 20 fixtures.go:130] Node 18.118.109.209 is running 0 daemon pod, expected 1
  I0704 03:37:14.861111 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0704 03:37:14.861295 20 fixtures.go:130] Node 18.118.109.209 is running 0 daemon pod, expected 1
  I0704 03:37:15.871392 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0704 03:37:15.871527 20 fixtures.go:130] Node 18.118.109.209 is running 0 daemon pod, expected 1
  I0704 03:37:16.858195 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0704 03:37:16.858377 20 fixtures.go:130] Node 18.118.109.209 is running 0 daemon pod, expected 1
  I0704 03:37:17.876645 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0704 03:37:17.876818 20 fixtures.go:130] Node 18.118.109.209 is running 0 daemon pod, expected 1
  I0704 03:37:18.858195 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0704 03:37:18.858263 20 fixtures.go:130] Node 18.118.109.209 is running 0 daemon pod, expected 1
  I0704 03:37:19.856327 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0704 03:37:19.856604 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 07/04/24 03:37:19.859
  STEP: DeleteCollection of the DaemonSets @ 07/04/24 03:37:19.862
  STEP: Verify that ReplicaSets have been deleted @ 07/04/24 03:37:19.868
  I0704 03:37:19.892486 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7034"},"items":null}

  I0704 03:37:19.927389 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7036"},"items":[{"metadata":{"name":"daemon-set-f845f","generateName":"daemon-set-","namespace":"daemonsets-436","uid":"d357eb6c-613b-4465-b32e-4fc2c2da4ff9","resourceVersion":"7031","creationTimestamp":"2024-07-04T03:37:12Z","deletionTimestamp":"2024-07-04T03:37:49Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"a355fae95a4347758c3bdb506ae123500f38a453f0a33192715f743cbca2f9ca","cni.projectcalico.org/podIP":"10.42.1.9/32","cni.projectcalico.org/podIPs":"10.42.1.9/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a776da67-3197-4c64-8535-209b2d489756","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-07-04T03:37:12Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a776da67-3197-4c64-8535-209b2d489756\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-07-04T03:37:13Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-07-04T03:37:19Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.1.9\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-cbxvv","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-cbxvv","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"18.118.109.209","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["18.118.109.209"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-04T03:37:19Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-04T03:37:12Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-04T03:37:19Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-04T03:37:19Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-04T03:37:12Z"}],"hostIP":"172.31.23.191","hostIPs":[{"ip":"172.31.23.191"}],"podIP":"10.42.1.9","podIPs":[{"ip":"10.42.1.9"}],"startTime":"2024-07-04T03:37:12Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-07-04T03:37:18Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"docker://3a61c8f4b4f274deb83375667acdc26c10bc527e9067de6d14e979d32a64918c","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-kml8x","generateName":"daemon-set-","namespace":"daemonsets-436","uid":"43a637b0-ea33-4e2d-8f36-62f6583b053f","resourceVersion":"7033","creationTimestamp":"2024-07-04T03:37:12Z","deletionTimestamp":"2024-07-04T03:37:49Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"d63d714f37eb180cb2d66dd0f50333f299e8cffdd5c4831f9e77a6c312240b25","cni.projectcalico.org/podIP":"10.42.0.26/32","cni.projectcalico.org/podIPs":"10.42.0.26/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a776da67-3197-4c64-8535-209b2d489756","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-07-04T03:37:12Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a776da67-3197-4c64-8535-209b2d489756\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-07-04T03:37:13Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-07-04T03:37:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.0.26\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-dfsq7","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-dfsq7","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"18.191.27.132","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["18.191.27.132"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-04T03:37:14Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-04T03:37:12Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-04T03:37:14Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-04T03:37:14Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-04T03:37:12Z"}],"hostIP":"172.31.16.55","hostIPs":[{"ip":"172.31.16.55"}],"podIP":"10.42.0.26","podIPs":[{"ip":"10.42.0.26"}],"startTime":"2024-07-04T03:37:12Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-07-04T03:37:14Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"docker://36d8b2bd60d7d999590203187aeda8e26b82cd2c357eb5e056e610d9c6589441","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-qddjt","generateName":"daemon-set-","namespace":"daemonsets-436","uid":"3ecbf473-71c3-46c0-8a80-9a104475736a","resourceVersion":"7032","creationTimestamp":"2024-07-04T03:37:12Z","deletionTimestamp":"2024-07-04T03:37:49Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"f58125562eb71e7de2f370de340caedc1784f184788f8406a3c53394b523502e","cni.projectcalico.org/podIP":"10.42.2.29/32","cni.projectcalico.org/podIPs":"10.42.2.29/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a776da67-3197-4c64-8535-209b2d489756","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-07-04T03:37:12Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a776da67-3197-4c64-8535-209b2d489756\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-07-04T03:37:13Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-07-04T03:37:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.2.29\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-b4gdp","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-b4gdp","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"3.142.51.114","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["3.142.51.114"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-04T03:37:14Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-04T03:37:12Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-04T03:37:14Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-04T03:37:14Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-04T03:37:12Z"}],"hostIP":"172.31.23.45","hostIPs":[{"ip":"172.31.23.45"}],"podIP":"10.42.2.29","podIPs":[{"ip":"10.42.2.29"}],"startTime":"2024-07-04T03:37:12Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-07-04T03:37:14Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"docker://7511f24aacebd49335bd9cd91fec10b2ad8b723f9c9bd805a9b2bb5c48f104d3","started":true}],"qosClass":"BestEffort"}}]}

  I0704 03:37:19.939138 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-436" for this suite. @ 07/04/24 03:37:19.942
â€¢ [7.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 07/04/24 03:37:19.956
  I0704 03:37:19.956621 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename statefulset @ 07/04/24 03:37:19.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:37:19.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:37:19.988
  STEP: Creating service test in namespace statefulset-3249 @ 07/04/24 03:37:19.992
  I0704 03:37:20.023143 20 wait.go:40] Found 0 stateful pods, waiting for 1
  I0704 03:37:30.012446 20 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 07/04/24 03:37:30.025
  W0704 03:37:30.037224      20 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  I0704 03:37:30.052080 20 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0704 03:37:30.052373 20 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  I0704 03:37:40.045327 20 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0704 03:37:40.045373 20 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 07/04/24 03:37:40.055
  STEP: Delete all of the StatefulSets @ 07/04/24 03:37:40.057
  STEP: Verify that StatefulSets have been deleted @ 07/04/24 03:37:40.065
  I0704 03:37:40.068029 20 statefulset.go:135] Deleting all statefulset in ns statefulset-3249
  I0704 03:37:40.082273 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3249" for this suite. @ 07/04/24 03:37:40.099
â€¢ [20.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 07/04/24 03:37:40.114
  I0704 03:37:40.114242 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename statefulset @ 07/04/24 03:37:40.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:37:40.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:37:40.195
  STEP: Creating service test in namespace statefulset-4348 @ 07/04/24 03:37:40.201
  STEP: Creating stateful set ss in namespace statefulset-4348 @ 07/04/24 03:37:40.215
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4348 @ 07/04/24 03:37:40.228
  I0704 03:37:40.234604 20 wait.go:40] Found 0 stateful pods, waiting for 1
  I0704 03:37:50.231413 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 07/04/24 03:37:50.231
  I0704 03:37:50.233843 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=statefulset-4348 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0704 03:37:50.448916 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0704 03:37:50.448962 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0704 03:37:50.448980 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0704 03:37:50.452597 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0704 03:38:00.454656 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0704 03:38:00.454707 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0704 03:38:00.470431 20 resource.go:168] POD   NODE            PHASE    GRACE  CONDITIONS
  I0704 03:38:00.470880 20 resource.go:175] ss-0  18.118.109.209  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-04 03:37:41 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-04 03:37:40 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-04 03:37:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-04 03:37:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-04 03:37:40 +0000 UTC  }]
  I0704 03:38:00.470907 20 resource.go:178] 
  I0704 03:38:00.470920 20 statefulset.go:2147] StatefulSet ss has not reached scale 3, at 1
  I0704 03:38:01.480469 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 8.996052006s
  I0704 03:38:02.485013 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 7.986538944s
  I0704 03:38:03.489912 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 6.981060904s
  I0704 03:38:04.493019 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 5.977126971s
  I0704 03:38:05.497263 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 4.973979721s
  I0704 03:38:06.500680 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 3.969706863s
  I0704 03:38:07.503992 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 2.966313596s
  I0704 03:38:08.508588 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 1.96212668s
  I0704 03:38:09.520603 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 958.443445ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4348 @ 07/04/24 03:38:10.52
  I0704 03:38:10.524852 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=statefulset-4348 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0704 03:38:10.702118 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0704 03:38:10.702254 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0704 03:38:10.702271 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0704 03:38:10.702337 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=statefulset-4348 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0704 03:38:10.898696 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0704 03:38:10.898748 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0704 03:38:10.898767 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0704 03:38:10.898819 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=statefulset-4348 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0704 03:38:11.046096 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0704 03:38:11.046186 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0704 03:38:11.046201 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0704 03:38:11.049367 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I0704 03:38:21.056387 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0704 03:38:21.056434 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0704 03:38:21.056448 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 07/04/24 03:38:21.056
  I0704 03:38:21.067911 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=statefulset-4348 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0704 03:38:21.311665 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0704 03:38:21.311715 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0704 03:38:21.311730 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0704 03:38:21.311783 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=statefulset-4348 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0704 03:38:21.494537 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0704 03:38:21.494587 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0704 03:38:21.494606 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0704 03:38:21.494861 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=statefulset-4348 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0704 03:38:21.674987 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0704 03:38:21.675035 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0704 03:38:21.675051 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0704 03:38:21.675064 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0704 03:38:21.678380 20 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  I0704 03:38:31.682034 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0704 03:38:31.682077 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0704 03:38:31.682091 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0704 03:38:31.691514 20 resource.go:168] POD   NODE            PHASE    GRACE  CONDITIONS
  I0704 03:38:31.691577 20 resource.go:175] ss-0  18.118.109.209  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-04 03:37:41 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-04 03:37:40 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-04 03:38:21 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-04 03:38:21 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-04 03:37:40 +0000 UTC  }]
  I0704 03:38:31.691598 20 resource.go:175] ss-1  18.191.27.132   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-04 03:38:02 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-04 03:38:00 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-04 03:38:21 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-04 03:38:21 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-04 03:38:00 +0000 UTC  }]
  I0704 03:38:31.691619 20 resource.go:175] ss-2  3.142.51.114    Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-04 03:38:02 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-04 03:38:00 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-04 03:38:21 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-04 03:38:21 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-04 03:38:00 +0000 UTC  }]
  I0704 03:38:31.691629 20 resource.go:178] 
  I0704 03:38:31.691640 20 statefulset.go:2147] StatefulSet ss has not reached scale 0, at 3
  I0704 03:38:32.694689 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 8.9964189s
  I0704 03:38:33.697594 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 7.993789607s
  I0704 03:38:34.701843 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 6.990871421s
  I0704 03:38:35.708049 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 5.986356161s
  I0704 03:38:36.710668 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 4.980399901s
  I0704 03:38:37.714085 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 3.97757378s
  I0704 03:38:38.717413 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 2.973774682s
  I0704 03:38:39.720483 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 1.971040502s
  I0704 03:38:40.723375 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 967.950238ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4348 @ 07/04/24 03:38:41.724
  I0704 03:38:41.727446 20 rest.go:150] Scaling statefulset ss to 0
  I0704 03:38:41.732093 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0704 03:38:41.734095 20 statefulset.go:135] Deleting all statefulset in ns statefulset-4348
  I0704 03:38:41.736658 20 rest.go:150] Scaling statefulset ss to 0
  I0704 03:38:41.740823 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0704 03:38:41.745419 20 rest.go:88] Deleting statefulset ss
  I0704 03:38:41.755903 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4348" for this suite. @ 07/04/24 03:38:41.763
â€¢ [61.659 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 07/04/24 03:38:41.775
  I0704 03:38:41.775884 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename replication-controller @ 07/04/24 03:38:41.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:38:41.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:38:41.798
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 07/04/24 03:38:41.8
  STEP: When a replication controller with a matching selector is created @ 07/04/24 03:38:43.819
  STEP: Then the orphan pod is adopted @ 07/04/24 03:38:43.837
  I0704 03:38:44.844407 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7478" for this suite. @ 07/04/24 03:38:44.847
â€¢ [3.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 07/04/24 03:38:44.857
  I0704 03:38:44.857374 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename kubectl @ 07/04/24 03:38:44.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:38:44.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:38:44.875
  I0704 03:38:44.878350 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-579 version'
  I0704 03:38:44.939407 20 builder.go:146] stderr: ""
  I0704 03:38:44.939454 20 builder.go:147] stdout: "Client Version: v1.30.2\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.30.2\n"
  I0704 03:38:44.939854 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-579" for this suite. @ 07/04/24 03:38:44.943
â€¢ [0.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 07/04/24 03:38:44.953
  I0704 03:38:44.953303 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename resourcequota @ 07/04/24 03:38:44.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:38:44.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:38:44.989
  STEP: Counting existing ResourceQuota @ 07/04/24 03:38:44.994
  STEP: Creating a ResourceQuota @ 07/04/24 03:38:49.998
  STEP: Ensuring resource quota status is calculated @ 07/04/24 03:38:50.004
  STEP: Creating a Service @ 07/04/24 03:38:52.008
  STEP: Creating a NodePort Service @ 07/04/24 03:38:52.024
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 07/04/24 03:38:52.053
  STEP: Ensuring resource quota status captures service creation @ 07/04/24 03:38:52.075
  STEP: Deleting Services @ 07/04/24 03:38:54.081
  STEP: Ensuring resource quota status released usage @ 07/04/24 03:38:54.121
  I0704 03:38:56.124552 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7732" for this suite. @ 07/04/24 03:38:56.127
â€¢ [11.180 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 07/04/24 03:38:56.133
  I0704 03:38:56.133753 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename secrets @ 07/04/24 03:38:56.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:38:56.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:38:56.176
  STEP: Creating secret with name secret-test-7e7b4d88-cca3-4ae8-9c4e-3f563e99e22f @ 07/04/24 03:38:56.184
  STEP: Creating a pod to test consume secrets @ 07/04/24 03:38:56.189
  STEP: Saw pod success @ 07/04/24 03:39:00.212
  I0704 03:39:00.215310 20 output.go:196] Trying to get logs from node 3.142.51.114 pod pod-secrets-5f23867d-1731-4f48-a8f7-24efade9fe93 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/04/24 03:39:00.231
  I0704 03:39:00.256356 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7492" for this suite. @ 07/04/24 03:39:00.26
â€¢ [4.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 07/04/24 03:39:00.277
  I0704 03:39:00.277544 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/04/24 03:39:00.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:39:00.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:39:00.321
  I0704 03:39:00.324916 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 03:39:03.404946 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8125" for this suite. @ 07/04/24 03:39:03.415
â€¢ [3.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 07/04/24 03:39:03.433
  I0704 03:39:03.433442 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename kubectl @ 07/04/24 03:39:03.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:39:03.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:39:03.471
  STEP: creating Agnhost RC @ 07/04/24 03:39:03.48
  I0704 03:39:03.480996 20 kubectl.go:1540] namespace kubectl-3202
  I0704 03:39:03.481202 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-3202 create -f -'
  I0704 03:39:03.682874 20 builder.go:146] stderr: ""
  I0704 03:39:03.682958 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/04/24 03:39:03.682
  I0704 03:39:04.688931 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0704 03:39:04.688971 20 framework.go:733] Found 0 / 1
  I0704 03:39:05.691117 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0704 03:39:05.691170 20 framework.go:733] Found 1 / 1
  I0704 03:39:05.691187 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0704 03:39:05.696203 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0704 03:39:05.696253 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0704 03:39:05.696264 20 kubectl.go:1547] wait on agnhost-primary startup in kubectl-3202 
  I0704 03:39:05.696311 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-3202 logs agnhost-primary-wn2tn agnhost-primary'
  I0704 03:39:05.852932 20 builder.go:146] stderr: ""
  I0704 03:39:05.852987 20 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 07/04/24 03:39:05.853
  I0704 03:39:05.853079 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-3202 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0704 03:39:05.946460 20 builder.go:146] stderr: ""
  I0704 03:39:05.946519 20 builder.go:147] stdout: "service/rm2 exposed\n"
  I0704 03:39:05.952634 20 utils.go:1179] Service rm2 in namespace kubectl-3202 found.
  STEP: exposing service @ 07/04/24 03:39:07.965
  I0704 03:39:07.965198 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-3202 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0704 03:39:08.057627 20 builder.go:146] stderr: ""
  I0704 03:39:08.057721 20 builder.go:147] stdout: "service/rm3 exposed\n"
  I0704 03:39:08.069815 20 utils.go:1179] Service rm3 in namespace kubectl-3202 found.
  I0704 03:39:10.078157 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3202" for this suite. @ 07/04/24 03:39:10.087
â€¢ [6.667 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 07/04/24 03:39:10.1
  I0704 03:39:10.100284 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename replication-controller @ 07/04/24 03:39:10.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:39:10.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:39:10.127
  STEP: Creating replication controller my-hostname-basic-3113b9dc-adcf-4acb-87f0-117b0dbd2d15 @ 07/04/24 03:39:10.131
  I0704 03:39:10.144358 20 resource.go:87] Pod name my-hostname-basic-3113b9dc-adcf-4acb-87f0-117b0dbd2d15: Found 0 pods out of 1
  I0704 03:39:15.149790 20 resource.go:87] Pod name my-hostname-basic-3113b9dc-adcf-4acb-87f0-117b0dbd2d15: Found 1 pods out of 1
  I0704 03:39:15.149832 20 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-3113b9dc-adcf-4acb-87f0-117b0dbd2d15" are running
  I0704 03:39:15.161128 20 rc.go:523] Pod "my-hostname-basic-3113b9dc-adcf-4acb-87f0-117b0dbd2d15-pgddl" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-04 03:39:11 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-04 03:39:10 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-04 03:39:11 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-04 03:39:11 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-04 03:39:10 +0000 UTC Reason: Message:}])
  I0704 03:39:15.161449 20 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/04/24 03:39:15.161
  I0704 03:39:15.208571 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-152" for this suite. @ 07/04/24 03:39:15.226
â€¢ [5.149 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 07/04/24 03:39:15.249
  I0704 03:39:15.249577 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/04/24 03:39:15.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:39:15.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:39:15.294
  STEP: creating the policy @ 07/04/24 03:39:15.312
  STEP: waiting until the marker is denied @ 07/04/24 03:39:15.36
  STEP: testing a replicated Deployment to be allowed @ 07/04/24 03:39:15.678
  STEP: testing a non-replicated ReplicaSet not to be denied @ 07/04/24 03:39:15.696
  I0704 03:39:15.918478 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-4997" for this suite. @ 07/04/24 03:39:16.01
â€¢ [0.777 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 07/04/24 03:39:16.03
  I0704 03:39:16.030362 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename emptydir @ 07/04/24 03:39:16.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:39:16.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:39:16.075
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/04/24 03:39:16.084
  STEP: Saw pod success @ 07/04/24 03:39:20.104
  I0704 03:39:20.106756 20 output.go:196] Trying to get logs from node 18.118.109.209 pod pod-094d2b92-416b-44aa-9bb2-02f6fcc14596 container test-container: <nil>
  STEP: delete the pod @ 07/04/24 03:39:20.124
  I0704 03:39:20.144546 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1611" for this suite. @ 07/04/24 03:39:20.15
â€¢ [4.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 07/04/24 03:39:20.16
  I0704 03:39:20.160199 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 03:39:20.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:39:20.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:39:20.208
  STEP: Creating a pod to test downward API volume plugin @ 07/04/24 03:39:20.211
  STEP: Saw pod success @ 07/04/24 03:39:24.238
  I0704 03:39:24.241088 20 output.go:196] Trying to get logs from node 3.142.51.114 pod downwardapi-volume-1da67397-ded0-4759-9cfb-8f6a00601df0 container client-container: <nil>
  STEP: delete the pod @ 07/04/24 03:39:24.249
  I0704 03:39:24.263224 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7139" for this suite. @ 07/04/24 03:39:24.266
â€¢ [4.112 seconds]
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 07/04/24 03:39:24.272
  I0704 03:39:24.272573 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename svcaccounts @ 07/04/24 03:39:24.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:39:24.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:39:24.293
  STEP: reading a file in the container @ 07/04/24 03:39:26.353
  I0704 03:39:26.353167 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9245 pod-service-account-7e5754ab-5335-4ac5-baa4-e3e956a08262 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 07/04/24 03:39:26.544
  I0704 03:39:26.544201 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9245 pod-service-account-7e5754ab-5335-4ac5-baa4-e3e956a08262 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 07/04/24 03:39:26.736
  I0704 03:39:26.737065 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9245 pod-service-account-7e5754ab-5335-4ac5-baa4-e3e956a08262 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0704 03:39:26.910419 20 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-9245"
  I0704 03:39:26.912343 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9245" for this suite. @ 07/04/24 03:39:26.915
â€¢ [2.650 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 07/04/24 03:39:26.922
  I0704 03:39:26.922759 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename pods @ 07/04/24 03:39:26.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:39:26.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:39:26.937
  I0704 03:39:26.940084 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: creating the pod @ 07/04/24 03:39:26.94
  STEP: submitting the pod to kubernetes @ 07/04/24 03:39:26.941
  I0704 03:39:29.012894 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-989" for this suite. @ 07/04/24 03:39:29.016
â€¢ [2.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1793
  STEP: Creating a kubernetes client @ 07/04/24 03:39:29.025
  I0704 03:39:29.025358 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename kubectl @ 07/04/24 03:39:29.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:39:29.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:39:29.049
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/04/24 03:39:29.051
  I0704 03:39:29.052235 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-4379 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0704 03:39:29.135618 20 builder.go:146] stderr: ""
  I0704 03:39:29.135670 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 07/04/24 03:39:29.135
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/04/24 03:39:34.187
  I0704 03:39:34.187671 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-4379 get pod e2e-test-httpd-pod -o json'
  I0704 03:39:34.275118 20 builder.go:146] stderr: ""
  I0704 03:39:34.275336 20 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"71f90ee382cd64d009fbcfb52ae536aa37b4a05b3ad85a444f56879c0dff5a2e\",\n            \"cni.projectcalico.org/podIP\": \"10.42.0.32/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.42.0.32/32\"\n        },\n        \"creationTimestamp\": \"2024-07-04T03:39:29Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-4379\",\n        \"resourceVersion\": \"7987\",\n        \"uid\": \"13667661-264b-4f00-8cdc-f54ed6449c64\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-g7sr6\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"18.191.27.132\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-g7sr6\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-04T03:39:31Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-04T03:39:29Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-04T03:39:31Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-04T03:39:31Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-04T03:39:29Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"docker://7c1fe3e5c0dcb6eeb30b87ba22aa85999c96e2c8089fe5c387b53acd7a669ee9\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-07-04T03:39:30Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.16.55\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.16.55\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.42.0.32\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.42.0.32\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-07-04T03:39:29Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 07/04/24 03:39:34.275
  I0704 03:39:34.275811 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-4379 replace -f -'
  I0704 03:39:34.447360 20 builder.go:146] stderr: ""
  I0704 03:39:34.447411 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 07/04/24 03:39:34.447
  I0704 03:39:34.452694 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-4379 delete pods e2e-test-httpd-pod'
  I0704 03:39:36.263338 20 builder.go:146] stderr: ""
  I0704 03:39:36.263385 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0704 03:39:36.263528 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4379" for this suite. @ 07/04/24 03:39:36.272
â€¢ [7.255 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 07/04/24 03:39:36.28
  I0704 03:39:36.280448 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename disruption @ 07/04/24 03:39:36.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:39:36.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:39:36.3
  STEP: Waiting for the pdb to be processed @ 07/04/24 03:39:36.308
  STEP: Updating PodDisruptionBudget status @ 07/04/24 03:39:36.316
  STEP: Waiting for all pods to be running @ 07/04/24 03:39:36.329
  I0704 03:39:36.351102 20 disruption.go:578] running pods: 0 < 1
  STEP: locating a running pod @ 07/04/24 03:39:38.332
  STEP: Waiting for the pdb to be processed @ 07/04/24 03:39:38.344
  STEP: Patching PodDisruptionBudget status @ 07/04/24 03:39:38.349
  STEP: Waiting for the pdb to be processed @ 07/04/24 03:39:38.357
  I0704 03:39:38.362628 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-581" for this suite. @ 07/04/24 03:39:38.365
â€¢ [2.092 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 07/04/24 03:39:38.372
  I0704 03:39:38.372594 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename kubelet-test @ 07/04/24 03:39:38.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:39:38.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:39:38.392
  I0704 03:39:40.449670 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9483" for this suite. @ 07/04/24 03:39:40.456
â€¢ [2.106 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 07/04/24 03:39:40.48
  I0704 03:39:40.480361 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 03:39:40.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:39:40.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:39:40.523
  STEP: Creating configMap with name projected-configmap-test-volume-fd2152cb-c8e9-4a58-a38f-7591637aa36d @ 07/04/24 03:39:40.528
  STEP: Creating a pod to test consume configMaps @ 07/04/24 03:39:40.538
  STEP: Saw pod success @ 07/04/24 03:39:44.589
  I0704 03:39:44.592603 20 output.go:196] Trying to get logs from node 18.191.27.132 pod pod-projected-configmaps-000f5f15-7832-41fb-8b0f-28c80ad01a2a container agnhost-container: <nil>
  STEP: delete the pod @ 07/04/24 03:39:44.599
  I0704 03:39:44.622010 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7989" for this suite. @ 07/04/24 03:39:44.625
â€¢ [4.151 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 07/04/24 03:39:44.632
  I0704 03:39:44.632194 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename field-validation @ 07/04/24 03:39:44.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:39:44.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:39:44.675
  I0704 03:39:44.687181 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  W0704 03:39:44.690197      20 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0008b7c60 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0704 03:39:47.264482      20 warnings.go:70] unknown field "alpha"
  W0704 03:39:47.264509      20 warnings.go:70] unknown field "beta"
  W0704 03:39:47.264515      20 warnings.go:70] unknown field "delta"
  W0704 03:39:47.264522      20 warnings.go:70] unknown field "epsilon"
  W0704 03:39:47.264527      20 warnings.go:70] unknown field "gamma"
  I0704 03:39:47.823409 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-146" for this suite. @ 07/04/24 03:39:47.826
â€¢ [3.204 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 07/04/24 03:39:47.842
  I0704 03:39:47.842104 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename field-validation @ 07/04/24 03:39:47.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:39:47.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:39:47.899
  I0704 03:39:47.908915 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  W0704 03:39:50.462196      20 warnings.go:70] unknown field "alpha"
  W0704 03:39:50.462223      20 warnings.go:70] unknown field "beta"
  W0704 03:39:50.462230      20 warnings.go:70] unknown field "delta"
  W0704 03:39:50.462236      20 warnings.go:70] unknown field "epsilon"
  W0704 03:39:50.462242      20 warnings.go:70] unknown field "gamma"
  I0704 03:39:51.001066 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5212" for this suite. @ 07/04/24 03:39:51.004
â€¢ [3.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 07/04/24 03:39:51.01
  I0704 03:39:51.010171 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename init-container @ 07/04/24 03:39:51.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:39:51.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:39:51.029
  STEP: creating the pod @ 07/04/24 03:39:51.032
  I0704 03:39:51.032509 20 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0704 03:39:54.934918 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6136" for this suite. @ 07/04/24 03:39:54.941
â€¢ [3.939 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 07/04/24 03:39:54.95
  I0704 03:39:54.950641 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename webhook @ 07/04/24 03:39:54.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:39:54.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:39:54.987
  STEP: Setting up server cert @ 07/04/24 03:39:55.028
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/04/24 03:39:55.663
  STEP: Deploying the webhook pod @ 07/04/24 03:39:55.692
  STEP: Wait for the deployment to be ready @ 07/04/24 03:39:55.715
  I0704 03:39:55.733122 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/04/24 03:39:57.758
  STEP: Verifying the service has paired with the endpoint @ 07/04/24 03:39:57.787
  I0704 03:39:58.788690 20 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/04/24 03:39:58.794
  STEP: create the configmap with a random name @ 07/04/24 03:39:58.839
  STEP: verify the configmap is mutated @ 07/04/24 03:39:58.873
  STEP: create the configmap with 'skip-me' name @ 07/04/24 03:39:58.873
  I0704 03:39:58.930985 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1028" for this suite. @ 07/04/24 03:39:58.934
  STEP: Destroying namespace "webhook-markers-784" for this suite. @ 07/04/24 03:39:58.944
â€¢ [4.010 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 07/04/24 03:39:58.963
  I0704 03:39:58.963643 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename security-context-test @ 07/04/24 03:39:58.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:39:58.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:39:58.99
  I0704 03:40:03.018370 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3990" for this suite. @ 07/04/24 03:40:03.024
â€¢ [4.069 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 07/04/24 03:40:03.032
  I0704 03:40:03.032711 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename downward-api @ 07/04/24 03:40:03.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:40:03.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:40:03.053
  STEP: Creating the pod @ 07/04/24 03:40:03.059
  I0704 03:40:07.628113 20 pod_client.go:141] Successfully updated pod "annotationupdateeaac2872-c450-41cb-b9f0-c3d3a7e31f70"
  I0704 03:40:09.663504 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8154" for this suite. @ 07/04/24 03:40:09.676
â€¢ [6.665 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 07/04/24 03:40:09.698
  I0704 03:40:09.698256 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename resourcequota @ 07/04/24 03:40:09.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:40:09.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:40:09.752
  STEP: Creating a ResourceQuota @ 07/04/24 03:40:09.773
  STEP: Getting a ResourceQuota @ 07/04/24 03:40:09.785
  STEP: Listing all ResourceQuotas with LabelSelector @ 07/04/24 03:40:09.794
  STEP: Patching the ResourceQuota @ 07/04/24 03:40:09.804
  STEP: Deleting a Collection of ResourceQuotas @ 07/04/24 03:40:09.815
  STEP: Verifying the deleted ResourceQuota @ 07/04/24 03:40:09.834
  I0704 03:40:09.837060 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6582" for this suite. @ 07/04/24 03:40:09.842
â€¢ [0.157 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 07/04/24 03:40:09.857
  I0704 03:40:09.857093 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename pv @ 07/04/24 03:40:09.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:40:09.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:40:09.883
  STEP: Creating initial PV and PVC @ 07/04/24 03:40:09.889
  I0704 03:40:09.889700 20 pv.go:390] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-7451" @ 07/04/24 03:40:09.925
  STEP: Listing PVCs in namespace "pv-7451" @ 07/04/24 03:40:09.929
  STEP: Reading "pvc-bdh22" Status @ 07/04/24 03:40:09.935
  STEP: Reading "pv-7451-fjpbs" Status @ 07/04/24 03:40:09.938
  STEP: Patching "pvc-bdh22" Status @ 07/04/24 03:40:09.943
  STEP: Patching "pv-7451-fjpbs" Status @ 07/04/24 03:40:09.962
  STEP: Updating "pvc-bdh22" Status @ 07/04/24 03:40:09.969
  STEP: Updating "pv-7451-fjpbs" Status @ 07/04/24 03:40:09.982
  I0704 03:40:09.998645 20 persistent_volumes.go:407] AfterEach: deleting 1 PVCs and 1 PVs...
  I0704 03:40:09.998685 20 pv.go:201] Deleting PersistentVolumeClaim "pvc-bdh22"
  I0704 03:40:10.004289 20 pv.go:189] Deleting PersistentVolume "pv-7451-fjpbs"
  I0704 03:40:10.012225 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-7451" for this suite. @ 07/04/24 03:40:10.016
â€¢ [0.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 07/04/24 03:40:10.023
  I0704 03:40:10.023689 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename sched-preemption @ 07/04/24 03:40:10.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:40:10.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:40:10.046
  I0704 03:40:10.062031 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0704 03:41:10.065777 20 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/04/24 03:41:10.068
  I0704 03:41:10.068538 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/04/24 03:41:10.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:41:10.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:41:10.091
  STEP: Finding an available node @ 07/04/24 03:41:10.093
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/04/24 03:41:10.093
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/04/24 03:41:12.109
  I0704 03:41:12.133234 20 preemption.go:583] found a healthy node: 18.191.27.132
  I0704 03:41:18.225434 20 preemption.go:706] pods created so far: [1 1 1]
  I0704 03:41:18.225680 20 preemption.go:707] length of pods created so far: 3
  I0704 03:41:22.237688 20 preemption.go:724] pods created so far: [2 2 1]
  I0704 03:41:29.377250 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3856" for this suite. @ 07/04/24 03:41:29.388
  I0704 03:41:29.394679 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2825" for this suite. @ 07/04/24 03:41:29.403
â€¢ [79.385 seconds]
------------------------------
SSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 07/04/24 03:41:29.41
  I0704 03:41:29.410619 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename events @ 07/04/24 03:41:29.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:41:29.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:41:29.432
  STEP: creating a test event @ 07/04/24 03:41:29.436
  STEP: listing events in all namespaces @ 07/04/24 03:41:29.44
  STEP: listing events in test namespace @ 07/04/24 03:41:29.447
  STEP: listing events with field selection filtering on source @ 07/04/24 03:41:29.449
  STEP: listing events with field selection filtering on reportingController @ 07/04/24 03:41:29.454
  STEP: getting the test event @ 07/04/24 03:41:29.457
  STEP: patching the test event @ 07/04/24 03:41:29.459
  STEP: getting the test event @ 07/04/24 03:41:29.473
  STEP: updating the test event @ 07/04/24 03:41:29.476
  STEP: getting the test event @ 07/04/24 03:41:29.482
  STEP: deleting the test event @ 07/04/24 03:41:29.486
  STEP: listing events in all namespaces @ 07/04/24 03:41:29.496
  STEP: listing events in test namespace @ 07/04/24 03:41:29.502
  I0704 03:41:29.506383 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8209" for this suite. @ 07/04/24 03:41:29.51
â€¢ [0.106 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 07/04/24 03:41:29.517
  I0704 03:41:29.517487 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename container-runtime @ 07/04/24 03:41:29.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:41:29.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:41:29.561
  STEP: create the container @ 07/04/24 03:41:29.565
  W0704 03:41:29.573363      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 07/04/24 03:41:29.573
  STEP: get the container status @ 07/04/24 03:41:32.592
  STEP: the container should be terminated @ 07/04/24 03:41:32.599
  STEP: the termination message should be set @ 07/04/24 03:41:32.599
  I0704 03:41:32.599129 20 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/04/24 03:41:32.599
  I0704 03:41:32.621677 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2793" for this suite. @ 07/04/24 03:41:32.626
â€¢ [3.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 07/04/24 03:41:32.636
  I0704 03:41:32.636085 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename dns @ 07/04/24 03:41:32.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:41:32.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:41:32.674
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 07/04/24 03:41:32.677
  I0704 03:41:32.685992 20 dns.go:419] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-3673  b43082c9-f9cf-4f48-959d-427fc76fd9a0 8714 0 2024-07-04 03:41:32 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-07-04 03:41:32 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-x6gpb,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-x6gpb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 07/04/24 03:41:34.698
  I0704 03:41:34.698661 20 exec_util.go:55] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-3673 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 03:41:34.698683 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 03:41:34.699420 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 03:41:34.699631 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-3673/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 07/04/24 03:41:34.825
  I0704 03:41:34.825795 20 exec_util.go:55] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-3673 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 03:41:34.825861 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 03:41:34.826530 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 03:41:34.826686 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-3673/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0704 03:41:35.027143 20 dns.go:421] Deleting pod test-dns-nameservers...
  I0704 03:41:35.093864 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3673" for this suite. @ 07/04/24 03:41:35.101
â€¢ [2.474 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 07/04/24 03:41:35.111
  I0704 03:41:35.111781 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename deployment @ 07/04/24 03:41:35.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:41:35.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:41:35.229
  I0704 03:41:35.236742 20 deployment.go:1196] Creating deployment "webserver-deployment"
  I0704 03:41:35.257147 20 deployment.go:1200] Waiting for observed generation 1
  I0704 03:41:37.294470 20 deployment.go:1205] Waiting for all required pods to come up
  I0704 03:41:37.308358 20 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 07/04/24 03:41:37.308
  I0704 03:41:39.353198 20 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0704 03:41:39.358197 20 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0704 03:41:39.368639 20 deployment.go:313] Updating deployment webserver-deployment
  I0704 03:41:39.368687 20 deployment.go:1224] Waiting for observed generation 2
  I0704 03:41:41.379176 20 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0704 03:41:41.382890 20 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0704 03:41:41.386061 20 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0704 03:41:41.394505 20 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0704 03:41:41.394591 20 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0704 03:41:41.399376 20 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0704 03:41:41.404423 20 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0704 03:41:41.406117 20 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0704 03:41:41.415320 20 deployment.go:313] Updating deployment webserver-deployment
  I0704 03:41:41.415406 20 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0704 03:41:41.421883 20 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0704 03:41:43.444716 20 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0704 03:41:43.467349 20 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f26fface-cb71-4d8c-a64b-162de4f5cf48",
      ResourceVersion: (string) (len=4) "9118",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661295,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-67c89d485c\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0704 03:41:43.491643 20 deployment.go:39] New ReplicaSet "webserver-deployment-67c89d485c" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-67c89d485c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "29b7f07e-0268-4447-9cfd-202ab8479e42",
      ResourceVersion: (string) (len=4) "9117",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661299,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "f26fface-cb71-4d8c-a64b-162de4f5cf48",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 32 36 66 66 61  63 65 2d 63 62 37 31 2d  |\"f26fface-cb71-|
              00000120  34 64 38 63 2d 61 36 34  62 2d 31 36 32 64 65 34  |4d8c-a64b-162de4|
              00000130  66 35 63 66 34 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f5cf48\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0704 03:41:43.499011 20 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I0704 03:41:43.499854 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-77db57d8df",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d772bcce-009d-4517-a844-878dd4ec86fb",
      ResourceVersion: (string) (len=4) "9096",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661295,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "f26fface-cb71-4d8c-a64b-162de4f5cf48",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 32 36 66 66 61  63 65 2d 63 62 37 31 2d  |\"f26fface-cb71-|
              00000120  34 64 38 63 2d 61 36 34  62 2d 31 36 32 64 65 34  |4d8c-a64b-162de4|
              00000130  66 35 63 66 34 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f5cf48\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0704 03:41:43.547836 20 deployment.go:67] Pod "webserver-deployment-67c89d485c-26fcv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-26fcv",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "85a60bb9-85b1-404e-9a0e-237f31399cde",
      ResourceVersion: (string) (len=4) "9155",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "29b7f07e-0268-4447-9cfd-202ab8479e42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  62 37 66 30 37 65 2d 30  |d\":\"29b7f07e-0|
              00000090  32 36 38 2d 34 34 34 37  2d 39 63 66 64 2d 32 30  |268-4447-9cfd-20|
              000000a0  32 61 62 38 34 37 39 65  34 32 5c 22 7d 22 3a 7b  |2ab8479e42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rkw9z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rkw9z",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "3.142.51.114",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.23.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.23.45"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.550441 20 deployment.go:67] Pod "webserver-deployment-67c89d485c-2b5hd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-2b5hd",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "89ddd3e9-1cfe-45a4-a160-bd0f03ae3233",
      ResourceVersion: (string) (len=4) "9132",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661299,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1d9f14df40bd1d00e59da7790597ee9d13a1c9dcba84fccaaa111fe7b26ddc89",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.44/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.44/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "29b7f07e-0268-4447-9cfd-202ab8479e42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  62 37 66 30 37 65 2d 30  |d\":\"29b7f07e-0|
              00000090  32 36 38 2d 34 34 34 37  2d 39 63 66 64 2d 32 30  |268-4447-9cfd-20|
              000000a0  32 61 62 38 34 37 39 65  34 32 5c 22 7d 22 3a 7b  |2ab8479e42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661300,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 30 2e 34 34 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.0.44\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w74z6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w74z6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "18.191.27.132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.55"
        }
      },
      PodIP: (string) (len=10) "10.42.0.44",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.44"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661299,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=169) "Error response from daemon: pull access denied for webserver, repository does not exist or may require 'docker login': denied: requested access to the resource is denied"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.645064 20 deployment.go:67] Pod "webserver-deployment-67c89d485c-46np5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-46np5",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df0ce65d-0307-4870-85c6-21f0deabfba5",
      ResourceVersion: (string) (len=4) "9125",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661299,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e70a41fe2588183e23028d6d4f914ed4a5cefdec14c92c94953ad1009a204016",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.48/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.48/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "29b7f07e-0268-4447-9cfd-202ab8479e42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  62 37 66 30 37 65 2d 30  |d\":\"29b7f07e-0|
              00000090  32 36 38 2d 34 34 34 37  2d 39 63 66 64 2d 32 30  |268-4447-9cfd-20|
              000000a0  32 61 62 38 34 37 39 65  34 32 5c 22 7d 22 3a 7b  |2ab8479e42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661300,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 32 2e 34 38 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.2.48\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tmsl6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tmsl6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "3.142.51.114",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.23.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.23.45"
        }
      },
      PodIP: (string) (len=10) "10.42.2.48",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.48"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661299,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=169) "Error response from daemon: pull access denied for webserver, repository does not exist or may require 'docker login': denied: requested access to the resource is denied"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.662162 20 deployment.go:67] Pod "webserver-deployment-67c89d485c-dnzjr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-dnzjr",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0cfc8c28-1ae8-4ecf-8bac-28b64c21cab4",
      ResourceVersion: (string) (len=4) "9116",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "29b7f07e-0268-4447-9cfd-202ab8479e42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  62 37 66 30 37 65 2d 30  |d\":\"29b7f07e-0|
              00000090  32 36 38 2d 34 34 34 37  2d 39 63 66 64 2d 32 30  |268-4447-9cfd-20|
              000000a0  32 61 62 38 34 37 39 65  34 32 5c 22 7d 22 3a 7b  |2ab8479e42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d58nd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d58nd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.118.109.209",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.23.191",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.23.191"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.678317 20 deployment.go:67] Pod "webserver-deployment-67c89d485c-hjjzw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-hjjzw",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a916c779-ee1c-4643-94c4-5bc16c80a49d",
      ResourceVersion: (string) (len=4) "9135",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "29b7f07e-0268-4447-9cfd-202ab8479e42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  62 37 66 30 37 65 2d 30  |d\":\"29b7f07e-0|
              00000090  32 36 38 2d 34 34 34 37  2d 39 63 66 64 2d 32 30  |268-4447-9cfd-20|
              000000a0  32 61 62 38 34 37 39 65  34 32 5c 22 7d 22 3a 7b  |2ab8479e42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zjz4m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zjz4m",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "3.142.51.114",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.23.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.23.45"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.699025 20 deployment.go:67] Pod "webserver-deployment-67c89d485c-lcmd4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-lcmd4",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0e2d8b35-e3fb-4d48-8f31-0298695429d4",
      ResourceVersion: (string) (len=4) "9134",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "29b7f07e-0268-4447-9cfd-202ab8479e42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  62 37 66 30 37 65 2d 30  |d\":\"29b7f07e-0|
              00000090  32 36 38 2d 34 34 34 37  2d 39 63 66 64 2d 32 30  |268-4447-9cfd-20|
              000000a0  32 61 62 38 34 37 39 65  34 32 5c 22 7d 22 3a 7b  |2ab8479e42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d4sz5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d4sz5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.118.109.209",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.23.191",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.23.191"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.712364 20 deployment.go:67] Pod "webserver-deployment-67c89d485c-lklfv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-lklfv",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2d026568-4eac-4a82-a1ab-cdc98a6e63e4",
      ResourceVersion: (string) (len=4) "9148",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "29b7f07e-0268-4447-9cfd-202ab8479e42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  62 37 66 30 37 65 2d 30  |d\":\"29b7f07e-0|
              00000090  32 36 38 2d 34 34 34 37  2d 39 63 66 64 2d 32 30  |268-4447-9cfd-20|
              000000a0  32 61 62 38 34 37 39 65  34 32 5c 22 7d 22 3a 7b  |2ab8479e42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mdgkr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mdgkr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "3.142.51.114",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.23.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.23.45"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.715056 20 deployment.go:67] Pod "webserver-deployment-67c89d485c-ngwjg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-ngwjg",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "40716590-93ce-4eaa-aed9-ca021bc95f2f",
      ResourceVersion: (string) (len=4) "9120",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "29b7f07e-0268-4447-9cfd-202ab8479e42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  62 37 66 30 37 65 2d 30  |d\":\"29b7f07e-0|
              00000090  32 36 38 2d 34 34 34 37  2d 39 63 66 64 2d 32 30  |268-4447-9cfd-20|
              000000a0  32 61 62 38 34 37 39 65  34 32 5c 22 7d 22 3a 7b  |2ab8479e42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5hfkt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5hfkt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "18.191.27.132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.55"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.725226 20 deployment.go:67] Pod "webserver-deployment-67c89d485c-p89mv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-p89mv",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d2e7811c-ee6e-4bf8-8a33-8b1d3ccd3219",
      ResourceVersion: (string) (len=4) "9017",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661299,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.45/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.45/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9e8e88f979e6e84bf8e4df2712cf8fa2e660a367260fbb5071f96c348c88250b"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "29b7f07e-0268-4447-9cfd-202ab8479e42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  62 37 66 30 37 65 2d 30  |d\":\"29b7f07e-0|
              00000090  32 36 38 2d 34 34 34 37  2d 39 63 66 64 2d 32 30  |268-4447-9cfd-20|
              000000a0  32 61 62 38 34 37 39 65  34 32 5c 22 7d 22 3a 7b  |2ab8479e42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-79b87",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-79b87",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "18.191.27.132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.55"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661299,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.728428 20 deployment.go:67] Pod "webserver-deployment-67c89d485c-pd42c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-pd42c",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "264d49fb-a84c-4563-93ff-aedfe77b2cb6",
      ResourceVersion: (string) (len=4) "9112",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661299,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "df947cf86f2a44383046806c121860b5eef304222b22d995820937a7b30162ea",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) "",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) ""
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "29b7f07e-0268-4447-9cfd-202ab8479e42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  62 37 66 30 37 65 2d 30  |d\":\"29b7f07e-0|
              00000090  32 36 38 2d 34 34 34 37  2d 39 63 66 64 2d 32 30  |268-4447-9cfd-20|
              000000a0  32 61 62 38 34 37 39 65  34 32 5c 22 7d 22 3a 7b  |2ab8479e42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-trx54",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-trx54",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "3.142.51.114",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.23.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.23.45"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661299,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=169) "Error response from daemon: pull access denied for webserver, repository does not exist or may require 'docker login': denied: requested access to the resource is denied"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.732302 20 deployment.go:67] Pod "webserver-deployment-67c89d485c-rb25j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-rb25j",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "090f8622-ebd5-4ad9-b35f-e2f5dfc5b7b8",
      ResourceVersion: (string) (len=4) "9153",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.16/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "167f77394bccd8ad88fba82d466443a4c3cab8d26f88357a35c4b318b07f5452",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.16/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "29b7f07e-0268-4447-9cfd-202ab8479e42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  62 37 66 30 37 65 2d 30  |d\":\"29b7f07e-0|
              00000090  32 36 38 2d 34 34 34 37  2d 39 63 66 64 2d 32 30  |268-4447-9cfd-20|
              000000a0  32 61 62 38 34 37 39 65  34 32 5c 22 7d 22 3a 7b  |2ab8479e42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wc5t7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wc5t7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.118.109.209",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.23.191",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.23.191"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.752984 20 deployment.go:67] Pod "webserver-deployment-67c89d485c-txrlg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-txrlg",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8a8e89e7-015a-4920-9bb4-fc1b1e4e3e5a",
      ResourceVersion: (string) (len=4) "9130",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "29b7f07e-0268-4447-9cfd-202ab8479e42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  62 37 66 30 37 65 2d 30  |d\":\"29b7f07e-0|
              00000090  32 36 38 2d 34 34 34 37  2d 39 63 66 64 2d 32 30  |268-4447-9cfd-20|
              000000a0  32 61 62 38 34 37 39 65  34 32 5c 22 7d 22 3a 7b  |2ab8479e42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-87z6f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-87z6f",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "18.191.27.132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.55"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.771173 20 deployment.go:67] Pod "webserver-deployment-67c89d485c-wftmp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-wftmp",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f8c55d44-73db-475f-bb2d-59c9921a156f",
      ResourceVersion: (string) (len=4) "9142",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661299,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "76a730a09b14b7fe73a5481d143b6cc9a9cfe385fdd1fa201f1924ab687a28e8",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.15/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.15/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "29b7f07e-0268-4447-9cfd-202ab8479e42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  62 37 66 30 37 65 2d 30  |d\":\"29b7f07e-0|
              00000090  32 36 38 2d 34 34 34 37  2d 39 63 66 64 2d 32 30  |268-4447-9cfd-20|
              000000a0  32 61 62 38 34 37 39 65  34 32 5c 22 7d 22 3a 7b  |2ab8479e42\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661300,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 31 35 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.1.15\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hc9bq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hc9bq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.118.109.209",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661299,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.23.191",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.23.191"
        }
      },
      PodIP: (string) (len=10) "10.42.1.15",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.15"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661299,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=16) "ImagePullBackOff",
              Message: (string) (len=38) "Back-off pulling image \"webserver:404\""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.777768 20 deployment.go:67] Pod "webserver-deployment-77db57d8df-8svrb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-8svrb",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d49850d5-b156-4101-a5ac-8e1a2b8b795d",
      ResourceVersion: (string) (len=4) "8895",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661295,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.13/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.13/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "2ab183f185f0c0afe6bc965a494a292b2ab54b808197d70eea369f058a7c49b9"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "d772bcce-009d-4517-a844-878dd4ec86fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  37 32 62 63 63 65 2d 30  |d\":\"d772bcce-0|
              00000090  30 39 64 2d 34 35 31 37  2d 61 38 34 34 2d 38 37  |09d-4517-a844-87|
              000000a0  38 64 64 34 65 63 38 36  66 62 5c 22 7d 22 3a 7b  |8dd4ec86fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 33  5c 22 7d 22 3a 7b 22 2e  |.42.1.13\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t4rv5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t4rv5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.118.109.209",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.23.191",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.23.191"
        }
      },
      PodIP: (string) (len=10) "10.42.1.13",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.13"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661295,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855661297,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://5234fee875a085029f49a0ec728ab3d626a6958b29da3dcabc3de35dce3dfbce",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.785413 20 deployment.go:67] Pod "webserver-deployment-77db57d8df-955bf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-955bf",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "84c1b420-9c8a-433a-8fe2-62b729740481",
      ResourceVersion: (string) (len=4) "9145",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "d772bcce-009d-4517-a844-878dd4ec86fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  37 32 62 63 63 65 2d 30  |d\":\"d772bcce-0|
              00000090  30 39 64 2d 34 35 31 37  2d 61 38 34 34 2d 38 37  |09d-4517-a844-87|
              000000a0  38 64 64 34 65 63 38 36  66 62 5c 22 7d 22 3a 7b  |8dd4ec86fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wx7t7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wx7t7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "3.142.51.114",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.23.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.23.45"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.801956 20 deployment.go:67] Pod "webserver-deployment-77db57d8df-c24g2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-c24g2",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2a14d06d-87db-4c91-880d-8e74aa19d781",
      ResourceVersion: (string) (len=4) "9152",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "d772bcce-009d-4517-a844-878dd4ec86fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  37 32 62 63 63 65 2d 30  |d\":\"d772bcce-0|
              00000090  30 39 64 2d 34 35 31 37  2d 61 38 34 34 2d 38 37  |09d-4517-a844-87|
              000000a0  38 64 64 34 65 63 38 36  66 62 5c 22 7d 22 3a 7b  |8dd4ec86fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p2xj8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p2xj8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "3.142.51.114",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.23.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.23.45"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.815179 20 deployment.go:67] Pod "webserver-deployment-77db57d8df-c7xtc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-c7xtc",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "848168c5-2289-4fc3-a644-b43a5f0c7567",
      ResourceVersion: (string) (len=4) "8908",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661295,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "095cc38a63fc3158e2e9790b4ee95d0ec23e72260b09fd13bb90731b72e2b422",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.14/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.14/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "d772bcce-009d-4517-a844-878dd4ec86fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  37 32 62 63 63 65 2d 30  |d\":\"d772bcce-0|
              00000090  30 39 64 2d 34 35 31 37  2d 61 38 34 34 2d 38 37  |09d-4517-a844-87|
              000000a0  38 64 64 34 65 63 38 36  66 62 5c 22 7d 22 3a 7b  |8dd4ec86fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 34  5c 22 7d 22 3a 7b 22 2e  |.42.1.14\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ctwpd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ctwpd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.118.109.209",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.23.191",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.23.191"
        }
      },
      PodIP: (string) (len=10) "10.42.1.14",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.14"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661295,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855661297,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://6b57a1795b4a455c5660cb0c20ed43bee2d78d46933734feb49955dbb696cf4a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.824332 20 deployment.go:67] Pod "webserver-deployment-77db57d8df-drr8p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-drr8p",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "12ec391d-d11e-4306-beec-cdded4c64818",
      ResourceVersion: (string) (len=4) "9141",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "d772bcce-009d-4517-a844-878dd4ec86fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  37 32 62 63 63 65 2d 30  |d\":\"d772bcce-0|
              00000090  30 39 64 2d 34 35 31 37  2d 61 38 34 34 2d 38 37  |09d-4517-a844-87|
              000000a0  38 64 64 34 65 63 38 36  66 62 5c 22 7d 22 3a 7b  |8dd4ec86fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pdk8m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pdk8m",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "18.191.27.132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.55"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.830140 20 deployment.go:67] Pod "webserver-deployment-77db57d8df-fl2wl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-fl2wl",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5758d59a-0273-4aa8-973b-8c1e7eab0848",
      ResourceVersion: (string) (len=4) "8925",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661295,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d4b25b0a85260f83711403770492e395bd142684a07a7729031fd45cb4336d4a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.45/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.45/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "d772bcce-009d-4517-a844-878dd4ec86fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  37 32 62 63 63 65 2d 30  |d\":\"d772bcce-0|
              00000090  30 39 64 2d 34 35 31 37  2d 61 38 34 34 2d 38 37  |09d-4517-a844-87|
              000000a0  38 64 64 34 65 63 38 36  66 62 5c 22 7d 22 3a 7b  |8dd4ec86fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 34 35  5c 22 7d 22 3a 7b 22 2e  |.42.2.45\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ht4fh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ht4fh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "3.142.51.114",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.23.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.23.45"
        }
      },
      PodIP: (string) (len=10) "10.42.2.45",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.45"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661295,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855661297,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://e1046b73bd09b016d1c8a6aa4b8e37b7b76270e3f9dcecf436ec501ab206e072",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.841197 20 deployment.go:67] Pod "webserver-deployment-77db57d8df-ftm9f" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-ftm9f",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "444984c2-c9e5-44ae-9ec8-fedd2124bdde",
      ResourceVersion: (string) (len=4) "8900",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661295,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.12/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "5e8a65935045bc7f8f0274b71011382a15ed339f7d1437847521ce98c5a94465",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.12/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "d772bcce-009d-4517-a844-878dd4ec86fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  37 32 62 63 63 65 2d 30  |d\":\"d772bcce-0|
              00000090  30 39 64 2d 34 35 31 37  2d 61 38 34 34 2d 38 37  |09d-4517-a844-87|
              000000a0  38 64 64 34 65 63 38 36  66 62 5c 22 7d 22 3a 7b  |8dd4ec86fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 32  5c 22 7d 22 3a 7b 22 2e  |.42.1.12\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8tgmw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8tgmw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.118.109.209",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.23.191",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.23.191"
        }
      },
      PodIP: (string) (len=10) "10.42.1.12",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.12"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661295,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855661297,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://3417bf550bc8a6a78d92fe29c3e4f2e523136a88eb02994b4069b0b002f5a48a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.853277 20 deployment.go:67] Pod "webserver-deployment-77db57d8df-grf98" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-grf98",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2a27d9d5-ff6c-4ed3-845a-dd3e71b7b5e7",
      ResourceVersion: (string) (len=4) "9074",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "d772bcce-009d-4517-a844-878dd4ec86fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  37 32 62 63 63 65 2d 30  |d\":\"d772bcce-0|
              00000090  30 39 64 2d 34 35 31 37  2d 61 38 34 34 2d 38 37  |09d-4517-a844-87|
              000000a0  38 64 64 34 65 63 38 36  66 62 5c 22 7d 22 3a 7b  |8dd4ec86fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ngfn2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ngfn2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "18.191.27.132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.55"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.855264 20 deployment.go:67] Pod "webserver-deployment-77db57d8df-h85m7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-h85m7",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e30a76b1-fddf-4bbe-b77a-128a90915492",
      ResourceVersion: (string) (len=4) "9128",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "d772bcce-009d-4517-a844-878dd4ec86fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  37 32 62 63 63 65 2d 30  |d\":\"d772bcce-0|
              00000090  30 39 64 2d 34 35 31 37  2d 61 38 34 34 2d 38 37  |09d-4517-a844-87|
              000000a0  38 64 64 34 65 63 38 36  66 62 5c 22 7d 22 3a 7b  |8dd4ec86fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xp6xm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xp6xm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.118.109.209",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.23.191",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.23.191"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.872883 20 deployment.go:67] Pod "webserver-deployment-77db57d8df-hxpnh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-hxpnh",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5d320947-f184-4020-82bd-fbfa8726eb10",
      ResourceVersion: (string) (len=4) "9140",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "d772bcce-009d-4517-a844-878dd4ec86fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  37 32 62 63 63 65 2d 30  |d\":\"d772bcce-0|
              00000090  30 39 64 2d 34 35 31 37  2d 61 38 34 34 2d 38 37  |09d-4517-a844-87|
              000000a0  38 64 64 34 65 63 38 36  66 62 5c 22 7d 22 3a 7b  |8dd4ec86fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wrfb4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wrfb4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "3.142.51.114",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.23.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.23.45"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.875108 20 deployment.go:67] Pod "webserver-deployment-77db57d8df-jkg25" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-jkg25",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1ae1d150-11ee-4341-ba2c-65cfa7e73bc1",
      ResourceVersion: (string) (len=4) "9164",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9f968ff2df8c9eaa3146955674ab344dbe59501b3d057fcd94476a3e1635863f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.17/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.17/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "d772bcce-009d-4517-a844-878dd4ec86fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  37 32 62 63 63 65 2d 30  |d\":\"d772bcce-0|
              00000090  30 39 64 2d 34 35 31 37  2d 61 38 34 34 2d 38 37  |09d-4517-a844-87|
              000000a0  38 64 64 34 65 63 38 36  66 62 5c 22 7d 22 3a 7b  |8dd4ec86fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4dx5r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4dx5r",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.118.109.209",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.23.191",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.23.191"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.878061 20 deployment.go:67] Pod "webserver-deployment-77db57d8df-lq5k9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-lq5k9",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "075fcfaa-120c-4be9-a930-5285147e40fb",
      ResourceVersion: (string) (len=4) "8931",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661295,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f5cee47b7b9a72b98a21b243673c5a895bc5e27c7594b575793f970ed82ebbb4",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.43/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.43/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "d772bcce-009d-4517-a844-878dd4ec86fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  37 32 62 63 63 65 2d 30  |d\":\"d772bcce-0|
              00000090  30 39 64 2d 34 35 31 37  2d 61 38 34 34 2d 38 37  |09d-4517-a844-87|
              000000a0  38 64 64 34 65 63 38 36  66 62 5c 22 7d 22 3a 7b  |8dd4ec86fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 34 33  5c 22 7d 22 3a 7b 22 2e  |.42.2.43\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vfr49",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vfr49",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "3.142.51.114",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.23.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.23.45"
        }
      },
      PodIP: (string) (len=10) "10.42.2.43",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.43"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661295,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855661297,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://6c781311bd6fa6797a3846765ee2e17c91052b730de7aa7837ace84e49dbaf9f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.919038 20 deployment.go:67] Pod "webserver-deployment-77db57d8df-lqk7r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-lqk7r",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d76d9c06-4eef-4d4a-8890-aeb31904b558",
      ResourceVersion: (string) (len=4) "9159",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "af70c1ff2ba4f91e6ae190c62cdb5e3e7128035b603fbc93941b101afa99e01a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.49/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.49/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "d772bcce-009d-4517-a844-878dd4ec86fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  37 32 62 63 63 65 2d 30  |d\":\"d772bcce-0|
              00000090  30 39 64 2d 34 35 31 37  2d 61 38 34 34 2d 38 37  |09d-4517-a844-87|
              000000a0  38 64 64 34 65 63 38 36  66 62 5c 22 7d 22 3a 7b  |8dd4ec86fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zv98f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zv98f",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "3.142.51.114",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.23.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.23.45"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.934604 20 deployment.go:67] Pod "webserver-deployment-77db57d8df-mdk59" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-mdk59",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d0ed8074-abde-4826-9a61-cf4e61648952",
      ResourceVersion: (string) (len=4) "8927",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661295,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "fd201be6a46b5475a82614bb7674306cd3c07fcb94abce11666630dc6c39183b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.43/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.43/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "d772bcce-009d-4517-a844-878dd4ec86fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  37 32 62 63 63 65 2d 30  |d\":\"d772bcce-0|
              00000090  30 39 64 2d 34 35 31 37  2d 61 38 34 34 2d 38 37  |09d-4517-a844-87|
              000000a0  38 64 64 34 65 63 38 36  66 62 5c 22 7d 22 3a 7b  |8dd4ec86fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 34 33  5c 22 7d 22 3a 7b 22 2e  |.42.0.43\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x49s2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x49s2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "18.191.27.132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.55"
        }
      },
      PodIP: (string) (len=10) "10.42.0.43",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.43"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661295,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855661298,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://77be918030c9aee4f2456256f7714ad9a6c3550d4f409edff0801725e8304af8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.952020 20 deployment.go:67] Pod "webserver-deployment-77db57d8df-nrlfp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-nrlfp",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2b23d9af-3b3d-4295-bfc4-0dc9d7c3160e",
      ResourceVersion: (string) (len=4) "9097",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "d772bcce-009d-4517-a844-878dd4ec86fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  37 32 62 63 63 65 2d 30  |d\":\"d772bcce-0|
              00000090  30 39 64 2d 34 35 31 37  2d 61 38 34 34 2d 38 37  |09d-4517-a844-87|
              000000a0  38 64 64 34 65 63 38 36  66 62 5c 22 7d 22 3a 7b  |8dd4ec86fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dvhvq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dvhvq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.118.109.209",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.23.191",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.23.191"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.964952 20 deployment.go:67] Pod "webserver-deployment-77db57d8df-tf7ww" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-tf7ww",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "27463874-468f-4770-984c-20aa5d4c4724",
      ResourceVersion: (string) (len=4) "9138",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "d772bcce-009d-4517-a844-878dd4ec86fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  37 32 62 63 63 65 2d 30  |d\":\"d772bcce-0|
              00000090  30 39 64 2d 34 35 31 37  2d 61 38 34 34 2d 38 37  |09d-4517-a844-87|
              000000a0  38 64 64 34 65 63 38 36  66 62 5c 22 7d 22 3a 7b  |8dd4ec86fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6f84c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6f84c",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "18.191.27.132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.55"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.967444 20 deployment.go:67] Pod "webserver-deployment-77db57d8df-tfbnf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-tfbnf",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "81bc3aae-3de3-4b8a-8930-58b717153f36",
      ResourceVersion: (string) (len=4) "9161",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d01f77a269301a3cb3df67fa94907fe28abcc996eb90c76ff8836e02b130885b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.46/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.46/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "d772bcce-009d-4517-a844-878dd4ec86fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  37 32 62 63 63 65 2d 30  |d\":\"d772bcce-0|
              00000090  30 39 64 2d 34 35 31 37  2d 61 38 34 34 2d 38 37  |09d-4517-a844-87|
              000000a0  38 64 64 34 65 63 38 36  66 62 5c 22 7d 22 3a 7b  |8dd4ec86fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ztsh6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ztsh6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "18.191.27.132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.55"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.977327 20 deployment.go:67] Pod "webserver-deployment-77db57d8df-wn6pn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-wn6pn",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "86e2fe0f-e462-4a52-a671-c2486608cbd8",
      ResourceVersion: (string) (len=4) "9106",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "d772bcce-009d-4517-a844-878dd4ec86fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  37 32 62 63 63 65 2d 30  |d\":\"d772bcce-0|
              00000090  30 39 64 2d 34 35 31 37  2d 61 38 34 34 2d 38 37  |09d-4517-a844-87|
              000000a0  38 64 64 34 65 63 38 36  66 62 5c 22 7d 22 3a 7b  |8dd4ec86fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8x847",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8x847",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "18.191.27.132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.55"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:43.999031 20 deployment.go:67] Pod "webserver-deployment-77db57d8df-xtmxk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-xtmxk",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "797144ee-74b9-42c2-9d32-3c6bda0a1aaf",
      ResourceVersion: (string) (len=4) "8936",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661295,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8ee6effbf477e9e80b9490623135af52812589a28d798c0668d2df29b60cd418",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.41/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.41/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "d772bcce-009d-4517-a844-878dd4ec86fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  37 32 62 63 63 65 2d 30  |d\":\"d772bcce-0|
              00000090  30 39 64 2d 34 35 31 37  2d 61 38 34 34 2d 38 37  |09d-4517-a844-87|
              000000a0  38 64 64 34 65 63 38 36  66 62 5c 22 7d 22 3a 7b  |8dd4ec86fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 34 31  5c 22 7d 22 3a 7b 22 2e  |.42.0.41\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p85mx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p85mx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "18.191.27.132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.55"
        }
      },
      PodIP: (string) (len=10) "10.42.0.41",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.41"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661295,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855661297,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://a1de4bb72051a4ff19e4cd4fea53b70099cffaf732ccf20c27f48a0fc71c1162",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:44.011179 20 deployment.go:67] Pod "webserver-deployment-77db57d8df-zfw64" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-zfw64",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4750",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3f8bd677-017c-45ef-961e-ea301bf6432e",
      ResourceVersion: (string) (len=4) "8919",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661295,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1565ab36f711c15c8df0257fd4cfefb7ee08467d73e1962fa5f20d0395d0b3a2",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.44/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.44/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "d772bcce-009d-4517-a844-878dd4ec86fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  37 32 62 63 63 65 2d 30  |d\":\"d772bcce-0|
              00000090  30 39 64 2d 34 35 31 37  2d 61 38 34 34 2d 38 37  |09d-4517-a844-87|
              000000a0  38 64 64 34 65 63 38 36  66 62 5c 22 7d 22 3a 7b  |8dd4ec86fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 34 34  5c 22 7d 22 3a 7b 22 2e  |.42.2.44\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5kml2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5kml2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "3.142.51.114",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.23.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.23.45"
        }
      },
      PodIP: (string) (len=10) "10.42.2.44",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.44"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661295,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855661297,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://d71d7536259ac29ab39af51431b413fda4c34a9ac5616cb48902b6496b997f7f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:41:44.033759 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4750" for this suite. @ 07/04/24 03:41:44.052
â€¢ [8.951 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 07/04/24 03:41:44.065
  I0704 03:41:44.065909 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename webhook @ 07/04/24 03:41:44.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:41:44.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:41:44.212
  STEP: Setting up server cert @ 07/04/24 03:41:44.322
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/04/24 03:41:45.212
  STEP: Deploying the webhook pod @ 07/04/24 03:41:45.49
  STEP: Wait for the deployment to be ready @ 07/04/24 03:41:45.684
  I0704 03:41:45.761169 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0704 03:41:47.777867 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 4, 3, 41, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 41, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 41, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 41, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 07/04/24 03:41:49.837
  STEP: Verifying the service has paired with the endpoint @ 07/04/24 03:41:50.05
  I0704 03:41:51.051013 20 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 07/04/24 03:41:51.092
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 07/04/24 03:41:51.15
  STEP: Creating a configMap that should not be mutated @ 07/04/24 03:41:51.159
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 07/04/24 03:41:51.205
  STEP: Creating a configMap that should be mutated @ 07/04/24 03:41:51.245
  I0704 03:41:51.493486 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5529" for this suite. @ 07/04/24 03:41:51.519
  STEP: Destroying namespace "webhook-markers-3314" for this suite. @ 07/04/24 03:41:51.572
â€¢ [7.535 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 07/04/24 03:41:51.6
  I0704 03:41:51.600920 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename webhook @ 07/04/24 03:41:51.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:41:51.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:41:51.805
  STEP: Setting up server cert @ 07/04/24 03:41:51.908
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/04/24 03:41:52.44
  STEP: Deploying the webhook pod @ 07/04/24 03:41:52.446
  STEP: Wait for the deployment to be ready @ 07/04/24 03:41:52.478
  I0704 03:41:52.515768 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0704 03:41:54.524202 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 4, 3, 41, 52, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 41, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 41, 52, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 41, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 07/04/24 03:41:56.527
  STEP: Verifying the service has paired with the endpoint @ 07/04/24 03:41:56.555
  I0704 03:41:57.556699 20 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 07/04/24 03:41:57.562
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/04/24 03:41:57.562
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 07/04/24 03:41:57.576
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 07/04/24 03:41:58.586
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/04/24 03:41:58.587
  STEP: Having no error when timeout is longer than webhook latency @ 07/04/24 03:41:59.716
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/04/24 03:41:59.716
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 07/04/24 03:42:04.788
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/04/24 03:42:04.788
  I0704 03:42:09.995548 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6143" for this suite. @ 07/04/24 03:42:10.005
  STEP: Destroying namespace "webhook-markers-5814" for this suite. @ 07/04/24 03:42:10.013
â€¢ [18.423 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 07/04/24 03:42:10.024
  I0704 03:42:10.024086 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename pods @ 07/04/24 03:42:10.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:42:10.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:42:10.062
  STEP: Create set of pods @ 07/04/24 03:42:10.067
  I0704 03:42:10.086245 20 pods.go:871] created test-pod-1
  I0704 03:42:10.103200 20 pods.go:871] created test-pod-2
  I0704 03:42:10.133732 20 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 07/04/24 03:42:10.134
  STEP: waiting for all pods to be deleted @ 07/04/24 03:42:14.312
  I0704 03:42:14.324659 20 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0704 03:42:15.357547 20 pods.go:1140] Pod quantity 2 is different from expected quantity 0
  I0704 03:42:16.334188 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1775" for this suite. @ 07/04/24 03:42:16.337
â€¢ [6.321 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 07/04/24 03:42:16.347
  I0704 03:42:16.347352 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename downward-api @ 07/04/24 03:42:16.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:42:16.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:42:16.381
  STEP: Creating a pod to test downward API volume plugin @ 07/04/24 03:42:16.384
  STEP: Saw pod success @ 07/04/24 03:42:20.442
  I0704 03:42:20.452031 20 output.go:196] Trying to get logs from node 18.191.27.132 pod downwardapi-volume-4deed6c2-ac53-4fd6-91fe-b09ee6f65c7d container client-container: <nil>
  STEP: delete the pod @ 07/04/24 03:42:20.503
  I0704 03:42:20.519797 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3045" for this suite. @ 07/04/24 03:42:20.523
â€¢ [4.187 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 07/04/24 03:42:20.536
  I0704 03:42:20.536595 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename pods @ 07/04/24 03:42:20.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:42:20.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:42:20.573
  STEP: creating the pod @ 07/04/24 03:42:20.576
  STEP: submitting the pod to kubernetes @ 07/04/24 03:42:20.576
  STEP: verifying the pod is in kubernetes @ 07/04/24 03:42:22.602
  STEP: updating the pod @ 07/04/24 03:42:22.606
  I0704 03:42:23.120503 20 pod_client.go:141] Successfully updated pod "pod-update-6801cb95-5c1e-4826-9167-0a0e52419b01"
  STEP: verifying the updated pod is in kubernetes @ 07/04/24 03:42:23.124
  I0704 03:42:23.127524 20 pods.go:391] Pod update OK
  I0704 03:42:23.127643 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8713" for this suite. @ 07/04/24 03:42:23.132
â€¢ [2.605 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 07/04/24 03:42:23.143
  I0704 03:42:23.143346 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename downward-api @ 07/04/24 03:42:23.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:42:23.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:42:23.164
  STEP: Creating a pod to test downward API volume plugin @ 07/04/24 03:42:23.168
  STEP: Saw pod success @ 07/04/24 03:42:27.191
  I0704 03:42:27.195149 20 output.go:196] Trying to get logs from node 18.191.27.132 pod downwardapi-volume-d4ae7d34-5e74-45b2-a3ca-9c665e5da1a9 container client-container: <nil>
  STEP: delete the pod @ 07/04/24 03:42:27.205
  I0704 03:42:27.224385 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-819" for this suite. @ 07/04/24 03:42:27.228
â€¢ [4.094 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 07/04/24 03:42:27.237
  I0704 03:42:27.237965 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename ingress @ 07/04/24 03:42:27.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:42:27.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:42:27.258
  STEP: getting /apis @ 07/04/24 03:42:27.261
  STEP: getting /apis/networking.k8s.io @ 07/04/24 03:42:27.265
  STEP: getting /apis/networking.k8s.iov1 @ 07/04/24 03:42:27.267
  STEP: creating @ 07/04/24 03:42:27.268
  STEP: getting @ 07/04/24 03:42:27.286
  STEP: listing @ 07/04/24 03:42:27.288
  STEP: watching @ 07/04/24 03:42:27.291
  I0704 03:42:27.291519 20 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 07/04/24 03:42:27.292
  STEP: cluster-wide watching @ 07/04/24 03:42:27.296
  I0704 03:42:27.296296 20 ingress.go:198] starting watch
  STEP: patching @ 07/04/24 03:42:27.299
  STEP: updating @ 07/04/24 03:42:27.304
  I0704 03:42:27.311436 20 ingress.go:221] waiting for watch events with expected annotations
  I0704 03:42:27.311583 20 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 07/04/24 03:42:27.311
  STEP: updating /status @ 07/04/24 03:42:27.322
  STEP: get /status @ 07/04/24 03:42:27.336
  STEP: deleting @ 07/04/24 03:42:27.341
  STEP: deleting a collection @ 07/04/24 03:42:27.354
  I0704 03:42:27.366237 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-3913" for this suite. @ 07/04/24 03:42:27.391
â€¢ [0.169 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 07/04/24 03:42:27.409
  I0704 03:42:27.409674 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/04/24 03:42:27.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:42:27.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:42:27.429
  STEP: Creating two CSIDrivers @ 07/04/24 03:42:27.433
  STEP: Getting "inline-driver-9bab25ae-b454-42ee-945f-5e3d7eaf8ef9" & "inline-driver-d796b066-afb5-4d72-9de9-97fe5cb9513b" @ 07/04/24 03:42:27.446
  STEP: Patching the CSIDriver "inline-driver-d796b066-afb5-4d72-9de9-97fe5cb9513b" @ 07/04/24 03:42:27.454
  STEP: Updating the CSIDriver "inline-driver-d796b066-afb5-4d72-9de9-97fe5cb9513b" @ 07/04/24 03:42:27.475
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-7167" @ 07/04/24 03:42:27.488
  STEP: Deleting CSIDriver "inline-driver-9bab25ae-b454-42ee-945f-5e3d7eaf8ef9" @ 07/04/24 03:42:27.492
  STEP: Confirm deletion of CSIDriver "inline-driver-9bab25ae-b454-42ee-945f-5e3d7eaf8ef9" @ 07/04/24 03:42:27.516
  STEP: Deleting CSIDriver "inline-driver-d796b066-afb5-4d72-9de9-97fe5cb9513b" via DeleteCollection @ 07/04/24 03:42:27.519
  STEP: Confirm deletion of CSIDriver "inline-driver-d796b066-afb5-4d72-9de9-97fe5cb9513b" @ 07/04/24 03:42:27.526
  I0704 03:42:27.529504 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7167" for this suite. @ 07/04/24 03:42:27.534
â€¢ [0.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 07/04/24 03:42:27.549
  I0704 03:42:27.549357 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename namespaces @ 07/04/24 03:42:27.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:42:27.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:42:27.628
  STEP: Updating Namespace "namespaces-8330" @ 07/04/24 03:42:27.633
  I0704 03:42:27.640997 20 namespace.go:389] Namespace "namespaces-8330" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"252c0fc8-3647-4ebc-9705-0cb25ddd4e82", "kubernetes.io/metadata.name":"namespaces-8330", "namespaces-8330":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0704 03:42:27.641109 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8330" for this suite. @ 07/04/24 03:42:27.644
â€¢ [0.102 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 07/04/24 03:42:27.651
  I0704 03:42:27.652087 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/04/24 03:42:27.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:42:27.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:42:27.67
  I0704 03:42:27.673639 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 07/04/24 03:42:29.07
  I0704 03:42:29.070845 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-3185 --namespace=crd-publish-openapi-3185 create -f -'
  I0704 03:42:29.195670 20 builder.go:146] stderr: ""
  I0704 03:42:29.195714 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6686-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0704 03:42:29.195776 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-3185 --namespace=crd-publish-openapi-3185 delete e2e-test-crd-publish-openapi-6686-crds test-foo'
  I0704 03:42:29.318206 20 builder.go:146] stderr: ""
  I0704 03:42:29.318256 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6686-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0704 03:42:29.318310 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-3185 --namespace=crd-publish-openapi-3185 apply -f -'
  I0704 03:42:29.447372 20 builder.go:146] stderr: ""
  I0704 03:42:29.447427 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6686-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0704 03:42:29.447560 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-3185 --namespace=crd-publish-openapi-3185 delete e2e-test-crd-publish-openapi-6686-crds test-foo'
  I0704 03:42:29.576078 20 builder.go:146] stderr: ""
  I0704 03:42:29.576124 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6686-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 07/04/24 03:42:29.576
  I0704 03:42:29.576335 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-3185 --namespace=crd-publish-openapi-3185 create -f -'
  I0704 03:42:29.667157 20 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 07/04/24 03:42:29.667
  I0704 03:42:29.667311 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-3185 --namespace=crd-publish-openapi-3185 create -f -'
  I0704 03:42:29.759360 20 builder.go:135] rc: 1
  I0704 03:42:29.759559 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-3185 --namespace=crd-publish-openapi-3185 apply -f -'
  I0704 03:42:29.862897 20 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 07/04/24 03:42:29.862
  I0704 03:42:29.863151 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-3185 --namespace=crd-publish-openapi-3185 create -f -'
  I0704 03:42:29.964166 20 builder.go:135] rc: 1
  I0704 03:42:29.964502 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-3185 --namespace=crd-publish-openapi-3185 apply -f -'
  I0704 03:42:30.115403 20 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 07/04/24 03:42:30.115
  I0704 03:42:30.115833 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-3185 explain e2e-test-crd-publish-openapi-6686-crds'
  I0704 03:42:30.194990 20 builder.go:146] stderr: ""
  I0704 03:42:30.195110 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6686-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 07/04/24 03:42:30.195
  I0704 03:42:30.195614 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-3185 explain e2e-test-crd-publish-openapi-6686-crds.metadata'
  I0704 03:42:30.275919 20 builder.go:146] stderr: ""
  I0704 03:42:30.276171 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6686-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0704 03:42:30.276441 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-3185 explain e2e-test-crd-publish-openapi-6686-crds.spec'
  I0704 03:42:30.361677 20 builder.go:146] stderr: ""
  I0704 03:42:30.361927 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6686-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0704 03:42:30.362051 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-3185 explain e2e-test-crd-publish-openapi-6686-crds.spec.bars'
  I0704 03:42:30.469087 20 builder.go:146] stderr: ""
  I0704 03:42:30.469135 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6686-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 07/04/24 03:42:30.469
  I0704 03:42:30.469738 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-3185 explain e2e-test-crd-publish-openapi-6686-crds.spec.bars2'
  I0704 03:42:30.597366 20 builder.go:135] rc: 1
  I0704 03:42:32.169186 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3185" for this suite. @ 07/04/24 03:42:32.181
â€¢ [4.536 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 07/04/24 03:42:32.189
  I0704 03:42:32.189253 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename daemonsets @ 07/04/24 03:42:32.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:42:32.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:42:32.21
  I0704 03:42:32.234346 20 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0704 03:42:32.241595 20 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0704 03:42:32.248775 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0704 03:42:32.248834 20 fixtures.go:130] Node 18.118.109.209 is running 0 daemon pod, expected 1
  I0704 03:42:33.250673 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0704 03:42:33.251442 20 fixtures.go:130] Node 18.118.109.209 is running 0 daemon pod, expected 1
  I0704 03:42:34.252038 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0704 03:42:34.252492 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I0704 03:42:34.252738 20 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0704 03:42:34.270003 20 daemon_set.go:102] Updating DaemonSet daemon-set
  I0704 03:42:36.290039 20 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0704 03:42:36.303551 20 daemon_set.go:102] Updating DaemonSet daemon-set
  I0704 03:42:36.303604 20 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0704 03:42:36.307760 20 daemon_set.go:1178] Wrong image for pod: daemon-set-w4pbv. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0704 03:42:36.307796 20 daemon_set.go:1183] Pod daemon-set-w4pbv is not available
  I0704 03:42:39.307631 20 daemon_set.go:1183] Pod daemon-set-8tg7f is not available
  STEP: Deleting DaemonSet "daemon-set" @ 07/04/24 03:42:39.317
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4769, will wait for the garbage collector to delete the pods @ 07/04/24 03:42:39.317
  I0704 03:42:39.377577 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.178ms
  I0704 03:42:39.477961 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.381172ms
  I0704 03:42:41.982235 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0704 03:42:41.982275 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0704 03:42:41.984620 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"10014"},"items":null}

  I0704 03:42:41.986637 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"10014"},"items":null}

  I0704 03:42:42.002108 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4769" for this suite. @ 07/04/24 03:42:42.005
â€¢ [9.826 seconds]
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 07/04/24 03:42:42.015
  I0704 03:42:42.015464 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename volumeattachment @ 07/04/24 03:42:42.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:42:42.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:42:42.031
  STEP: Create VolumeAttachment "va-e2e-ksrcg" on node "18.191.27.132" @ 07/04/24 03:42:42.035
  STEP: Get VolumeAttachment "va-e2e-ksrcg" on node "18.191.27.132" @ 07/04/24 03:42:42.05
  STEP: Patch VolumeAttachment "va-e2e-ksrcg" on node "18.191.27.132" @ 07/04/24 03:42:42.069
  STEP: List VolumeAttachments with "va-e2e-ksrcg=patched" label @ 07/04/24 03:42:42.079
  STEP: Delete VolumeAttachment "va-e2e-ksrcg" on node "18.191.27.132" @ 07/04/24 03:42:42.083
  STEP: Confirm deletion of VolumeAttachment "va-e2e-ksrcg" on node "18.191.27.132" @ 07/04/24 03:42:42.095
  STEP: Create VolumeAttachment "va-e2e-thpcv" on node "18.191.27.132" @ 07/04/24 03:42:42.102
  STEP: Update the VolumeAttachment "va-e2e-thpcv" on node "18.191.27.132" with label "va-e2e=updated" @ 07/04/24 03:42:42.106
  STEP: Create VolumeAttachment "va-e2e-lpft5" on node "3.142.51.114" @ 07/04/24 03:42:42.12
  STEP: Update the VolumeAttachment "va-e2e-lpft5" on node "3.142.51.114" with label "va-e2e=updated" @ 07/04/24 03:42:42.127
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 07/04/24 03:42:42.134
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 07/04/24 03:42:42.149
  I0704 03:42:42.152215 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-137" for this suite. @ 07/04/24 03:42:42.161
â€¢ [0.151 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 07/04/24 03:42:42.168
  I0704 03:42:42.169074 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename podtemplate @ 07/04/24 03:42:42.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:42:42.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:42:42.191
  STEP: Create a pod template @ 07/04/24 03:42:42.198
  STEP: Replace a pod template @ 07/04/24 03:42:42.21
  I0704 03:42:42.220486 20 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0704 03:42:42.220658 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9948" for this suite. @ 07/04/24 03:42:42.224
â€¢ [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 07/04/24 03:42:42.233
  I0704 03:42:42.233592 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename configmap @ 07/04/24 03:42:42.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:42:42.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:42:42.257
  STEP: Creating configMap with name cm-test-opt-del-c9b45b33-c490-4580-aebe-697cc17f333f @ 07/04/24 03:42:42.269
  STEP: Creating configMap with name cm-test-opt-upd-249be4b0-46c4-4cdf-9565-63454fe1de27 @ 07/04/24 03:42:42.273
  STEP: Creating the pod @ 07/04/24 03:42:42.279
  STEP: Deleting configmap cm-test-opt-del-c9b45b33-c490-4580-aebe-697cc17f333f @ 07/04/24 03:42:44.339
  STEP: Updating configmap cm-test-opt-upd-249be4b0-46c4-4cdf-9565-63454fe1de27 @ 07/04/24 03:42:44.345
  STEP: Creating configMap with name cm-test-opt-create-b389ff1d-7e6c-4389-a2d8-d07ba7bf7ccc @ 07/04/24 03:42:44.35
  STEP: waiting to observe update in volume @ 07/04/24 03:42:44.354
  I0704 03:42:46.439820 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6604" for this suite. @ 07/04/24 03:42:46.444
â€¢ [4.237 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 07/04/24 03:42:46.471
  I0704 03:42:46.471737 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename webhook @ 07/04/24 03:42:46.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:42:46.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:42:46.516
  STEP: Setting up server cert @ 07/04/24 03:42:46.552
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/04/24 03:42:46.831
  STEP: Deploying the webhook pod @ 07/04/24 03:42:46.841
  STEP: Wait for the deployment to be ready @ 07/04/24 03:42:46.853
  I0704 03:42:46.858556 20 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  I0704 03:42:48.869315 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 4, 3, 42, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 42, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 42, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 42, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 07/04/24 03:42:50.876
  STEP: Verifying the service has paired with the endpoint @ 07/04/24 03:42:50.887
  I0704 03:42:51.888627 20 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 07/04/24 03:42:51.988
  STEP: Creating a configMap that should be mutated @ 07/04/24 03:42:52.004
  STEP: Deleting the collection of validation webhooks @ 07/04/24 03:42:52.069
  STEP: Creating a configMap that should not be mutated @ 07/04/24 03:42:52.126
  I0704 03:42:52.240497 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6407" for this suite. @ 07/04/24 03:42:52.251
  STEP: Destroying namespace "webhook-markers-1639" for this suite. @ 07/04/24 03:42:52.268
â€¢ [5.825 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 07/04/24 03:42:52.297
  I0704 03:42:52.297955 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename webhook @ 07/04/24 03:42:52.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:42:52.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:42:52.333
  STEP: Setting up server cert @ 07/04/24 03:42:52.397
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/04/24 03:42:52.823
  STEP: Deploying the webhook pod @ 07/04/24 03:42:52.828
  STEP: Wait for the deployment to be ready @ 07/04/24 03:42:52.846
  I0704 03:42:52.854363 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/04/24 03:42:54.866
  STEP: Verifying the service has paired with the endpoint @ 07/04/24 03:42:54.883
  I0704 03:42:55.884636 20 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 07/04/24 03:42:55.956
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/04/24 03:42:55.996
  STEP: Deleting the collection of validation webhooks @ 07/04/24 03:42:56.036
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/04/24 03:42:56.069
  I0704 03:42:56.126399 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1521" for this suite. @ 07/04/24 03:42:56.13
  STEP: Destroying namespace "webhook-markers-39" for this suite. @ 07/04/24 03:42:56.143
â€¢ [3.852 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 07/04/24 03:42:56.152
  I0704 03:42:56.152173 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename gc @ 07/04/24 03:42:56.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:42:56.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:42:56.244
  STEP: create the rc1 @ 07/04/24 03:42:56.252
  STEP: create the rc2 @ 07/04/24 03:42:56.257
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 07/04/24 03:43:02.405
  STEP: delete the rc simpletest-rc-to-be-deleted @ 07/04/24 03:43:06.824
  STEP: wait for the rc to be deleted @ 07/04/24 03:43:06.864
  I0704 03:43:12.209934 20 garbage_collector.go:762] 71 pods remaining
  I0704 03:43:12.217396 20 garbage_collector.go:769] 71 pods has nil DeletionTimestamp
  I0704 03:43:12.217969 20 garbage_collector.go:770] 
  STEP: Gathering metrics @ 07/04/24 03:43:16.907
  W0704 03:43:16.937197      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0704 03:43:16.937379 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0704 03:43:16.945430 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-255q9" in namespace "gc-6783"
  I0704 03:43:17.027760 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2bm54" in namespace "gc-6783"
  I0704 03:43:17.108597 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2st8f" in namespace "gc-6783"
  I0704 03:43:17.205298 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2xk6l" in namespace "gc-6783"
  I0704 03:43:17.253126 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2zn97" in namespace "gc-6783"
  I0704 03:43:17.427951 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4gx9x" in namespace "gc-6783"
  I0704 03:43:17.603800 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4x67z" in namespace "gc-6783"
  I0704 03:43:17.766797 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4xk8d" in namespace "gc-6783"
  I0704 03:43:17.918421 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4z6lc" in namespace "gc-6783"
  I0704 03:43:17.995725 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-57m74" in namespace "gc-6783"
  I0704 03:43:18.067668 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-58gz4" in namespace "gc-6783"
  I0704 03:43:18.143883 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5ncnd" in namespace "gc-6783"
  I0704 03:43:18.234489 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5pz8m" in namespace "gc-6783"
  I0704 03:43:18.340872 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5sxtc" in namespace "gc-6783"
  I0704 03:43:18.578302 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6qh28" in namespace "gc-6783"
  I0704 03:43:18.730154 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6t86g" in namespace "gc-6783"
  I0704 03:43:18.852922 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6xbmn" in namespace "gc-6783"
  I0704 03:43:19.051461 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6zb7b" in namespace "gc-6783"
  I0704 03:43:19.141673 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-76h2g" in namespace "gc-6783"
  I0704 03:43:19.183272 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7tdqk" in namespace "gc-6783"
  I0704 03:43:19.248160 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-87dsr" in namespace "gc-6783"
  I0704 03:43:19.308290 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8fgfm" in namespace "gc-6783"
  I0704 03:43:19.345054 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-96khv" in namespace "gc-6783"
  I0704 03:43:19.403549 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9fkhv" in namespace "gc-6783"
  I0704 03:43:19.496876 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9gf4s" in namespace "gc-6783"
  I0704 03:43:19.566965 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9zqg2" in namespace "gc-6783"
  I0704 03:43:19.664119 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b9z7s" in namespace "gc-6783"
  I0704 03:43:19.698801 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bbff9" in namespace "gc-6783"
  I0704 03:43:19.746692 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bbzrn" in namespace "gc-6783"
  I0704 03:43:19.807613 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bcdbp" in namespace "gc-6783"
  I0704 03:43:19.875561 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bcx9x" in namespace "gc-6783"
  I0704 03:43:19.921821 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bd5wk" in namespace "gc-6783"
  I0704 03:43:19.961292 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bdtkv" in namespace "gc-6783"
  I0704 03:43:19.989710 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bmjhz" in namespace "gc-6783"
  I0704 03:43:20.007434 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bzlqn" in namespace "gc-6783"
  I0704 03:43:20.052855 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cwkrp" in namespace "gc-6783"
  I0704 03:43:20.080816 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-czgzb" in namespace "gc-6783"
  I0704 03:43:20.133103 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-db9p9" in namespace "gc-6783"
  I0704 03:43:20.187835 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dckpw" in namespace "gc-6783"
  I0704 03:43:20.245827 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dljzq" in namespace "gc-6783"
  I0704 03:43:20.262722 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-drwh8" in namespace "gc-6783"
  I0704 03:43:20.277485 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dsdlv" in namespace "gc-6783"
  I0704 03:43:20.298435 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f4j67" in namespace "gc-6783"
  I0704 03:43:20.358336 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f882s" in namespace "gc-6783"
  I0704 03:43:20.392936 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fghh9" in namespace "gc-6783"
  I0704 03:43:20.407453 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g5lg6" in namespace "gc-6783"
  I0704 03:43:20.440605 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gnn8d" in namespace "gc-6783"
  I0704 03:43:20.454679 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gplgb" in namespace "gc-6783"
  I0704 03:43:20.481486 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h7z9m" in namespace "gc-6783"
  I0704 03:43:20.497059 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hbvtp" in namespace "gc-6783"
  I0704 03:43:20.562891 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6783" for this suite. @ 07/04/24 03:43:20.57
â€¢ [24.492 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 07/04/24 03:43:20.661
  I0704 03:43:20.661905 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/04/24 03:43:20.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:43:20.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:43:20.739
  STEP: Cleaning up the secret @ 07/04/24 03:43:24.872
  STEP: Cleaning up the configmap @ 07/04/24 03:43:24.895
  STEP: Cleaning up the pod @ 07/04/24 03:43:24.923
  I0704 03:43:24.994066 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4121" for this suite. @ 07/04/24 03:43:25.056
â€¢ [4.426 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 07/04/24 03:43:25.086
  I0704 03:43:25.086677 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename dns @ 07/04/24 03:43:25.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:43:25.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:43:25.193
  STEP: Creating a test headless service @ 07/04/24 03:43:25.223
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8372.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-8372.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 07/04/24 03:43:25.245
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8372.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-8372.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 07/04/24 03:43:25.245
  STEP: creating a pod to probe DNS @ 07/04/24 03:43:25.245
  STEP: submitting the pod to kubernetes @ 07/04/24 03:43:25.245
  STEP: retrieving the pod @ 07/04/24 03:43:39.413
  STEP: looking for the results for each expected name from probers @ 07/04/24 03:43:39.418
  I0704 03:43:39.451948 20 dns_common.go:527] DNS probes using dns-8372/dns-test-c46b7a24-5c72-4a7d-96ea-961cbaca9551 succeeded

  STEP: deleting the pod @ 07/04/24 03:43:39.452
  STEP: deleting the test headless service @ 07/04/24 03:43:39.473
  I0704 03:43:39.498221 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8372" for this suite. @ 07/04/24 03:43:39.503
â€¢ [14.427 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 07/04/24 03:43:39.514
  I0704 03:43:39.514079 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename init-container @ 07/04/24 03:43:39.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:43:39.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:43:39.575
  STEP: creating the pod @ 07/04/24 03:43:39.579
  I0704 03:43:39.580022 20 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0704 03:43:44.291329 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2456" for this suite. @ 07/04/24 03:43:44.299
â€¢ [4.790 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 07/04/24 03:43:44.309
  I0704 03:43:44.309934 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename sched-preemption @ 07/04/24 03:43:44.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:43:44.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:43:44.375
  I0704 03:43:44.409973 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0704 03:44:44.416262 20 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/04/24 03:44:44.423
  I0704 03:44:44.449152 20 preemption.go:269] Created pod: pod0-0-sched-preemption-low-priority
  I0704 03:44:44.474960 20 preemption.go:269] Created pod: pod0-1-sched-preemption-medium-priority
  I0704 03:44:44.507860 20 preemption.go:269] Created pod: pod1-0-sched-preemption-medium-priority
  I0704 03:44:44.514939 20 preemption.go:269] Created pod: pod1-1-sched-preemption-medium-priority
  I0704 03:44:44.570562 20 preemption.go:269] Created pod: pod2-0-sched-preemption-medium-priority
  I0704 03:44:44.591212 20 preemption.go:269] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/04/24 03:44:44.591
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 07/04/24 03:44:48.632
  I0704 03:44:52.776813 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5075" for this suite. @ 07/04/24 03:44:52.781
â€¢ [68.479 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 07/04/24 03:44:52.788
  I0704 03:44:52.788889 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename kubectl @ 07/04/24 03:44:52.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:44:52.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:44:52.805
  STEP: creating the pod @ 07/04/24 03:44:52.808
  I0704 03:44:52.808590 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-101 create -f -'
  I0704 03:44:52.951055 20 builder.go:146] stderr: ""
  I0704 03:44:52.951102 20 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 07/04/24 03:44:56.962
  I0704 03:44:56.962777 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-101 label pods pause testing-label=testing-label-value'
  I0704 03:44:57.080257 20 builder.go:146] stderr: ""
  I0704 03:44:57.080307 20 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 07/04/24 03:44:57.08
  I0704 03:44:57.080536 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-101 get pod pause -L testing-label'
  I0704 03:44:57.152885 20 builder.go:146] stderr: ""
  I0704 03:44:57.152952 20 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          5s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 07/04/24 03:44:57.152
  I0704 03:44:57.153123 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-101 label pods pause testing-label-'
  I0704 03:44:57.250580 20 builder.go:146] stderr: ""
  I0704 03:44:57.250853 20 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 07/04/24 03:44:57.25
  I0704 03:44:57.251405 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-101 get pod pause -L testing-label'
  I0704 03:44:57.337600 20 builder.go:146] stderr: ""
  I0704 03:44:57.337647 20 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          5s    \n"
  STEP: using delete to clean up resources @ 07/04/24 03:44:57.337
  I0704 03:44:57.337994 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-101 delete --grace-period=0 --force -f -'
  I0704 03:44:57.440457 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0704 03:44:57.440547 20 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0704 03:44:57.440977 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-101 get rc,svc -l name=pause --no-headers'
  I0704 03:44:57.538957 20 builder.go:146] stderr: "No resources found in kubectl-101 namespace.\n"
  I0704 03:44:57.539028 20 builder.go:147] stdout: ""
  I0704 03:44:57.539209 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-101 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0704 03:44:57.624634 20 builder.go:146] stderr: ""
  I0704 03:44:57.624677 20 builder.go:147] stdout: ""
  I0704 03:44:57.624798 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-101" for this suite. @ 07/04/24 03:44:57.628
â€¢ [4.846 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:715
  STEP: Creating a kubernetes client @ 07/04/24 03:44:57.635
  I0704 03:44:57.635494 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename webhook @ 07/04/24 03:44:57.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:44:57.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:44:57.665
  STEP: Setting up server cert @ 07/04/24 03:44:57.691
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/04/24 03:44:58.848
  STEP: Deploying the webhook pod @ 07/04/24 03:44:58.852
  STEP: Wait for the deployment to be ready @ 07/04/24 03:44:58.866
  I0704 03:44:58.873606 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/04/24 03:45:00.897
  STEP: Verifying the service has paired with the endpoint @ 07/04/24 03:45:00.925
  I0704 03:45:01.925436 20 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 07/04/24 03:45:01.932
  STEP: verifying the validating webhook match conditions @ 07/04/24 03:45:01.941
  STEP: updating the validating webhook match conditions @ 07/04/24 03:45:01.946
  STEP: verifying the validating webhook match conditions @ 07/04/24 03:45:01.959
  I0704 03:45:02.034551 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9905" for this suite. @ 07/04/24 03:45:02.043
  STEP: Destroying namespace "webhook-markers-8809" for this suite. @ 07/04/24 03:45:02.054
â€¢ [4.436 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 07/04/24 03:45:02.071
  I0704 03:45:02.071956 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename webhook @ 07/04/24 03:45:02.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:45:02.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:45:02.15
  STEP: Setting up server cert @ 07/04/24 03:45:02.173
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/04/24 03:45:02.801
  STEP: Deploying the webhook pod @ 07/04/24 03:45:02.807
  STEP: Wait for the deployment to be ready @ 07/04/24 03:45:02.827
  I0704 03:45:02.837933 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0704 03:45:04.872530 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 4, 3, 45, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 45, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 45, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 45, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 07/04/24 03:45:06.879
  STEP: Verifying the service has paired with the endpoint @ 07/04/24 03:45:06.901
  I0704 03:45:07.901292 20 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 07/04/24 03:45:07.922
  STEP: create a namespace for the webhook @ 07/04/24 03:45:07.953
  STEP: create a configmap should be unconditionally rejected by the webhook @ 07/04/24 03:45:07.972
  I0704 03:45:08.138374 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6775" for this suite. @ 07/04/24 03:45:08.153
  STEP: Destroying namespace "webhook-markers-9023" for this suite. @ 07/04/24 03:45:08.175
  STEP: Destroying namespace "fail-closed-namespace-2302" for this suite. @ 07/04/24 03:45:08.207
â€¢ [6.158 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 07/04/24 03:45:08.23
  I0704 03:45:08.230942 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename replicaset @ 07/04/24 03:45:08.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:45:08.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:45:08.264
  STEP: Create a ReplicaSet @ 07/04/24 03:45:08.268
  STEP: Verify that the required pods have come up @ 07/04/24 03:45:08.274
  I0704 03:45:08.279644 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I0704 03:45:13.288157 20 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 07/04/24 03:45:13.288
  I0704 03:45:13.291694 20 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 07/04/24 03:45:13.291
  STEP: DeleteCollection of the ReplicaSets @ 07/04/24 03:45:13.295
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 07/04/24 03:45:13.309
  I0704 03:45:13.316267 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6650" for this suite. @ 07/04/24 03:45:13.335
â€¢ [5.174 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 07/04/24 03:45:13.41
  I0704 03:45:13.424166 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename downward-api @ 07/04/24 03:45:13.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:45:13.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:45:13.477
  STEP: Creating a pod to test downward api env vars @ 07/04/24 03:45:13.493
  STEP: Saw pod success @ 07/04/24 03:45:17.564
  I0704 03:45:17.566935 20 output.go:196] Trying to get logs from node 18.191.27.132 pod downward-api-6f21b60d-6368-4bba-bbe0-9e3fd5c59b30 container dapi-container: <nil>
  STEP: delete the pod @ 07/04/24 03:45:17.58
  I0704 03:45:17.600491 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-526" for this suite. @ 07/04/24 03:45:17.605
â€¢ [4.202 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 07/04/24 03:45:17.613
  I0704 03:45:17.613724 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename configmap @ 07/04/24 03:45:17.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:45:17.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:45:17.631
  I0704 03:45:17.660411 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2930" for this suite. @ 07/04/24 03:45:17.663
â€¢ [0.056 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 07/04/24 03:45:17.669
  I0704 03:45:17.669552 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename configmap @ 07/04/24 03:45:17.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:45:17.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:45:17.69
  STEP: creating a ConfigMap @ 07/04/24 03:45:17.693
  STEP: fetching the ConfigMap @ 07/04/24 03:45:17.697
  STEP: patching the ConfigMap @ 07/04/24 03:45:17.701
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 07/04/24 03:45:17.706
  STEP: deleting the ConfigMap by collection with a label selector @ 07/04/24 03:45:17.711
  STEP: listing all ConfigMaps in test namespace @ 07/04/24 03:45:17.717
  I0704 03:45:17.720088 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5616" for this suite. @ 07/04/24 03:45:17.723
â€¢ [0.058 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:668
  STEP: Creating a kubernetes client @ 07/04/24 03:45:17.731
  I0704 03:45:17.731344 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename job @ 07/04/24 03:45:17.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:45:17.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:45:17.753
  STEP: Creating a job @ 07/04/24 03:45:17.756
  STEP: Ensuring active pods == parallelism @ 07/04/24 03:45:17.765
  STEP: delete a job @ 07/04/24 03:45:19.77
  STEP: deleting Job.batch foo in namespace job-2514, will wait for the garbage collector to delete the pods @ 07/04/24 03:45:19.77
  I0704 03:45:19.829998 20 resources.go:139] Deleting Job.batch foo took: 6.577772ms
  I0704 03:45:19.930163 20 resources.go:163] Terminating Job.batch foo pods took: 100.138151ms
  STEP: Ensuring job was deleted @ 07/04/24 03:45:22.731
  I0704 03:45:22.739871 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2514" for this suite. @ 07/04/24 03:45:22.748
â€¢ [5.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 07/04/24 03:45:22.763
  I0704 03:45:22.763034 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename replicaset @ 07/04/24 03:45:22.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:45:22.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:45:22.792
  I0704 03:45:22.795763 20 replica_set.go:191] Creating ReplicaSet my-hostname-basic-e0d1dab7-3628-4cf9-a9ea-ff1803b59e18
  I0704 03:45:22.806556 20 resource.go:87] Pod name my-hostname-basic-e0d1dab7-3628-4cf9-a9ea-ff1803b59e18: Found 0 pods out of 1
  I0704 03:45:27.825206 20 resource.go:87] Pod name my-hostname-basic-e0d1dab7-3628-4cf9-a9ea-ff1803b59e18: Found 1 pods out of 1
  I0704 03:45:27.825256 20 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-e0d1dab7-3628-4cf9-a9ea-ff1803b59e18" is running
  I0704 03:45:27.832900 20 replica_set.go:220] Pod "my-hostname-basic-e0d1dab7-3628-4cf9-a9ea-ff1803b59e18-qrtqz" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-04 03:45:24 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-04 03:45:22 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-04 03:45:24 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-04 03:45:24 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-04 03:45:22 +0000 UTC Reason: Message:}])
  I0704 03:45:27.833122 20 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/04/24 03:45:27.833
  I0704 03:45:27.867304 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8566" for this suite. @ 07/04/24 03:45:27.886
â€¢ [5.144 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 07/04/24 03:45:27.911
  I0704 03:45:27.911867 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename gc @ 07/04/24 03:45:27.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:45:27.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:45:27.96
  STEP: create the rc @ 07/04/24 03:45:27.964
  W0704 03:45:27.971920      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 07/04/24 03:45:32.981
  STEP: wait for all pods to be garbage collected @ 07/04/24 03:45:32.987
  STEP: Gathering metrics @ 07/04/24 03:45:37.993
  W0704 03:45:38.003837      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0704 03:45:38.004199 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0704 03:45:38.004496 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9685" for this suite. @ 07/04/24 03:45:38.012
â€¢ [10.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 07/04/24 03:45:38.026
  I0704 03:45:38.026699 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename container-probe @ 07/04/24 03:45:38.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:45:38.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:45:38.062
  STEP: Creating pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657 @ 07/04/24 03:45:38.066
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/04/24 03:45:42.089
  I0704 03:45:42.092521 20 container_probe.go:1749] Initial restart count of pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c is 0
  I0704 03:45:42.095121 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:45:44.099187 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:45:46.102580 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:45:48.108254 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:45:50.111244 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:45:52.115058 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:45:54.119030 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:45:56.122481 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:45:58.126600 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:00.133079 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:02.141373 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:04.144672 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:06.147872 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:08.151361 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:10.155750 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:12.160385 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:14.164317 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:16.171579 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:18.174699 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:20.178692 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:22.182694 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:24.187015 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:26.190612 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:28.196092 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:30.200378 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:32.205492 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:34.215059 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:36.224035 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:38.227381 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:40.230524 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:42.234995 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:44.240161 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:46.244333 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:48.247906 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:50.253812 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:52.257763 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:54.261691 20 container_probe.go:1759] Get pod test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c in namespace container-probe-2657
  I0704 03:46:54.261738 20 container_probe.go:1763] Restart count of pod container-probe-2657/test-grpc-95e2f76a-a669-4c16-8a2d-2b775a96565c is now 1 (1m12.169176946s elapsed)
  STEP: deleting the pod @ 07/04/24 03:46:54.261
  I0704 03:46:54.275326 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2657" for this suite. @ 07/04/24 03:46:54.279
â€¢ [76.258 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 07/04/24 03:46:54.285
  I0704 03:46:54.285723 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename kubectl @ 07/04/24 03:46:54.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:46:54.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:46:54.322
  STEP: validating cluster-info @ 07/04/24 03:46:54.324
  I0704 03:46:54.325034 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-1003 cluster-info'
  I0704 03:46:54.424422 20 builder.go:146] stderr: ""
  I0704 03:46:54.424557 20 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.43.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0704 03:46:54.424772 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1003" for this suite. @ 07/04/24 03:46:54.429
â€¢ [0.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 07/04/24 03:46:54.44
  I0704 03:46:54.440271 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename deployment @ 07/04/24 03:46:54.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:46:54.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:46:54.46
  I0704 03:46:54.475876 20 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  I0704 03:46:59.482083 20 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/04/24 03:46:59.482
  I0704 03:46:59.483872 20 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 07/04/24 03:46:59.498
  I0704 03:47:03.522059 20 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9918",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3dc55d19-b830-4527-825f-892e0f8f014e",
      ResourceVersion: (string) (len=5) "13105",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661619,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=76) "ReplicaSet \"test-cleanup-deployment-7c4d497584\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0704 03:47:03.537800 20 deployment.go:39] New ReplicaSet "test-cleanup-deployment-7c4d497584" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7c4d497584",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9918",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d342e87d-137c-4e59-9bb6-94ce4face9cb",
      ResourceVersion: (string) (len=5) "13093",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661619,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7c4d497584"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "3dc55d19-b830-4527-825f-892e0f8f014e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 64 63 35 35 64  31 39 2d 62 38 33 30 2d  |\"3dc55d19-b830-|
              00000120  34 35 32 37 2d 38 32 35  66 2d 38 39 32 65 30 66  |4527-825f-892e0f|
              00000130  38 66 30 31 34 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8f014e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7c4d497584"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7c4d497584"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0704 03:47:03.549438 20 deployment.go:67] Pod "test-cleanup-deployment-7c4d497584-5wssf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-7c4d497584-5wssf",
      GenerateName: (string) (len=35) "test-cleanup-deployment-7c4d497584-",
      Namespace: (string) (len=15) "deployment-9918",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9086e660-95c8-4a3d-9d12-1b34ffdb5ca6",
      ResourceVersion: (string) (len=5) "13092",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661619,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7c4d497584"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "cbba3d82b518dc67f6fceb81a0b51ad6c4dbbe8b8d09a070457897e45f6a00f5",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.97/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.97/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-7c4d497584",
          UID: (types.UID) (len=36) "d342e87d-137c-4e59-9bb6-94ce4face9cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 33  34 32 65 38 37 64 2d 31  |d\":\"d342e87d-1|
              00000090  33 37 63 2d 34 65 35 39  2d 39 62 62 36 2d 39 34  |37c-4e59-9bb6-94|
              000000a0  63 65 34 66 61 63 65 39  63 62 5c 22 7d 22 3a 7b  |ce4face9cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661620,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 39 37  5c 22 7d 22 3a 7b 22 2e  |.42.0.97\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2xvb6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2xvb6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "18.191.27.132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855661619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.55"
        }
      },
      PodIP: (string) (len=10) "10.42.0.97",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.97"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855661619,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855661620,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=129) "docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=73) "docker://d0478f0a36b4dea82bc550c62d42d066508ebe6ada0ba289caad44562bfb809e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:47:03.554966 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9918" for this suite. @ 07/04/24 03:47:03.558
â€¢ [9.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 07/04/24 03:47:03.564
  I0704 03:47:03.564083 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 03:47:03.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:47:03.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:47:03.589
  STEP: Creating projection with secret that has name projected-secret-test-map-4cb25087-ecd8-463c-b7ef-543702bbd0a2 @ 07/04/24 03:47:03.593
  STEP: Creating a pod to test consume secrets @ 07/04/24 03:47:03.597
  STEP: Saw pod success @ 07/04/24 03:47:07.619
  I0704 03:47:07.621947 20 output.go:196] Trying to get logs from node 3.142.51.114 pod pod-projected-secrets-b5465c9a-8e94-489e-8628-d81e470b0b2d container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/04/24 03:47:07.637
  I0704 03:47:07.650902 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9909" for this suite. @ 07/04/24 03:47:07.654
â€¢ [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 07/04/24 03:47:07.66
  I0704 03:47:07.661136 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 03:47:07.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:47:07.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:47:07.695
  STEP: Creating projection with secret that has name projected-secret-test-map-78f17dd3-74ef-4a22-9645-a4c463d4badd @ 07/04/24 03:47:07.698
  STEP: Creating a pod to test consume secrets @ 07/04/24 03:47:07.703
  STEP: Saw pod success @ 07/04/24 03:47:11.725
  I0704 03:47:11.729636 20 output.go:196] Trying to get logs from node 3.142.51.114 pod pod-projected-secrets-05c836b7-d4d6-40e7-9d83-a9d004ae62b1 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/04/24 03:47:11.738
  I0704 03:47:11.757019 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2948" for this suite. @ 07/04/24 03:47:11.76
â€¢ [4.109 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 07/04/24 03:47:11.77
  I0704 03:47:11.770616 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename namespaces @ 07/04/24 03:47:11.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:47:11.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:47:11.792
  STEP: creating a Namespace @ 07/04/24 03:47:11.8
  STEP: patching the Namespace @ 07/04/24 03:47:11.814
  STEP: get the Namespace and ensuring it has the label @ 07/04/24 03:47:11.819
  I0704 03:47:11.823709 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-63" for this suite. @ 07/04/24 03:47:11.827
  STEP: Destroying namespace "nspatchtest-d651bd70-265b-4626-80da-fc1f8ab4be35-9655" for this suite. @ 07/04/24 03:47:11.831
â€¢ [0.069 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 07/04/24 03:47:11.839
  I0704 03:47:11.839725 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename container-runtime @ 07/04/24 03:47:11.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:47:11.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:47:11.862
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 07/04/24 03:47:11.882
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 07/04/24 03:47:27.981
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 07/04/24 03:47:27.984
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 07/04/24 03:47:27.989
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 07/04/24 03:47:27.989
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 07/04/24 03:47:28.036
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 07/04/24 03:47:32.063
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 07/04/24 03:47:33.07
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 07/04/24 03:47:33.076
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 07/04/24 03:47:33.076
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 07/04/24 03:47:33.113
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 07/04/24 03:47:34.13
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 07/04/24 03:47:37.178
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 07/04/24 03:47:37.185
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 07/04/24 03:47:37.185
  I0704 03:47:37.235062 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8169" for this suite. @ 07/04/24 03:47:37.238
â€¢ [25.405 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 07/04/24 03:47:37.245
  I0704 03:47:37.245486 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename apf @ 07/04/24 03:47:37.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:47:37.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:47:37.265
  STEP: getting /apis @ 07/04/24 03:47:37.269
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/04/24 03:47:37.274
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/04/24 03:47:37.275
  STEP: creating @ 07/04/24 03:47:37.277
  STEP: getting @ 07/04/24 03:47:37.294
  STEP: listing @ 07/04/24 03:47:37.297
  STEP: watching @ 07/04/24 03:47:37.312
  I0704 03:47:37.313071 20 flowcontrol.go:620] starting watch
  STEP: patching @ 07/04/24 03:47:37.315
  STEP: updating @ 07/04/24 03:47:37.328
  I0704 03:47:37.339303 20 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 07/04/24 03:47:37.339
  STEP: patching /status @ 07/04/24 03:47:37.346
  STEP: updating /status @ 07/04/24 03:47:37.362
  STEP: deleting @ 07/04/24 03:47:37.376
  STEP: deleting a collection @ 07/04/24 03:47:37.389
  I0704 03:47:37.403203 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-2541" for this suite. @ 07/04/24 03:47:37.406
â€¢ [0.169 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 07/04/24 03:47:37.416
  I0704 03:47:37.416923 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename dns @ 07/04/24 03:47:37.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:47:37.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:47:37.441
  STEP: Creating a test headless service @ 07/04/24 03:47:37.444
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3620 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-3620;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3620 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-3620;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3620.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-3620.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3620.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-3620.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3620.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-3620.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3620.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-3620.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3620.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-3620.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3620.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-3620.svc;check="$$(dig +notcp +noall +answer +search 131.86.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.86.131_udp@PTR;check="$$(dig +tcp +noall +answer +search 131.86.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.86.131_tcp@PTR;sleep 1; done
   @ 07/04/24 03:47:37.467
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3620 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3620;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3620 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3620;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3620.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3620.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3620.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3620.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3620.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-3620.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3620.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-3620.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3620.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-3620.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3620.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-3620.svc;check="$$(dig +notcp +noall +answer +search 131.86.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.86.131_udp@PTR;check="$$(dig +tcp +noall +answer +search 131.86.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.86.131_tcp@PTR;sleep 1; done
   @ 07/04/24 03:47:37.468
  STEP: creating a pod to probe DNS @ 07/04/24 03:47:37.468
  STEP: submitting the pod to kubernetes @ 07/04/24 03:47:37.468
  STEP: retrieving the pod @ 07/04/24 03:47:39.5
  STEP: looking for the results for each expected name from probers @ 07/04/24 03:47:39.502
  I0704 03:47:39.506452 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-3620/dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0: the server could not find the requested resource (get pods dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0)
  I0704 03:47:39.509301 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-3620/dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0: the server could not find the requested resource (get pods dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0)
  I0704 03:47:39.511976 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3620 from pod dns-3620/dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0: the server could not find the requested resource (get pods dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0)
  I0704 03:47:39.519654 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3620 from pod dns-3620/dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0: the server could not find the requested resource (get pods dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0)
  I0704 03:47:39.523022 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3620.svc from pod dns-3620/dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0: the server could not find the requested resource (get pods dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0)
  I0704 03:47:39.526205 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3620.svc from pod dns-3620/dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0: the server could not find the requested resource (get pods dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0)
  I0704 03:47:39.530532 20 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3620.svc from pod dns-3620/dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0: the server could not find the requested resource (get pods dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0)
  I0704 03:47:39.534530 20 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3620.svc from pod dns-3620/dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0: the server could not find the requested resource (get pods dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0)
  I0704 03:47:39.549723 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-3620/dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0: the server could not find the requested resource (get pods dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0)
  I0704 03:47:39.552416 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-3620/dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0: the server could not find the requested resource (get pods dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0)
  I0704 03:47:39.554827 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3620 from pod dns-3620/dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0: the server could not find the requested resource (get pods dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0)
  I0704 03:47:39.557391 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3620 from pod dns-3620/dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0: the server could not find the requested resource (get pods dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0)
  I0704 03:47:39.559758 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3620.svc from pod dns-3620/dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0: the server could not find the requested resource (get pods dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0)
  I0704 03:47:39.562511 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3620.svc from pod dns-3620/dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0: the server could not find the requested resource (get pods dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0)
  I0704 03:47:39.570775 20 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3620.svc from pod dns-3620/dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0: the server could not find the requested resource (get pods dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0)
  I0704 03:47:39.574090 20 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3620.svc from pod dns-3620/dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0: the server could not find the requested resource (get pods dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0)
  I0704 03:47:39.585013 20 dns_common.go:489] Lookups using dns-3620/dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-3620 wheezy_tcp@dns-test-service.dns-3620 wheezy_udp@dns-test-service.dns-3620.svc wheezy_tcp@dns-test-service.dns-3620.svc wheezy_udp@_http._tcp.dns-test-service.dns-3620.svc wheezy_tcp@_http._tcp.dns-test-service.dns-3620.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3620 jessie_tcp@dns-test-service.dns-3620 jessie_udp@dns-test-service.dns-3620.svc jessie_tcp@dns-test-service.dns-3620.svc jessie_udp@_http._tcp.dns-test-service.dns-3620.svc jessie_tcp@_http._tcp.dns-test-service.dns-3620.svc]

  I0704 03:47:39.591974 20 dns_common.go:495] Pod client logs for webserver: 
  I0704 03:47:39.601790 20 dns_common.go:495] Pod client logs for querier: 
  I0704 03:47:39.617489 20 dns_common.go:495] Pod client logs for jessie-querier: 
  I0704 03:47:44.554108 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-3620/dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0: the server could not find the requested resource (get pods dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0)
  I0704 03:47:44.577539 20 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3620.svc from pod dns-3620/dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0: the server could not find the requested resource (get pods dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0)
  I0704 03:47:44.580697 20 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3620.svc from pod dns-3620/dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0: the server could not find the requested resource (get pods dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0)
  I0704 03:47:44.613102 20 dns_common.go:489] Lookups using dns-3620/dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0 failed for: [jessie_udp@dns-test-service jessie_udp@_http._tcp.dns-test-service.dns-3620.svc jessie_tcp@_http._tcp.dns-test-service.dns-3620.svc]

  I0704 03:47:44.622465 20 dns_common.go:495] Pod client logs for webserver: 
  I0704 03:47:44.644932 20 dns_common.go:495] Pod client logs for querier: 
  I0704 03:47:44.653540 20 dns_common.go:495] Pod client logs for jessie-querier: 
  I0704 03:47:49.689685 20 dns_common.go:527] DNS probes using dns-3620/dns-test-d42ec709-c8d1-476a-a6ab-f2a6f2fd17e0 succeeded

  STEP: deleting the pod @ 07/04/24 03:47:49.689
  STEP: deleting the test service @ 07/04/24 03:47:49.72
  STEP: deleting the test headless service @ 07/04/24 03:47:49.754
  I0704 03:47:49.768328 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3620" for this suite. @ 07/04/24 03:47:49.775
â€¢ [12.364 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 07/04/24 03:47:49.782
  I0704 03:47:49.782647 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename container-probe @ 07/04/24 03:47:49.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:47:49.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:47:49.809
  STEP: Creating pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698 @ 07/04/24 03:47:49.812
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/04/24 03:47:51.829
  I0704 03:47:51.833114 20 container_probe.go:1749] Initial restart count of pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b is 0
  I0704 03:47:51.836892 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:47:53.840136 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:47:55.849628 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:47:57.857423 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:47:59.868868 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:01.880330 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:03.902281 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:05.907639 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:07.911408 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:09.915915 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:11.921753 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:13.938744 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:15.950874 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:17.961954 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:19.976041 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:21.979415 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:23.986022 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:25.991315 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:27.995018 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:29.998926 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:32.002690 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:34.007954 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:36.014053 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:38.020606 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:40.026542 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:42.035261 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:44.038679 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:46.042972 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:48.046468 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:50.052094 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:52.054780 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:54.058103 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:56.062287 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:48:58.067341 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:00.102829 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:02.106583 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:04.119299 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:06.125879 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:08.130781 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:10.138289 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:12.151199 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:14.154337 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:16.159989 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:18.165930 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:20.182167 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:22.186624 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:24.193168 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:26.204528 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:28.207716 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:30.222449 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:32.226859 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:34.233528 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:36.238023 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:38.243221 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:40.252572 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:42.257494 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:44.262600 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:46.266551 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:48.269901 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:50.276455 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:52.291581 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:54.295333 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:56.298756 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:49:58.305371 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:00.310101 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:02.313668 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:04.316940 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:06.321052 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:08.324580 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:10.327939 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:12.331987 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:14.336252 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:16.341888 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:18.345818 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:20.350322 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:22.358100 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:24.363543 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:26.374809 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:28.379636 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:30.384496 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:32.390215 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:34.393701 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:36.397815 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:38.400935 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:40.403978 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:42.407334 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:44.410477 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:46.415685 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:48.418519 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:50.423638 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:52.428216 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:54.431851 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:56.437168 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:50:58.441242 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:51:00.444631 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:51:02.464288 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:51:04.470737 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:51:06.475889 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:51:08.491140 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:51:10.495824 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:51:12.499943 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:51:14.503075 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:51:16.510293 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:51:18.514503 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:51:20.519289 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:51:22.524895 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:51:24.528063 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:51:26.532468 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:51:28.536375 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:51:30.539780 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:51:32.543043 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:51:34.546988 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:51:36.550908 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:51:38.554373 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:51:40.560881 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:51:42.564540 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:51:44.570828 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:51:46.575867 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:51:48.579526 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  I0704 03:51:50.582665 20 container_probe.go:1759] Get pod busybox-badb984d-ff5e-4993-841e-ee61a95a422b in namespace container-probe-7698
  STEP: deleting the pod @ 07/04/24 03:51:52.583
  I0704 03:51:52.626589 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7698" for this suite. @ 07/04/24 03:51:52.637
â€¢ [242.866 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 07/04/24 03:51:52.648
  I0704 03:51:52.648476 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename containers @ 07/04/24 03:51:52.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:51:52.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:51:52.668
  STEP: Creating a pod to test override command @ 07/04/24 03:51:52.67
  STEP: Saw pod success @ 07/04/24 03:51:56.717
  I0704 03:51:56.721300 20 output.go:196] Trying to get logs from node 18.191.27.132 pod client-containers-c3fe1bf0-6591-48d3-96d7-905a503b4d7c container agnhost-container: <nil>
  STEP: delete the pod @ 07/04/24 03:51:56.756
  I0704 03:51:56.772720 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1171" for this suite. @ 07/04/24 03:51:56.776
â€¢ [4.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 07/04/24 03:51:56.794
  I0704 03:51:56.794815 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename var-expansion @ 07/04/24 03:51:56.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:51:56.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:51:56.815
  I0704 03:51:58.840423 20 delete.go:62] Deleting pod "var-expansion-43e83115-8a01-45eb-be01-3e35a9d223af" in namespace "var-expansion-1983"
  I0704 03:51:58.856894 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-43e83115-8a01-45eb-be01-3e35a9d223af" to be fully deleted
  I0704 03:52:02.874966 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1983" for this suite. @ 07/04/24 03:52:02.878
â€¢ [6.090 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 07/04/24 03:52:02.885
  I0704 03:52:02.885071 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename kubectl @ 07/04/24 03:52:02.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:52:02.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:52:02.901
  STEP: Starting the proxy @ 07/04/24 03:52:02.905
  I0704 03:52:02.906302 20 util.go:592] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-1075 proxy --unix-socket=/tmp/kubectl-proxy-unix312352691/test'
  STEP: retrieving proxy /api/ output @ 07/04/24 03:52:02.983
  I0704 03:52:02.984308 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1075" for this suite. @ 07/04/24 03:52:02.994
â€¢ [0.122 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 07/04/24 03:52:03.007
  I0704 03:52:03.007687 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename secrets @ 07/04/24 03:52:03.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:52:03.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:52:03.034
  STEP: Creating secret with name secret-test-f247271c-a809-424d-a124-cb61a9e17460 @ 07/04/24 03:52:03.037
  STEP: Creating a pod to test consume secrets @ 07/04/24 03:52:03.048
  STEP: Saw pod success @ 07/04/24 03:52:07.081
  I0704 03:52:07.085626 20 output.go:196] Trying to get logs from node 3.142.51.114 pod pod-secrets-9bc35969-25ac-4456-857f-cff0ad549618 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/04/24 03:52:07.101
  I0704 03:52:07.129826 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7284" for this suite. @ 07/04/24 03:52:07.149
â€¢ [4.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 07/04/24 03:52:07.174
  I0704 03:52:07.174800 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename emptydir @ 07/04/24 03:52:07.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:52:07.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:52:07.222
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 07/04/24 03:52:07.225
  STEP: Saw pod success @ 07/04/24 03:52:11.251
  I0704 03:52:11.253652 20 output.go:196] Trying to get logs from node 3.142.51.114 pod pod-44c6c9a7-583d-4686-ad14-d5f51cf8a18a container test-container: <nil>
  STEP: delete the pod @ 07/04/24 03:52:11.292
  I0704 03:52:11.307749 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7433" for this suite. @ 07/04/24 03:52:11.311
â€¢ [4.143 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 07/04/24 03:52:11.318
  I0704 03:52:11.318603 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename gc @ 07/04/24 03:52:11.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:52:11.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:52:11.341
  STEP: create the deployment @ 07/04/24 03:52:11.344
  W0704 03:52:11.352687      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/04/24 03:52:11.352
  STEP: delete the deployment @ 07/04/24 03:52:11.855
  STEP: wait for all rs to be garbage collected @ 07/04/24 03:52:11.862
  STEP: expected 0 rs, got 1 rs @ 07/04/24 03:52:11.872
  STEP: expected 0 pods, got 2 pods @ 07/04/24 03:52:11.878
  STEP: Gathering metrics @ 07/04/24 03:52:12.376
  W0704 03:52:12.382374      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0704 03:52:12.382522 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0704 03:52:12.382836 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9175" for this suite. @ 07/04/24 03:52:12.39
â€¢ [1.083 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:397
  STEP: Creating a kubernetes client @ 07/04/24 03:52:12.401
  I0704 03:52:12.401869 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename kubectl @ 07/04/24 03:52:12.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:52:12.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:52:12.429
  STEP: creating all guestbook components @ 07/04/24 03:52:12.436
  I0704 03:52:12.436565 20 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0704 03:52:12.436674 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-9679 create -f -'
  I0704 03:52:12.622476 20 builder.go:146] stderr: ""
  I0704 03:52:12.622524 20 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0704 03:52:12.622574 20 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0704 03:52:12.622673 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-9679 create -f -'
  I0704 03:52:12.805529 20 builder.go:146] stderr: ""
  I0704 03:52:12.805573 20 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0704 03:52:12.805623 20 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0704 03:52:12.805722 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-9679 create -f -'
  I0704 03:52:12.993014 20 builder.go:146] stderr: ""
  I0704 03:52:12.993061 20 builder.go:147] stdout: "service/frontend created\n"
  I0704 03:52:12.993135 20 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0704 03:52:12.993318 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-9679 create -f -'
  I0704 03:52:13.130540 20 builder.go:146] stderr: ""
  I0704 03:52:13.130595 20 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0704 03:52:13.130807 20 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0704 03:52:13.131067 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-9679 create -f -'
  I0704 03:52:13.361966 20 builder.go:146] stderr: ""
  I0704 03:52:13.362014 20 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0704 03:52:13.362095 20 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0704 03:52:13.362301 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-9679 create -f -'
  I0704 03:52:13.587342 20 builder.go:146] stderr: ""
  I0704 03:52:13.587388 20 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 07/04/24 03:52:13.587
  I0704 03:52:13.587436 20 kubectl.go:2271] Waiting for all frontend pods to be Running.
  I0704 03:52:18.638875 20 kubectl.go:2275] Waiting for frontend to serve content.
  I0704 03:52:18.649842 20 kubectl.go:2280] Trying to add a new entry to the guestbook.
  I0704 03:52:18.660376 20 kubectl.go:2285] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 07/04/24 03:52:18.667
  I0704 03:52:18.668013 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-9679 delete --grace-period=0 --force -f -'
  I0704 03:52:18.768409 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0704 03:52:18.768466 20 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 07/04/24 03:52:18.768
  I0704 03:52:18.768573 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-9679 delete --grace-period=0 --force -f -'
  I0704 03:52:18.873223 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0704 03:52:18.873276 20 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/04/24 03:52:18.873
  I0704 03:52:18.873407 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-9679 delete --grace-period=0 --force -f -'
  I0704 03:52:19.005939 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0704 03:52:19.005991 20 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/04/24 03:52:19.006
  I0704 03:52:19.006133 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-9679 delete --grace-period=0 --force -f -'
  I0704 03:52:19.144871 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0704 03:52:19.144921 20 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/04/24 03:52:19.145
  I0704 03:52:19.145287 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-9679 delete --grace-period=0 --force -f -'
  I0704 03:52:19.331224 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0704 03:52:19.331274 20 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/04/24 03:52:19.331
  I0704 03:52:19.331494 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-9679 delete --grace-period=0 --force -f -'
  I0704 03:52:19.486936 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0704 03:52:19.486985 20 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0704 03:52:19.487100 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9679" for this suite. @ 07/04/24 03:52:19.497
â€¢ [7.129 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 07/04/24 03:52:19.53
  I0704 03:52:19.530484 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename cronjob @ 07/04/24 03:52:19.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:52:19.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:52:19.718
  STEP: Creating a suspended cronjob @ 07/04/24 03:52:19.727
  STEP: Ensuring no jobs are scheduled @ 07/04/24 03:52:19.767
  STEP: Ensuring no job exists by listing jobs explicitly @ 07/04/24 03:57:19.768
  STEP: Removing cronjob @ 07/04/24 03:57:19.773
  I0704 03:57:19.779086 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-800" for this suite. @ 07/04/24 03:57:19.782
â€¢ [300.258 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 07/04/24 03:57:19.788
  I0704 03:57:19.788402 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/04/24 03:57:19.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:57:19.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:57:19.808
  I0704 03:57:19.812019 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/04/24 03:57:21.405
  I0704 03:57:21.406751 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-4913 --namespace=crd-publish-openapi-4913 create -f -'
  I0704 03:57:21.556273 20 builder.go:146] stderr: ""
  I0704 03:57:21.556376 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4691-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0704 03:57:21.556447 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-4913 --namespace=crd-publish-openapi-4913 delete e2e-test-crd-publish-openapi-4691-crds test-cr'
  I0704 03:57:21.632563 20 builder.go:146] stderr: ""
  I0704 03:57:21.632661 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4691-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0704 03:57:21.632927 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-4913 --namespace=crd-publish-openapi-4913 apply -f -'
  I0704 03:57:21.720955 20 builder.go:146] stderr: ""
  I0704 03:57:21.721003 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4691-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0704 03:57:21.721071 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-4913 --namespace=crd-publish-openapi-4913 delete e2e-test-crd-publish-openapi-4691-crds test-cr'
  I0704 03:57:21.804539 20 builder.go:146] stderr: ""
  I0704 03:57:21.804583 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4691-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 07/04/24 03:57:21.804
  I0704 03:57:21.804951 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-4913 explain e2e-test-crd-publish-openapi-4691-crds'
  I0704 03:57:21.877007 20 builder.go:146] stderr: ""
  I0704 03:57:21.877069 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-4691-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0704 03:57:23.349452 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4913" for this suite. @ 07/04/24 03:57:23.361
â€¢ [3.582 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 07/04/24 03:57:23.371
  I0704 03:57:23.371435 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename aggregator @ 07/04/24 03:57:23.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:57:23.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:57:23.39
  I0704 03:57:23.393962 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Registering the sample API server. @ 07/04/24 03:57:23.395
  I0704 03:57:24.091216 20 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0704 03:57:24.154939 20 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0704 03:57:26.370586 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0704 03:57:28.376177 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0704 03:57:30.378009 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0704 03:57:32.375172 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0704 03:57:34.375099 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0704 03:57:36.375233 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0704 03:57:38.441479 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0704 03:57:40.376632 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0704 03:57:42.374373 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0704 03:57:44.377425 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0704 03:57:46.377185 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0704 03:57:48.374683 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0704 03:57:50.375334 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 57, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0704 03:57:52.521529 20 aggregator.go:749] Waited 134.209438ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 07/04/24 03:57:52.598
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 07/04/24 03:57:52.601
  STEP: List APIServices @ 07/04/24 03:57:52.608
  I0704 03:57:52.616821 20 aggregator.go:550] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 07/04/24 03:57:52.616
  I0704 03:57:52.630766 20 aggregator.go:575] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 07/04/24 03:57:52.63
  I0704 03:57:52.651164 20 aggregator.go:601] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.July, 4, 3, 57, 52, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 07/04/24 03:57:52.651
  I0704 03:57:52.659850 20 aggregator.go:619] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-07-04 03:57:52 +0000 UTC Passed all checks passed}
  I0704 03:57:52.659902 20 aggregator.go:615] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0704 03:57:52.659919 20 aggregator.go:625] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 07/04/24 03:57:52.66
  I0704 03:57:52.672015 20 aggregator.go:641] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-684714622" @ 07/04/24 03:57:52.672
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 07/04/24 03:57:52.685
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 07/04/24 03:57:52.696
  STEP: Patch APIService Status @ 07/04/24 03:57:52.701
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 07/04/24 03:57:52.709
  I0704 03:57:52.712944 20 aggregator.go:719] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-07-04 03:57:52 +0000 UTC Passed all checks passed}
  I0704 03:57:52.713956 20 aggregator.go:719] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0704 03:57:52.714600 20 aggregator.go:715] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0704 03:57:52.714685 20 aggregator.go:725] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 07/04/24 03:57:52.714
  STEP: Confirm that the generated APIService has been deleted @ 07/04/24 03:57:52.725
  I0704 03:57:52.725488 20 aggregator.go:786] Requesting list of APIServices to confirm quantity
  I0704 03:57:52.730899 20 aggregator.go:796] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0704 03:57:52.731664 20 aggregator.go:738] APIService v1alpha1.wardle.example.com has been deleted.
  I0704 03:57:52.964551 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-6641" for this suite. @ 07/04/24 03:57:52.978
â€¢ [29.619 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 07/04/24 03:57:52.991
  I0704 03:57:52.991034 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename downward-api @ 07/04/24 03:57:52.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:57:53.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:57:53.019
  STEP: Creating a pod to test downward API volume plugin @ 07/04/24 03:57:53.023
  STEP: Saw pod success @ 07/04/24 03:57:57.056
  I0704 03:57:57.060760 20 output.go:196] Trying to get logs from node 18.191.27.132 pod downwardapi-volume-3d3fac87-d4fe-4bd4-a3c6-44fb6f59c1a2 container client-container: <nil>
  STEP: delete the pod @ 07/04/24 03:57:57.08
  I0704 03:57:57.102765 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5165" for this suite. @ 07/04/24 03:57:57.106
â€¢ [4.123 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 07/04/24 03:57:57.114
  I0704 03:57:57.114712 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename pods @ 07/04/24 03:57:57.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:57:57.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:57:57.136
  STEP: creating the pod @ 07/04/24 03:57:57.14
  STEP: submitting the pod to kubernetes @ 07/04/24 03:57:57.141
  STEP: verifying QOS class is set on the pod @ 07/04/24 03:57:57.164
  I0704 03:57:57.182389 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9836" for this suite. @ 07/04/24 03:57:57.202
â€¢ [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 07/04/24 03:57:57.217
  I0704 03:57:57.217371 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/04/24 03:57:57.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:57:57.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:57:57.237
  STEP: creating a policy with variables @ 07/04/24 03:57:57.246
  STEP: waiting until the marker is denied @ 07/04/24 03:57:57.272
  STEP: testing a replicated Deployment to be allowed @ 07/04/24 03:57:57.779
  STEP: testing a non-replicated ReplicaSet not to be denied @ 07/04/24 03:57:57.793
  I0704 03:57:57.953450 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2483" for this suite. @ 07/04/24 03:57:57.972
â€¢ [0.776 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 07/04/24 03:57:57.994
  I0704 03:57:57.994036 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename gc @ 07/04/24 03:57:58.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:57:58.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:57:58.032
  STEP: create the rc @ 07/04/24 03:57:58.041
  W0704 03:57:58.049769      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 07/04/24 03:58:04.17
  STEP: wait for the rc to be deleted @ 07/04/24 03:58:04.457
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 07/04/24 03:58:09.474
  STEP: Gathering metrics @ 07/04/24 03:58:39.487
  W0704 03:58:39.495252      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0704 03:58:39.495293 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0704 03:58:39.496156 20 delete.go:95] Deleting pod "simpletest.rc-24g2k" in namespace "gc-9125"
  I0704 03:58:39.529364 20 delete.go:95] Deleting pod "simpletest.rc-27k9c" in namespace "gc-9125"
  I0704 03:58:39.551838 20 delete.go:95] Deleting pod "simpletest.rc-2kljr" in namespace "gc-9125"
  I0704 03:58:39.568994 20 delete.go:95] Deleting pod "simpletest.rc-46524" in namespace "gc-9125"
  I0704 03:58:39.583838 20 delete.go:95] Deleting pod "simpletest.rc-4sfsk" in namespace "gc-9125"
  I0704 03:58:39.614604 20 delete.go:95] Deleting pod "simpletest.rc-54q6w" in namespace "gc-9125"
  I0704 03:58:39.653903 20 delete.go:95] Deleting pod "simpletest.rc-59sn8" in namespace "gc-9125"
  I0704 03:58:39.668661 20 delete.go:95] Deleting pod "simpletest.rc-5kj55" in namespace "gc-9125"
  I0704 03:58:39.710200 20 delete.go:95] Deleting pod "simpletest.rc-5pjx2" in namespace "gc-9125"
  I0704 03:58:39.765745 20 delete.go:95] Deleting pod "simpletest.rc-5q7rj" in namespace "gc-9125"
  I0704 03:58:39.810955 20 delete.go:95] Deleting pod "simpletest.rc-6f7f7" in namespace "gc-9125"
  I0704 03:58:39.861322 20 delete.go:95] Deleting pod "simpletest.rc-6lmqm" in namespace "gc-9125"
  I0704 03:58:39.954037 20 delete.go:95] Deleting pod "simpletest.rc-6v8w5" in namespace "gc-9125"
  I0704 03:58:40.015217 20 delete.go:95] Deleting pod "simpletest.rc-72754" in namespace "gc-9125"
  I0704 03:58:40.102540 20 delete.go:95] Deleting pod "simpletest.rc-727vp" in namespace "gc-9125"
  I0704 03:58:40.204947 20 delete.go:95] Deleting pod "simpletest.rc-77sml" in namespace "gc-9125"
  I0704 03:58:40.231676 20 delete.go:95] Deleting pod "simpletest.rc-78wp7" in namespace "gc-9125"
  I0704 03:58:40.281075 20 delete.go:95] Deleting pod "simpletest.rc-7bqtx" in namespace "gc-9125"
  I0704 03:58:40.297059 20 delete.go:95] Deleting pod "simpletest.rc-7jb7k" in namespace "gc-9125"
  I0704 03:58:40.357542 20 delete.go:95] Deleting pod "simpletest.rc-7k4vd" in namespace "gc-9125"
  I0704 03:58:40.392462 20 delete.go:95] Deleting pod "simpletest.rc-7kf4s" in namespace "gc-9125"
  I0704 03:58:40.462422 20 delete.go:95] Deleting pod "simpletest.rc-7llrd" in namespace "gc-9125"
  I0704 03:58:40.559402 20 delete.go:95] Deleting pod "simpletest.rc-7n2gc" in namespace "gc-9125"
  I0704 03:58:40.599880 20 delete.go:95] Deleting pod "simpletest.rc-87prv" in namespace "gc-9125"
  I0704 03:58:40.637961 20 delete.go:95] Deleting pod "simpletest.rc-8hnmq" in namespace "gc-9125"
  I0704 03:58:40.688319 20 delete.go:95] Deleting pod "simpletest.rc-8kxzz" in namespace "gc-9125"
  I0704 03:58:40.753342 20 delete.go:95] Deleting pod "simpletest.rc-8t89n" in namespace "gc-9125"
  I0704 03:58:40.799311 20 delete.go:95] Deleting pod "simpletest.rc-9wzq7" in namespace "gc-9125"
  I0704 03:58:40.863603 20 delete.go:95] Deleting pod "simpletest.rc-b2tlf" in namespace "gc-9125"
  I0704 03:58:40.918398 20 delete.go:95] Deleting pod "simpletest.rc-b7vjp" in namespace "gc-9125"
  I0704 03:58:40.956226 20 delete.go:95] Deleting pod "simpletest.rc-bchzb" in namespace "gc-9125"
  I0704 03:58:41.004897 20 delete.go:95] Deleting pod "simpletest.rc-bhpqp" in namespace "gc-9125"
  I0704 03:58:41.064889 20 delete.go:95] Deleting pod "simpletest.rc-bn48c" in namespace "gc-9125"
  I0704 03:58:41.149006 20 delete.go:95] Deleting pod "simpletest.rc-bnf48" in namespace "gc-9125"
  I0704 03:58:41.226311 20 delete.go:95] Deleting pod "simpletest.rc-bs7vh" in namespace "gc-9125"
  I0704 03:58:41.277873 20 delete.go:95] Deleting pod "simpletest.rc-bsrg9" in namespace "gc-9125"
  I0704 03:58:41.332842 20 delete.go:95] Deleting pod "simpletest.rc-ch248" in namespace "gc-9125"
  I0704 03:58:41.349579 20 delete.go:95] Deleting pod "simpletest.rc-cnfxr" in namespace "gc-9125"
  I0704 03:58:41.379784 20 delete.go:95] Deleting pod "simpletest.rc-ddmv8" in namespace "gc-9125"
  I0704 03:58:41.393986 20 delete.go:95] Deleting pod "simpletest.rc-f9jlb" in namespace "gc-9125"
  I0704 03:58:41.493908 20 delete.go:95] Deleting pod "simpletest.rc-fhn4n" in namespace "gc-9125"
  I0704 03:58:41.762371 20 delete.go:95] Deleting pod "simpletest.rc-fhs6r" in namespace "gc-9125"
  I0704 03:58:41.825148 20 delete.go:95] Deleting pod "simpletest.rc-fvph2" in namespace "gc-9125"
  I0704 03:58:41.923957 20 delete.go:95] Deleting pod "simpletest.rc-g6n4h" in namespace "gc-9125"
  I0704 03:58:41.964888 20 delete.go:95] Deleting pod "simpletest.rc-gd6xr" in namespace "gc-9125"
  I0704 03:58:42.019573 20 delete.go:95] Deleting pod "simpletest.rc-gd7m6" in namespace "gc-9125"
  I0704 03:58:42.092325 20 delete.go:95] Deleting pod "simpletest.rc-gj5vg" in namespace "gc-9125"
  I0704 03:58:42.126774 20 delete.go:95] Deleting pod "simpletest.rc-gmn6l" in namespace "gc-9125"
  I0704 03:58:42.179852 20 delete.go:95] Deleting pod "simpletest.rc-gw6rz" in namespace "gc-9125"
  I0704 03:58:42.228675 20 delete.go:95] Deleting pod "simpletest.rc-gwhlb" in namespace "gc-9125"
  I0704 03:58:42.320352 20 delete.go:95] Deleting pod "simpletest.rc-h27nk" in namespace "gc-9125"
  I0704 03:58:42.471594 20 delete.go:95] Deleting pod "simpletest.rc-h2crg" in namespace "gc-9125"
  I0704 03:58:42.555096 20 delete.go:95] Deleting pod "simpletest.rc-h85kg" in namespace "gc-9125"
  I0704 03:58:42.581133 20 delete.go:95] Deleting pod "simpletest.rc-h9qww" in namespace "gc-9125"
  I0704 03:58:42.709722 20 delete.go:95] Deleting pod "simpletest.rc-hh4c7" in namespace "gc-9125"
  I0704 03:58:42.934121 20 delete.go:95] Deleting pod "simpletest.rc-hnzqs" in namespace "gc-9125"
  I0704 03:58:43.052702 20 delete.go:95] Deleting pod "simpletest.rc-jjvt8" in namespace "gc-9125"
  I0704 03:58:43.173032 20 delete.go:95] Deleting pod "simpletest.rc-k797q" in namespace "gc-9125"
  I0704 03:58:43.249289 20 delete.go:95] Deleting pod "simpletest.rc-kqjgd" in namespace "gc-9125"
  I0704 03:58:43.382739 20 delete.go:95] Deleting pod "simpletest.rc-ksh9p" in namespace "gc-9125"
  I0704 03:58:43.529653 20 delete.go:95] Deleting pod "simpletest.rc-lcwpq" in namespace "gc-9125"
  I0704 03:58:43.595812 20 delete.go:95] Deleting pod "simpletest.rc-lk8jd" in namespace "gc-9125"
  I0704 03:58:43.691433 20 delete.go:95] Deleting pod "simpletest.rc-lnw2q" in namespace "gc-9125"
  I0704 03:58:43.850617 20 delete.go:95] Deleting pod "simpletest.rc-mwm2k" in namespace "gc-9125"
  I0704 03:58:43.942627 20 delete.go:95] Deleting pod "simpletest.rc-n7z49" in namespace "gc-9125"
  I0704 03:58:44.002307 20 delete.go:95] Deleting pod "simpletest.rc-ndlgg" in namespace "gc-9125"
  I0704 03:58:44.026116 20 delete.go:95] Deleting pod "simpletest.rc-njmwc" in namespace "gc-9125"
  I0704 03:58:44.214071 20 delete.go:95] Deleting pod "simpletest.rc-nvrws" in namespace "gc-9125"
  I0704 03:58:44.344348 20 delete.go:95] Deleting pod "simpletest.rc-pc8l4" in namespace "gc-9125"
  I0704 03:58:44.427330 20 delete.go:95] Deleting pod "simpletest.rc-pjdnf" in namespace "gc-9125"
  I0704 03:58:44.459213 20 delete.go:95] Deleting pod "simpletest.rc-pqztm" in namespace "gc-9125"
  I0704 03:58:44.639825 20 delete.go:95] Deleting pod "simpletest.rc-pw58d" in namespace "gc-9125"
  I0704 03:58:44.685482 20 delete.go:95] Deleting pod "simpletest.rc-pw5km" in namespace "gc-9125"
  I0704 03:58:44.724087 20 delete.go:95] Deleting pod "simpletest.rc-qggxl" in namespace "gc-9125"
  I0704 03:58:44.751712 20 delete.go:95] Deleting pod "simpletest.rc-rqpsx" in namespace "gc-9125"
  I0704 03:58:44.810760 20 delete.go:95] Deleting pod "simpletest.rc-rzf7s" in namespace "gc-9125"
  I0704 03:58:44.853454 20 delete.go:95] Deleting pod "simpletest.rc-smbcs" in namespace "gc-9125"
  I0704 03:58:44.983567 20 delete.go:95] Deleting pod "simpletest.rc-svlbn" in namespace "gc-9125"
  I0704 03:58:45.083446 20 delete.go:95] Deleting pod "simpletest.rc-t8m9v" in namespace "gc-9125"
  I0704 03:58:45.133488 20 delete.go:95] Deleting pod "simpletest.rc-tmt5d" in namespace "gc-9125"
  I0704 03:58:45.172654 20 delete.go:95] Deleting pod "simpletest.rc-v8j8s" in namespace "gc-9125"
  I0704 03:58:45.217936 20 delete.go:95] Deleting pod "simpletest.rc-vdvbx" in namespace "gc-9125"
  I0704 03:58:45.290671 20 delete.go:95] Deleting pod "simpletest.rc-w5q2k" in namespace "gc-9125"
  I0704 03:58:45.346426 20 delete.go:95] Deleting pod "simpletest.rc-w6fqd" in namespace "gc-9125"
  I0704 03:58:45.379875 20 delete.go:95] Deleting pod "simpletest.rc-wdqcf" in namespace "gc-9125"
  I0704 03:58:45.463690 20 delete.go:95] Deleting pod "simpletest.rc-whq5n" in namespace "gc-9125"
  I0704 03:58:45.523814 20 delete.go:95] Deleting pod "simpletest.rc-wp7nx" in namespace "gc-9125"
  I0704 03:58:45.613968 20 delete.go:95] Deleting pod "simpletest.rc-wtrsw" in namespace "gc-9125"
  I0704 03:58:45.662189 20 delete.go:95] Deleting pod "simpletest.rc-wvzb6" in namespace "gc-9125"
  I0704 03:58:45.706692 20 delete.go:95] Deleting pod "simpletest.rc-wxjfm" in namespace "gc-9125"
  I0704 03:58:45.806535 20 delete.go:95] Deleting pod "simpletest.rc-x58gl" in namespace "gc-9125"
  I0704 03:58:45.848875 20 delete.go:95] Deleting pod "simpletest.rc-x6lkm" in namespace "gc-9125"
  I0704 03:58:45.893380 20 delete.go:95] Deleting pod "simpletest.rc-x9flj" in namespace "gc-9125"
  I0704 03:58:46.041358 20 delete.go:95] Deleting pod "simpletest.rc-xbsd7" in namespace "gc-9125"
  I0704 03:58:46.140899 20 delete.go:95] Deleting pod "simpletest.rc-xtg2b" in namespace "gc-9125"
  I0704 03:58:46.210719 20 delete.go:95] Deleting pod "simpletest.rc-xxpww" in namespace "gc-9125"
  I0704 03:58:46.265159 20 delete.go:95] Deleting pod "simpletest.rc-z4hgc" in namespace "gc-9125"
  I0704 03:58:46.326764 20 delete.go:95] Deleting pod "simpletest.rc-zdss7" in namespace "gc-9125"
  I0704 03:58:46.400492 20 delete.go:95] Deleting pod "simpletest.rc-zfflr" in namespace "gc-9125"
  I0704 03:58:46.426241 20 delete.go:95] Deleting pod "simpletest.rc-znq6g" in namespace "gc-9125"
  I0704 03:58:46.456692 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9125" for this suite. @ 07/04/24 03:58:46.468
â€¢ [48.485 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 07/04/24 03:58:46.479
  I0704 03:58:46.479687 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename deployment @ 07/04/24 03:58:46.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:58:46.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:58:46.517
  I0704 03:58:46.564773 20 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  I0704 03:58:51.574197 20 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/04/24 03:58:51.574
  I0704 03:58:53.583306 20 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0704 03:58:55.586747 20 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0704 03:58:55.596257 20 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0704 03:58:57.602605 20 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0704 03:58:57.607212 20 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0704 03:58:57.611869 20 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0704 03:58:57.621241 20 deployment.go:313] Updating deployment test-rollover-deployment
  I0704 03:58:57.621296 20 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0704 03:58:59.630266 20 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0704 03:58:59.643414 20 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0704 03:58:59.652890 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0704 03:58:59.652969 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 58, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 58, 55, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 58, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 58, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0704 03:59:01.662714 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0704 03:59:01.662832 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 58, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 58, 55, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 58, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 58, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0704 03:59:03.661189 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0704 03:59:03.661286 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 58, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 58, 55, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 58, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 58, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0704 03:59:05.660305 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0704 03:59:05.660513 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 58, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 58, 55, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 58, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 58, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0704 03:59:07.661844 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0704 03:59:07.661911 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 58, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 58, 55, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 58, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 58, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0704 03:59:09.658524 20 deployment.go:94] 
  I0704 03:59:09.658583 20 deployment.go:974] Ensure that both old replica sets have no replicas
  I0704 03:59:09.665517 20 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-87",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "671f2426-5b2f-43e5-b23c-aa8e94d7ae0e",
      ResourceVersion: (string) (len=5) "17095",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855662335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-679c966bdf\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0704 03:59:09.672050 20 deployment.go:39] New ReplicaSet "test-rollover-deployment-679c966bdf" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-679c966bdf",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-87",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8402d24d-0b5c-489d-b33c-e24380878c91",
      ResourceVersion: (string) (len=5) "17085",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855662337,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "671f2426-5b2f-43e5-b23c-aa8e94d7ae0e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 37 31 66 32 34  32 36 2d 35 62 32 66 2d  |\"671f2426-5b2f-|
              00000120  34 33 65 35 2d 62 32 33  63 2d 61 61 38 65 39 34  |43e5-b23c-aa8e94|
              00000130  64 37 61 65 30 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d7ae0e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0704 03:59:09.677491 20 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0704 03:59:09.677891 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-87",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "932efe3c-7f4a-4156-ae77-171c3e00128a",
      ResourceVersion: (string) (len=5) "17094",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855662326,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "671f2426-5b2f-43e5-b23c-aa8e94d7ae0e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  36 37 31 66 32 34 32 36  2d 35 62 32 66 2d 34 33  |671f2426-5b2f-43|
              000000c0  65 35 2d 62 32 33 63 2d  61 61 38 65 39 34 64 37  |e5-b23c-aa8e94d7|
              000000d0  61 65 30 65 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |ae0e\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0704 03:59:09.679817 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-65bd487b4b",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-87",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c758659a-b8f8-445d-bd59-a86bc4353efd",
      ResourceVersion: (string) (len=5) "17055",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855662335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "671f2426-5b2f-43e5-b23c-aa8e94d7ae0e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 37 31 66 32 34  32 36 2d 35 62 32 66 2d  |\"671f2426-5b2f-|
              00000120  34 33 65 35 2d 62 32 33  63 2d 61 61 38 65 39 34  |43e5-b23c-aa8e94|
              00000130  64 37 61 65 30 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d7ae0e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0704 03:59:09.686524 20 deployment.go:67] Pod "test-rollover-deployment-679c966bdf-zdk22" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-679c966bdf-zdk22",
      GenerateName: (string) (len=36) "test-rollover-deployment-679c966bdf-",
      Namespace: (string) (len=13) "deployment-87",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7bb65856-9cdc-4f98-b716-7747b4d5c11c",
      ResourceVersion: (string) (len=5) "17067",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855662337,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e30c1a3dcf83def4f5262f00f6c3742f2bd21373f70dcd6aec651d17e2928143",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.2.145/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.2.145/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-679c966bdf",
          UID: (types.UID) (len=36) "8402d24d-0b5c-489d-b33c-e24380878c91",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 34  30 32 64 32 34 64 2d 30  |d\":\"8402d24d-0|
              00000090  62 35 63 2d 34 38 39 64  2d 62 33 33 63 2d 65 32  |b5c-489d-b33c-e2|
              000000a0  34 33 38 30 38 37 38 63  39 31 5c 22 7d 22 3a 7b  |4380878c91\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 31 34  35 5c 22 7d 22 3a 7b 22  |.42.2.145\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hjcjx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hjcjx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "3.142.51.114",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.23.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.23.45"
        }
      },
      PodIP: (string) (len=11) "10.42.2.145",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.145"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855662337,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855662338,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=129) "docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=73) "docker://662ada9b21c6068995321ed6a7cbe8fa2bf971997d902f571be29833ba1ef495",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 03:59:09.695957 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-87" for this suite. @ 07/04/24 03:59:09.704
â€¢ [23.231 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 07/04/24 03:59:09.711
  I0704 03:59:09.711155 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename webhook @ 07/04/24 03:59:09.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:59:09.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:59:09.734
  STEP: Setting up server cert @ 07/04/24 03:59:09.758
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/04/24 03:59:10.769
  STEP: Deploying the webhook pod @ 07/04/24 03:59:10.775
  STEP: Wait for the deployment to be ready @ 07/04/24 03:59:10.788
  I0704 03:59:10.797402 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/04/24 03:59:12.808
  STEP: Verifying the service has paired with the endpoint @ 07/04/24 03:59:12.818
  I0704 03:59:13.818919 20 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0704 03:59:13.825508 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 07/04/24 03:59:14.338
  STEP: Creating a custom resource that should be denied by the webhook @ 07/04/24 03:59:14.355
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 07/04/24 03:59:16.378
  STEP: Updating the custom resource with disallowed data should be denied @ 07/04/24 03:59:16.392
  STEP: Deleting the custom resource should be denied @ 07/04/24 03:59:16.402
  STEP: Remove the offending key and value from the custom resource data @ 07/04/24 03:59:16.406
  STEP: Deleting the updated custom resource should be successful @ 07/04/24 03:59:16.421
  I0704 03:59:17.088981 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8098" for this suite. @ 07/04/24 03:59:17.105
  STEP: Destroying namespace "webhook-markers-714" for this suite. @ 07/04/24 03:59:17.118
â€¢ [7.418 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 07/04/24 03:59:17.13
  I0704 03:59:17.130680 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename svcaccounts @ 07/04/24 03:59:17.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:59:17.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:59:17.151
  STEP: Creating a pod to test service account token:  @ 07/04/24 03:59:17.154
  STEP: Saw pod success @ 07/04/24 03:59:21.178
  I0704 03:59:21.190038 20 output.go:196] Trying to get logs from node 18.191.27.132 pod test-pod-965f0925-fdb5-40ff-92fb-e3767687d891 container agnhost-container: <nil>
  STEP: delete the pod @ 07/04/24 03:59:21.205
  I0704 03:59:21.223935 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1535" for this suite. @ 07/04/24 03:59:21.228
â€¢ [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 07/04/24 03:59:21.235
  I0704 03:59:21.235984 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 03:59:21.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:59:21.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:59:21.275
  STEP: Creating configMap with name projected-configmap-test-volume-map-f4328b0a-65b9-49ed-ad66-ba8eabbfeaa4 @ 07/04/24 03:59:21.286
  STEP: Creating a pod to test consume configMaps @ 07/04/24 03:59:21.292
  STEP: Saw pod success @ 07/04/24 03:59:25.312
  I0704 03:59:25.320283 20 output.go:196] Trying to get logs from node 3.142.51.114 pod pod-projected-configmaps-b3861e78-7c0c-4cb8-8bae-b1866f9c2ef7 container agnhost-container: <nil>
  STEP: delete the pod @ 07/04/24 03:59:25.366
  I0704 03:59:25.409380 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8926" for this suite. @ 07/04/24 03:59:25.412
â€¢ [4.183 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 07/04/24 03:59:25.419
  I0704 03:59:25.419409 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename kubectl @ 07/04/24 03:59:25.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:59:25.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:59:25.436
  STEP: starting the proxy server @ 07/04/24 03:59:25.438
  I0704 03:59:25.438701 20 util.go:592] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-5069 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 07/04/24 03:59:25.5
  I0704 03:59:25.508544 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0704 03:59:25.510647 20 kubectl.go:2228] kubectl proxy stderr: W0704 03:59:25.499774     471 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  I0704 03:59:25.510698 20 kubectl.go:2223] kubectl proxy stdout: Starting to serve on 127.0.0.1:37193

  STEP: Destroying namespace "kubectl-5069" for this suite. @ 07/04/24 03:59:25.512
â€¢ [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 07/04/24 03:59:25.521
  I0704 03:59:25.521777 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename emptydir @ 07/04/24 03:59:25.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:59:25.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:59:25.545
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/04/24 03:59:25.548
  STEP: Saw pod success @ 07/04/24 03:59:29.57
  I0704 03:59:29.573334 20 output.go:196] Trying to get logs from node 3.142.51.114 pod pod-a9f44e2c-19ab-4236-bd35-a6cf59a05ce7 container test-container: <nil>
  STEP: delete the pod @ 07/04/24 03:59:29.58
  I0704 03:59:29.593296 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4143" for this suite. @ 07/04/24 03:59:29.596
â€¢ [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 07/04/24 03:59:29.603
  I0704 03:59:29.603706 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename svc-latency @ 07/04/24 03:59:29.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:59:29.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:59:29.626
  I0704 03:59:29.631285 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-8052 @ 07/04/24 03:59:29.632
  I0704 03:59:29.640341      20 runners.go:198] Created replication controller with name: svc-latency-rc, namespace: svc-latency-8052, replica count: 1
  I0704 03:59:30.691520      20 runners.go:198] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0704 03:59:31.692639      20 runners.go:198] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0704 03:59:31.805793 20 service_latency.go:356] Created: latency-svc-mjhlj
  I0704 03:59:31.820079 20 service_latency.go:363] Got endpoints: latency-svc-mjhlj [26.489683ms]
  I0704 03:59:31.841116 20 service_latency.go:356] Created: latency-svc-x8hp7
  I0704 03:59:31.860379 20 service_latency.go:363] Got endpoints: latency-svc-x8hp7 [40.036547ms]
  I0704 03:59:31.860986 20 service_latency.go:356] Created: latency-svc-rnlqr
  I0704 03:59:31.862084 20 service_latency.go:363] Got endpoints: latency-svc-rnlqr [41.048228ms]
  I0704 03:59:31.863711 20 service_latency.go:356] Created: latency-svc-vk6lp
  I0704 03:59:31.879673 20 service_latency.go:363] Got endpoints: latency-svc-vk6lp [58.520953ms]
  I0704 03:59:31.879753 20 service_latency.go:356] Created: latency-svc-4d2fp
  I0704 03:59:31.884300 20 service_latency.go:363] Got endpoints: latency-svc-4d2fp [63.680177ms]
  I0704 03:59:31.892252 20 service_latency.go:356] Created: latency-svc-jm4g6
  I0704 03:59:31.899153 20 service_latency.go:363] Got endpoints: latency-svc-jm4g6 [78.258471ms]
  I0704 03:59:31.899268 20 service_latency.go:356] Created: latency-svc-6dl4l
  I0704 03:59:31.908992 20 service_latency.go:356] Created: latency-svc-kv8bc
  I0704 03:59:31.916575 20 service_latency.go:363] Got endpoints: latency-svc-6dl4l [95.312145ms]
  I0704 03:59:31.917048 20 service_latency.go:356] Created: latency-svc-p6b7q
  I0704 03:59:31.922003 20 service_latency.go:363] Got endpoints: latency-svc-kv8bc [97.509267ms]
  I0704 03:59:31.924454 20 service_latency.go:363] Got endpoints: latency-svc-p6b7q [102.238173ms]
  I0704 03:59:31.930687 20 service_latency.go:356] Created: latency-svc-c7sz5
  I0704 03:59:31.937420 20 service_latency.go:363] Got endpoints: latency-svc-c7sz5 [114.010241ms]
  I0704 03:59:32.013095 20 service_latency.go:356] Created: latency-svc-zwtl8
  I0704 03:59:32.015791 20 service_latency.go:363] Got endpoints: latency-svc-zwtl8 [99.169134ms]
  I0704 03:59:32.033631 20 service_latency.go:356] Created: latency-svc-mpcfj
  I0704 03:59:32.033917 20 service_latency.go:356] Created: latency-svc-fj6gf
  I0704 03:59:32.034061 20 service_latency.go:356] Created: latency-svc-bcmpf
  I0704 03:59:32.034144 20 service_latency.go:356] Created: latency-svc-wqdx6
  I0704 03:59:32.041627 20 service_latency.go:356] Created: latency-svc-whgcq
  I0704 03:59:32.053052 20 service_latency.go:356] Created: latency-svc-8ds8t
  I0704 03:59:32.054672 20 service_latency.go:356] Created: latency-svc-jztkk
  I0704 03:59:32.055005 20 service_latency.go:356] Created: latency-svc-lc4hr
  I0704 03:59:32.055278 20 service_latency.go:356] Created: latency-svc-4jwjf
  I0704 03:59:32.055612 20 service_latency.go:356] Created: latency-svc-sn762
  I0704 03:59:32.053700 20 service_latency.go:356] Created: latency-svc-9lv8v
  I0704 03:59:32.056177 20 service_latency.go:356] Created: latency-svc-27zsd
  I0704 03:59:32.056589 20 service_latency.go:356] Created: latency-svc-cscf4
  I0704 03:59:32.056847 20 service_latency.go:356] Created: latency-svc-xxvxm
  I0704 03:59:32.074568 20 service_latency.go:363] Got endpoints: latency-svc-wqdx6 [152.513174ms]
  I0704 03:59:32.074772 20 service_latency.go:363] Got endpoints: latency-svc-bcmpf [149.957545ms]
  I0704 03:59:32.074970 20 service_latency.go:363] Got endpoints: latency-svc-fj6gf [249.807985ms]
  I0704 03:59:32.161752 20 service_latency.go:356] Created: latency-svc-kp977
  I0704 03:59:32.165293 20 service_latency.go:363] Got endpoints: latency-svc-cscf4 [342.905448ms]
  I0704 03:59:32.165385 20 service_latency.go:363] Got endpoints: latency-svc-mpcfj [342.112817ms]
  I0704 03:59:32.165682 20 service_latency.go:363] Got endpoints: latency-svc-sn762 [342.860641ms]
  I0704 03:59:32.168368 20 service_latency.go:363] Got endpoints: latency-svc-lc4hr [345.374692ms]
  I0704 03:59:32.168368 20 service_latency.go:363] Got endpoints: latency-svc-xxvxm [345.824044ms]
  I0704 03:59:32.203940 20 service_latency.go:356] Created: latency-svc-rszwb
  I0704 03:59:32.207453 20 service_latency.go:363] Got endpoints: latency-svc-jztkk [327.320078ms]
  I0704 03:59:32.252941 20 service_latency.go:356] Created: latency-svc-mfcbn
  I0704 03:59:32.253177 20 service_latency.go:363] Got endpoints: latency-svc-whgcq [361.117008ms]
  I0704 03:59:32.253332 20 service_latency.go:363] Got endpoints: latency-svc-4jwjf [390.763234ms]
  I0704 03:59:32.253506 20 service_latency.go:363] Got endpoints: latency-svc-27zsd [392.761308ms]
  I0704 03:59:32.254382 20 service_latency.go:363] Got endpoints: latency-svc-8ds8t [355.182071ms]
  I0704 03:59:32.265275 20 service_latency.go:356] Created: latency-svc-cbw54
  I0704 03:59:32.267435 20 service_latency.go:363] Got endpoints: latency-svc-mfcbn [192.681352ms]
  I0704 03:59:32.267608 20 service_latency.go:363] Got endpoints: latency-svc-9lv8v [330.139968ms]
  I0704 03:59:32.273476 20 service_latency.go:363] Got endpoints: latency-svc-rszwb [198.612746ms]
  I0704 03:59:32.273658 20 service_latency.go:363] Got endpoints: latency-svc-kp977 [257.72467ms]
  I0704 03:59:32.282921 20 service_latency.go:363] Got endpoints: latency-svc-cbw54 [207.917555ms]
  I0704 03:59:32.284210 20 service_latency.go:356] Created: latency-svc-hj9zd
  I0704 03:59:32.310515 20 service_latency.go:363] Got endpoints: latency-svc-hj9zd [144.803624ms]
  I0704 03:59:32.318150 20 service_latency.go:356] Created: latency-svc-5c9j5
  I0704 03:59:32.326504 20 service_latency.go:356] Created: latency-svc-gjjtd
  I0704 03:59:32.328299 20 service_latency.go:363] Got endpoints: latency-svc-5c9j5 [159.651906ms]
  I0704 03:59:32.335806 20 service_latency.go:356] Created: latency-svc-4ph9k
  I0704 03:59:32.340709 20 service_latency.go:363] Got endpoints: latency-svc-gjjtd [66.824244ms]
  I0704 03:59:32.347290 20 service_latency.go:363] Got endpoints: latency-svc-4ph9k [64.308431ms]
  I0704 03:59:32.415758 20 service_latency.go:356] Created: latency-svc-wmsfd
  I0704 03:59:32.422791 20 service_latency.go:356] Created: latency-svc-8dqfd
  I0704 03:59:32.423534 20 service_latency.go:356] Created: latency-svc-jm82l
  I0704 03:59:32.425946 20 service_latency.go:356] Created: latency-svc-8hx4z
  I0704 03:59:32.437815 20 service_latency.go:356] Created: latency-svc-rz8lp
  I0704 03:59:32.438184 20 service_latency.go:356] Created: latency-svc-rvx6w
  I0704 03:59:32.438310 20 service_latency.go:356] Created: latency-svc-lqj2z
  I0704 03:59:32.438391 20 service_latency.go:356] Created: latency-svc-pkkzj
  I0704 03:59:32.438590 20 service_latency.go:356] Created: latency-svc-44cf8
  I0704 03:59:32.438735 20 service_latency.go:356] Created: latency-svc-4nj6c
  I0704 03:59:32.438888 20 service_latency.go:356] Created: latency-svc-7vrwh
  I0704 03:59:32.443754 20 service_latency.go:356] Created: latency-svc-gf8ch
  I0704 03:59:32.445965 20 service_latency.go:356] Created: latency-svc-6v6qx
  I0704 03:59:32.446306 20 service_latency.go:356] Created: latency-svc-8szdz
  I0704 03:59:32.446417 20 service_latency.go:356] Created: latency-svc-fmfqr
  I0704 03:59:32.452854 20 service_latency.go:363] Got endpoints: latency-svc-wmsfd [198.43532ms]
  I0704 03:59:32.461088 20 service_latency.go:363] Got endpoints: latency-svc-8hx4z [253.453291ms]
  I0704 03:59:32.480619 20 service_latency.go:363] Got endpoints: latency-svc-rvx6w [315.271272ms]
  I0704 03:59:32.481969 20 service_latency.go:363] Got endpoints: latency-svc-lqj2z [134.456528ms]
  I0704 03:59:32.482075 20 service_latency.go:363] Got endpoints: latency-svc-7vrwh [313.569289ms]
  I0704 03:59:32.482173 20 service_latency.go:363] Got endpoints: latency-svc-8dqfd [153.708193ms]
  I0704 03:59:32.499163 20 service_latency.go:363] Got endpoints: latency-svc-rz8lp [231.478261ms]
  I0704 03:59:32.500083 20 service_latency.go:363] Got endpoints: latency-svc-44cf8 [246.483174ms]
  I0704 03:59:32.500277 20 service_latency.go:363] Got endpoints: latency-svc-pkkzj [246.859936ms]
  I0704 03:59:32.500767 20 service_latency.go:363] Got endpoints: latency-svc-4nj6c [247.447429ms]
  I0704 03:59:32.510254 20 service_latency.go:356] Created: latency-svc-nf4q2
  I0704 03:59:32.514297 20 service_latency.go:363] Got endpoints: latency-svc-jm82l [246.64026ms]
  I0704 03:59:32.518577 20 service_latency.go:356] Created: latency-svc-lcxr6
  I0704 03:59:32.522239 20 service_latency.go:356] Created: latency-svc-h6vsf
  I0704 03:59:32.568615 20 service_latency.go:356] Created: latency-svc-twg5c
  I0704 03:59:32.589640 20 service_latency.go:363] Got endpoints: latency-svc-6v6qx [278.914097ms]
  I0704 03:59:32.609202 20 service_latency.go:356] Created: latency-svc-jrs25
  I0704 03:59:32.609202 20 service_latency.go:356] Created: latency-svc-h6rsw
  I0704 03:59:32.609786 20 service_latency.go:356] Created: latency-svc-b8bz7
  I0704 03:59:32.609796 20 service_latency.go:356] Created: latency-svc-nwhx4
  I0704 03:59:32.611470 20 service_latency.go:356] Created: latency-svc-zzmz7
  I0704 03:59:32.612055 20 service_latency.go:356] Created: latency-svc-bpfwn
  I0704 03:59:32.612110 20 service_latency.go:356] Created: latency-svc-ng8kv
  I0704 03:59:32.617702 20 service_latency.go:363] Got endpoints: latency-svc-fmfqr [276.909941ms]
  I0704 03:59:32.632577 20 service_latency.go:356] Created: latency-svc-x7776
  I0704 03:59:32.638649 20 service_latency.go:356] Created: latency-svc-kmwf9
  I0704 03:59:32.661701 20 service_latency.go:363] Got endpoints: latency-svc-8szdz [388.07316ms]
  I0704 03:59:32.672961 20 service_latency.go:356] Created: latency-svc-s8pb9
  I0704 03:59:32.716666 20 service_latency.go:363] Got endpoints: latency-svc-gf8ch [551.192238ms]
  I0704 03:59:32.744909 20 service_latency.go:356] Created: latency-svc-2xt49
  I0704 03:59:32.769607 20 service_latency.go:363] Got endpoints: latency-svc-nf4q2 [316.603186ms]
  I0704 03:59:32.780112 20 service_latency.go:356] Created: latency-svc-rxx5s
  I0704 03:59:32.808353 20 service_latency.go:363] Got endpoints: latency-svc-lcxr6 [325.762029ms]
  I0704 03:59:32.829244 20 service_latency.go:356] Created: latency-svc-x6fkr
  I0704 03:59:32.860024 20 service_latency.go:363] Got endpoints: latency-svc-h6vsf [377.090505ms]
  I0704 03:59:32.877732 20 service_latency.go:356] Created: latency-svc-9xjdt
  I0704 03:59:32.912817 20 service_latency.go:363] Got endpoints: latency-svc-twg5c [413.593269ms]
  I0704 03:59:32.922320 20 service_latency.go:356] Created: latency-svc-p8kj6
  I0704 03:59:32.958177 20 service_latency.go:363] Got endpoints: latency-svc-jrs25 [475.730464ms]
  I0704 03:59:32.968409 20 service_latency.go:356] Created: latency-svc-jljpl
  I0704 03:59:33.009140 20 service_latency.go:363] Got endpoints: latency-svc-h6rsw [509.009608ms]
  I0704 03:59:33.019115 20 service_latency.go:356] Created: latency-svc-zxwb4
  I0704 03:59:33.060888 20 service_latency.go:363] Got endpoints: latency-svc-nwhx4 [560.577844ms]
  I0704 03:59:33.086672 20 service_latency.go:356] Created: latency-svc-8hlx7
  I0704 03:59:33.110545 20 service_latency.go:363] Got endpoints: latency-svc-b8bz7 [609.73366ms]
  I0704 03:59:33.118973 20 service_latency.go:356] Created: latency-svc-546bh
  I0704 03:59:33.161975 20 service_latency.go:363] Got endpoints: latency-svc-zzmz7 [647.490812ms]
  I0704 03:59:33.173328 20 service_latency.go:356] Created: latency-svc-wrh26
  I0704 03:59:33.208324 20 service_latency.go:363] Got endpoints: latency-svc-ng8kv [727.370237ms]
  I0704 03:59:33.278666 20 service_latency.go:363] Got endpoints: latency-svc-bpfwn [817.53067ms]
  I0704 03:59:33.282408 20 service_latency.go:356] Created: latency-svc-rgf8c
  I0704 03:59:33.308753 20 service_latency.go:356] Created: latency-svc-nlchj
  I0704 03:59:33.311331 20 service_latency.go:363] Got endpoints: latency-svc-x7776 [721.63111ms]
  I0704 03:59:33.321072 20 service_latency.go:356] Created: latency-svc-4dbv9
  I0704 03:59:33.360278 20 service_latency.go:363] Got endpoints: latency-svc-kmwf9 [742.528402ms]
  I0704 03:59:33.371389 20 service_latency.go:356] Created: latency-svc-hwhn5
  I0704 03:59:33.408080 20 service_latency.go:363] Got endpoints: latency-svc-s8pb9 [746.315496ms]
  I0704 03:59:33.425600 20 service_latency.go:356] Created: latency-svc-45m9j
  I0704 03:59:33.462676 20 service_latency.go:363] Got endpoints: latency-svc-2xt49 [745.944659ms]
  I0704 03:59:33.474500 20 service_latency.go:356] Created: latency-svc-kmbwz
  I0704 03:59:33.515862 20 service_latency.go:363] Got endpoints: latency-svc-rxx5s [746.196448ms]
  I0704 03:59:33.540832 20 service_latency.go:356] Created: latency-svc-kwkdr
  I0704 03:59:33.558193 20 service_latency.go:363] Got endpoints: latency-svc-x6fkr [749.778651ms]
  I0704 03:59:33.574189 20 service_latency.go:356] Created: latency-svc-rlv8m
  I0704 03:59:33.616522 20 service_latency.go:363] Got endpoints: latency-svc-9xjdt [756.270164ms]
  I0704 03:59:33.632306 20 service_latency.go:356] Created: latency-svc-xpskl
  I0704 03:59:33.659153 20 service_latency.go:363] Got endpoints: latency-svc-p8kj6 [745.944065ms]
  I0704 03:59:33.670591 20 service_latency.go:356] Created: latency-svc-hr84z
  I0704 03:59:33.709611 20 service_latency.go:363] Got endpoints: latency-svc-jljpl [751.305657ms]
  I0704 03:59:33.722175 20 service_latency.go:356] Created: latency-svc-sxqdp
  I0704 03:59:33.761688 20 service_latency.go:363] Got endpoints: latency-svc-zxwb4 [752.4977ms]
  I0704 03:59:33.771062 20 service_latency.go:356] Created: latency-svc-22t9r
  I0704 03:59:33.814887 20 service_latency.go:363] Got endpoints: latency-svc-8hlx7 [753.937876ms]
  I0704 03:59:33.827335 20 service_latency.go:356] Created: latency-svc-6ffvg
  I0704 03:59:33.860543 20 service_latency.go:363] Got endpoints: latency-svc-546bh [749.936565ms]
  I0704 03:59:33.869336 20 service_latency.go:356] Created: latency-svc-nfzjf
  I0704 03:59:33.914760 20 service_latency.go:363] Got endpoints: latency-svc-wrh26 [752.725782ms]
  I0704 03:59:33.937407 20 service_latency.go:356] Created: latency-svc-n8t6r
  I0704 03:59:33.962664 20 service_latency.go:363] Got endpoints: latency-svc-rgf8c [754.286877ms]
  I0704 03:59:34.013382 20 service_latency.go:356] Created: latency-svc-lfklr
  I0704 03:59:34.025927 20 service_latency.go:363] Got endpoints: latency-svc-nlchj [747.202586ms]
  I0704 03:59:34.076291 20 service_latency.go:363] Got endpoints: latency-svc-4dbv9 [764.901286ms]
  I0704 03:59:34.091413 20 service_latency.go:356] Created: latency-svc-xks8f
  I0704 03:59:34.100199 20 service_latency.go:356] Created: latency-svc-75xd2
  I0704 03:59:34.110074 20 service_latency.go:363] Got endpoints: latency-svc-hwhn5 [749.733515ms]
  I0704 03:59:34.125868 20 service_latency.go:356] Created: latency-svc-mw2n4
  I0704 03:59:34.165526 20 service_latency.go:363] Got endpoints: latency-svc-45m9j [757.388729ms]
  I0704 03:59:34.189001 20 service_latency.go:356] Created: latency-svc-s6l5n
  I0704 03:59:34.209845 20 service_latency.go:363] Got endpoints: latency-svc-kmbwz [747.125106ms]
  I0704 03:59:34.226652 20 service_latency.go:356] Created: latency-svc-lqccr
  I0704 03:59:34.263133 20 service_latency.go:363] Got endpoints: latency-svc-kwkdr [747.156752ms]
  I0704 03:59:34.284145 20 service_latency.go:356] Created: latency-svc-wm4pc
  I0704 03:59:34.308999 20 service_latency.go:363] Got endpoints: latency-svc-rlv8m [750.753453ms]
  I0704 03:59:34.333589 20 service_latency.go:356] Created: latency-svc-6h6t8
  I0704 03:59:34.362581 20 service_latency.go:363] Got endpoints: latency-svc-xpskl [745.229794ms]
  I0704 03:59:34.379870 20 service_latency.go:356] Created: latency-svc-wf962
  I0704 03:59:34.409499 20 service_latency.go:363] Got endpoints: latency-svc-hr84z [750.28028ms]
  I0704 03:59:34.422115 20 service_latency.go:356] Created: latency-svc-px2ng
  I0704 03:59:34.467292 20 service_latency.go:363] Got endpoints: latency-svc-sxqdp [757.453277ms]
  I0704 03:59:34.478221 20 service_latency.go:356] Created: latency-svc-p5tl8
  I0704 03:59:34.509907 20 service_latency.go:363] Got endpoints: latency-svc-22t9r [748.157999ms]
  I0704 03:59:34.524956 20 service_latency.go:356] Created: latency-svc-dp4q4
  I0704 03:59:34.561115 20 service_latency.go:363] Got endpoints: latency-svc-6ffvg [745.660233ms]
  I0704 03:59:34.577110 20 service_latency.go:356] Created: latency-svc-2f2j7
  I0704 03:59:34.615437 20 service_latency.go:363] Got endpoints: latency-svc-nfzjf [754.839079ms]
  I0704 03:59:34.627867 20 service_latency.go:356] Created: latency-svc-2rcsz
  I0704 03:59:34.663830 20 service_latency.go:363] Got endpoints: latency-svc-n8t6r [748.852815ms]
  I0704 03:59:34.680778 20 service_latency.go:356] Created: latency-svc-kcmgt
  I0704 03:59:34.713906 20 service_latency.go:363] Got endpoints: latency-svc-lfklr [750.688849ms]
  I0704 03:59:34.725372 20 service_latency.go:356] Created: latency-svc-79kcz
  I0704 03:59:34.765686 20 service_latency.go:363] Got endpoints: latency-svc-xks8f [738.765805ms]
  I0704 03:59:34.780888 20 service_latency.go:356] Created: latency-svc-t7sk2
  I0704 03:59:34.819307 20 service_latency.go:363] Got endpoints: latency-svc-75xd2 [736.88341ms]
  I0704 03:59:34.841028 20 service_latency.go:356] Created: latency-svc-pwgm6
  I0704 03:59:34.866167 20 service_latency.go:363] Got endpoints: latency-svc-mw2n4 [756.028855ms]
  I0704 03:59:34.878770 20 service_latency.go:356] Created: latency-svc-jnvzg
  I0704 03:59:34.914775 20 service_latency.go:363] Got endpoints: latency-svc-s6l5n [749.18803ms]
  I0704 03:59:34.932721 20 service_latency.go:356] Created: latency-svc-gbvlq
  I0704 03:59:34.965603 20 service_latency.go:363] Got endpoints: latency-svc-lqccr [755.696202ms]
  I0704 03:59:34.981682 20 service_latency.go:356] Created: latency-svc-p4wcm
  I0704 03:59:35.012225 20 service_latency.go:363] Got endpoints: latency-svc-wm4pc [749.032307ms]
  I0704 03:59:35.021769 20 service_latency.go:356] Created: latency-svc-rqdgm
  I0704 03:59:35.059884 20 service_latency.go:363] Got endpoints: latency-svc-6h6t8 [750.834894ms]
  I0704 03:59:35.077793 20 service_latency.go:356] Created: latency-svc-gzk65
  I0704 03:59:35.111787 20 service_latency.go:363] Got endpoints: latency-svc-wf962 [749.144076ms]
  I0704 03:59:35.123160 20 service_latency.go:356] Created: latency-svc-vlmqm
  I0704 03:59:35.160976 20 service_latency.go:363] Got endpoints: latency-svc-px2ng [751.421136ms]
  I0704 03:59:35.177886 20 service_latency.go:356] Created: latency-svc-68mv8
  I0704 03:59:35.224074 20 service_latency.go:363] Got endpoints: latency-svc-p5tl8 [756.720361ms]
  I0704 03:59:35.252062 20 service_latency.go:356] Created: latency-svc-s8rdl
  I0704 03:59:35.261045 20 service_latency.go:363] Got endpoints: latency-svc-dp4q4 [751.079608ms]
  I0704 03:59:35.276064 20 service_latency.go:356] Created: latency-svc-mkmlr
  I0704 03:59:35.312024 20 service_latency.go:363] Got endpoints: latency-svc-2f2j7 [750.858303ms]
  I0704 03:59:35.324645 20 service_latency.go:356] Created: latency-svc-849w6
  I0704 03:59:35.372873 20 service_latency.go:363] Got endpoints: latency-svc-2rcsz [757.368587ms]
  I0704 03:59:35.385155 20 service_latency.go:356] Created: latency-svc-8gz55
  I0704 03:59:35.412593 20 service_latency.go:363] Got endpoints: latency-svc-kcmgt [748.699483ms]
  I0704 03:59:35.424995 20 service_latency.go:356] Created: latency-svc-htmc8
  I0704 03:59:35.467593 20 service_latency.go:363] Got endpoints: latency-svc-79kcz [753.622024ms]
  I0704 03:59:35.477009 20 service_latency.go:356] Created: latency-svc-jv84m
  I0704 03:59:35.515738 20 service_latency.go:363] Got endpoints: latency-svc-t7sk2 [749.987117ms]
  I0704 03:59:35.579306 20 service_latency.go:363] Got endpoints: latency-svc-pwgm6 [759.944368ms]
  I0704 03:59:35.583559 20 service_latency.go:356] Created: latency-svc-pwj4n
  I0704 03:59:35.595856 20 service_latency.go:356] Created: latency-svc-pzvk5
  I0704 03:59:35.611962 20 service_latency.go:363] Got endpoints: latency-svc-jnvzg [745.738229ms]
  I0704 03:59:35.636252 20 service_latency.go:356] Created: latency-svc-vj7jb
  I0704 03:59:35.671057 20 service_latency.go:363] Got endpoints: latency-svc-gbvlq [754.277859ms]
  I0704 03:59:35.683346 20 service_latency.go:356] Created: latency-svc-w87z9
  I0704 03:59:35.712154 20 service_latency.go:363] Got endpoints: latency-svc-p4wcm [746.485503ms]
  I0704 03:59:35.726188 20 service_latency.go:356] Created: latency-svc-pzqld
  I0704 03:59:35.760669 20 service_latency.go:363] Got endpoints: latency-svc-rqdgm [748.389775ms]
  I0704 03:59:35.772104 20 service_latency.go:356] Created: latency-svc-pd7vl
  I0704 03:59:35.811253 20 service_latency.go:363] Got endpoints: latency-svc-gzk65 [751.302365ms]
  I0704 03:59:35.828669 20 service_latency.go:356] Created: latency-svc-b7thk
  I0704 03:59:35.860150 20 service_latency.go:363] Got endpoints: latency-svc-vlmqm [748.246483ms]
  I0704 03:59:35.871995 20 service_latency.go:356] Created: latency-svc-twtmh
  I0704 03:59:35.913951 20 service_latency.go:363] Got endpoints: latency-svc-68mv8 [752.92157ms]
  I0704 03:59:35.928010 20 service_latency.go:356] Created: latency-svc-jnl57
  I0704 03:59:35.962071 20 service_latency.go:363] Got endpoints: latency-svc-s8rdl [737.716668ms]
  I0704 03:59:35.972348 20 service_latency.go:356] Created: latency-svc-wb68d
  I0704 03:59:36.012634 20 service_latency.go:363] Got endpoints: latency-svc-mkmlr [751.527507ms]
  I0704 03:59:36.024449 20 service_latency.go:356] Created: latency-svc-l9kzs
  I0704 03:59:36.060520 20 service_latency.go:363] Got endpoints: latency-svc-849w6 [747.623837ms]
  I0704 03:59:36.072495 20 service_latency.go:356] Created: latency-svc-ls5d8
  I0704 03:59:36.110763 20 service_latency.go:363] Got endpoints: latency-svc-8gz55 [737.428481ms]
  I0704 03:59:36.122587 20 service_latency.go:356] Created: latency-svc-7s6g8
  I0704 03:59:36.165357 20 service_latency.go:363] Got endpoints: latency-svc-htmc8 [752.706262ms]
  I0704 03:59:36.180083 20 service_latency.go:356] Created: latency-svc-bxsbd
  I0704 03:59:36.211373 20 service_latency.go:363] Got endpoints: latency-svc-jv84m [743.724618ms]
  I0704 03:59:36.220641 20 service_latency.go:356] Created: latency-svc-7fhcc
  I0704 03:59:36.258291 20 service_latency.go:363] Got endpoints: latency-svc-pwj4n [742.496279ms]
  I0704 03:59:36.272450 20 service_latency.go:356] Created: latency-svc-n98s8
  I0704 03:59:36.312938 20 service_latency.go:363] Got endpoints: latency-svc-pzvk5 [733.393843ms]
  I0704 03:59:36.323757 20 service_latency.go:356] Created: latency-svc-mlgfm
  I0704 03:59:36.362494 20 service_latency.go:363] Got endpoints: latency-svc-vj7jb [750.311054ms]
  I0704 03:59:36.373833 20 service_latency.go:356] Created: latency-svc-t7j8q
  I0704 03:59:36.409645 20 service_latency.go:363] Got endpoints: latency-svc-w87z9 [738.536532ms]
  I0704 03:59:36.424006 20 service_latency.go:356] Created: latency-svc-k487l
  I0704 03:59:36.458168 20 service_latency.go:363] Got endpoints: latency-svc-pzqld [745.918748ms]
  I0704 03:59:36.470053 20 service_latency.go:356] Created: latency-svc-8wkmm
  I0704 03:59:36.512363 20 service_latency.go:363] Got endpoints: latency-svc-pd7vl [751.644369ms]
  I0704 03:59:36.528881 20 service_latency.go:356] Created: latency-svc-gxt45
  I0704 03:59:36.560846 20 service_latency.go:363] Got endpoints: latency-svc-b7thk [749.314846ms]
  I0704 03:59:36.571670 20 service_latency.go:356] Created: latency-svc-hz796
  I0704 03:59:36.612497 20 service_latency.go:363] Got endpoints: latency-svc-twtmh [752.297986ms]
  I0704 03:59:36.623726 20 service_latency.go:356] Created: latency-svc-ppxxv
  I0704 03:59:36.664988 20 service_latency.go:363] Got endpoints: latency-svc-jnl57 [750.974917ms]
  I0704 03:59:36.688552 20 service_latency.go:356] Created: latency-svc-l4vzz
  I0704 03:59:36.709403 20 service_latency.go:363] Got endpoints: latency-svc-wb68d [747.275073ms]
  I0704 03:59:36.724432 20 service_latency.go:356] Created: latency-svc-xnbmv
  I0704 03:59:36.760119 20 service_latency.go:363] Got endpoints: latency-svc-l9kzs [747.428134ms]
  I0704 03:59:36.781428 20 service_latency.go:356] Created: latency-svc-8wpqm
  I0704 03:59:36.818812 20 service_latency.go:363] Got endpoints: latency-svc-ls5d8 [757.583448ms]
  I0704 03:59:36.830545 20 service_latency.go:356] Created: latency-svc-nkqkr
  I0704 03:59:36.858741 20 service_latency.go:363] Got endpoints: latency-svc-7s6g8 [747.929805ms]
  I0704 03:59:36.870844 20 service_latency.go:356] Created: latency-svc-czc4j
  I0704 03:59:36.929081 20 service_latency.go:363] Got endpoints: latency-svc-bxsbd [763.650894ms]
  I0704 03:59:36.961337 20 service_latency.go:363] Got endpoints: latency-svc-7fhcc [749.678124ms]
  I0704 03:59:36.964617 20 service_latency.go:356] Created: latency-svc-zsxwl
  I0704 03:59:36.972181 20 service_latency.go:356] Created: latency-svc-wvtbf
  I0704 03:59:37.008831 20 service_latency.go:363] Got endpoints: latency-svc-n98s8 [750.476655ms]
  I0704 03:59:37.029622 20 service_latency.go:356] Created: latency-svc-pxzs6
  I0704 03:59:37.061864 20 service_latency.go:363] Got endpoints: latency-svc-mlgfm [748.869581ms]
  I0704 03:59:37.072318 20 service_latency.go:356] Created: latency-svc-6h8f9
  I0704 03:59:37.122300 20 service_latency.go:363] Got endpoints: latency-svc-t7j8q [759.745103ms]
  I0704 03:59:37.145458 20 service_latency.go:356] Created: latency-svc-cfdzp
  I0704 03:59:37.161277 20 service_latency.go:363] Got endpoints: latency-svc-k487l [751.369083ms]
  I0704 03:59:37.170054 20 service_latency.go:356] Created: latency-svc-gfl47
  I0704 03:59:37.210305 20 service_latency.go:363] Got endpoints: latency-svc-8wkmm [751.994032ms]
  I0704 03:59:37.223285 20 service_latency.go:356] Created: latency-svc-gljfg
  I0704 03:59:37.266538 20 service_latency.go:363] Got endpoints: latency-svc-gxt45 [754.118289ms]
  I0704 03:59:37.282451 20 service_latency.go:356] Created: latency-svc-562ls
  I0704 03:59:37.312688 20 service_latency.go:363] Got endpoints: latency-svc-hz796 [751.786433ms]
  I0704 03:59:37.321375 20 service_latency.go:356] Created: latency-svc-9zrz4
  I0704 03:59:37.360143 20 service_latency.go:363] Got endpoints: latency-svc-ppxxv [747.58973ms]
  I0704 03:59:37.374495 20 service_latency.go:356] Created: latency-svc-w6wc9
  I0704 03:59:37.409777 20 service_latency.go:363] Got endpoints: latency-svc-l4vzz [744.662451ms]
  I0704 03:59:37.430704 20 service_latency.go:356] Created: latency-svc-tdpcf
  I0704 03:59:37.459730 20 service_latency.go:363] Got endpoints: latency-svc-xnbmv [749.26611ms]
  I0704 03:59:37.471180 20 service_latency.go:356] Created: latency-svc-d2ccg
  I0704 03:59:37.512108 20 service_latency.go:363] Got endpoints: latency-svc-8wpqm [751.930551ms]
  I0704 03:59:37.521631 20 service_latency.go:356] Created: latency-svc-pb9wr
  I0704 03:59:37.563948 20 service_latency.go:363] Got endpoints: latency-svc-nkqkr [744.890334ms]
  I0704 03:59:37.573073 20 service_latency.go:356] Created: latency-svc-rps75
  I0704 03:59:37.607809 20 service_latency.go:363] Got endpoints: latency-svc-czc4j [749.016229ms]
  I0704 03:59:37.623298 20 service_latency.go:356] Created: latency-svc-znhcl
  I0704 03:59:37.660552 20 service_latency.go:363] Got endpoints: latency-svc-zsxwl [731.410746ms]
  I0704 03:59:37.669932 20 service_latency.go:356] Created: latency-svc-l89jv
  I0704 03:59:37.709962 20 service_latency.go:363] Got endpoints: latency-svc-wvtbf [748.562329ms]
  I0704 03:59:37.719798 20 service_latency.go:356] Created: latency-svc-pbvkf
  I0704 03:59:37.761850 20 service_latency.go:363] Got endpoints: latency-svc-pxzs6 [752.401743ms]
  I0704 03:59:37.775561 20 service_latency.go:356] Created: latency-svc-zwbvg
  I0704 03:59:37.871704 20 service_latency.go:363] Got endpoints: latency-svc-6h8f9 [809.779508ms]
  I0704 03:59:37.885935 20 service_latency.go:363] Got endpoints: latency-svc-cfdzp [763.52435ms]
  I0704 03:59:37.891273 20 service_latency.go:356] Created: latency-svc-8vwmn
  I0704 03:59:37.899145 20 service_latency.go:356] Created: latency-svc-hx44k
  I0704 03:59:37.907942 20 service_latency.go:363] Got endpoints: latency-svc-gfl47 [746.614103ms]
  I0704 03:59:37.918796 20 service_latency.go:356] Created: latency-svc-r89lm
  I0704 03:59:37.959833 20 service_latency.go:363] Got endpoints: latency-svc-gljfg [749.462558ms]
  I0704 03:59:37.968345 20 service_latency.go:356] Created: latency-svc-txtmr
  I0704 03:59:38.008150 20 service_latency.go:363] Got endpoints: latency-svc-562ls [741.547906ms]
  I0704 03:59:38.019915 20 service_latency.go:356] Created: latency-svc-4kmzk
  I0704 03:59:38.061332 20 service_latency.go:363] Got endpoints: latency-svc-9zrz4 [748.581179ms]
  I0704 03:59:38.070538 20 service_latency.go:356] Created: latency-svc-cpdvc
  I0704 03:59:38.108589 20 service_latency.go:363] Got endpoints: latency-svc-w6wc9 [748.326329ms]
  I0704 03:59:38.121244 20 service_latency.go:356] Created: latency-svc-hrvfv
  I0704 03:59:38.160680 20 service_latency.go:363] Got endpoints: latency-svc-tdpcf [750.83631ms]
  I0704 03:59:38.188469 20 service_latency.go:356] Created: latency-svc-wxn8j
  I0704 03:59:38.211820 20 service_latency.go:363] Got endpoints: latency-svc-d2ccg [752.028301ms]
  I0704 03:59:38.224750 20 service_latency.go:356] Created: latency-svc-q26nj
  I0704 03:59:38.267882 20 service_latency.go:363] Got endpoints: latency-svc-pb9wr [755.716957ms]
  I0704 03:59:38.280303 20 service_latency.go:356] Created: latency-svc-7tdfs
  I0704 03:59:38.313943 20 service_latency.go:363] Got endpoints: latency-svc-rps75 [749.941022ms]
  I0704 03:59:38.326356 20 service_latency.go:356] Created: latency-svc-t6bg6
  I0704 03:59:38.359877 20 service_latency.go:363] Got endpoints: latency-svc-znhcl [752.010735ms]
  I0704 03:59:38.383810 20 service_latency.go:356] Created: latency-svc-977qs
  I0704 03:59:38.408571 20 service_latency.go:363] Got endpoints: latency-svc-l89jv [747.97115ms]
  I0704 03:59:38.420074 20 service_latency.go:356] Created: latency-svc-swkh2
  I0704 03:59:38.461237 20 service_latency.go:363] Got endpoints: latency-svc-pbvkf [751.224437ms]
  I0704 03:59:38.471138 20 service_latency.go:356] Created: latency-svc-kjld6
  I0704 03:59:38.508797 20 service_latency.go:363] Got endpoints: latency-svc-zwbvg [746.884477ms]
  I0704 03:59:38.524958 20 service_latency.go:356] Created: latency-svc-x6xnf
  I0704 03:59:38.566588 20 service_latency.go:363] Got endpoints: latency-svc-8vwmn [694.379569ms]
  I0704 03:59:38.578710 20 service_latency.go:356] Created: latency-svc-bxd7f
  I0704 03:59:38.612901 20 service_latency.go:363] Got endpoints: latency-svc-hx44k [726.907289ms]
  I0704 03:59:38.625049 20 service_latency.go:356] Created: latency-svc-8n2sm
  I0704 03:59:38.660812 20 service_latency.go:363] Got endpoints: latency-svc-r89lm [752.268879ms]
  I0704 03:59:38.673924 20 service_latency.go:356] Created: latency-svc-4dx88
  I0704 03:59:38.717612 20 service_latency.go:363] Got endpoints: latency-svc-txtmr [757.726919ms]
  I0704 03:59:38.729640 20 service_latency.go:356] Created: latency-svc-v8x69
  I0704 03:59:38.760361 20 service_latency.go:363] Got endpoints: latency-svc-4kmzk [751.362087ms]
  I0704 03:59:38.770479 20 service_latency.go:356] Created: latency-svc-nt7v7
  I0704 03:59:38.810067 20 service_latency.go:363] Got endpoints: latency-svc-cpdvc [748.680353ms]
  I0704 03:59:38.829574 20 service_latency.go:356] Created: latency-svc-zzq9r
  I0704 03:59:38.860895 20 service_latency.go:363] Got endpoints: latency-svc-hrvfv [751.810464ms]
  I0704 03:59:38.877217 20 service_latency.go:356] Created: latency-svc-558zk
  I0704 03:59:38.912452 20 service_latency.go:363] Got endpoints: latency-svc-wxn8j [742.146246ms]
  I0704 03:59:38.923233 20 service_latency.go:356] Created: latency-svc-mnkdt
  I0704 03:59:38.973600 20 service_latency.go:363] Got endpoints: latency-svc-q26nj [761.727995ms]
  I0704 03:59:38.999983 20 service_latency.go:356] Created: latency-svc-dnkxv
  I0704 03:59:39.017882 20 service_latency.go:363] Got endpoints: latency-svc-7tdfs [749.191911ms]
  I0704 03:59:39.033457 20 service_latency.go:356] Created: latency-svc-x2s69
  I0704 03:59:39.061187 20 service_latency.go:363] Got endpoints: latency-svc-t6bg6 [747.180697ms]
  I0704 03:59:39.072376 20 service_latency.go:356] Created: latency-svc-xlkg6
  I0704 03:59:39.110468 20 service_latency.go:363] Got endpoints: latency-svc-977qs [750.521804ms]
  I0704 03:59:39.122497 20 service_latency.go:356] Created: latency-svc-bmn6b
  I0704 03:59:39.168397 20 service_latency.go:363] Got endpoints: latency-svc-swkh2 [759.561353ms]
  I0704 03:59:39.185071 20 service_latency.go:356] Created: latency-svc-hphps
  I0704 03:59:39.210917 20 service_latency.go:363] Got endpoints: latency-svc-kjld6 [749.619538ms]
  I0704 03:59:39.237073 20 service_latency.go:356] Created: latency-svc-852kp
  I0704 03:59:39.262874 20 service_latency.go:363] Got endpoints: latency-svc-x6xnf [753.768537ms]
  I0704 03:59:39.287277 20 service_latency.go:356] Created: latency-svc-7jvns
  I0704 03:59:39.309214 20 service_latency.go:363] Got endpoints: latency-svc-bxd7f [742.574397ms]
  I0704 03:59:39.322428 20 service_latency.go:356] Created: latency-svc-b999t
  I0704 03:59:39.362513 20 service_latency.go:363] Got endpoints: latency-svc-8n2sm [749.556495ms]
  I0704 03:59:39.372783 20 service_latency.go:356] Created: latency-svc-tfpkr
  I0704 03:59:39.411248 20 service_latency.go:363] Got endpoints: latency-svc-4dx88 [750.29671ms]
  I0704 03:59:39.427841 20 service_latency.go:356] Created: latency-svc-pk2qk
  I0704 03:59:39.461508 20 service_latency.go:363] Got endpoints: latency-svc-v8x69 [743.840932ms]
  I0704 03:59:39.486339 20 service_latency.go:356] Created: latency-svc-cbzrd
  I0704 03:59:39.510317 20 service_latency.go:363] Got endpoints: latency-svc-nt7v7 [749.903316ms]
  I0704 03:59:39.525512 20 service_latency.go:356] Created: latency-svc-gvgww
  I0704 03:59:39.562264 20 service_latency.go:363] Got endpoints: latency-svc-zzq9r [751.744162ms]
  I0704 03:59:39.593431 20 service_latency.go:356] Created: latency-svc-dqdj6
  I0704 03:59:39.610813 20 service_latency.go:363] Got endpoints: latency-svc-558zk [747.778936ms]
  I0704 03:59:39.621428 20 service_latency.go:356] Created: latency-svc-h4dgx
  I0704 03:59:39.659789 20 service_latency.go:363] Got endpoints: latency-svc-mnkdt [747.286086ms]
  I0704 03:59:39.714711 20 service_latency.go:363] Got endpoints: latency-svc-dnkxv [741.053014ms]
  I0704 03:59:39.765069 20 service_latency.go:363] Got endpoints: latency-svc-x2s69 [747.125201ms]
  I0704 03:59:39.811556 20 service_latency.go:363] Got endpoints: latency-svc-xlkg6 [750.315375ms]
  I0704 03:59:39.864832 20 service_latency.go:363] Got endpoints: latency-svc-bmn6b [754.307226ms]
  I0704 03:59:39.911156 20 service_latency.go:363] Got endpoints: latency-svc-hphps [742.700237ms]
  I0704 03:59:39.964435 20 service_latency.go:363] Got endpoints: latency-svc-852kp [753.467713ms]
  I0704 03:59:40.014982 20 service_latency.go:363] Got endpoints: latency-svc-7jvns [752.049526ms]
  I0704 03:59:40.062606 20 service_latency.go:363] Got endpoints: latency-svc-b999t [753.331703ms]
  I0704 03:59:40.113395 20 service_latency.go:363] Got endpoints: latency-svc-tfpkr [750.826274ms]
  I0704 03:59:40.161557 20 service_latency.go:363] Got endpoints: latency-svc-pk2qk [750.253142ms]
  I0704 03:59:40.217125 20 service_latency.go:363] Got endpoints: latency-svc-cbzrd [755.563135ms]
  I0704 03:59:40.261749 20 service_latency.go:363] Got endpoints: latency-svc-gvgww [751.37397ms]
  I0704 03:59:40.318854 20 service_latency.go:363] Got endpoints: latency-svc-dqdj6 [756.519954ms]
  I0704 03:59:40.362271 20 service_latency.go:363] Got endpoints: latency-svc-h4dgx [751.391634ms]
  I0704 03:59:40.363043 20 service_latency.go:114] Latencies: [40.036547ms 41.048228ms 58.520953ms 63.680177ms 64.308431ms 66.824244ms 78.258471ms 95.312145ms 97.509267ms 99.169134ms 102.238173ms 114.010241ms 134.456528ms 144.803624ms 149.957545ms 152.513174ms 153.708193ms 159.651906ms 192.681352ms 198.43532ms 198.612746ms 207.917555ms 231.478261ms 246.483174ms 246.64026ms 246.859936ms 247.447429ms 249.807985ms 253.453291ms 257.72467ms 276.909941ms 278.914097ms 313.569289ms 315.271272ms 316.603186ms 325.762029ms 327.320078ms 330.139968ms 342.112817ms 342.860641ms 342.905448ms 345.374692ms 345.824044ms 355.182071ms 361.117008ms 377.090505ms 388.07316ms 390.763234ms 392.761308ms 413.593269ms 475.730464ms 509.009608ms 551.192238ms 560.577844ms 609.73366ms 647.490812ms 694.379569ms 721.63111ms 726.907289ms 727.370237ms 731.410746ms 733.393843ms 736.88341ms 737.428481ms 737.716668ms 738.536532ms 738.765805ms 741.053014ms 741.547906ms 742.146246ms 742.496279ms 742.528402ms 742.574397ms 742.700237ms 743.724618ms 743.840932ms 744.662451ms 744.890334ms 745.229794ms 745.660233ms 745.738229ms 745.918748ms 745.944065ms 745.944659ms 746.196448ms 746.315496ms 746.485503ms 746.614103ms 746.884477ms 747.125106ms 747.125201ms 747.156752ms 747.180697ms 747.202586ms 747.275073ms 747.286086ms 747.428134ms 747.58973ms 747.623837ms 747.778936ms 747.929805ms 747.97115ms 748.157999ms 748.246483ms 748.326329ms 748.389775ms 748.562329ms 748.581179ms 748.680353ms 748.699483ms 748.852815ms 748.869581ms 749.016229ms 749.032307ms 749.144076ms 749.18803ms 749.191911ms 749.26611ms 749.314846ms 749.462558ms 749.556495ms 749.619538ms 749.678124ms 749.733515ms 749.778651ms 749.903316ms 749.936565ms 749.941022ms 749.987117ms 750.253142ms 750.28028ms 750.29671ms 750.311054ms 750.315375ms 750.476655ms 750.521804ms 750.688849ms 750.753453ms 750.826274ms 750.834894ms 750.83631ms 750.858303ms 750.974917ms 751.079608ms 751.224437ms 751.302365ms 751.305657ms 751.362087ms 751.369083ms 751.37397ms 751.391634ms 751.421136ms 751.527507ms 751.644369ms 751.744162ms 751.786433ms 751.810464ms 751.930551ms 751.994032ms 752.010735ms 752.028301ms 752.049526ms 752.268879ms 752.297986ms 752.401743ms 752.4977ms 752.706262ms 752.725782ms 752.92157ms 753.331703ms 753.467713ms 753.622024ms 753.768537ms 753.937876ms 754.118289ms 754.277859ms 754.286877ms 754.307226ms 754.839079ms 755.563135ms 755.696202ms 755.716957ms 756.028855ms 756.270164ms 756.519954ms 756.720361ms 757.368587ms 757.388729ms 757.453277ms 757.583448ms 757.726919ms 759.561353ms 759.745103ms 759.944368ms 761.727995ms 763.52435ms 763.650894ms 764.901286ms 809.779508ms 817.53067ms]
  I0704 03:59:40.363212 20 service_latency.go:118] 50 %ile: 747.929805ms
  I0704 03:59:40.363298 20 service_latency.go:119] 90 %ile: 755.696202ms
  I0704 03:59:40.363402 20 service_latency.go:120] 99 %ile: 809.779508ms
  I0704 03:59:40.363545 20 service_latency.go:121] Total sample count: 200
  I0704 03:59:40.364283 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-8052" for this suite. @ 07/04/24 03:59:40.371
â€¢ [10.775 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 07/04/24 03:59:40.381
  I0704 03:59:40.381221 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename webhook @ 07/04/24 03:59:40.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:59:40.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:59:40.402
  STEP: Setting up server cert @ 07/04/24 03:59:40.433
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/04/24 03:59:41.138
  STEP: Deploying the webhook pod @ 07/04/24 03:59:41.146
  STEP: Wait for the deployment to be ready @ 07/04/24 03:59:41.162
  I0704 03:59:41.174033 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0704 03:59:43.191576 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 4, 3, 59, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 59, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 3, 59, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 3, 59, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 07/04/24 03:59:45.196
  STEP: Verifying the service has paired with the endpoint @ 07/04/24 03:59:45.214
  I0704 03:59:46.215039 20 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/04/24 03:59:46.226
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/04/24 03:59:46.274
  STEP: Creating a dummy validating-webhook-configuration object @ 07/04/24 03:59:46.294
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 07/04/24 03:59:46.311
  STEP: Creating a dummy mutating-webhook-configuration object @ 07/04/24 03:59:46.317
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 07/04/24 03:59:46.332
  I0704 03:59:46.422638 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8660" for this suite. @ 07/04/24 03:59:46.432
  STEP: Destroying namespace "webhook-markers-7799" for this suite. @ 07/04/24 03:59:46.443
â€¢ [6.070 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 07/04/24 03:59:46.452
  I0704 03:59:46.452376 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename downward-api @ 07/04/24 03:59:46.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:59:46.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:59:46.486
  STEP: Creating a pod to test downward api env vars @ 07/04/24 03:59:46.491
  STEP: Saw pod success @ 07/04/24 03:59:50.529
  I0704 03:59:50.561343 20 output.go:196] Trying to get logs from node 3.142.51.114 pod downward-api-fe62cb26-7339-462a-a43d-397b19934005 container dapi-container: <nil>
  STEP: delete the pod @ 07/04/24 03:59:50.572
  I0704 03:59:50.596693 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6598" for this suite. @ 07/04/24 03:59:50.604
â€¢ [4.161 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:420
  STEP: Creating a kubernetes client @ 07/04/24 03:59:50.612
  I0704 03:59:50.612653 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename job @ 07/04/24 03:59:50.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 03:59:50.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 03:59:50.7
  STEP: Creating Indexed job @ 07/04/24 03:59:50.708
  STEP: Ensuring job reaches completions @ 07/04/24 03:59:50.715
  STEP: Ensuring pods with index for job exist @ 07/04/24 04:00:00.718
  I0704 04:00:00.721976 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7326" for this suite. @ 07/04/24 04:00:00.726
â€¢ [10.121 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 07/04/24 04:00:00.733
  I0704 04:00:00.733737 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 04:00:00.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:00:00.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:00:00.755
  STEP: Creating configMap with name projected-configmap-test-volume-map-4d8e29ad-111d-48fe-a4ca-62dc9f5ce42a @ 07/04/24 04:00:00.758
  STEP: Creating a pod to test consume configMaps @ 07/04/24 04:00:00.762
  STEP: Saw pod success @ 07/04/24 04:00:04.787
  I0704 04:00:04.792394 20 output.go:196] Trying to get logs from node 3.142.51.114 pod pod-projected-configmaps-601f30a7-bea2-4770-8f8c-139066b568bc container agnhost-container: <nil>
  STEP: delete the pod @ 07/04/24 04:00:04.8
  I0704 04:00:04.815622 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5273" for this suite. @ 07/04/24 04:00:04.825
â€¢ [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 07/04/24 04:00:04.838
  I0704 04:00:04.838219 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename downward-api @ 07/04/24 04:00:04.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:00:04.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:00:04.866
  STEP: Creating a pod to test downward API volume plugin @ 07/04/24 04:00:04.869
  STEP: Saw pod success @ 07/04/24 04:00:08.89
  I0704 04:00:08.893845 20 output.go:196] Trying to get logs from node 18.191.27.132 pod downwardapi-volume-b4d35c54-e593-4041-baea-22461dc35ea4 container client-container: <nil>
  STEP: delete the pod @ 07/04/24 04:00:08.901
  I0704 04:00:08.919770 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8979" for this suite. @ 07/04/24 04:00:08.928
â€¢ [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 07/04/24 04:00:08.936
  I0704 04:00:08.936845 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename configmap @ 07/04/24 04:00:08.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:00:08.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:00:08.966
  STEP: Creating configMap with name configmap-test-volume-bcadd2dc-5697-407a-bcda-c65f587dbf6e @ 07/04/24 04:00:08.976
  STEP: Creating a pod to test consume configMaps @ 07/04/24 04:00:08.99
  STEP: Saw pod success @ 07/04/24 04:00:13.034
  I0704 04:00:13.038783 20 output.go:196] Trying to get logs from node 18.191.27.132 pod pod-configmaps-02881e54-a167-43fe-8f5e-f20e5d2bbc41 container agnhost-container: <nil>
  STEP: delete the pod @ 07/04/24 04:00:13.048
  I0704 04:00:13.069453 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5764" for this suite. @ 07/04/24 04:00:13.074
â€¢ [4.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 07/04/24 04:00:13.084
  I0704 04:00:13.084591 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename svcaccounts @ 07/04/24 04:00:13.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:00:13.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:00:13.131
  STEP: creating a ServiceAccount @ 07/04/24 04:00:13.139
  STEP: watching for the ServiceAccount to be added @ 07/04/24 04:00:13.155
  STEP: patching the ServiceAccount @ 07/04/24 04:00:13.162
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 07/04/24 04:00:13.178
  STEP: deleting the ServiceAccount @ 07/04/24 04:00:13.182
  I0704 04:00:13.214625 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1929" for this suite. @ 07/04/24 04:00:13.219
â€¢ [0.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 07/04/24 04:00:13.226
  I0704 04:00:13.226860 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename cronjob @ 07/04/24 04:00:13.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:00:13.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:00:13.246
  STEP: Creating a ForbidConcurrent cronjob @ 07/04/24 04:00:13.249
  STEP: Ensuring a job is scheduled @ 07/04/24 04:00:13.254
  STEP: Ensuring exactly one is scheduled @ 07/04/24 04:01:01.258
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/04/24 04:01:01.266
  STEP: Ensuring no more jobs are scheduled @ 07/04/24 04:01:01.279
  STEP: Removing cronjob @ 07/04/24 04:01:01.286
  I0704 04:01:01.323052 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8272" for this suite. @ 07/04/24 04:01:01.353
â€¢ [48.177 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 07/04/24 04:01:01.403
  I0704 04:01:01.404000 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename containers @ 07/04/24 04:01:01.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:01:01.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:01:01.491
  STEP: Creating a pod to test override arguments @ 07/04/24 04:01:01.495
  STEP: Saw pod success @ 07/04/24 04:01:05.519
  I0704 04:01:05.523001 20 output.go:196] Trying to get logs from node 18.191.27.132 pod client-containers-772988ca-bbcf-4d82-8e63-5acc4c0f1b1d container agnhost-container: <nil>
  STEP: delete the pod @ 07/04/24 04:01:05.555
  I0704 04:01:05.587952 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8884" for this suite. @ 07/04/24 04:01:05.602
â€¢ [4.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 07/04/24 04:01:05.614
  I0704 04:01:05.616701 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename field-validation @ 07/04/24 04:01:05.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:01:05.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:01:05.651
  I0704 04:01:05.654047 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  W0704 04:01:08.230356      20 warnings.go:70] unknown field "alpha"
  W0704 04:01:08.230384      20 warnings.go:70] unknown field "beta"
  W0704 04:01:08.230390      20 warnings.go:70] unknown field "delta"
  W0704 04:01:08.230396      20 warnings.go:70] unknown field "epsilon"
  W0704 04:01:08.230402      20 warnings.go:70] unknown field "gamma"
  I0704 04:01:08.823391 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3461" for this suite. @ 07/04/24 04:01:08.827
â€¢ [3.221 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 07/04/24 04:01:08.836
  I0704 04:01:08.836527 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename var-expansion @ 07/04/24 04:01:08.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:01:08.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:01:08.858
  STEP: Creating a pod to test substitution in container's args @ 07/04/24 04:01:08.861
  STEP: Saw pod success @ 07/04/24 04:01:12.883
  I0704 04:01:12.886351 20 output.go:196] Trying to get logs from node 18.191.27.132 pod var-expansion-7a9dcb7f-a854-400f-8a03-27ab2c4c3f5b container dapi-container: <nil>
  STEP: delete the pod @ 07/04/24 04:01:12.9
  I0704 04:01:12.947298 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9207" for this suite. @ 07/04/24 04:01:12.951
â€¢ [4.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 07/04/24 04:01:12.957
  I0704 04:01:12.957109 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename webhook @ 07/04/24 04:01:12.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:01:12.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:01:12.976
  STEP: Setting up server cert @ 07/04/24 04:01:12.994
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/04/24 04:01:13.28
  STEP: Deploying the webhook pod @ 07/04/24 04:01:13.286
  STEP: Wait for the deployment to be ready @ 07/04/24 04:01:13.299
  I0704 04:01:13.310642 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0704 04:01:15.337082 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 4, 4, 1, 13, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 4, 1, 13, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 4, 1, 13, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 4, 1, 13, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 07/04/24 04:01:17.341
  STEP: Verifying the service has paired with the endpoint @ 07/04/24 04:01:17.352
  I0704 04:01:18.352972 20 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0704 04:01:18.361997 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9152-crds.webhook.example.com via the AdmissionRegistration API @ 07/04/24 04:01:18.874
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/04/24 04:01:18.886
  I0704 04:01:21.509871 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2113" for this suite. @ 07/04/24 04:01:21.513
  STEP: Destroying namespace "webhook-markers-138" for this suite. @ 07/04/24 04:01:21.519
â€¢ [8.568 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 07/04/24 04:01:21.526
  I0704 04:01:21.526641 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename replication-controller @ 07/04/24 04:01:21.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:01:21.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:01:21.561
  STEP: creating a ReplicationController @ 07/04/24 04:01:21.58
  STEP: waiting for RC to be added @ 07/04/24 04:01:21.588
  STEP: waiting for available Replicas @ 07/04/24 04:01:21.589
  STEP: patching ReplicationController @ 07/04/24 04:01:23.559
  STEP: waiting for RC to be modified @ 07/04/24 04:01:23.568
  STEP: patching ReplicationController status @ 07/04/24 04:01:23.568
  STEP: waiting for RC to be modified @ 07/04/24 04:01:23.576
  STEP: waiting for available Replicas @ 07/04/24 04:01:23.576
  STEP: fetching ReplicationController status @ 07/04/24 04:01:23.581
  STEP: patching ReplicationController scale @ 07/04/24 04:01:23.584
  STEP: waiting for RC to be modified @ 07/04/24 04:01:23.591
  STEP: waiting for ReplicationController's scale to be the max amount @ 07/04/24 04:01:23.593
  STEP: fetching ReplicationController; ensuring that it's patched @ 07/04/24 04:01:25.435
  STEP: updating ReplicationController status @ 07/04/24 04:01:25.438
  STEP: waiting for RC to be modified @ 07/04/24 04:01:25.446
  STEP: listing all ReplicationControllers @ 07/04/24 04:01:25.446
  STEP: checking that ReplicationController has expected values @ 07/04/24 04:01:25.449
  STEP: deleting ReplicationControllers by collection @ 07/04/24 04:01:25.449
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 07/04/24 04:01:25.46
  I0704 04:01:25.555434 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0704 04:01:25.555711      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-9338" for this suite. @ 07/04/24 04:01:25.563
â€¢ [4.049 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1420
  STEP: Creating a kubernetes client @ 07/04/24 04:01:25.576
  I0704 04:01:25.577022 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename services @ 07/04/24 04:01:25.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:01:25.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:01:25.599
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-805 @ 07/04/24 04:01:25.603
  STEP: changing the ExternalName service to type=ClusterIP @ 07/04/24 04:01:25.609
  STEP: creating replication controller externalname-service in namespace services-805 @ 07/04/24 04:01:25.632
  I0704 04:01:25.642257      20 runners.go:198] Created replication controller with name: externalname-service, namespace: services-805, replica count: 2
  E0704 04:01:26.556830      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:01:27.557316      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:01:28.558359      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:01:28.693702      20 runners.go:198] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0704 04:01:28.693860 20 resource.go:361] Creating new exec pod
  E0704 04:01:29.559823      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:01:30.563163      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:01:31.563266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:01:31.727728 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-805 exec execpodzb4pf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0704 04:01:31.939332 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0704 04:01:31.939448 20 builder.go:147] stdout: "externalname-service-kgxc5"
  I0704 04:01:31.939556 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-805 exec execpodzb4pf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.248.128 80'
  I0704 04:01:32.213446 20 builder.go:146] stderr: "+ + nc -v -t -w 2 10.43.248.128 80\necho hostName\nConnection to 10.43.248.128 80 port [tcp/http] succeeded!\n"
  I0704 04:01:32.213542 20 builder.go:147] stdout: ""
  E0704 04:01:32.564214      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:01:32.939609 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-805 exec execpodzb4pf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.248.128 80'
  I0704 04:01:33.097479 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.248.128 80\nConnection to 10.43.248.128 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0704 04:01:33.097612 20 builder.go:147] stdout: "externalname-service-wktb6"
  I0704 04:01:33.097698 20 service.go:1429] Cleaning up the ExternalName to ClusterIP test service
  I0704 04:01:33.115729 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-805" for this suite. @ 07/04/24 04:01:33.121
â€¢ [7.556 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 07/04/24 04:01:33.133
  I0704 04:01:33.133821 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename runtimeclass @ 07/04/24 04:01:33.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:01:33.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:01:33.16
  I0704 04:01:33.172391 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9022" for this suite. @ 07/04/24 04:01:33.175
â€¢ [0.048 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 07/04/24 04:01:33.185
  I0704 04:01:33.185236 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename configmap @ 07/04/24 04:01:33.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:01:33.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:01:33.207
  STEP: Creating configMap with name configmap-test-volume-4d9c51b6-3caf-4f3f-950b-fdde8fc3282e @ 07/04/24 04:01:33.21
  STEP: Creating a pod to test consume configMaps @ 07/04/24 04:01:33.215
  E0704 04:01:33.564438      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:01:34.564740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:01:35.565245      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:01:36.568313      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:01:37.236
  I0704 04:01:37.240973 20 output.go:196] Trying to get logs from node 3.142.51.114 pod pod-configmaps-56e83b7f-9049-4bbd-b309-9c122583f387 container agnhost-container: <nil>
  STEP: delete the pod @ 07/04/24 04:01:37.253
  I0704 04:01:37.267156 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4495" for this suite. @ 07/04/24 04:01:37.271
â€¢ [4.091 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 07/04/24 04:01:37.276
  I0704 04:01:37.276487 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename container-runtime @ 07/04/24 04:01:37.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:01:37.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:01:37.295
  STEP: create the container @ 07/04/24 04:01:37.299
  W0704 04:01:37.306912      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 07/04/24 04:01:37.307
  E0704 04:01:37.568723      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:01:38.569682      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:01:39.570464      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/04/24 04:01:40.328
  STEP: the container should be terminated @ 07/04/24 04:01:40.332
  STEP: the termination message should be set @ 07/04/24 04:01:40.332
  I0704 04:01:40.332247 20 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/04/24 04:01:40.332
  I0704 04:01:40.347119 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3488" for this suite. @ 07/04/24 04:01:40.351
â€¢ [3.083 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 07/04/24 04:01:40.36
  I0704 04:01:40.360257 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename secrets @ 07/04/24 04:01:40.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:01:40.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:01:40.393
  I0704 04:01:40.450256 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1115" for this suite. @ 07/04/24 04:01:40.454
â€¢ [0.103 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 07/04/24 04:01:40.464
  I0704 04:01:40.464765 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename deployment @ 07/04/24 04:01:40.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:01:40.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:01:40.516
  I0704 04:01:40.536332 20 deployment.go:1645] Creating simple deployment test-new-deployment
  I0704 04:01:40.556589 20 deployment.go:222] deployment "test-new-deployment" doesn't have the required revision set
  E0704 04:01:40.570662      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:01:41.571186      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:01:42.571831      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 07/04/24 04:01:42.574
  STEP: updating a scale subresource @ 07/04/24 04:01:42.576
  STEP: verifying the deployment Spec.Replicas was modified @ 07/04/24 04:01:42.583
  STEP: Patch a scale subresource @ 07/04/24 04:01:42.586
  I0704 04:01:42.631893 20 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6607",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cd30e584-cb4e-4208-a9b6-ea398ea8a7e3",
      ResourceVersion: (string) (len=5) "19889",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855662500,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-77db57d8df\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0704 04:01:42.643067 20 deployment.go:39] New ReplicaSet "test-new-deployment-77db57d8df" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-77db57d8df",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6607",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f460eed9-bb0a-42b6-b52f-40049c83ff67",
      ResourceVersion: (string) (len=5) "19896",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855662500,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "cd30e584-cb4e-4208-a9b6-ea398ea8a7e3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662502,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 64 33 30 65 35  38 34 2d 63 62 34 65 2d  |\"cd30e584-cb4e-|
              00000120  34 32 30 38 2d 61 39 62  36 2d 65 61 33 39 38 65  |4208-a9b6-ea398e|
              00000130  61 38 61 37 65 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a8a7e3\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662502,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0704 04:01:42.693698 20 deployment.go:67] Pod "test-new-deployment-77db57d8df-8sdr5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-8sdr5",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6607",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9b7ace62-1ff1-4a09-9ca1-0ade1cb13e40",
      ResourceVersion: (string) (len=5) "19897",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855662502,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f460eed9-bb0a-42b6-b52f-40049c83ff67",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662502,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 34  36 30 65 65 64 39 2d 62  |d\":\"f460eed9-b|
              00000090  62 30 61 2d 34 32 62 36  2d 62 35 32 66 2d 34 30  |b0a-42b6-b52f-40|
              000000a0  30 34 39 63 38 33 66 66  36 37 5c 22 7d 22 3a 7b  |049c83ff67\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662502,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d7sfc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d7sfc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "18.191.27.132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662502,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662502,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662502,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662502,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662502,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.55"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855662502,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 04:01:42.721733 20 deployment.go:67] Pod "test-new-deployment-77db57d8df-c72kd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-c72kd",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6607",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "edb2ba4e-f3e9-4f85-94df-ff130570a51a",
      ResourceVersion: (string) (len=5) "19871",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855662500,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.2.157/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "304c56a00148eeb93a53e1b2e43ca6e321535df4bb10c70f3e6c32521837db64",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.2.157/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f460eed9-bb0a-42b6-b52f-40049c83ff67",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 34  36 30 65 65 64 39 2d 62  |d\":\"f460eed9-b|
              00000090  62 30 61 2d 34 32 62 36  2d 62 35 32 66 2d 34 30  |b0a-42b6-b52f-40|
              000000a0  30 34 39 63 38 33 66 66  36 37 5c 22 7d 22 3a 7b  |049c83ff67\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 31 35  37 5c 22 7d 22 3a 7b 22  |.42.2.157\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tbrfh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tbrfh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "3.142.51.114",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.23.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.23.45"
        }
      },
      PodIP: (string) (len=11) "10.42.2.157",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.157"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855662500,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855662501,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://12ca8fc3c87baeac438ddd293a62197cf598eb85a90ad1c37aa3de0c8ff51a35",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 04:01:42.733554 20 deployment.go:67] Pod "test-new-deployment-77db57d8df-wnfgz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-wnfgz",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6607",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f206e62-3d58-40bb-b3cd-9fafa0674c42",
      ResourceVersion: (string) (len=5) "19899",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855662502,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f460eed9-bb0a-42b6-b52f-40049c83ff67",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855662502,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 34  36 30 65 65 64 39 2d 62  |d\":\"f460eed9-b|
              00000090  62 30 61 2d 34 32 62 36  2d 62 35 32 66 2d 34 30  |b0a-42b6-b52f-40|
              000000a0  30 34 39 63 38 33 66 66  36 37 5c 22 7d 22 3a 7b  |049c83ff67\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mtxq6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mtxq6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 04:01:42.737284 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6607" for this suite. @ 07/04/24 04:01:42.74
â€¢ [2.282 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 07/04/24 04:01:42.747
  I0704 04:01:42.747559 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename server-version @ 07/04/24 04:01:42.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:01:42.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:01:42.766
  STEP: Request ServerVersion @ 07/04/24 04:01:42.769
  STEP: Confirm major version @ 07/04/24 04:01:42.77
  I0704 04:01:42.771034 20 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 07/04/24 04:01:42.771
  I0704 04:01:42.771104 20 server_version.go:58] cleanMinorVersion: 30
  I0704 04:01:42.771121 20 server_version.go:62] Minor version: 30
  I0704 04:01:42.771202 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-2396" for this suite. @ 07/04/24 04:01:42.774
â€¢ [0.035 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 07/04/24 04:01:42.783
  I0704 04:01:42.783067 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 04:01:42.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:01:42.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:01:42.815
  STEP: Creating a pod to test downward API volume plugin @ 07/04/24 04:01:42.819
  E0704 04:01:43.572735      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:01:44.573020      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:01:45.573225      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:01:46.573608      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:01:46.842
  I0704 04:01:46.856054 20 output.go:196] Trying to get logs from node 3.142.51.114 pod downwardapi-volume-db88174e-cbce-4160-babd-b4e715aef706 container client-container: <nil>
  STEP: delete the pod @ 07/04/24 04:01:46.865
  I0704 04:01:46.896811 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7014" for this suite. @ 07/04/24 04:01:46.902
â€¢ [4.127 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 07/04/24 04:01:46.912
  I0704 04:01:46.912494 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/04/24 04:01:46.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:01:46.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:01:46.935
  STEP: set up a multi version CRD @ 07/04/24 04:01:46.94
  I0704 04:01:46.940932 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  E0704 04:01:47.574377      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:01:48.575101      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:01:49.575644      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:01:50.576120      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 07/04/24 04:01:50.823
  STEP: check the unserved version gets removed @ 07/04/24 04:01:50.842
  E0704 04:01:51.583927      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 07/04/24 04:01:51.634
  E0704 04:01:52.585142      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:01:53.585599      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:01:54.414042 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4868" for this suite. @ 07/04/24 04:01:54.421
â€¢ [7.518 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 07/04/24 04:01:54.431
  I0704 04:01:54.431627 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename downward-api @ 07/04/24 04:01:54.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:01:54.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:01:54.452
  STEP: Creating a pod to test downward API volume plugin @ 07/04/24 04:01:54.456
  E0704 04:01:54.586623      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:01:55.586889      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:01:56.587098      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:01:57.587682      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:01:58.486
  I0704 04:01:58.489531 20 output.go:196] Trying to get logs from node 18.191.27.132 pod downwardapi-volume-1187508e-fb46-4a20-916b-f107f8f7d2d9 container client-container: <nil>
  STEP: delete the pod @ 07/04/24 04:01:58.498
  I0704 04:01:58.518104 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9266" for this suite. @ 07/04/24 04:01:58.522
â€¢ [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 07/04/24 04:01:58.529
  I0704 04:01:58.529589 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename pod-network-test @ 07/04/24 04:01:58.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:01:58.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:01:58.55
  STEP: Performing setup for networking test in namespace pod-network-test-7661 @ 07/04/24 04:01:58.554
  STEP: creating a selector @ 07/04/24 04:01:58.554
  STEP: Creating the service pods in kubernetes @ 07/04/24 04:01:58.554
  I0704 04:01:58.554306 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0704 04:01:58.587877      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:01:59.589223      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:00.589742      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:01.589879      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:02.590255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:03.591062      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:04.591592      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:05.591915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:06.592049      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:07.592198      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:08.592709      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:09.592843      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:10.593399      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:11.593350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:12.593631      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:13.594423      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:14.594569      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:15.594639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:16.594865      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:17.594970      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:18.596842      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:19.596770      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:20.597342      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/04/24 04:02:20.696
  E0704 04:02:21.601927      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:22.601850      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:02:22.724808 20 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0704 04:02:22.724849 20 networking.go:42] Breadth first check of 10.42.1.95 on host 172.31.23.191...
  I0704 04:02:22.729470 20 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.0.156:9080/dial?request=hostname&protocol=udp&host=10.42.1.95&port=8081&tries=1'] Namespace:pod-network-test-7661 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 04:02:22.729514 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:02:22.730178 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 04:02:22.730271 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7661/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.0.156%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.1.95%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0704 04:02:22.898016 20 utils.go:331] Waiting for responses: map[]
  I0704 04:02:22.898347 20 utils.go:335] reached 10.42.1.95 after 0/1 tries
  I0704 04:02:22.898482 20 networking.go:42] Breadth first check of 10.42.0.155 on host 172.31.16.55...
  I0704 04:02:22.905821 20 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.0.156:9080/dial?request=hostname&protocol=udp&host=10.42.0.155&port=8081&tries=1'] Namespace:pod-network-test-7661 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 04:02:22.905860 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:02:22.906450 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 04:02:22.906550 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7661/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.0.156%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.0.155%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0704 04:02:23.009803 20 utils.go:331] Waiting for responses: map[]
  I0704 04:02:23.013139 20 utils.go:335] reached 10.42.0.155 after 0/1 tries
  I0704 04:02:23.013328 20 networking.go:42] Breadth first check of 10.42.2.159 on host 172.31.23.45...
  I0704 04:02:23.016841 20 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.0.156:9080/dial?request=hostname&protocol=udp&host=10.42.2.159&port=8081&tries=1'] Namespace:pod-network-test-7661 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 04:02:23.016889 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:02:23.017566 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 04:02:23.017643 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7661/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.0.156%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.2.159%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0704 04:02:23.145084 20 utils.go:331] Waiting for responses: map[]
  I0704 04:02:23.145124 20 utils.go:335] reached 10.42.2.159 after 0/1 tries
  I0704 04:02:23.145137 20 networking.go:53] Going to retry 0 out of 3 pods....
  I0704 04:02:23.145302 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7661" for this suite. @ 07/04/24 04:02:23.149
â€¢ [24.626 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 07/04/24 04:02:23.156
  I0704 04:02:23.156334 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename endpointslice @ 07/04/24 04:02:23.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:02:23.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:02:23.178
  I0704 04:02:23.190356 20 endpointslice.go:1045] Endpoints addresses: [172.31.16.55] , ports: [6443]
  I0704 04:02:23.190878 20 endpointslice.go:1075] EndpointSlices addresses: [172.31.16.55] , ports: [6443]
  I0704 04:02:23.191201 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-71" for this suite. @ 07/04/24 04:02:23.194
â€¢ [0.056 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 07/04/24 04:02:23.215
  I0704 04:02:23.215653 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename runtimeclass @ 07/04/24 04:02:23.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:02:23.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:02:23.244
  I0704 04:02:23.285614 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5176" for this suite. @ 07/04/24 04:02:23.291
â€¢ [0.084 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 07/04/24 04:02:23.3
  I0704 04:02:23.300336 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename pods @ 07/04/24 04:02:23.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:02:23.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:02:23.328
  STEP: creating the pod @ 07/04/24 04:02:23.333
  STEP: submitting the pod to kubernetes @ 07/04/24 04:02:23.333
  W0704 04:02:23.341676      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0704 04:02:23.602187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:24.602665      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 07/04/24 04:02:25.353
  STEP: updating the pod @ 07/04/24 04:02:25.356
  E0704 04:02:25.603717      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:02:25.875392 20 pod_client.go:141] Successfully updated pod "pod-update-activedeadlineseconds-96f5abff-b2b8-45f3-822b-9f59fe805117"
  E0704 04:02:26.604850      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:27.604828      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:28.605314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:29.605424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:02:29.904733 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3453" for this suite. @ 07/04/24 04:02:29.91
â€¢ [6.621 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 07/04/24 04:02:29.921
  I0704 04:02:29.921735 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename endpointslicemirroring @ 07/04/24 04:02:29.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:02:29.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:02:29.939
  STEP: mirroring a new custom Endpoint @ 07/04/24 04:02:29.949
  I0704 04:02:29.960959 20 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E0704 04:02:30.605524      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:31.605877      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 07/04/24 04:02:31.964
  I0704 04:02:31.973162 20 endpointslicemirroring.go:171] Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0704 04:02:32.606620      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:33.607237      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 07/04/24 04:02:33.976
  I0704 04:02:33.999080 20 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  E0704 04:02:34.608011      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:35.609681      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:02:36.002061 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-302" for this suite. @ 07/04/24 04:02:36.005
â€¢ [6.089 seconds]
------------------------------
SSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 07/04/24 04:02:36.011
  I0704 04:02:36.011292 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename proxy @ 07/04/24 04:02:36.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:02:36.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:02:36.033
  I0704 04:02:36.038529 20 proxy.go:293] Creating pod...
  E0704 04:02:36.609930      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:37.610400      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:02:38.055347 20 proxy.go:317] Creating service...
  I0704 04:02:38.071257 20 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2673/pods/agnhost/proxy/some/path/with/DELETE
  I0704 04:02:38.088787 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0704 04:02:38.089375 20 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2673/pods/agnhost/proxy/some/path/with/GET
  I0704 04:02:38.092807 20 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0704 04:02:38.092849 20 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2673/pods/agnhost/proxy/some/path/with/HEAD
  I0704 04:02:38.096327 20 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0704 04:02:38.096934 20 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2673/pods/agnhost/proxy/some/path/with/OPTIONS
  I0704 04:02:38.100179 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0704 04:02:38.100523 20 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2673/pods/agnhost/proxy/some/path/with/PATCH
  I0704 04:02:38.103316 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0704 04:02:38.103566 20 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2673/pods/agnhost/proxy/some/path/with/POST
  I0704 04:02:38.106419 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0704 04:02:38.106571 20 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2673/pods/agnhost/proxy/some/path/with/PUT
  I0704 04:02:38.109259 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0704 04:02:38.109297 20 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2673/services/test-service/proxy/some/path/with/DELETE
  I0704 04:02:38.112121 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0704 04:02:38.112162 20 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2673/services/test-service/proxy/some/path/with/GET
  I0704 04:02:38.115793 20 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0704 04:02:38.115893 20 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2673/services/test-service/proxy/some/path/with/HEAD
  I0704 04:02:38.119346 20 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0704 04:02:38.119392 20 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2673/services/test-service/proxy/some/path/with/OPTIONS
  I0704 04:02:38.122022 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0704 04:02:38.122063 20 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2673/services/test-service/proxy/some/path/with/PATCH
  I0704 04:02:38.125000 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0704 04:02:38.125197 20 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2673/services/test-service/proxy/some/path/with/POST
  I0704 04:02:38.127934 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0704 04:02:38.128188 20 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2673/services/test-service/proxy/some/path/with/PUT
  I0704 04:02:38.132131 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0704 04:02:38.132340 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2673" for this suite. @ 07/04/24 04:02:38.136
â€¢ [2.131 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 07/04/24 04:02:38.142
  I0704 04:02:38.142188 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/04/24 04:02:38.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:02:38.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:02:38.17
  STEP: getting /apis @ 07/04/24 04:02:38.181
  STEP: getting /apis/admissionregistration.k8s.io @ 07/04/24 04:02:38.186
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 07/04/24 04:02:38.187
  STEP: creating @ 07/04/24 04:02:38.188
  STEP: getting @ 07/04/24 04:02:38.209
  STEP: listing @ 07/04/24 04:02:38.212
  STEP: watching @ 07/04/24 04:02:38.215
  I0704 04:02:38.215773 20 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 07/04/24 04:02:38.217
  STEP: updating @ 07/04/24 04:02:38.222
  I0704 04:02:38.240571 20 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  STEP: getting /status @ 07/04/24 04:02:38.241
  STEP: patching /status @ 07/04/24 04:02:38.244
  STEP: updating /status @ 07/04/24 04:02:38.256
  STEP: deleting @ 07/04/24 04:02:38.263
  STEP: deleting a collection @ 07/04/24 04:02:38.278
  I0704 04:02:38.295562 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5713" for this suite. @ 07/04/24 04:02:38.298
â€¢ [0.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 07/04/24 04:02:38.308
  I0704 04:02:38.308945 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename emptydir @ 07/04/24 04:02:38.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:02:38.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:02:38.342
  STEP: Creating Pod @ 07/04/24 04:02:38.354
  E0704 04:02:38.611202      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:39.611809      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:40.612696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:41.612893      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 07/04/24 04:02:42.387
  I0704 04:02:42.387970 20 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-8772 PodName:pod-sharedvolume-6b1bcd3e-d182-4f3e-af53-d3a5c184702e ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 04:02:42.388017 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:02:42.388879 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 04:02:42.388982 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/emptydir-8772/pods/pod-sharedvolume-6b1bcd3e-d182-4f3e-af53-d3a5c184702e/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I0704 04:02:42.483509 20 exec_util.go:106] Exec stderr: ""
  I0704 04:02:42.483728 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8772" for this suite. @ 07/04/24 04:02:42.487
â€¢ [4.185 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 07/04/24 04:02:42.495
  I0704 04:02:42.495265 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename gc @ 07/04/24 04:02:42.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:02:42.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:02:42.52
  I0704 04:02:42.571628 20 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"46081c3a-d0ba-4634-953c-fa7bc7fd7c5e", Controller:(*bool)(0xc004003f26), BlockOwnerDeletion:(*bool)(0xc004003f27)}}
  I0704 04:02:42.587906 20 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"227e9dbf-5aff-4697-bf74-bfc93a89b848", Controller:(*bool)(0xc0064b41d6), BlockOwnerDeletion:(*bool)(0xc0064b41d7)}}
  I0704 04:02:42.596611 20 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"661f53da-3671-4471-8ccc-049524185daa", Controller:(*bool)(0xc00417a146), BlockOwnerDeletion:(*bool)(0xc00417a147)}}
  E0704 04:02:42.612957      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:43.613081      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:44.613337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:45.614050      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:46.614239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:02:47.606890 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0704 04:02:47.615036      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "gc-4947" for this suite. @ 07/04/24 04:02:47.616
â€¢ [5.134 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 07/04/24 04:02:47.629
  I0704 04:02:47.630675 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename ingressclass @ 07/04/24 04:02:47.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:02:47.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:02:47.684
  STEP: getting /apis @ 07/04/24 04:02:47.688
  STEP: getting /apis/networking.k8s.io @ 07/04/24 04:02:47.697
  STEP: getting /apis/networking.k8s.iov1 @ 07/04/24 04:02:47.699
  STEP: creating @ 07/04/24 04:02:47.701
  STEP: getting @ 07/04/24 04:02:47.72
  STEP: listing @ 07/04/24 04:02:47.725
  STEP: watching @ 07/04/24 04:02:47.728
  I0704 04:02:47.728226 20 ingressclass.go:348] starting watch
  STEP: patching @ 07/04/24 04:02:47.73
  STEP: updating @ 07/04/24 04:02:47.738
  I0704 04:02:47.742856 20 ingressclass.go:364] waiting for watch events with expected annotations
  I0704 04:02:47.742902 20 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 07/04/24 04:02:47.743
  STEP: deleting a collection @ 07/04/24 04:02:47.754
  I0704 04:02:47.765925 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-4588" for this suite. @ 07/04/24 04:02:47.769
â€¢ [0.173 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 07/04/24 04:02:47.803
  I0704 04:02:47.803708 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename emptydir @ 07/04/24 04:02:47.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:02:47.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:02:47.88
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/04/24 04:02:47.893
  E0704 04:02:48.615242      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:49.615541      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:50.616303      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:51.617220      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:02:51.945
  I0704 04:02:51.948094 20 output.go:196] Trying to get logs from node 3.142.51.114 pod pod-1ce96d68-6985-45cb-b612-6afdf1ee14b1 container test-container: <nil>
  STEP: delete the pod @ 07/04/24 04:02:51.955
  I0704 04:02:51.971151 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3154" for this suite. @ 07/04/24 04:02:51.973
â€¢ [4.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 07/04/24 04:02:51.985
  I0704 04:02:51.985152 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 04:02:51.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:02:52.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:02:52.007
  STEP: Creating secret with name s-test-opt-del-cc2a9da6-a58e-47cd-8fb4-065aee38bf6d @ 07/04/24 04:02:52.012
  STEP: Creating secret with name s-test-opt-upd-29a2326c-ac13-437b-8e06-01c1aef0882f @ 07/04/24 04:02:52.029
  STEP: Creating the pod @ 07/04/24 04:02:52.032
  E0704 04:02:52.617361      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:53.617581      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:54.617712      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:55.617872      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-cc2a9da6-a58e-47cd-8fb4-065aee38bf6d @ 07/04/24 04:02:56.108
  STEP: Updating secret s-test-opt-upd-29a2326c-ac13-437b-8e06-01c1aef0882f @ 07/04/24 04:02:56.114
  STEP: Creating secret with name s-test-opt-create-874b6e5e-74c6-4c90-a501-ccdfcb13fc92 @ 07/04/24 04:02:56.118
  STEP: waiting to observe update in volume @ 07/04/24 04:02:56.122
  E0704 04:02:56.617978      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:57.618182      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:02:58.157159 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6905" for this suite. @ 07/04/24 04:02:58.162
â€¢ [6.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 07/04/24 04:02:58.176
  I0704 04:02:58.176801 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename secrets @ 07/04/24 04:02:58.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:02:58.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:02:58.222
  STEP: Creating secret with name secret-test-7380cf43-f002-40a8-b2c9-228b2a61b0ba @ 07/04/24 04:02:58.226
  STEP: Creating a pod to test consume secrets @ 07/04/24 04:02:58.23
  E0704 04:02:58.619188      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:02:59.619329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:00.620317      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:01.620770      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:03:02.263
  I0704 04:03:02.267666 20 output.go:196] Trying to get logs from node 18.191.27.132 pod pod-secrets-0e82027c-00ed-41d0-9dfe-29530f1e1dd1 container secret-env-test: <nil>
  STEP: delete the pod @ 07/04/24 04:03:02.286
  I0704 04:03:02.317211 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3989" for this suite. @ 07/04/24 04:03:02.321
â€¢ [4.156 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2240
  STEP: Creating a kubernetes client @ 07/04/24 04:03:02.337
  I0704 04:03:02.338558 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename services @ 07/04/24 04:03:02.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:03:02.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:03:02.374
  STEP: creating service in namespace services-4355 @ 07/04/24 04:03:02.377
  STEP: creating service affinity-nodeport-transition in namespace services-4355 @ 07/04/24 04:03:02.377
  STEP: creating replication controller affinity-nodeport-transition in namespace services-4355 @ 07/04/24 04:03:02.389
  I0704 04:03:02.409601      20 runners.go:198] Created replication controller with name: affinity-nodeport-transition, namespace: services-4355, replica count: 3
  E0704 04:03:02.620898      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:03.621321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:04.621768      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:03:05.460621      20 runners.go:198] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0704 04:03:05.469990 20 resource.go:361] Creating new exec pod
  E0704 04:03:05.622637      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:06.622777      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:07.622863      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:08.623417      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:09.623844      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:03:10.493665 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-4355 exec execpod-affinity5895x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  E0704 04:03:10.624443      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:03:10.748022 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I0704 04:03:10.748212 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0704 04:03:10.748305 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-4355 exec execpod-affinity5895x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.191.93 80'
  I0704 04:03:11.034252 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.191.93 80\nConnection to 10.43.191.93 80 port [tcp/http] succeeded!\n"
  I0704 04:03:11.034402 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0704 04:03:11.034492 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-4355 exec execpod-affinity5895x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.16.55 30178'
  I0704 04:03:11.214346 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.16.55 30178\nConnection to 172.31.16.55 30178 port [tcp/*] succeeded!\n"
  I0704 04:03:11.214400 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0704 04:03:11.214532 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-4355 exec execpod-affinity5895x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.23.45 30178'
  I0704 04:03:11.438172 20 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.23.45 30178\n+ echo hostName\nConnection to 172.31.23.45 30178 port [tcp/*] succeeded!\n"
  I0704 04:03:11.438297 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0704 04:03:11.446340 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-4355 exec execpod-affinity5895x -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.23.191:30178/ ; done'
  E0704 04:03:11.625852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:03:11.780859 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n"
  I0704 04:03:11.780924 20 builder.go:147] stdout: "\naffinity-nodeport-transition-qrsqc\naffinity-nodeport-transition-ztg5s\naffinity-nodeport-transition-ztg5s\naffinity-nodeport-transition-ztg5s\naffinity-nodeport-transition-mwbxt\naffinity-nodeport-transition-ztg5s\naffinity-nodeport-transition-qrsqc\naffinity-nodeport-transition-ztg5s\naffinity-nodeport-transition-ztg5s\naffinity-nodeport-transition-qrsqc\naffinity-nodeport-transition-ztg5s\naffinity-nodeport-transition-mwbxt\naffinity-nodeport-transition-qrsqc\naffinity-nodeport-transition-qrsqc\naffinity-nodeport-transition-qrsqc\naffinity-nodeport-transition-mwbxt"
  I0704 04:03:11.780945 20 service.go:242] Received response from host: affinity-nodeport-transition-qrsqc
  I0704 04:03:11.780957 20 service.go:242] Received response from host: affinity-nodeport-transition-ztg5s
  I0704 04:03:11.780969 20 service.go:242] Received response from host: affinity-nodeport-transition-ztg5s
  I0704 04:03:11.780979 20 service.go:242] Received response from host: affinity-nodeport-transition-ztg5s
  I0704 04:03:11.780992 20 service.go:242] Received response from host: affinity-nodeport-transition-mwbxt
  I0704 04:03:11.781004 20 service.go:242] Received response from host: affinity-nodeport-transition-ztg5s
  I0704 04:03:11.781014 20 service.go:242] Received response from host: affinity-nodeport-transition-qrsqc
  I0704 04:03:11.781025 20 service.go:242] Received response from host: affinity-nodeport-transition-ztg5s
  I0704 04:03:11.781035 20 service.go:242] Received response from host: affinity-nodeport-transition-ztg5s
  I0704 04:03:11.781047 20 service.go:242] Received response from host: affinity-nodeport-transition-qrsqc
  I0704 04:03:11.781057 20 service.go:242] Received response from host: affinity-nodeport-transition-ztg5s
  I0704 04:03:11.781093 20 service.go:242] Received response from host: affinity-nodeport-transition-mwbxt
  I0704 04:03:11.781105 20 service.go:242] Received response from host: affinity-nodeport-transition-qrsqc
  I0704 04:03:11.781117 20 service.go:242] Received response from host: affinity-nodeport-transition-qrsqc
  I0704 04:03:11.781127 20 service.go:242] Received response from host: affinity-nodeport-transition-qrsqc
  I0704 04:03:11.781159 20 service.go:242] Received response from host: affinity-nodeport-transition-mwbxt
  I0704 04:03:11.790328 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-4355 exec execpod-affinity5895x -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.23.191:30178/ ; done'
  I0704 04:03:12.077006 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.191:30178/\n"
  I0704 04:03:12.077067 20 builder.go:147] stdout: "\naffinity-nodeport-transition-ztg5s\naffinity-nodeport-transition-ztg5s\naffinity-nodeport-transition-ztg5s\naffinity-nodeport-transition-ztg5s\naffinity-nodeport-transition-ztg5s\naffinity-nodeport-transition-ztg5s\naffinity-nodeport-transition-ztg5s\naffinity-nodeport-transition-ztg5s\naffinity-nodeport-transition-ztg5s\naffinity-nodeport-transition-ztg5s\naffinity-nodeport-transition-ztg5s\naffinity-nodeport-transition-ztg5s\naffinity-nodeport-transition-ztg5s\naffinity-nodeport-transition-ztg5s\naffinity-nodeport-transition-ztg5s\naffinity-nodeport-transition-ztg5s"
  I0704 04:03:12.077087 20 service.go:242] Received response from host: affinity-nodeport-transition-ztg5s
  I0704 04:03:12.077100 20 service.go:242] Received response from host: affinity-nodeport-transition-ztg5s
  I0704 04:03:12.077111 20 service.go:242] Received response from host: affinity-nodeport-transition-ztg5s
  I0704 04:03:12.077121 20 service.go:242] Received response from host: affinity-nodeport-transition-ztg5s
  I0704 04:03:12.077133 20 service.go:242] Received response from host: affinity-nodeport-transition-ztg5s
  I0704 04:03:12.077143 20 service.go:242] Received response from host: affinity-nodeport-transition-ztg5s
  I0704 04:03:12.077154 20 service.go:242] Received response from host: affinity-nodeport-transition-ztg5s
  I0704 04:03:12.077163 20 service.go:242] Received response from host: affinity-nodeport-transition-ztg5s
  I0704 04:03:12.077174 20 service.go:242] Received response from host: affinity-nodeport-transition-ztg5s
  I0704 04:03:12.077186 20 service.go:242] Received response from host: affinity-nodeport-transition-ztg5s
  I0704 04:03:12.077197 20 service.go:242] Received response from host: affinity-nodeport-transition-ztg5s
  I0704 04:03:12.077207 20 service.go:242] Received response from host: affinity-nodeport-transition-ztg5s
  I0704 04:03:12.077251 20 service.go:242] Received response from host: affinity-nodeport-transition-ztg5s
  I0704 04:03:12.077263 20 service.go:242] Received response from host: affinity-nodeport-transition-ztg5s
  I0704 04:03:12.077273 20 service.go:242] Received response from host: affinity-nodeport-transition-ztg5s
  I0704 04:03:12.077312 20 service.go:242] Received response from host: affinity-nodeport-transition-ztg5s
  I0704 04:03:12.077399 20 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-4355, will wait for the garbage collector to delete the pods @ 07/04/24 04:03:12.102
  I0704 04:03:12.208744 20 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 18.643197ms
  I0704 04:03:12.309482 20 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.737238ms
  E0704 04:03:12.625899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:13.626192      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:14.627156      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:15.627836      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:03:15.766353 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4355" for this suite. @ 07/04/24 04:03:15.773
â€¢ [13.444 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 07/04/24 04:03:15.778
  I0704 04:03:15.778170 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 04:03:15.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:03:15.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:03:15.797
  STEP: Creating configMap with name projected-configmap-test-volume-e4a5b2cc-c3ad-4bde-8fd6-446011c9d0da @ 07/04/24 04:03:15.8
  STEP: Creating a pod to test consume configMaps @ 07/04/24 04:03:15.808
  E0704 04:03:16.627955      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:17.628732      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:18.629399      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:19.629666      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:03:19.828
  I0704 04:03:19.831351 20 output.go:196] Trying to get logs from node 18.191.27.132 pod pod-projected-configmaps-b18b6860-5e4d-4ac5-a74b-ef5d8ed10ec1 container agnhost-container: <nil>
  STEP: delete the pod @ 07/04/24 04:03:19.849
  I0704 04:03:19.865877 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8782" for this suite. @ 07/04/24 04:03:19.869
â€¢ [4.097 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 07/04/24 04:03:19.876
  I0704 04:03:19.876304 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename dns @ 07/04/24 04:03:19.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:03:19.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:03:19.893
  STEP: Creating a test headless service @ 07/04/24 04:03:19.939
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5423.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-5423.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5423.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5423.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5423.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-5423.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5423.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-5423.svc.cluster.local;sleep 1; done
   @ 07/04/24 04:03:19.943
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5423.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-5423.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5423.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-5423.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5423.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-5423.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5423.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-5423.svc.cluster.local;sleep 1; done
   @ 07/04/24 04:03:19.943
  STEP: creating a pod to probe DNS @ 07/04/24 04:03:19.943
  STEP: submitting the pod to kubernetes @ 07/04/24 04:03:19.943
  E0704 04:03:20.629775      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:21.630103      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/04/24 04:03:21.978
  STEP: looking for the results for each expected name from probers @ 07/04/24 04:03:21.982
  I0704 04:03:21.992531 20 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5423.svc.cluster.local from pod dns-5423/dns-test-c60f40cf-2bed-4fb0-975c-974c2245c7d7: the server could not find the requested resource (get pods dns-test-c60f40cf-2bed-4fb0-975c-974c2245c7d7)
  I0704 04:03:21.997063 20 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5423.svc.cluster.local from pod dns-5423/dns-test-c60f40cf-2bed-4fb0-975c-974c2245c7d7: the server could not find the requested resource (get pods dns-test-c60f40cf-2bed-4fb0-975c-974c2245c7d7)
  I0704 04:03:22.001852 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5423.svc.cluster.local from pod dns-5423/dns-test-c60f40cf-2bed-4fb0-975c-974c2245c7d7: the server could not find the requested resource (get pods dns-test-c60f40cf-2bed-4fb0-975c-974c2245c7d7)
  I0704 04:03:22.005303 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-5423.svc.cluster.local from pod dns-5423/dns-test-c60f40cf-2bed-4fb0-975c-974c2245c7d7: the server could not find the requested resource (get pods dns-test-c60f40cf-2bed-4fb0-975c-974c2245c7d7)
  I0704 04:03:22.008948 20 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5423.svc.cluster.local from pod dns-5423/dns-test-c60f40cf-2bed-4fb0-975c-974c2245c7d7: the server could not find the requested resource (get pods dns-test-c60f40cf-2bed-4fb0-975c-974c2245c7d7)
  I0704 04:03:22.015598 20 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5423.svc.cluster.local from pod dns-5423/dns-test-c60f40cf-2bed-4fb0-975c-974c2245c7d7: the server could not find the requested resource (get pods dns-test-c60f40cf-2bed-4fb0-975c-974c2245c7d7)
  I0704 04:03:22.019844 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-5423.svc.cluster.local from pod dns-5423/dns-test-c60f40cf-2bed-4fb0-975c-974c2245c7d7: the server could not find the requested resource (get pods dns-test-c60f40cf-2bed-4fb0-975c-974c2245c7d7)
  I0704 04:03:22.022889 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-5423.svc.cluster.local from pod dns-5423/dns-test-c60f40cf-2bed-4fb0-975c-974c2245c7d7: the server could not find the requested resource (get pods dns-test-c60f40cf-2bed-4fb0-975c-974c2245c7d7)
  I0704 04:03:22.022937 20 dns_common.go:489] Lookups using dns-5423/dns-test-c60f40cf-2bed-4fb0-975c-974c2245c7d7 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5423.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5423.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5423.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5423.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5423.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5423.svc.cluster.local jessie_udp@dns-test-service-2.dns-5423.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5423.svc.cluster.local]

  I0704 04:03:22.034130 20 dns_common.go:495] Pod client logs for webserver: 
  I0704 04:03:22.045445 20 dns_common.go:495] Pod client logs for querier: 
  I0704 04:03:22.053294 20 dns_common.go:495] Pod client logs for jessie-querier: 
  E0704 04:03:22.630169      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:23.630397      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:24.630483      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:25.631026      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:26.631185      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:03:27.029991 20 dns_common.go:527] DNS probes using dns-5423/dns-test-c60f40cf-2bed-4fb0-975c-974c2245c7d7 succeeded

  STEP: deleting the pod @ 07/04/24 04:03:27.031
  STEP: deleting the test headless service @ 07/04/24 04:03:27.055
  I0704 04:03:27.077690 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5423" for this suite. @ 07/04/24 04:03:27.087
â€¢ [7.220 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 07/04/24 04:03:27.096
  I0704 04:03:27.096117 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename replicaset @ 07/04/24 04:03:27.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:03:27.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:03:27.112
  STEP: Create a Replicaset @ 07/04/24 04:03:27.118
  STEP: Verify that the required pods have come up. @ 07/04/24 04:03:27.124
  I0704 04:03:27.126823 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0704 04:03:27.632274      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:28.633309      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:29.633402      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:30.633565      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:31.634226      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:03:32.130918 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/04/24 04:03:32.13
  STEP: Getting /status @ 07/04/24 04:03:32.131
  I0704 04:03:32.134569 20 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 07/04/24 04:03:32.134
  I0704 04:03:32.146524 20 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 07/04/24 04:03:32.146
  I0704 04:03:32.148567 20 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0704 04:03:32.148667 20 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0704 04:03:32.148755 20 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0704 04:03:32.148978 20 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0704 04:03:32.149016 20 replica_set.go:682] Found replicaset test-rs in namespace replicaset-6365 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0704 04:03:32.149058 20 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 07/04/24 04:03:32.149
  I0704 04:03:32.149104 20 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0704 04:03:32.154233 20 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 07/04/24 04:03:32.154
  I0704 04:03:32.156394 20 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0704 04:03:32.156584 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0704 04:03:32.156749 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0704 04:03:32.157100 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0704 04:03:32.157134 20 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-6365 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0704 04:03:32.157353 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0704 04:03:32.157386 20 replica_set.go:718] Found replicaset test-rs in namespace replicaset-6365 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0704 04:03:32.157485 20 replica_set.go:729] Replicaset test-rs has a patched status
  I0704 04:03:32.157745 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6365" for this suite. @ 07/04/24 04:03:32.161
â€¢ [5.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 07/04/24 04:03:32.167
  I0704 04:03:32.167783 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename statefulset @ 07/04/24 04:03:32.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:03:32.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:03:32.197
  STEP: Creating service test in namespace statefulset-4130 @ 07/04/24 04:03:32.206
  STEP: Creating a new StatefulSet @ 07/04/24 04:03:32.216
  I0704 04:03:32.228516 20 wait.go:40] Found 0 stateful pods, waiting for 3
  E0704 04:03:32.635192      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:33.635321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:34.635655      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:35.636718      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:36.636895      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:37.637036      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:38.637225      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:39.637377      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:40.637494      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:41.638580      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:03:42.227872 20 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0704 04:03:42.228090 20 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0704 04:03:42.228139 20 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0704 04:03:42.262248 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=statefulset-4130 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0704 04:03:42.538145 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0704 04:03:42.538194 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0704 04:03:42.538210 20 statefulset.go:2184] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0704 04:03:42.638741      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:43.639583      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:44.640290      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:45.640811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:46.641029      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:47.641846      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:48.643144      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:49.643617      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:50.643733      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:51.644200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/04/24 04:03:52.554
  I0704 04:03:52.588637 20 statefulset.go:2241] Updating stateful set ss2
  STEP: Creating a new revision @ 07/04/24 04:03:52.588
  E0704 04:03:52.644409      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:53.644709      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:54.644894      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:55.644994      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:56.645346      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:57.645683      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:58.646108      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:03:59.646719      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:00.647647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:01.646956      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 07/04/24 04:04:02.595
  I0704 04:04:02.600159 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=statefulset-4130 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0704 04:04:02.647693      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:04:02.832953 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0704 04:04:02.833086 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0704 04:04:02.833105 20 statefulset.go:2208] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0704 04:04:03.647892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:04.647964      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:05.649155      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:06.649296      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:07.649401      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:08.649500      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:09.649608      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:10.649712      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:11.649910      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:12.649983      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:13.650794      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:14.650996      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:15.651209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:16.651539      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:17.651941      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:18.651955      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:19.652173      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:20.652286      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:21.653162      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:22.653237      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:04:22.852640 20 wait.go:158] Waiting for StatefulSet statefulset-4130/ss2 to complete update
  E0704 04:04:23.653354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:24.653590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:25.653622      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:26.653981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:27.654178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:28.654252      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:29.654696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:30.654961      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:31.655997      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:32.656120      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 07/04/24 04:04:32.847
  I0704 04:04:32.847691 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=statefulset-4130 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0704 04:04:33.020401 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0704 04:04:33.020457 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0704 04:04:33.020475 20 statefulset.go:2184] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0704 04:04:33.656746      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:34.656909      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:35.657255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:36.657455      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:37.657794      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:38.658370      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:39.658189      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:40.658893      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:41.658970      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:42.659119      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:04:43.049676 20 statefulset.go:2241] Updating stateful set ss2
  E0704 04:04:43.659950      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:44.660341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:45.660691      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:46.660842      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:47.660971      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:48.661235      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:49.661493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:50.661704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:51.661939      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:52.662092      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 07/04/24 04:04:53.057
  I0704 04:04:53.060703 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=statefulset-4130 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0704 04:04:53.343730 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0704 04:04:53.343779 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0704 04:04:53.343797 20 statefulset.go:2208] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0704 04:04:53.662933      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:54.663049      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:55.664220      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:56.664341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:57.664502      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:58.665134      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:04:59.665324      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:00.665571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:01.666014      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:02.666417      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:05:03.353894 20 statefulset.go:135] Deleting all statefulset in ns statefulset-4130
  I0704 04:05:03.355896 20 rest.go:150] Scaling statefulset ss2 to 0
  E0704 04:05:03.667675      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:04.668776      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:05.669003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:06.669052      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:07.669211      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:08.669320      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:09.669469      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:10.669581      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:11.670020      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:12.670127      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:05:13.377023 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0704 04:05:13.380950 20 rest.go:88] Deleting statefulset ss2
  I0704 04:05:13.391857 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4130" for this suite. @ 07/04/24 04:05:13.395
â€¢ [101.235 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 07/04/24 04:05:13.403
  I0704 04:05:13.403436 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename replication-controller @ 07/04/24 04:05:13.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:05:13.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:05:13.431
  STEP: Given a ReplicationController is created @ 07/04/24 04:05:13.433
  STEP: When the matched label of one of its pods change @ 07/04/24 04:05:13.438
  I0704 04:05:13.442219 20 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E0704 04:05:13.670740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:14.672226      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:15.671457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:16.671659      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:17.671928      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:05:18.448043 20 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/04/24 04:05:18.485
  I0704 04:05:18.498504 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6894" for this suite. @ 07/04/24 04:05:18.509
â€¢ [5.123 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 07/04/24 04:05:18.526
  I0704 04:05:18.526638 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename events @ 07/04/24 04:05:18.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:05:18.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:05:18.552
  STEP: creating a test event @ 07/04/24 04:05:18.555
  STEP: listing all events in all namespaces @ 07/04/24 04:05:18.559
  STEP: patching the test event @ 07/04/24 04:05:18.565
  STEP: fetching the test event @ 07/04/24 04:05:18.571
  STEP: updating the test event @ 07/04/24 04:05:18.574
  STEP: getting the test event @ 07/04/24 04:05:18.583
  STEP: deleting the test event @ 07/04/24 04:05:18.586
  STEP: listing all events in all namespaces @ 07/04/24 04:05:18.593
  I0704 04:05:18.599683 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5054" for this suite. @ 07/04/24 04:05:18.604
â€¢ [0.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 07/04/24 04:05:18.616
  I0704 04:05:18.616716 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename svcaccounts @ 07/04/24 04:05:18.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:05:18.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:05:18.637
  I0704 04:05:18.650338 20 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-1086"
  I0704 04:05:18.655661 20 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-1086"
  E0704 04:05:18.672913      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for a new root ca configmap created @ 07/04/24 04:05:19.156
  I0704 04:05:19.159880 20 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-1086"
  I0704 04:05:19.164418 20 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-1086"
  STEP: waiting for the root ca configmap reconciled @ 07/04/24 04:05:19.665
  I0704 04:05:19.668595 20 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-1086"
  I0704 04:05:19.668734 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1086" for this suite. @ 07/04/24 04:05:19.672
  E0704 04:05:19.673771      20 retrywatcher.go:129] "Watch failed" err="context canceled"
â€¢ [1.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 07/04/24 04:05:19.68
  I0704 04:05:19.680744 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename replication-controller @ 07/04/24 04:05:19.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:05:19.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:05:19.699
  STEP: Creating ReplicationController "e2e-rc-lm4rn" @ 07/04/24 04:05:19.702
  I0704 04:05:19.713019 20 rc.go:792] Get Replication Controller "e2e-rc-lm4rn" to confirm replicas
  E0704 04:05:20.674041      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:05:20.713309 20 rc.go:792] Get Replication Controller "e2e-rc-lm4rn" to confirm replicas
  I0704 04:05:20.716576 20 rc.go:801] Found 1 replicas for "e2e-rc-lm4rn" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-lm4rn" @ 07/04/24 04:05:20.716
  STEP: Updating a scale subresource @ 07/04/24 04:05:20.719
  STEP: Verifying replicas where modified for replication controller "e2e-rc-lm4rn" @ 07/04/24 04:05:20.734
  I0704 04:05:20.734755 20 rc.go:792] Get Replication Controller "e2e-rc-lm4rn" to confirm replicas
  E0704 04:05:21.674538      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:05:21.735774 20 rc.go:792] Get Replication Controller "e2e-rc-lm4rn" to confirm replicas
  I0704 04:05:21.739292 20 rc.go:801] Found 2 replicas for "e2e-rc-lm4rn" replication controller
  I0704 04:05:21.739466 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8547" for this suite. @ 07/04/24 04:05:21.744
â€¢ [2.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 07/04/24 04:05:21.751
  I0704 04:05:21.751780 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename resourcequota @ 07/04/24 04:05:21.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:05:21.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:05:21.82
  STEP: Creating a ResourceQuota with best effort scope @ 07/04/24 04:05:21.832
  STEP: Ensuring ResourceQuota status is calculated @ 07/04/24 04:05:21.841
  E0704 04:05:22.674664      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:23.674860      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 07/04/24 04:05:23.857
  STEP: Ensuring ResourceQuota status is calculated @ 07/04/24 04:05:23.866
  E0704 04:05:24.675810      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:25.675843      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 07/04/24 04:05:25.87
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 07/04/24 04:05:25.9
  E0704 04:05:26.676170      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:27.676729      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 07/04/24 04:05:27.904
  E0704 04:05:28.676936      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:29.677168      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/04/24 04:05:29.909
  STEP: Ensuring resource quota status released the pod usage @ 07/04/24 04:05:29.934
  E0704 04:05:30.677364      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:31.677840      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 07/04/24 04:05:31.943
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 07/04/24 04:05:31.976
  E0704 04:05:32.677938      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:33.678039      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 07/04/24 04:05:33.98
  E0704 04:05:34.678237      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:35.678486      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/04/24 04:05:35.984
  STEP: Ensuring resource quota status released the pod usage @ 07/04/24 04:05:35.997
  E0704 04:05:36.678627      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:37.679186      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:05:38.004400 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3486" for this suite. @ 07/04/24 04:05:38.01
â€¢ [16.277 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 07/04/24 04:05:38.028
  I0704 04:05:38.028559 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename apf @ 07/04/24 04:05:38.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:05:38.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:05:38.073
  STEP: getting /apis @ 07/04/24 04:05:38.076
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/04/24 04:05:38.079
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/04/24 04:05:38.08
  STEP: creating @ 07/04/24 04:05:38.081
  STEP: getting @ 07/04/24 04:05:38.095
  STEP: listing @ 07/04/24 04:05:38.098
  STEP: watching @ 07/04/24 04:05:38.104
  I0704 04:05:38.104202 20 flowcontrol.go:394] starting watch
  STEP: patching @ 07/04/24 04:05:38.105
  STEP: updating @ 07/04/24 04:05:38.118
  I0704 04:05:38.133191 20 flowcontrol.go:422] waiting for watch events with expected annotations
  I0704 04:05:38.133244 20 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 07/04/24 04:05:38.133
  STEP: patching /status @ 07/04/24 04:05:38.135
  STEP: updating /status @ 07/04/24 04:05:38.146
  STEP: deleting @ 07/04/24 04:05:38.19
  STEP: deleting a collection @ 07/04/24 04:05:38.205
  I0704 04:05:38.219890 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-41" for this suite. @ 07/04/24 04:05:38.223
â€¢ [0.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 07/04/24 04:05:38.231
  I0704 04:05:38.231158 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename subpath @ 07/04/24 04:05:38.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:05:38.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:05:38.249
  STEP: Setting up data @ 07/04/24 04:05:38.252
  STEP: Creating pod pod-subpath-test-configmap-5548 @ 07/04/24 04:05:38.264
  STEP: Creating a pod to test atomic-volume-subpath @ 07/04/24 04:05:38.264
  E0704 04:05:38.679331      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:39.679775      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:40.679918      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:41.679925      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:42.681006      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:43.681402      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:44.681984      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:45.682361      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:46.683366      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:47.684629      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:48.685600      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:49.685698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:50.685917      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:51.685931      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:52.686114      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:53.686460      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:54.686539      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:55.691365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:56.692703      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:57.692815      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:58.693378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:05:59.694169      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:00.694074      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:01.694485      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:06:02.331
  I0704 04:06:02.334961 20 output.go:196] Trying to get logs from node 3.142.51.114 pod pod-subpath-test-configmap-5548 container test-container-subpath-configmap-5548: <nil>
  STEP: delete the pod @ 07/04/24 04:06:02.38
  STEP: Deleting pod pod-subpath-test-configmap-5548 @ 07/04/24 04:06:02.397
  I0704 04:06:02.398040 20 delete.go:62] Deleting pod "pod-subpath-test-configmap-5548" in namespace "subpath-3566"
  I0704 04:06:02.401345 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3566" for this suite. @ 07/04/24 04:06:02.405
â€¢ [24.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 07/04/24 04:06:02.421
  I0704 04:06:02.421580 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename security-context @ 07/04/24 04:06:02.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:06:02.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:06:02.448
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/04/24 04:06:02.452
  E0704 04:06:02.694684      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:03.694740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:04.695445      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:05.695751      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:06:06.474
  I0704 04:06:06.476670 20 output.go:196] Trying to get logs from node 18.191.27.132 pod security-context-c8c9a4b8-8fe6-4291-afd9-fa40586d50a4 container test-container: <nil>
  STEP: delete the pod @ 07/04/24 04:06:06.49
  I0704 04:06:06.508575 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8408" for this suite. @ 07/04/24 04:06:06.514
â€¢ [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 07/04/24 04:06:06.532
  I0704 04:06:06.532088 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename statefulset @ 07/04/24 04:06:06.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:06:06.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:06:06.552
  STEP: Creating service test in namespace statefulset-6810 @ 07/04/24 04:06:06.558
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 07/04/24 04:06:06.565
  STEP: Creating stateful set ss in namespace statefulset-6810 @ 07/04/24 04:06:06.571
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6810 @ 07/04/24 04:06:06.577
  I0704 04:06:06.579686 20 wait.go:40] Found 0 stateful pods, waiting for 1
  E0704 04:06:06.695990      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:07.696546      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:08.696823      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:09.697108      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:10.697407      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:11.697907      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:12.698173      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:13.698407      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:14.698554      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:15.699058      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:06:16.580698 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 07/04/24 04:06:16.58
  I0704 04:06:16.584745 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=statefulset-6810 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0704 04:06:16.699223      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:06:16.766107 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0704 04:06:16.766190 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0704 04:06:16.766212 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0704 04:06:16.770065 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0704 04:06:17.699372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:18.699750      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:19.700006      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:20.700312      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:21.700432      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:22.701240      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:23.701414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:24.701553      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:25.702557      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:26.702725      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:06:26.772302 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0704 04:06:26.772351 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0704 04:06:26.792941 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 9.999999564s
  E0704 04:06:27.702838      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:06:27.796829 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 8.996621522s
  E0704 04:06:28.703321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:06:28.801198 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 7.991900217s
  E0704 04:06:29.703698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:06:29.807373 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 6.98762733s
  E0704 04:06:30.703810      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:06:30.811289 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 5.981545617s
  E0704 04:06:31.704551      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:06:31.817186 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 4.977731065s
  E0704 04:06:32.704655      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:06:32.821782 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 3.971753686s
  E0704 04:06:33.705986      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:06:33.827729 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 2.967239466s
  E0704 04:06:34.705868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:06:34.831567 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 1.961383736s
  E0704 04:06:35.705954      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:06:35.836869 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 957.472052ms
  E0704 04:06:36.706089      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6810 @ 07/04/24 04:06:36.837
  I0704 04:06:36.844711 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=statefulset-6810 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0704 04:06:37.075365 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0704 04:06:37.075418 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0704 04:06:37.075454 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0704 04:06:37.080315 20 wait.go:40] Found 1 stateful pods, waiting for 3
  E0704 04:06:37.706871      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:38.707406      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:39.707197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:40.707731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:41.707960      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:42.708074      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:43.708613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:44.708880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:45.709112      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:46.710454      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:06:47.080664 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0704 04:06:47.080707 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0704 04:06:47.080722 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 07/04/24 04:06:47.08
  STEP: Scale down will halt with unhealthy stateful pod @ 07/04/24 04:06:47.08
  I0704 04:06:47.086624 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=statefulset-6810 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0704 04:06:47.270649 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0704 04:06:47.270696 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0704 04:06:47.270713 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0704 04:06:47.270766 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=statefulset-6810 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0704 04:06:47.459798 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0704 04:06:47.459847 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0704 04:06:47.459864 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0704 04:06:47.459922 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=statefulset-6810 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0704 04:06:47.652044 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0704 04:06:47.652093 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0704 04:06:47.652109 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0704 04:06:47.652122 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0704 04:06:47.655063 20 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0704 04:06:47.710353      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:48.710454      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:49.710611      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:50.710848      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:51.710966      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:52.711262      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:53.711596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:54.712285      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:55.713114      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:06:56.713165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:06:57.658188 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0704 04:06:57.658230 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0704 04:06:57.658241 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0704 04:06:57.674489 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 9.999999679s
  E0704 04:06:57.713644      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:06:58.681570 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 8.991932007s
  E0704 04:06:58.714716      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:06:59.686994 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 7.985590827s
  E0704 04:06:59.715122      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:07:00.690940 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 6.980140704s
  E0704 04:07:00.716087      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:07:01.697252 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 5.975381904s
  E0704 04:07:01.716290      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:07:02.701520 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 4.968906972s
  E0704 04:07:02.716633      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:07:03.705418 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 3.96501454s
  E0704 04:07:03.717529      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:07:04.711222 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 2.961716743s
  E0704 04:07:04.718282      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:07:05.717488 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 1.954324632s
  E0704 04:07:05.718354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:06.718870      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:07:06.723055 20 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 949.627305ms
  E0704 04:07:07.719116      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6810 @ 07/04/24 04:07:07.723
  I0704 04:07:07.727620 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=statefulset-6810 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0704 04:07:07.929966 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0704 04:07:07.930017 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0704 04:07:07.930033 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0704 04:07:07.930092 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=statefulset-6810 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0704 04:07:08.138032 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0704 04:07:08.138085 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0704 04:07:08.138100 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0704 04:07:08.138162 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=statefulset-6810 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0704 04:07:08.412212 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0704 04:07:08.412260 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0704 04:07:08.412276 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0704 04:07:08.412290 20 rest.go:150] Scaling statefulset ss to 0
  E0704 04:07:08.719674      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:09.719722      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:10.720020      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:11.720283      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:12.720369      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:13.720809      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:14.721009      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:15.721235      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:16.721231      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:17.721471      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 07/04/24 04:07:18.419
  I0704 04:07:18.419709 20 statefulset.go:135] Deleting all statefulset in ns statefulset-6810
  I0704 04:07:18.422380 20 rest.go:150] Scaling statefulset ss to 0
  I0704 04:07:18.427101 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0704 04:07:18.430765 20 rest.go:88] Deleting statefulset ss
  I0704 04:07:18.442323 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6810" for this suite. @ 07/04/24 04:07:18.45
â€¢ [71.929 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 07/04/24 04:07:18.461
  I0704 04:07:18.461298 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename emptydir @ 07/04/24 04:07:18.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:07:18.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:07:18.49
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/04/24 04:07:18.493
  E0704 04:07:18.721618      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:19.722522      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:20.722773      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:21.723778      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:07:22.522
  I0704 04:07:22.525854 20 output.go:196] Trying to get logs from node 18.191.27.132 pod pod-fde83544-be07-4584-97f9-e4b2daaea901 container test-container: <nil>
  STEP: delete the pod @ 07/04/24 04:07:22.533
  I0704 04:07:22.549799 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5039" for this suite. @ 07/04/24 04:07:22.552
â€¢ [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 07/04/24 04:07:22.559
  I0704 04:07:22.559561 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename secrets @ 07/04/24 04:07:22.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:07:22.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:07:22.577
  STEP: Creating secret with name secret-test-78d5714f-0329-424b-9170-cc994ff51625 @ 07/04/24 04:07:22.58
  STEP: Creating a pod to test consume secrets @ 07/04/24 04:07:22.588
  E0704 04:07:22.724377      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:23.724798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:24.724915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:25.725811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:07:26.61
  I0704 04:07:26.616799 20 output.go:196] Trying to get logs from node 3.142.51.114 pod pod-secrets-c291d19c-cf00-4f7c-8a90-375596086e97 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/04/24 04:07:26.624
  I0704 04:07:26.637933 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5902" for this suite. @ 07/04/24 04:07:26.641
â€¢ [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 07/04/24 04:07:26.65
  I0704 04:07:26.650487 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/04/24 04:07:26.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:07:26.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:07:26.676
  I0704 04:07:26.696820 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-9971" for this suite. @ 07/04/24 04:07:26.7
â€¢ [0.058 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 07/04/24 04:07:26.71
  I0704 04:07:26.710296 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename pods @ 07/04/24 04:07:26.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:07:26.722
  E0704 04:07:26.726016      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:07:26.726
  STEP: creating pod @ 07/04/24 04:07:26.73
  E0704 04:07:27.726827      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:28.727314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:07:28.752551 20 pods.go:83] Pod pod-hostip-40f0c0eb-0ace-42f4-a0dd-60681321f455 has hostIP: 172.31.23.45
  I0704 04:07:28.752753 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7156" for this suite. @ 07/04/24 04:07:28.755
â€¢ [2.051 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 07/04/24 04:07:28.762
  I0704 04:07:28.762179 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename emptydir @ 07/04/24 04:07:28.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:07:28.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:07:28.785
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/04/24 04:07:28.79
  E0704 04:07:29.727571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:30.728015      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:31.728743      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:32.728912      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:07:32.811
  I0704 04:07:32.813710 20 output.go:196] Trying to get logs from node 18.191.27.132 pod pod-855454f9-3661-452b-8d72-e14a21d52eec container test-container: <nil>
  STEP: delete the pod @ 07/04/24 04:07:32.821
  I0704 04:07:32.878006 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6019" for this suite. @ 07/04/24 04:07:32.885
â€¢ [4.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 07/04/24 04:07:32.895
  I0704 04:07:32.895747 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename resourcequota @ 07/04/24 04:07:32.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:07:32.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:07:32.914
  STEP: Discovering how many secrets are in namespace by default @ 07/04/24 04:07:32.917
  E0704 04:07:33.729853      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:34.730018      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:35.730376      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:36.731304      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:37.731640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 07/04/24 04:07:37.922
  E0704 04:07:38.731770      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:39.732764      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:40.733784      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:41.734082      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:42.734234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/04/24 04:07:42.931
  STEP: Ensuring resource quota status is calculated @ 07/04/24 04:07:42.942
  E0704 04:07:43.734433      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:44.734687      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 07/04/24 04:07:44.945
  STEP: Ensuring resource quota status captures secret creation @ 07/04/24 04:07:44.96
  E0704 04:07:45.734848      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:46.735418      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 07/04/24 04:07:46.964
  STEP: Ensuring resource quota status released usage @ 07/04/24 04:07:46.97
  E0704 04:07:47.735072      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:48.735233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:07:48.974422 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3170" for this suite. @ 07/04/24 04:07:48.98
â€¢ [16.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 07/04/24 04:07:48.996
  I0704 04:07:48.996970 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename replicaset @ 07/04/24 04:07:48.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:07:49.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:07:49.035
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 07/04/24 04:07:49.07
  E0704 04:07:49.735632      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:50.736741      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 07/04/24 04:07:51.095
  STEP: Then the orphan pod is adopted @ 07/04/24 04:07:51.101
  E0704 04:07:51.736842      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 07/04/24 04:07:52.11
  I0704 04:07:52.113975 20 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/04/24 04:07:52.125
  E0704 04:07:52.737663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:07:53.135567 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6978" for this suite. @ 07/04/24 04:07:53.14
â€¢ [4.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 07/04/24 04:07:53.17
  I0704 04:07:53.170641 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename disruption @ 07/04/24 04:07:53.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:07:53.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:07:53.19
  STEP: creating the pdb @ 07/04/24 04:07:53.193
  STEP: Waiting for the pdb to be processed @ 07/04/24 04:07:53.2
  E0704 04:07:53.738458      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:54.738735      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 07/04/24 04:07:55.204
  STEP: Waiting for the pdb to be processed @ 07/04/24 04:07:55.213
  E0704 04:07:55.739387      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:56.739552      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 07/04/24 04:07:57.216
  STEP: Waiting for the pdb to be processed @ 07/04/24 04:07:57.225
  E0704 04:07:57.740404      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:07:58.740948      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 07/04/24 04:07:59.234
  I0704 04:07:59.237697 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7008" for this suite. @ 07/04/24 04:07:59.247
â€¢ [6.084 seconds]
------------------------------
SSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 07/04/24 04:07:59.255
  I0704 04:07:59.255572 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/04/24 04:07:59.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:07:59.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:07:59.29
  STEP: creating a target pod @ 07/04/24 04:07:59.295
  E0704 04:07:59.741730      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:00.742121      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:01.742414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:02.742632      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 07/04/24 04:08:03.333
  E0704 04:08:03.743378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:04.743677      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 07/04/24 04:08:05.381
  I0704 04:08:05.381821 20 exec_util.go:55] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-9408 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 04:08:05.381843 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:08:05.382492 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 04:08:05.382575 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-9408/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0704 04:08:05.555811 20 exec_util.go:106] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 07/04/24 04:08:05.568
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 07/04/24 04:08:05.571
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 07/04/24 04:08:05.585
  I0704 04:08:05.598460 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-9408" for this suite. @ 07/04/24 04:08:05.601
â€¢ [6.356 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 07/04/24 04:08:05.632
  I0704 04:08:05.632905 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename webhook @ 07/04/24 04:08:05.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:08:05.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:08:05.66
  STEP: Setting up server cert @ 07/04/24 04:08:05.702
  E0704 04:08:05.744085      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/04/24 04:08:05.952
  STEP: Deploying the webhook pod @ 07/04/24 04:08:05.963
  STEP: Wait for the deployment to be ready @ 07/04/24 04:08:05.981
  I0704 04:08:06.013138 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0704 04:08:06.744283      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:07.744345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:08:08.031099 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 4, 4, 8, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 4, 8, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 4, 8, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 4, 8, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0704 04:08:08.744725      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:09.744799      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/04/24 04:08:10.036
  STEP: Verifying the service has paired with the endpoint @ 07/04/24 04:08:10.066
  E0704 04:08:10.745182      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:08:11.067056 20 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 07/04/24 04:08:11.073
  STEP: Creating a custom resource definition that should be denied by the webhook @ 07/04/24 04:08:11.091
  I0704 04:08:11.091711 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:08:11.156226 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4660" for this suite. @ 07/04/24 04:08:11.161
  STEP: Destroying namespace "webhook-markers-1138" for this suite. @ 07/04/24 04:08:11.168
â€¢ [5.542 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 07/04/24 04:08:11.174
  I0704 04:08:11.174490 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename init-container @ 07/04/24 04:08:11.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:08:11.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:08:11.2
  STEP: creating the pod @ 07/04/24 04:08:11.212
  I0704 04:08:11.212529 20 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0704 04:08:11.745481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:12.745814      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:13.746313      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:14.747365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:15.747992      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:16.748098      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:17.748526      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:18.748652      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:19.748793      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:20.749499      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:21.751367      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:22.752328      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:23.752407      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:24.753420      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:25.753552      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:26.753698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:27.754689      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:28.754858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:29.754995      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:30.755536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:31.756060      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:32.756754      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:33.757144      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:34.757285      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:35.757977      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:36.758098      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:37.758262      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:38.758727      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:39.758706      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:40.758814      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:41.759282      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:42.760384      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:43.760608      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:44.763212      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:45.763013      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:46.763288      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:47.763450      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:48.763657      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:49.763775      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:50.764740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:51.764867      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:52.764984      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:53.765378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:54.765491      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:08:55.718594 20 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-bc406d21-f48d-4efa-8e5a-fc182f363493", GenerateName:"", Namespace:"init-container-5279", SelfLink:"", UID:"9a271805-5e14-41bc-aaa0-2521257f56aa", ResourceVersion:"22569", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 8, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"212518298"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"9149d9e124790aa3a80e8efafba31d5817f0682eff850068e154dfb91eca8bc1", "cni.projectcalico.org/podIP":"10.42.2.175/32", "cni.projectcalico.org/podIPs":"10.42.2.175/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 8, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014d2360), Subresource:""}, v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 8, 12, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014d2390), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 8, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014d23d8), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-2qsj7", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0054aa980), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-2qsj7", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-2qsj7", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-2qsj7", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0040f5038), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"3.142.51.114", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc003e06380), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0040f50c0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0040f50e0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0040f50e8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0040f50ec), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc005552bc0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 4, 4, 8, 13, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 4, 4, 8, 11, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 4, 4, 8, 11, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 4, 4, 8, 11, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 4, 4, 8, 11, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.23.45", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.23.45"}}, PodIP:"10.42.2.175", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.42.2.175"}}, StartTime:time.Date(2024, time.July, 4, 4, 8, 11, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0003641c0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000364230)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"docker-pullable://registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"docker://066029a342a14fe1d510afd030a440e3b60e7ef607e2e426f9fc49b58260b49b", Started:(*bool)(0xc0040f518a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0054aa9e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0040f519f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0054aa9c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc0040f516f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0704 04:08:55.718733 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5279" for this suite. @ 07/04/24 04:08:55.725
â€¢ [44.558 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 07/04/24 04:08:55.734
  I0704 04:08:55.734195 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename events @ 07/04/24 04:08:55.735
  E0704 04:08:55.765912      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:08:55.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:08:55.791
  STEP: Create set of events @ 07/04/24 04:08:55.798
  I0704 04:08:55.801921 20 core_events.go:198] created test-event-1
  I0704 04:08:55.805595 20 core_events.go:198] created test-event-2
  I0704 04:08:55.811179 20 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 07/04/24 04:08:55.811
  STEP: delete collection of events @ 07/04/24 04:08:55.813
  I0704 04:08:55.813699 20 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 07/04/24 04:08:55.828
  I0704 04:08:55.828958 20 core_events.go:230] requesting list of events to confirm quantity
  I0704 04:08:55.831272 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-491" for this suite. @ 07/04/24 04:08:55.834
â€¢ [0.121 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 07/04/24 04:08:55.854
  I0704 04:08:55.854840 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename var-expansion @ 07/04/24 04:08:55.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:08:55.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:08:55.873
  STEP: Creating a pod to test substitution in volume subpath @ 07/04/24 04:08:55.876
  E0704 04:08:56.765925      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:57.766139      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:58.766267      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:08:59.766512      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:08:59.9
  I0704 04:08:59.902929 20 output.go:196] Trying to get logs from node 18.191.27.132 pod var-expansion-41ea7043-96fc-4907-a7ff-bfe6b6c92051 container dapi-container: <nil>
  STEP: delete the pod @ 07/04/24 04:08:59.919
  I0704 04:09:00.044344 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8157" for this suite. @ 07/04/24 04:09:00.092
â€¢ [4.265 seconds]
------------------------------
S
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3161
  STEP: Creating a kubernetes client @ 07/04/24 04:09:00.129
  I0704 04:09:00.129876 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename services @ 07/04/24 04:09:00.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:09:00.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:09:00.17
  STEP: creating an Endpoint @ 07/04/24 04:09:00.183
  STEP: waiting for available Endpoint @ 07/04/24 04:09:00.188
  STEP: listing all Endpoints @ 07/04/24 04:09:00.196
  STEP: updating the Endpoint @ 07/04/24 04:09:00.202
  STEP: fetching the Endpoint @ 07/04/24 04:09:00.218
  STEP: patching the Endpoint @ 07/04/24 04:09:00.227
  STEP: fetching the Endpoint @ 07/04/24 04:09:00.239
  STEP: deleting the Endpoint by Collection @ 07/04/24 04:09:00.243
  STEP: waiting for Endpoint deletion @ 07/04/24 04:09:00.249
  STEP: fetching the Endpoint @ 07/04/24 04:09:00.252
  I0704 04:09:00.260043 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9079" for this suite. @ 07/04/24 04:09:00.272
â€¢ [0.152 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 07/04/24 04:09:00.28
  I0704 04:09:00.280131 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename dns @ 07/04/24 04:09:00.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:09:00.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:09:00.299
  STEP: Creating a test headless service @ 07/04/24 04:09:00.345
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1795.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1795.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1795.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1795.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1795.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-1795.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1795.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-1795.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1795.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-1795.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1795.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-1795.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 204.107.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.107.204_udp@PTR;check="$$(dig +tcp +noall +answer +search 204.107.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.107.204_tcp@PTR;sleep 1; done
   @ 07/04/24 04:09:00.364
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1795.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1795.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1795.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1795.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1795.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-1795.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1795.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-1795.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1795.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-1795.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1795.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-1795.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 204.107.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.107.204_udp@PTR;check="$$(dig +tcp +noall +answer +search 204.107.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.107.204_tcp@PTR;sleep 1; done
   @ 07/04/24 04:09:00.365
  STEP: creating a pod to probe DNS @ 07/04/24 04:09:00.365
  STEP: submitting the pod to kubernetes @ 07/04/24 04:09:00.365
  E0704 04:09:00.767361      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:01.767784      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:02.768355      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:03.769223      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:04.771045      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:05.770608      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:06.770726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:07.770958      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:08.771667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:09.772905      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:10.772871      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:11.773372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:12.773835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:13.774630      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/04/24 04:09:14.423
  STEP: looking for the results for each expected name from probers @ 07/04/24 04:09:14.426
  I0704 04:09:14.431073 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1795.svc.cluster.local from pod dns-1795/dns-test-21e09490-e564-4050-9b08-7e3e7be97a73: the server could not find the requested resource (get pods dns-test-21e09490-e564-4050-9b08-7e3e7be97a73)
  I0704 04:09:14.437498 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1795.svc.cluster.local from pod dns-1795/dns-test-21e09490-e564-4050-9b08-7e3e7be97a73: the server could not find the requested resource (get pods dns-test-21e09490-e564-4050-9b08-7e3e7be97a73)
  I0704 04:09:14.444175 20 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1795.svc.cluster.local from pod dns-1795/dns-test-21e09490-e564-4050-9b08-7e3e7be97a73: the server could not find the requested resource (get pods dns-test-21e09490-e564-4050-9b08-7e3e7be97a73)
  I0704 04:09:14.450541 20 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1795.svc.cluster.local from pod dns-1795/dns-test-21e09490-e564-4050-9b08-7e3e7be97a73: the server could not find the requested resource (get pods dns-test-21e09490-e564-4050-9b08-7e3e7be97a73)
  I0704 04:09:14.489419 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1795.svc.cluster.local from pod dns-1795/dns-test-21e09490-e564-4050-9b08-7e3e7be97a73: the server could not find the requested resource (get pods dns-test-21e09490-e564-4050-9b08-7e3e7be97a73)
  I0704 04:09:14.495677 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1795.svc.cluster.local from pod dns-1795/dns-test-21e09490-e564-4050-9b08-7e3e7be97a73: the server could not find the requested resource (get pods dns-test-21e09490-e564-4050-9b08-7e3e7be97a73)
  I0704 04:09:14.499092 20 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1795.svc.cluster.local from pod dns-1795/dns-test-21e09490-e564-4050-9b08-7e3e7be97a73: the server could not find the requested resource (get pods dns-test-21e09490-e564-4050-9b08-7e3e7be97a73)
  I0704 04:09:14.502035 20 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1795.svc.cluster.local from pod dns-1795/dns-test-21e09490-e564-4050-9b08-7e3e7be97a73: the server could not find the requested resource (get pods dns-test-21e09490-e564-4050-9b08-7e3e7be97a73)
  I0704 04:09:14.513871 20 dns_common.go:489] Lookups using dns-1795/dns-test-21e09490-e564-4050-9b08-7e3e7be97a73 failed for: [wheezy_udp@dns-test-service.dns-1795.svc.cluster.local wheezy_tcp@dns-test-service.dns-1795.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-1795.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-1795.svc.cluster.local jessie_udp@dns-test-service.dns-1795.svc.cluster.local jessie_tcp@dns-test-service.dns-1795.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1795.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1795.svc.cluster.local]

  I0704 04:09:14.528313 20 dns_common.go:495] Pod client logs for webserver: 
  I0704 04:09:14.535081 20 dns_common.go:495] Pod client logs for querier: 
  I0704 04:09:14.543310 20 dns_common.go:495] Pod client logs for jessie-querier: 
  E0704 04:09:14.774731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:15.775286      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:16.775459      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:17.775659      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:18.776952      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:09:19.471755 20 dns_common.go:527] DNS probes using dns-1795/dns-test-21e09490-e564-4050-9b08-7e3e7be97a73 succeeded

  STEP: deleting the pod @ 07/04/24 04:09:19.472
  STEP: deleting the test service @ 07/04/24 04:09:19.553
  STEP: deleting the test headless service @ 07/04/24 04:09:19.631
  I0704 04:09:19.651106 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1795" for this suite. @ 07/04/24 04:09:19.658
â€¢ [19.387 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 07/04/24 04:09:19.668
  I0704 04:09:19.668262 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/04/24 04:09:19.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:09:19.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:09:19.687
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 07/04/24 04:09:19.69
  I0704 04:09:19.690578 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  E0704 04:09:19.777396      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:20.778366      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:21.797523      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:22.798203      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:23.798383      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:24.799687      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:25.811759      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 07/04/24 04:09:25.951
  I0704 04:09:25.952149 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  E0704 04:09:26.811815      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:09:27.429975 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  E0704 04:09:27.812574      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:28.813474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:29.813672      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:30.814438      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:31.814789      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:32.815828      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:09:33.286204 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-706" for this suite. @ 07/04/24 04:09:33.294
â€¢ [13.631 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 07/04/24 04:09:33.301
  I0704 04:09:33.301605 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename kubelet-test @ 07/04/24 04:09:33.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:09:33.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:09:33.346
  E0704 04:09:33.816757      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:34.816911      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:09:35.397147 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9516" for this suite. @ 07/04/24 04:09:35.401
â€¢ [2.126 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 07/04/24 04:09:35.427
  I0704 04:09:35.427025 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename resourcequota @ 07/04/24 04:09:35.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:09:35.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:09:35.465
  STEP: Creating resourceQuota "e2e-rq-status-765fv" @ 07/04/24 04:09:35.47
  I0704 04:09:35.485340 20 resource_quota.go:1051] Resource quota "e2e-rq-status-765fv" reports spec: hard cpu limit of 500m
  I0704 04:09:35.485381 20 resource_quota.go:1053] Resource quota "e2e-rq-status-765fv" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-765fv" /status @ 07/04/24 04:09:35.485
  STEP: Confirm /status for "e2e-rq-status-765fv" resourceQuota via watch @ 07/04/24 04:09:35.494
  I0704 04:09:35.496189 20 resource_quota.go:1080] observed resourceQuota "e2e-rq-status-765fv" in namespace "resourcequota-9161" with hard status: v1.ResourceList(nil)
  I0704 04:09:35.496253 20 resource_quota.go:1083] Found resourceQuota "e2e-rq-status-765fv" in namespace "resourcequota-9161" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0704 04:09:35.496294 20 resource_quota.go:1090] ResourceQuota "e2e-rq-status-765fv" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 07/04/24 04:09:35.498
  I0704 04:09:35.502951 20 resource_quota.go:1101] Resource quota "e2e-rq-status-765fv" reports spec: hard cpu limit of 1
  I0704 04:09:35.502992 20 resource_quota.go:1102] Resource quota "e2e-rq-status-765fv" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-765fv" /status @ 07/04/24 04:09:35.503
  STEP: Confirm /status for "e2e-rq-status-765fv" resourceQuota via watch @ 07/04/24 04:09:35.51
  I0704 04:09:35.512490 20 resource_quota.go:1124] observed resourceQuota "e2e-rq-status-765fv" in namespace "resourcequota-9161" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0704 04:09:35.512547 20 resource_quota.go:1127] Found resourceQuota "e2e-rq-status-765fv" in namespace "resourcequota-9161" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0704 04:09:35.512566 20 resource_quota.go:1134] ResourceQuota "e2e-rq-status-765fv" /status was patched
  STEP: Get "e2e-rq-status-765fv" /status @ 07/04/24 04:09:35.512
  I0704 04:09:35.517421 20 resource_quota.go:1145] Resourcequota "e2e-rq-status-765fv" reports status: hard cpu of 1
  I0704 04:09:35.517668 20 resource_quota.go:1147] Resourcequota "e2e-rq-status-765fv" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-765fv" /status before checking Spec is unchanged @ 07/04/24 04:09:35.52
  I0704 04:09:35.524341 20 resource_quota.go:1167] Resourcequota "e2e-rq-status-765fv" reports status: hard cpu of 2
  I0704 04:09:35.524385 20 resource_quota.go:1169] Resourcequota "e2e-rq-status-765fv" reports status: hard memory of 2Gi
  I0704 04:09:35.526722 20 resource_quota.go:1181] Found resourceQuota "e2e-rq-status-765fv" in namespace "resourcequota-9161" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0704 04:09:35.529023 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00522a4c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00522a4f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00522a540), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:09:35.817460      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:36.817721      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:37.817908      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:38.818841      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:39.819206      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:09:40.535025 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00522a7b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00522a810), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00522a840), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:09:40.819386      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:41.820790      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:42.821036      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:43.821276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:44.821346      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:09:45.529771 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00522aa68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00522aae0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00522ab58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:09:45.822115      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:46.822224      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:47.822538      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:48.822747      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:49.822862      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:09:50.530616 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00522ad68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00522adb0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00522ae28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:09:50.823900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:51.824688      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:52.825710      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:53.826232      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:54.826602      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:09:55.538133 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002849e00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002849e78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002849ef0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:09:55.827724      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:56.828687      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:57.829096      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:58.829694      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:09:59.830528      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:10:00.530746 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00522b0b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00522b128), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00522b1a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:10:00.830700      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:01.831630      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:02.831848      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:03.832017      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:04.832261      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:10:05.530810 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0015402b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0015402e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001540318), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:10:05.832702      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:06.833687      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:07.833927      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:08.834308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:09.834439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:10:10.529982 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001540588), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0015405e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001540618), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:10:10.834520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:11.835357      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:12.835616      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:13.835744      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:14.836696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:10:15.532778 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00522b518), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00522b578), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00522b5d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:10:15.837516      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:16.837637      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:17.839378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:18.838931      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:19.839071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:10:20.535711 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00522b860), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00522b8d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00522b920), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:10:20.839598      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:21.839686      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:22.840068      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:23.840432      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:24.840663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:10:25.540618 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001540990), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0015409d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001540a38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:10:25.841412      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:26.841922      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:27.842029      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:28.842316      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:29.842296      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:10:30.530116 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00522bb60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00522bba8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00522bbd8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:10:30.842533      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:31.843010      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:32.843108      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:33.843658      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:34.843779      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:10:35.532395 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001540d50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001540d98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001540dc8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:10:35.844720      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:36.844862      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:37.844963      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:38.845477      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:39.845602      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:10:40.530203 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00522be00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00522be30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00522bea8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:10:40.846749      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:41.847116      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:42.847408      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:43.847569      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:44.847714      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:10:45.530995 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e2108), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e2150), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e2198), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:10:45.848739      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:46.848891      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:47.849179      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:48.849557      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:49.849934      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:10:50.530912 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e2390), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e23c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e2408), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:10:50.850105      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:51.850242      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:52.850460      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:53.850961      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:54.851290      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:10:55.530128 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001541170), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0015411b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001541200), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:10:55.851879      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:56.852136      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:57.852407      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:58.852517      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:10:59.852807      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:11:00.531285 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001541380), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0015413e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001541410), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:11:00.853455      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:01.854178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:02.854375      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:03.855378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:04.854797      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:11:05.530215 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001541620), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001541668), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001541698), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:11:05.855139      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:06.855180      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:07.855232      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:08.855378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:09.856007      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:11:10.530064 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001541860), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001541890), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0015418c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:11:10.856389      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:11.856526      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:12.857764      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:13.858350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:14.858513      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:11:15.532132 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e2858), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e28a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e28e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:11:15.859497      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:16.859881      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:17.860232      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:18.860779      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:19.860904      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:11:20.532565 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e2b28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e2b70), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e2bb8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:11:20.861944      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:21.862138      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:22.862307      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:23.863081      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:24.863456      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:11:25.537195 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001541ba8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001541bf0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001541c38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:11:25.863649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:26.864710      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:27.864922      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:28.865469      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:29.865582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:11:30.530368 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001541e60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001541e90), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001541ed8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:11:30.865709      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:31.866739      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:32.867106      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:33.867332      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:34.867744      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:11:35.536797 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00135c1c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00135c240), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00135c2b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:11:35.868596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:36.868683      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:37.869381      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:38.869556      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:39.869926      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:11:40.530584 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e2108), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e2150), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e2198), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:11:40.870110      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:41.870228      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:42.870484      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:43.870778      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:44.871052      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:11:45.531694 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00135c660), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00135c6d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00135c738), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:11:45.871170      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:46.871333      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:47.871607      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:48.871874      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:49.872201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:11:50.530111 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00135c9c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00135ca38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00135ca80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:11:50.872414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:51.872947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:52.873474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:53.873847      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:54.874077      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:11:55.530879 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00135cd80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00135cde0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00135ce10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:11:55.874167      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:56.874434      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:57.874554      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:58.875039      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:11:59.875241      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:12:00.530555 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e2528), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e2558), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e25d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:12:00.875980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:01.876310      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:02.876753      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:03.878871      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:04.879052      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:12:05.531581 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00135d188), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00135d1b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00135d200), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:12:05.879899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:06.880036      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:07.880329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:08.880519      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:09.880792      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:12:10.529988 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00135d6c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00135d6f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00135d788), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:12:10.881495      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:11.881842      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:12.881947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:13.882059      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:14.882220      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:12:15.529921 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00135db90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00135dbf0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00135dcb0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:12:15.882596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:16.882729      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:17.882986      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:18.883854      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:19.884008      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:12:20.531396 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e2948), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e29a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e29d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:12:20.885221      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:21.886278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:22.887132      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:23.887992      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:24.888769      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:12:25.533520 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000dda030), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000dda078), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000dda108), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:12:25.888320      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:26.888849      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:27.888977      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:28.889573      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:29.889715      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:12:30.530019 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000dda3c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000dda438), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000dda480), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:12:30.890468      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:31.890515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:32.890818      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:33.890959      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:34.891132      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:12:35.530837 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000dda720), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000dda798), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000dda7e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:12:35.891257      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:36.892383      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:37.892493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:38.893432      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:39.893557      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:12:40.529939 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000dda9c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ddaa20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ddaa68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:12:40.894357      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:41.894774      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:42.894890      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:43.895324      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:44.895440      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:12:45.530773 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e2df8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e2e40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e2e88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:12:45.895624      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:46.896806      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:47.897095      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:48.897252      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:49.902621      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:12:50.530965 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e3038), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e3098), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e30c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:12:50.903280      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:51.904011      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:52.903628      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:53.904700      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:54.904806      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:12:55.532273 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ddae88), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ddaeb8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ddaf48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:12:55.905380      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:56.905508      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:57.905876      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:58.906040      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:12:59.906384      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:13:00.532562 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ddb140), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ddb1a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ddb1d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:13:00.906984      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:01.907368      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:02.907606      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:03.907619      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:04.907741      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:13:05.531070 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e3470), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e34b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e3500), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:13:05.908723      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:06.908858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:07.909127      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:08.909292      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:09.909498      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:13:10.530261 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e36b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e36e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e3728), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:13:10.909654      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:11.909814      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:12.909978      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:13.910511      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:14.910598      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:13:15.530812 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e3920), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e3968), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e3998), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:13:15.911554      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:16.911662      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:17.911786      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:18.912030      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:19.912144      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:13:20.529953 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ddb5d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ddb638), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ddb698), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:13:20.912272      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:21.913331      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:22.913540      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:23.914533      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:24.914065      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:13:25.531099 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e3bf0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e3c38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e3c68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:13:25.914363      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:26.916883      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:27.917101      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:28.917183      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:29.917305      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:13:30.532177 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e3e00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e3e30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041e3e78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:13:30.917465      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:31.917679      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:32.918247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:33.920604      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:34.920806      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:13:35.530123 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044b20f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044b2198), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044b21e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:13:35.921660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:36.922119      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:37.922263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:38.923087      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:39.923176      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:13:40.534981 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044b2438), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044b2468), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044b24e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:13:40.923298      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:41.923642      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:42.924737      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:43.924892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:44.924974      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:13:45.531706 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000dda1f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000dda258), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000dda288), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:13:45.926014      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:46.930785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:47.930003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:48.930154      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:49.930999      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:13:50.531545 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000dda510), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000dda540), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000dda570), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:13:50.932145      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:51.932432      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:52.932962      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:53.933285      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:54.933687      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:13:55.530868 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044b28e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044b2930), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044b29a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:13:55.934414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:56.934641      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:57.935223      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:58.935375      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:13:59.935620      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:14:00.530342 20 resource_quota.go:1212] ResourceQuota "e2e-rq-status-765fv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-765fv", GenerateName:"", Namespace:"resourcequota-9161", SelfLink:"", UID:"e92e6b2e-e4f8-4630-b803-66ee80f3d309", ResourceVersion:"22821", Generation:0, CreationTimestamp:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-765fv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000dda7f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000dda870), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 4, 4, 9, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000dda8b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0704 04:14:00.935661      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:01.936917      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:02.937122      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:03.937260      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:04.937267      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:14:05.535024 20 resource_quota.go:1209] ResourceQuota "e2e-rq-status-765fv" Spec was unchanged and /status reset
  I0704 04:14:05.535883 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9161" for this suite. @ 07/04/24 04:14:05.544
â€¢ [270.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 07/04/24 04:14:05.55
  I0704 04:14:05.550228 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename secrets @ 07/04/24 04:14:05.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:14:05.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:14:05.57
  STEP: Creating secret with name s-test-opt-del-98256779-7e9e-485d-a531-3dfc82eba979 @ 07/04/24 04:14:05.581
  STEP: Creating secret with name s-test-opt-upd-caa1daf5-9d84-4b96-9677-92d0d10da97d @ 07/04/24 04:14:05.586
  STEP: Creating the pod @ 07/04/24 04:14:05.59
  E0704 04:14:05.937852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:06.937838      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-98256779-7e9e-485d-a531-3dfc82eba979 @ 07/04/24 04:14:07.681
  STEP: Updating secret s-test-opt-upd-caa1daf5-9d84-4b96-9677-92d0d10da97d @ 07/04/24 04:14:07.687
  STEP: Creating secret with name s-test-opt-create-036b8741-792b-48a4-a077-502a7ffa740a @ 07/04/24 04:14:07.694
  STEP: waiting to observe update in volume @ 07/04/24 04:14:07.699
  E0704 04:14:07.938018      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:08.938415      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:14:09.744447 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1579" for this suite. @ 07/04/24 04:14:09.747
â€¢ [4.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 07/04/24 04:14:09.752
  I0704 04:14:09.752758 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 04:14:09.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:14:09.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:14:09.774
  STEP: Creating secret with name projected-secret-test-5119fa9e-496f-4b05-abbd-593f35a8e3d1 @ 07/04/24 04:14:09.777
  STEP: Creating a pod to test consume secrets @ 07/04/24 04:14:09.782
  E0704 04:14:09.938720      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:10.939030      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:11.939793      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:12.939991      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:14:13.806
  I0704 04:14:13.811373 20 output.go:196] Trying to get logs from node 18.191.27.132 pod pod-projected-secrets-f15fbe24-e274-4026-8675-c48aef76b317 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/04/24 04:14:13.857
  I0704 04:14:13.895437 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7345" for this suite. @ 07/04/24 04:14:13.899
â€¢ [4.153 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 07/04/24 04:14:13.914
  I0704 04:14:13.914559 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 04:14:13.915
  E0704 04:14:13.941026      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:14:13.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:14:13.957
  STEP: Creating a pod to test downward API volume plugin @ 07/04/24 04:14:13.961
  E0704 04:14:14.941793      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:15.941869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:16.942851      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:17.943187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:14:17.99
  I0704 04:14:17.992998 20 output.go:196] Trying to get logs from node 18.191.27.132 pod downwardapi-volume-fbedfa18-9718-447a-9888-d1f968d92cff container client-container: <nil>
  STEP: delete the pod @ 07/04/24 04:14:17.999
  I0704 04:14:18.016438 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-69" for this suite. @ 07/04/24 04:14:18.019
â€¢ [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:850
  STEP: Creating a kubernetes client @ 07/04/24 04:14:18.024
  I0704 04:14:18.024554 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename services @ 07/04/24 04:14:18.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:14:18.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:14:18.043
  STEP: creating service multi-endpoint-test in namespace services-5914 @ 07/04/24 04:14:18.047
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5914 to expose endpoints map[] @ 07/04/24 04:14:18.065
  I0704 04:14:18.091641 20 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-5914 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5914 @ 07/04/24 04:14:18.092
  E0704 04:14:18.943618      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:19.943698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5914 to expose endpoints map[pod1:[100]] @ 07/04/24 04:14:20.125
  I0704 04:14:20.137057 20 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-5914 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-5914 @ 07/04/24 04:14:20.137
  E0704 04:14:20.943848      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:21.944204      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5914 to expose endpoints map[pod1:[100] pod2:[101]] @ 07/04/24 04:14:22.158
  I0704 04:14:22.199211 20 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-5914 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 07/04/24 04:14:22.199
  I0704 04:14:22.199296 20 resource.go:361] Creating new exec pod
  E0704 04:14:22.944804      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:23.944810      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:24.945538      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:14:25.215885 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-5914 exec execpod6dmqj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0704 04:14:25.410336 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I0704 04:14:25.410402 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0704 04:14:25.410485 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-5914 exec execpod6dmqj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.47.70 80'
  I0704 04:14:25.615882 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.47.70 80\nConnection to 10.43.47.70 80 port [tcp/http] succeeded!\n"
  I0704 04:14:25.615935 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0704 04:14:25.616021 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-5914 exec execpod6dmqj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0704 04:14:25.884216 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I0704 04:14:25.884264 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0704 04:14:25.884451 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-5914 exec execpod6dmqj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.47.70 81'
  E0704 04:14:25.947531      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:14:26.097785 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.47.70 81\n+ echo hostName\nConnection to 10.43.47.70 81 port [tcp/*] succeeded!\n"
  I0704 04:14:26.097842 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5914 @ 07/04/24 04:14:26.097
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5914 to expose endpoints map[pod2:[101]] @ 07/04/24 04:14:26.167
  I0704 04:14:26.208298 20 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-5914 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-5914 @ 07/04/24 04:14:26.208
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5914 to expose endpoints map[] @ 07/04/24 04:14:26.227
  E0704 04:14:26.948152      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:14:27.266584 20 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-5914 exposes endpoints map[]
  I0704 04:14:27.289897 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5914" for this suite. @ 07/04/24 04:14:27.301
â€¢ [9.294 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 07/04/24 04:14:27.32
  I0704 04:14:27.320689 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename replicaset @ 07/04/24 04:14:27.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:14:27.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:14:27.349
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 07/04/24 04:14:27.388
  I0704 04:14:27.403495 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0704 04:14:27.949232      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:28.949784      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:29.950133      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:30.950277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:31.951352      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:14:32.407297 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/04/24 04:14:32.407
  STEP: getting scale subresource @ 07/04/24 04:14:32.407
  STEP: updating a scale subresource @ 07/04/24 04:14:32.41
  STEP: verifying the replicaset Spec.Replicas was modified @ 07/04/24 04:14:32.417
  STEP: Patch a scale subresource @ 07/04/24 04:14:32.422
  I0704 04:14:32.485277 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4352" for this suite. @ 07/04/24 04:14:32.493
â€¢ [5.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 07/04/24 04:14:32.507
  I0704 04:14:32.507738 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 04:14:32.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:14:32.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:14:32.608
  STEP: Creating a pod to test downward API volume plugin @ 07/04/24 04:14:32.613
  E0704 04:14:32.951113      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:33.951588      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:34.952307      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:35.952689      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:14:36.648
  I0704 04:14:36.652257 20 output.go:196] Trying to get logs from node 18.191.27.132 pod downwardapi-volume-2d9c501f-fdb5-4ed1-bc9e-dd413d05be6a container client-container: <nil>
  STEP: delete the pod @ 07/04/24 04:14:36.661
  I0704 04:14:36.679816 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5874" for this suite. @ 07/04/24 04:14:36.69
â€¢ [4.202 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1537
  STEP: Creating a kubernetes client @ 07/04/24 04:14:36.71
  I0704 04:14:36.710239 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename services @ 07/04/24 04:14:36.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:14:36.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:14:36.744
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-8092 @ 07/04/24 04:14:36.747
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/04/24 04:14:36.819
  STEP: creating service externalsvc in namespace services-8092 @ 07/04/24 04:14:36.82
  STEP: creating replication controller externalsvc in namespace services-8092 @ 07/04/24 04:14:36.842
  I0704 04:14:36.853125      20 runners.go:198] Created replication controller with name: externalsvc, namespace: services-8092, replica count: 2
  E0704 04:14:36.952898      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:37.954064      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:38.954884      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:14:39.904190      20 runners.go:198] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 07/04/24 04:14:39.906
  I0704 04:14:39.921188 20 resource.go:361] Creating new exec pod
  E0704 04:14:39.955390      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:40.955728      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:14:41.953541 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-8092 exec execpodq2jjh -- /bin/sh -x -c nslookup nodeport-service.services-8092.svc.cluster.local'
  E0704 04:14:41.956962      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:14:42.167120 20 builder.go:146] stderr: "+ nslookup nodeport-service.services-8092.svc.cluster.local\n"
  I0704 04:14:42.167333 20 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nnodeport-service.services-8092.svc.cluster.local\tcanonical name = externalsvc.services-8092.svc.cluster.local.\nName:\texternalsvc.services-8092.svc.cluster.local\nAddress: 10.43.6.172\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-8092, will wait for the garbage collector to delete the pods @ 07/04/24 04:14:42.167
  I0704 04:14:42.226335 20 resources.go:139] Deleting ReplicationController externalsvc took: 4.764765ms
  I0704 04:14:42.327075 20 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.73674ms
  E0704 04:14:42.956951      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:43.957812      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:44.958834      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:14:45.350989 20 service.go:1548] Cleaning up the NodePort to ExternalName test service
  I0704 04:14:45.365426 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8092" for this suite. @ 07/04/24 04:14:45.374
â€¢ [8.670 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 07/04/24 04:14:45.381
  I0704 04:14:45.381376 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename security-context-test @ 07/04/24 04:14:45.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:14:45.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:14:45.44
  E0704 04:14:45.959763      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:46.959883      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:47.960873      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:48.961197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:14:49.465791 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6065" for this suite. @ 07/04/24 04:14:49.469
â€¢ [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 07/04/24 04:14:49.478
  I0704 04:14:49.478392 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename sysctl @ 07/04/24 04:14:49.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:14:49.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:14:49.496
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 07/04/24 04:14:49.499
  STEP: Watching for error events or started pod @ 07/04/24 04:14:49.505
  E0704 04:14:49.962200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:50.963084      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 07/04/24 04:14:51.509
  E0704 04:14:51.963636      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:52.963843      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 07/04/24 04:14:53.519
  STEP: Getting logs from the pod @ 07/04/24 04:14:53.519
  STEP: Checking that the sysctl is actually updated @ 07/04/24 04:14:53.525
  I0704 04:14:53.525778 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8240" for this suite. @ 07/04/24 04:14:53.528
â€¢ [4.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 07/04/24 04:14:53.536
  I0704 04:14:53.536255 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename kubectl-logs @ 07/04/24 04:14:53.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:14:53.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:14:53.554
  STEP: creating an pod @ 07/04/24 04:14:53.557
  I0704 04:14:53.557726 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-logs-5886 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0704 04:14:53.678505 20 builder.go:146] stderr: ""
  I0704 04:14:53.678548 20 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 07/04/24 04:14:53.678
  I0704 04:14:53.678833 20 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0704 04:14:53.963876      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:54.964009      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:14:55.686941 20 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 07/04/24 04:14:55.686
  I0704 04:14:55.687058 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-logs-5886 logs logs-generator logs-generator'
  I0704 04:14:55.791719 20 builder.go:146] stderr: ""
  I0704 04:14:55.791778 20 builder.go:147] stdout: "I0704 04:14:54.767575       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/qgg 282\nI0704 04:14:54.967914       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/rjz 471\nI0704 04:14:55.168247       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/gq26 315\nI0704 04:14:55.368610       1 logs_generator.go:76] 3 GET /api/v1/namespaces/ns/pods/m2xh 335\nI0704 04:14:55.567924       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/spq 598\nI0704 04:14:55.768301       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/xqr 384\n"
  STEP: limiting log lines @ 07/04/24 04:14:55.791
  I0704 04:14:55.791899 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-logs-5886 logs logs-generator logs-generator --tail=1'
  I0704 04:14:55.888158 20 builder.go:146] stderr: ""
  I0704 04:14:55.888225 20 builder.go:147] stdout: "I0704 04:14:55.768301       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/xqr 384\n"
  I0704 04:14:55.888241 20 logs.go:127] got output "I0704 04:14:55.768301       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/xqr 384\n"
  STEP: limiting log bytes @ 07/04/24 04:14:55.888
  I0704 04:14:55.888595 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-logs-5886 logs logs-generator logs-generator --limit-bytes=1'
  E0704 04:14:55.964104      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:14:55.966033 20 builder.go:146] stderr: ""
  I0704 04:14:55.966212 20 builder.go:147] stdout: "I"
  I0704 04:14:55.966227 20 logs.go:133] got output "I"
  STEP: exposing timestamps @ 07/04/24 04:14:55.966
  I0704 04:14:55.966537 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-logs-5886 logs logs-generator logs-generator --tail=1 --timestamps'
  I0704 04:14:56.082055 20 builder.go:146] stderr: ""
  I0704 04:14:56.082114 20 builder.go:147] stdout: "2024-07-04T04:14:55.968961572Z I0704 04:14:55.968832       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/xch 578\n"
  I0704 04:14:56.082131 20 logs.go:139] got output "2024-07-04T04:14:55.968961572Z I0704 04:14:55.968832       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/xch 578\n"
  STEP: restricting to a time range @ 07/04/24 04:14:56.082
  E0704 04:14:56.964758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:14:57.964853      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:14:58.583602 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-logs-5886 logs logs-generator logs-generator --since=1s'
  I0704 04:14:58.688004 20 builder.go:146] stderr: ""
  I0704 04:14:58.688069 20 builder.go:147] stdout: "I0704 04:14:57.768369       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/gk9 204\nI0704 04:14:57.967667       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/k2r 283\nI0704 04:14:58.168072       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/pvdn 444\nI0704 04:14:58.368377       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/58dq 218\nI0704 04:14:58.567618       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/9tn 541\n"
  I0704 04:14:58.688131 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-logs-5886 logs logs-generator logs-generator --since=24h'
  I0704 04:14:58.821326 20 builder.go:146] stderr: ""
  I0704 04:14:58.821415 20 builder.go:147] stdout: "I0704 04:14:54.767575       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/qgg 282\nI0704 04:14:54.967914       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/rjz 471\nI0704 04:14:55.168247       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/gq26 315\nI0704 04:14:55.368610       1 logs_generator.go:76] 3 GET /api/v1/namespaces/ns/pods/m2xh 335\nI0704 04:14:55.567924       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/spq 598\nI0704 04:14:55.768301       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/xqr 384\nI0704 04:14:55.968832       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/xch 578\nI0704 04:14:56.168145       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/f5k 478\nI0704 04:14:56.368392       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/s4k 343\nI0704 04:14:56.567650       1 logs_generator.go:76] 9 POST /api/v1/namespaces/kube-system/pods/plvz 457\nI0704 04:14:56.767961       1 logs_generator.go:76] 10 GET /api/v1/namespaces/ns/pods/x5v 367\nI0704 04:14:56.968291       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/kube-system/pods/wpc 594\nI0704 04:14:57.168624       1 logs_generator.go:76] 12 GET /api/v1/namespaces/default/pods/blv 412\nI0704 04:14:57.367791       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/default/pods/h7c 508\nI0704 04:14:57.568102       1 logs_generator.go:76] 14 GET /api/v1/namespaces/kube-system/pods/wb6 334\nI0704 04:14:57.768369       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/gk9 204\nI0704 04:14:57.967667       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/k2r 283\nI0704 04:14:58.168072       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/pvdn 444\nI0704 04:14:58.368377       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/58dq 218\nI0704 04:14:58.567618       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/9tn 541\nI0704 04:14:58.767931       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/wwfl 349\n"
  I0704 04:14:58.821533 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-logs-5886 delete pod logs-generator'
  E0704 04:14:58.965291      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:14:59.546780 20 builder.go:146] stderr: ""
  I0704 04:14:59.546820 20 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0704 04:14:59.546991 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-5886" for this suite. @ 07/04/24 04:14:59.556
â€¢ [6.028 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:334
  STEP: Creating a kubernetes client @ 07/04/24 04:14:59.563
  I0704 04:14:59.563983 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename sched-pred @ 07/04/24 04:14:59.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:14:59.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:14:59.587
  I0704 04:14:59.591260 20 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0704 04:14:59.598556 20 util.go:400] Waiting for terminating namespaces to be deleted...
  I0704 04:14:59.600912 20 predicates.go:121] 
  Logging pods the apiserver thinks is on node 18.118.109.209 before test
  I0704 04:14:59.606289 20 predicates.go:887] calico-kube-controllers-5b878c8d6f-qchnq from kube-system started at 2024-07-04 03:00:03 +0000 UTC (1 container statuses recorded)
  I0704 04:14:59.606327 20 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I0704 04:14:59.606340 20 predicates.go:887] canal-7mrtp from kube-system started at 2024-07-04 03:00:03 +0000 UTC (2 container statuses recorded)
  I0704 04:14:59.606348 20 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0704 04:14:59.606357 20 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0704 04:14:59.606548 20 predicates.go:887] coredns-autoscaler-7db8ddc8cf-c6v99 from kube-system started at 2024-07-04 03:00:15 +0000 UTC (1 container statuses recorded)
  I0704 04:14:59.606560 20 predicates.go:889] 	Container autoscaler ready: true, restart count 0
  I0704 04:14:59.606619 20 predicates.go:887] sonobuoy-e2e-job-29e78ee3095b40b0 from sonobuoy started at 2024-07-04 03:22:00 +0000 UTC (2 container statuses recorded)
  I0704 04:14:59.606630 20 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0704 04:14:59.606639 20 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0704 04:14:59.606828 20 predicates.go:887] sonobuoy-systemd-logs-daemon-set-f25fe8f61e184228-dc5qd from sonobuoy started at 2024-07-04 03:22:00 +0000 UTC (2 container statuses recorded)
  I0704 04:14:59.607001 20 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0704 04:14:59.607101 20 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0704 04:14:59.608794 20 predicates.go:121] 
  Logging pods the apiserver thinks is on node 18.191.27.132 before test
  I0704 04:14:59.614700 20 predicates.go:887] canal-fjqx2 from kube-system started at 2024-07-04 03:00:03 +0000 UTC (2 container statuses recorded)
  I0704 04:14:59.614735 20 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0704 04:14:59.614751 20 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0704 04:14:59.614763 20 predicates.go:887] coredns-878dbb559-n6nrk from kube-system started at 2024-07-04 03:00:34 +0000 UTC (1 container statuses recorded)
  I0704 04:14:59.615179 20 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0704 04:14:59.615367 20 predicates.go:887] rke-coredns-addon-deploy-job-vl45b from kube-system started at 2024-07-04 03:00:13 +0000 UTC (1 container statuses recorded)
  I0704 04:14:59.615383 20 predicates.go:889] 	Container rke-coredns-addon-pod ready: false, restart count 0
  I0704 04:14:59.615492 20 predicates.go:887] rke-metrics-addon-deploy-job-h5rd9 from kube-system started at 2024-07-04 03:00:20 +0000 UTC (1 container statuses recorded)
  I0704 04:14:59.615505 20 predicates.go:889] 	Container rke-metrics-addon-pod ready: false, restart count 0
  I0704 04:14:59.615516 20 predicates.go:887] rke-network-plugin-deploy-job-p5wc5 from kube-system started at 2024-07-04 03:00:00 +0000 UTC (1 container statuses recorded)
  I0704 04:14:59.615566 20 predicates.go:889] 	Container rke-network-plugin-pod ready: false, restart count 0
  I0704 04:14:59.615667 20 predicates.go:887] sonobuoy from sonobuoy started at 2024-07-04 03:21:56 +0000 UTC (1 container statuses recorded)
  I0704 04:14:59.615676 20 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0704 04:14:59.615688 20 predicates.go:887] sonobuoy-systemd-logs-daemon-set-f25fe8f61e184228-7wp7w from sonobuoy started at 2024-07-04 03:22:00 +0000 UTC (2 container statuses recorded)
  I0704 04:14:59.615769 20 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0704 04:14:59.615793 20 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0704 04:14:59.615805 20 predicates.go:121] 
  Logging pods the apiserver thinks is on node 3.142.51.114 before test
  I0704 04:14:59.620747 20 predicates.go:887] canal-55jg5 from kube-system started at 2024-07-04 03:00:03 +0000 UTC (2 container statuses recorded)
  I0704 04:14:59.620783 20 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0704 04:14:59.620796 20 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0704 04:14:59.620809 20 predicates.go:887] coredns-878dbb559-x42jf from kube-system started at 2024-07-04 03:00:14 +0000 UTC (1 container statuses recorded)
  I0704 04:14:59.620818 20 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0704 04:14:59.620828 20 predicates.go:887] metrics-server-85f57469bf-24s6n from kube-system started at 2024-07-04 03:00:23 +0000 UTC (1 container statuses recorded)
  I0704 04:14:59.620836 20 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I0704 04:14:59.620880 20 predicates.go:887] sonobuoy-systemd-logs-daemon-set-f25fe8f61e184228-gg2w2 from sonobuoy started at 2024-07-04 03:22:00 +0000 UTC (2 container statuses recorded)
  I0704 04:14:59.620905 20 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0704 04:14:59.620913 20 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node 18.118.109.209 @ 07/04/24 04:14:59.648
  STEP: verifying the node has the label node 18.191.27.132 @ 07/04/24 04:14:59.693
  STEP: verifying the node has the label node 3.142.51.114 @ 07/04/24 04:14:59.712
  I0704 04:14:59.734979 20 predicates.go:374] Pod calico-kube-controllers-5b878c8d6f-qchnq requesting resource cpu=0m on Node 18.118.109.209
  I0704 04:14:59.735159 20 predicates.go:374] Pod canal-55jg5 requesting resource cpu=250m on Node 3.142.51.114
  I0704 04:14:59.735173 20 predicates.go:374] Pod canal-7mrtp requesting resource cpu=250m on Node 18.118.109.209
  I0704 04:14:59.735712 20 predicates.go:374] Pod canal-fjqx2 requesting resource cpu=250m on Node 18.191.27.132
  I0704 04:14:59.736080 20 predicates.go:374] Pod coredns-878dbb559-n6nrk requesting resource cpu=100m on Node 18.191.27.132
  I0704 04:14:59.736629 20 predicates.go:374] Pod coredns-878dbb559-x42jf requesting resource cpu=100m on Node 3.142.51.114
  I0704 04:14:59.736878 20 predicates.go:374] Pod coredns-autoscaler-7db8ddc8cf-c6v99 requesting resource cpu=20m on Node 18.118.109.209
  I0704 04:14:59.737421 20 predicates.go:374] Pod metrics-server-85f57469bf-24s6n requesting resource cpu=100m on Node 3.142.51.114
  I0704 04:14:59.737911 20 predicates.go:374] Pod sonobuoy requesting resource cpu=0m on Node 18.191.27.132
  I0704 04:14:59.737932 20 predicates.go:374] Pod sonobuoy-e2e-job-29e78ee3095b40b0 requesting resource cpu=0m on Node 18.118.109.209
  I0704 04:14:59.737945 20 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-f25fe8f61e184228-7wp7w requesting resource cpu=0m on Node 18.191.27.132
  I0704 04:14:59.738038 20 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-f25fe8f61e184228-dc5qd requesting resource cpu=0m on Node 18.118.109.209
  I0704 04:14:59.738069 20 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-f25fe8f61e184228-gg2w2 requesting resource cpu=0m on Node 3.142.51.114
  STEP: Starting Pods to consume most of the cluster CPU. @ 07/04/24 04:14:59.738
  I0704 04:14:59.738167 20 predicates.go:384] Creating a pod which consumes cpu=1211m on Node 18.118.109.209
  I0704 04:14:59.752798 20 predicates.go:384] Creating a pod which consumes cpu=1155m on Node 18.191.27.132
  I0704 04:14:59.763390 20 predicates.go:384] Creating a pod which consumes cpu=1085m on Node 3.142.51.114
  E0704 04:14:59.965436      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:00.967649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 07/04/24 04:15:01.888
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0213a7e2-5eaa-4091-9371-ef014e601bc6.17dee75e4486bd3f], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8109/filler-pod-0213a7e2-5eaa-4091-9371-ef014e601bc6 to 18.118.109.209] @ 07/04/24 04:15:01.907
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0213a7e2-5eaa-4091-9371-ef014e601bc6.17dee75e823f089d], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 07/04/24 04:15:01.907
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0213a7e2-5eaa-4091-9371-ef014e601bc6.17dee75e859d5026], Reason = [Created], Message = [Created container filler-pod-0213a7e2-5eaa-4091-9371-ef014e601bc6] @ 07/04/24 04:15:01.908
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0213a7e2-5eaa-4091-9371-ef014e601bc6.17dee75e8f7f8917], Reason = [Started], Message = [Started container filler-pod-0213a7e2-5eaa-4091-9371-ef014e601bc6] @ 07/04/24 04:15:01.908
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-dd43d8c2-54a8-4905-b8d6-99ba3fb06480.17dee75e460c1ba8], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8109/filler-pod-dd43d8c2-54a8-4905-b8d6-99ba3fb06480 to 18.191.27.132] @ 07/04/24 04:15:01.908
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-dd43d8c2-54a8-4905-b8d6-99ba3fb06480.17dee75e7e84e183], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 07/04/24 04:15:01.908
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-dd43d8c2-54a8-4905-b8d6-99ba3fb06480.17dee75e82e01e1f], Reason = [Created], Message = [Created container filler-pod-dd43d8c2-54a8-4905-b8d6-99ba3fb06480] @ 07/04/24 04:15:01.908
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-dd43d8c2-54a8-4905-b8d6-99ba3fb06480.17dee75e8ad7e889], Reason = [Started], Message = [Started container filler-pod-dd43d8c2-54a8-4905-b8d6-99ba3fb06480] @ 07/04/24 04:15:01.908
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f87c43b7-6193-4cc8-88b8-88f1379fe534.17dee75e487c5265], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8109/filler-pod-f87c43b7-6193-4cc8-88b8-88f1379fe534 to 3.142.51.114] @ 07/04/24 04:15:01.908
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f87c43b7-6193-4cc8-88b8-88f1379fe534.17dee75e836f3d7c], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 07/04/24 04:15:01.908
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f87c43b7-6193-4cc8-88b8-88f1379fe534.17dee75e882074f5], Reason = [Created], Message = [Created container filler-pod-f87c43b7-6193-4cc8-88b8-88f1379fe534] @ 07/04/24 04:15:01.908
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f87c43b7-6193-4cc8-88b8-88f1379fe534.17dee75e8f8439d5], Reason = [Started], Message = [Started container filler-pod-f87c43b7-6193-4cc8-88b8-88f1379fe534] @ 07/04/24 04:15:01.908
  E0704 04:15:01.968196      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17dee75ec62eb564], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod.] @ 07/04/24 04:15:01.986
  STEP: removing the label node off the node 18.118.109.209 @ 07/04/24 04:15:02.948
  E0704 04:15:02.973874      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the node doesn't have the label node @ 07/04/24 04:15:02.974
  STEP: removing the label node off the node 18.191.27.132 @ 07/04/24 04:15:02.978
  STEP: verifying the node doesn't have the label node @ 07/04/24 04:15:03.019
  STEP: removing the label node off the node 3.142.51.114 @ 07/04/24 04:15:03.029
  STEP: verifying the node doesn't have the label node @ 07/04/24 04:15:03.055
  I0704 04:15:03.061391 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8109" for this suite. @ 07/04/24 04:15:03.067
â€¢ [3.514 seconds]
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 07/04/24 04:15:03.078
  I0704 04:15:03.078448 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename cronjob @ 07/04/24 04:15:03.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:15:03.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:15:03.102
  STEP: Creating a ReplaceConcurrent cronjob @ 07/04/24 04:15:03.107
  STEP: Ensuring a job is scheduled @ 07/04/24 04:15:03.113
  E0704 04:15:03.975003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:04.975154      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:05.975654      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:06.975633      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:07.975788      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:08.976448      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:09.976562      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:10.976781      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:11.976942      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:12.977003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:13.983681      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:14.979871      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:15.980092      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:16.982202      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:17.983071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:18.983525      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:19.983652      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:20.983764      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:21.984430      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:22.984740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:23.987704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:24.987809      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:25.988644      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:26.988767      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:27.989829      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:28.990323      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:29.991356      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:30.994276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:31.995352      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:32.995630      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:33.998943      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:35.001477      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:36.000707      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:37.000869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:38.001919      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:39.002962      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:40.003086      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:41.003191      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:42.004009      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:43.004706      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:44.006425      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:45.006560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:46.006899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:47.007037      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:48.007098      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:49.007211      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:50.007381      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:51.007538      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:52.008341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:53.008531      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:54.009793      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:55.009969      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:56.012320      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:57.012445      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:58.013091      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:15:59.013232      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:00.023200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:01.023435      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 07/04/24 04:16:01.117
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/04/24 04:16:01.121
  STEP: Ensuring the job is replaced with a new one @ 07/04/24 04:16:01.125
  E0704 04:16:02.024420      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:03.024580      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:04.024725      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:05.025150      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:06.025317      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:07.025596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:08.026303      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:09.026491      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:10.026755      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:11.027088      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:12.027187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:13.027402      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:14.027721      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:15.028039      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:16.028269      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:17.028668      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:18.028795      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:19.029249      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:20.029394      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:21.029574      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:22.030273      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:23.030622      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:24.031640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:25.031820      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:26.031962      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:27.032138      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:28.032242      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:29.033265      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:30.033388      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:31.033550      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:32.033583      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:33.034205      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:34.034340      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:35.034739      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:36.034582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:37.034718      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:38.034833      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:39.035553      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:40.035655      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:41.035787      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:42.036340      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:43.036733      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:44.036908      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:45.037060      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:46.037308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:47.037327      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:48.037482      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:49.037646      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:50.038623      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:51.039068      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:52.039615      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:53.039664      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:54.040014      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:55.040151      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:56.040737      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:57.041194      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:58.042571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:16:59.043601      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:00.043685      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:01.044712      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 07/04/24 04:17:01.137
  I0704 04:17:01.151277 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3719" for this suite. @ 07/04/24 04:17:01.173
â€¢ [118.115 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 07/04/24 04:17:01.193
  I0704 04:17:01.193747 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename containers @ 07/04/24 04:17:01.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:17:01.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:17:01.259
  STEP: Creating a pod to test override all @ 07/04/24 04:17:01.272
  E0704 04:17:02.044873      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:03.044991      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:04.045321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:05.045547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:17:05.293
  I0704 04:17:05.296423 20 output.go:196] Trying to get logs from node 18.191.27.132 pod client-containers-cd484460-74d5-45f1-b646-4eaf52360a5b container agnhost-container: <nil>
  STEP: delete the pod @ 07/04/24 04:17:05.319
  I0704 04:17:05.336919 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7589" for this suite. @ 07/04/24 04:17:05.34
â€¢ [4.153 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 07/04/24 04:17:05.346
  I0704 04:17:05.346508 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename proxy @ 07/04/24 04:17:05.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:17:05.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:17:05.374
  STEP: starting an echo server on multiple ports @ 07/04/24 04:17:05.421
  STEP: creating replication controller proxy-service-27tq9 in namespace proxy-8604 @ 07/04/24 04:17:05.421
  I0704 04:17:05.476924      20 runners.go:198] Created replication controller with name: proxy-service-27tq9, namespace: proxy-8604, replica count: 1
  E0704 04:17:06.046118      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:17:06.527799      20 runners.go:198] proxy-service-27tq9 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0704 04:17:07.046448      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:17:07.527978      20 runners.go:198] proxy-service-27tq9 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0704 04:17:07.533275 20 proxy.go:230] setup took 2.154664385s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 07/04/24 04:17:07.533
  I0704 04:17:07.578754 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">test<... (200; 44.365021ms)
  I0704 04:17:07.583799 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">... (200; 48.330905ms)
  I0704 04:17:07.583858 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/rewriteme">test</a> (200; 49.173343ms)
  I0704 04:17:07.583882 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 48.921623ms)
  I0704 04:17:07.583897 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 49.078846ms)
  I0704 04:17:07.584328 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/tlsrewritem... (200; 49.025661ms)
  I0704 04:17:07.584827 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 49.412247ms)
  I0704 04:17:07.585444 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:462/proxy/: tls qux (200; 49.409029ms)
  I0704 04:17:07.585707 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 49.739063ms)
  I0704 04:17:07.591096 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:460/proxy/: tls baz (200; 53.175312ms)
  I0704 04:17:07.591650 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname1/proxy/: foo (200; 57.047171ms)
  I0704 04:17:07.591651 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname1/proxy/: foo (200; 55.550661ms)
  I0704 04:17:07.591792 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname2/proxy/: bar (200; 55.595782ms)
  I0704 04:17:07.592155 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname1/proxy/: tls baz (200; 54.769277ms)
  I0704 04:17:07.592171 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname2/proxy/: bar (200; 56.032836ms)
  I0704 04:17:07.593012 20 proxy.go:558] (0) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname2/proxy/: tls qux (200; 55.234769ms)
  I0704 04:17:07.607194 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname2/proxy/: bar (200; 13.92758ms)
  I0704 04:17:07.607256 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname1/proxy/: tls baz (200; 13.933456ms)
  I0704 04:17:07.607789 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname2/proxy/: bar (200; 14.667626ms)
  I0704 04:17:07.608296 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/tlsrewritem... (200; 15.216856ms)
  I0704 04:17:07.608558 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">test<... (200; 14.891816ms)
  I0704 04:17:07.611199 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 17.440536ms)
  I0704 04:17:07.611232 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">... (200; 17.522363ms)
  I0704 04:17:07.611262 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 17.363709ms)
  I0704 04:17:07.611303 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 17.502026ms)
  I0704 04:17:07.611805 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/rewriteme">test</a> (200; 17.949906ms)
  I0704 04:17:07.611805 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:462/proxy/: tls qux (200; 18.277633ms)
  I0704 04:17:07.612215 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 18.780355ms)
  I0704 04:17:07.612284 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname1/proxy/: foo (200; 18.713947ms)
  I0704 04:17:07.612475 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname2/proxy/: tls qux (200; 19.094188ms)
  I0704 04:17:07.612736 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:460/proxy/: tls baz (200; 19.256737ms)
  I0704 04:17:07.612755 20 proxy.go:558] (1) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname1/proxy/: foo (200; 19.136704ms)
  I0704 04:17:07.624717 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 11.323578ms)
  I0704 04:17:07.625815 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/rewriteme">test</a> (200; 12.722302ms)
  I0704 04:17:07.626916 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">... (200; 13.744977ms)
  I0704 04:17:07.639053 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 25.767166ms)
  I0704 04:17:07.639043 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname2/proxy/: bar (200; 25.528165ms)
  I0704 04:17:07.639232 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 25.905281ms)
  I0704 04:17:07.639363 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname2/proxy/: tls qux (200; 26.285014ms)
  I0704 04:17:07.639411 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/tlsrewritem... (200; 26.053223ms)
  I0704 04:17:07.640590 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname1/proxy/: foo (200; 27.327368ms)
  I0704 04:17:07.640631 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname2/proxy/: bar (200; 27.187997ms)
  I0704 04:17:07.640660 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname1/proxy/: foo (200; 27.072432ms)
  I0704 04:17:07.641681 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:460/proxy/: tls baz (200; 28.265787ms)
  I0704 04:17:07.641958 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 28.772486ms)
  I0704 04:17:07.642506 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname1/proxy/: tls baz (200; 29.030524ms)
  I0704 04:17:07.642579 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:462/proxy/: tls qux (200; 29.365376ms)
  I0704 04:17:07.642602 20 proxy.go:558] (2) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">test<... (200; 29.047372ms)
  I0704 04:17:07.653379 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 10.182429ms)
  I0704 04:17:07.654758 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname1/proxy/: tls baz (200; 11.954035ms)
  I0704 04:17:07.654763 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:460/proxy/: tls baz (200; 11.524233ms)
  I0704 04:17:07.654792 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname2/proxy/: tls qux (200; 11.639852ms)
  I0704 04:17:07.655764 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 12.324706ms)
  I0704 04:17:07.655784 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/rewriteme">test</a> (200; 12.27196ms)
  I0704 04:17:07.655809 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">test<... (200; 12.431141ms)
  I0704 04:17:07.656434 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname1/proxy/: foo (200; 13.34592ms)
  I0704 04:17:07.656496 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 13.145129ms)
  I0704 04:17:07.656517 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">... (200; 13.109464ms)
  I0704 04:17:07.656555 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/tlsrewritem... (200; 13.28168ms)
  I0704 04:17:07.657010 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 13.405841ms)
  I0704 04:17:07.657761 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname1/proxy/: foo (200; 14.296667ms)
  I0704 04:17:07.657765 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname2/proxy/: bar (200; 14.442709ms)
  I0704 04:17:07.657802 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:462/proxy/: tls qux (200; 14.246582ms)
  I0704 04:17:07.657903 20 proxy.go:558] (3) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname2/proxy/: bar (200; 14.614426ms)
  I0704 04:17:07.679810 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname2/proxy/: bar (200; 21.61ms)
  I0704 04:17:07.679810 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 21.736186ms)
  I0704 04:17:07.679847 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 21.614913ms)
  I0704 04:17:07.681175 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">... (200; 22.641728ms)
  I0704 04:17:07.681179 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:460/proxy/: tls baz (200; 23.155081ms)
  I0704 04:17:07.681223 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/rewriteme">test</a> (200; 23.064757ms)
  I0704 04:17:07.681196 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname1/proxy/: tls baz (200; 22.935821ms)
  I0704 04:17:07.682306 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 23.925742ms)
  I0704 04:17:07.682375 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname1/proxy/: foo (200; 24.250805ms)
  I0704 04:17:07.682673 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname2/proxy/: tls qux (200; 24.220304ms)
  I0704 04:17:07.683827 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:462/proxy/: tls qux (200; 25.413714ms)
  I0704 04:17:07.683838 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname2/proxy/: bar (200; 25.837219ms)
  I0704 04:17:07.684494 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname1/proxy/: foo (200; 25.999605ms)
  I0704 04:17:07.684620 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/tlsrewritem... (200; 26.295672ms)
  I0704 04:17:07.686091 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 27.512407ms)
  I0704 04:17:07.686560 20 proxy.go:558] (4) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">test<... (200; 28.205972ms)
  I0704 04:17:07.692923 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">... (200; 6.26923ms)
  I0704 04:17:07.697109 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/rewriteme">test</a> (200; 9.413183ms)
  I0704 04:17:07.698359 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 10.5182ms)
  I0704 04:17:07.704945 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 15.229628ms)
  I0704 04:17:07.705681 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">test<... (200; 14.637017ms)
  I0704 04:17:07.705673 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 16.238051ms)
  I0704 04:17:07.705702 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 17.732797ms)
  I0704 04:17:07.706220 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/tlsrewritem... (200; 17.641862ms)
  I0704 04:17:07.706400 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:462/proxy/: tls qux (200; 16.248573ms)
  I0704 04:17:07.706441 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname1/proxy/: foo (200; 19.250325ms)
  I0704 04:17:07.708759 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname2/proxy/: bar (200; 18.247498ms)
  I0704 04:17:07.708775 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname2/proxy/: bar (200; 19.909548ms)
  I0704 04:17:07.708834 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:460/proxy/: tls baz (200; 20.186335ms)
  I0704 04:17:07.708853 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname1/proxy/: tls baz (200; 19.747169ms)
  I0704 04:17:07.708911 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname1/proxy/: foo (200; 18.606859ms)
  I0704 04:17:07.708969 20 proxy.go:558] (5) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname2/proxy/: tls qux (200; 19.682635ms)
  I0704 04:17:07.718328 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:460/proxy/: tls baz (200; 9.134196ms)
  I0704 04:17:07.731241 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 21.815571ms)
  I0704 04:17:07.731295 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname2/proxy/: bar (200; 21.989448ms)
  I0704 04:17:07.731320 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">test<... (200; 21.981666ms)
  I0704 04:17:07.731364 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname1/proxy/: foo (200; 22.098358ms)
  I0704 04:17:07.731404 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">... (200; 22.015185ms)
  I0704 04:17:07.732477 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 23.019126ms)
  I0704 04:17:07.732809 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/tlsrewritem... (200; 23.320657ms)
  I0704 04:17:07.738074 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:462/proxy/: tls qux (200; 28.383645ms)
  I0704 04:17:07.738098 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 28.440123ms)
  I0704 04:17:07.738221 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 28.638368ms)
  I0704 04:17:07.738240 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname2/proxy/: tls qux (200; 28.625353ms)
  I0704 04:17:07.738260 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname1/proxy/: tls baz (200; 28.716112ms)
  I0704 04:17:07.738978 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname2/proxy/: bar (200; 29.458788ms)
  I0704 04:17:07.738978 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/rewriteme">test</a> (200; 29.770842ms)
  I0704 04:17:07.739647 20 proxy.go:558] (6) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname1/proxy/: foo (200; 29.929954ms)
  I0704 04:17:07.747969 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 8.044015ms)
  I0704 04:17:07.748760 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">... (200; 8.540739ms)
  I0704 04:17:07.754542 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:460/proxy/: tls baz (200; 14.548233ms)
  I0704 04:17:07.754542 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:462/proxy/: tls qux (200; 14.742639ms)
  I0704 04:17:07.761101 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 20.612588ms)
  I0704 04:17:07.761103 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 18.988222ms)
  I0704 04:17:07.761141 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname2/proxy/: bar (200; 21.096155ms)
  I0704 04:17:07.763571 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">test<... (200; 21.659474ms)
  I0704 04:17:07.764516 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname1/proxy/: foo (200; 22.884411ms)
  I0704 04:17:07.764828 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname2/proxy/: bar (200; 23.045969ms)
  I0704 04:17:07.765126 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname1/proxy/: tls baz (200; 25.020066ms)
  I0704 04:17:07.765132 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname1/proxy/: foo (200; 23.819769ms)
  I0704 04:17:07.765156 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname2/proxy/: tls qux (200; 24.997651ms)
  I0704 04:17:07.768290 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/rewriteme">test</a> (200; 25.866818ms)
  I0704 04:17:07.768553 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 25.541476ms)
  I0704 04:17:07.768917 20 proxy.go:558] (7) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/tlsrewritem... (200; 29.218524ms)
  I0704 04:17:07.780211 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">... (200; 11.18942ms)
  I0704 04:17:07.784277 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">test<... (200; 15.019746ms)
  I0704 04:17:07.784328 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 14.867797ms)
  I0704 04:17:07.784352 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 15.225392ms)
  I0704 04:17:07.784773 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/rewriteme">test</a> (200; 15.360088ms)
  I0704 04:17:07.784865 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:462/proxy/: tls qux (200; 15.701263ms)
  I0704 04:17:07.784928 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 15.58531ms)
  I0704 04:17:07.785116 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname2/proxy/: bar (200; 15.82729ms)
  I0704 04:17:07.785147 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 15.71389ms)
  I0704 04:17:07.785461 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:460/proxy/: tls baz (200; 15.924414ms)
  I0704 04:17:07.785593 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/tlsrewritem... (200; 16.281376ms)
  I0704 04:17:07.785813 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname1/proxy/: foo (200; 16.415787ms)
  I0704 04:17:07.785935 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname2/proxy/: tls qux (200; 16.441339ms)
  I0704 04:17:07.785996 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname1/proxy/: tls baz (200; 16.938836ms)
  I0704 04:17:07.786024 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname2/proxy/: bar (200; 16.475175ms)
  I0704 04:17:07.786139 20 proxy.go:558] (8) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname1/proxy/: foo (200; 16.926735ms)
  I0704 04:17:07.790834 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/tlsrewritem... (200; 4.415125ms)
  I0704 04:17:07.792213 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 6.001291ms)
  I0704 04:17:07.795467 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname2/proxy/: bar (200; 8.927141ms)
  I0704 04:17:07.795727 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname2/proxy/: tls qux (200; 9.089348ms)
  I0704 04:17:07.795792 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:460/proxy/: tls baz (200; 9.056634ms)
  I0704 04:17:07.796751 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 10.397508ms)
  I0704 04:17:07.796797 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 10.110788ms)
  I0704 04:17:07.796822 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname1/proxy/: tls baz (200; 10.239562ms)
  I0704 04:17:07.797719 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">test<... (200; 10.835656ms)
  I0704 04:17:07.797754 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">... (200; 10.826953ms)
  I0704 04:17:07.799675 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname2/proxy/: bar (200; 12.841239ms)
  I0704 04:17:07.800065 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname1/proxy/: foo (200; 13.278375ms)
  I0704 04:17:07.800106 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 13.124993ms)
  I0704 04:17:07.800188 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname1/proxy/: foo (200; 13.121336ms)
  I0704 04:17:07.800200 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/rewriteme">test</a> (200; 13.08185ms)
  I0704 04:17:07.805105 20 proxy.go:558] (9) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:462/proxy/: tls qux (200; 18.071471ms)
  I0704 04:17:07.815117 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/rewriteme">test</a> (200; 6.87845ms)
  I0704 04:17:07.815240 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/tlsrewritem... (200; 7.278688ms)
  I0704 04:17:07.819459 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 11.14633ms)
  I0704 04:17:07.819560 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname1/proxy/: foo (200; 11.419659ms)
  I0704 04:17:07.819585 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 11.069783ms)
  I0704 04:17:07.819465 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:460/proxy/: tls baz (200; 11.001418ms)
  I0704 04:17:07.820462 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 12.053133ms)
  I0704 04:17:07.821821 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">... (200; 12.943641ms)
  I0704 04:17:07.822832 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">test<... (200; 14.017942ms)
  I0704 04:17:07.822832 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 13.92021ms)
  I0704 04:17:07.823258 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:462/proxy/: tls qux (200; 14.316125ms)
  I0704 04:17:07.823682 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname1/proxy/: tls baz (200; 15.083297ms)
  I0704 04:17:07.823690 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname2/proxy/: bar (200; 15.133551ms)
  I0704 04:17:07.823760 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname2/proxy/: bar (200; 14.752463ms)
  I0704 04:17:07.823786 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname2/proxy/: tls qux (200; 15.069431ms)
  I0704 04:17:07.823946 20 proxy.go:558] (10) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname1/proxy/: foo (200; 14.97059ms)
  I0704 04:17:07.828838 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">... (200; 4.842438ms)
  I0704 04:17:07.828832 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/rewriteme">test</a> (200; 4.586949ms)
  I0704 04:17:07.829818 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname1/proxy/: foo (200; 5.636499ms)
  I0704 04:17:07.830162 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 5.871448ms)
  I0704 04:17:07.832555 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/tlsrewritem... (200; 8.157049ms)
  I0704 04:17:07.832597 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 8.246384ms)
  I0704 04:17:07.833251 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:460/proxy/: tls baz (200; 8.804744ms)
  I0704 04:17:07.835906 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname2/proxy/: bar (200; 11.414728ms)
  I0704 04:17:07.838360 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 13.680387ms)
  I0704 04:17:07.838360 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 13.723899ms)
  I0704 04:17:07.839378 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">test<... (200; 14.508249ms)
  I0704 04:17:07.839464 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname1/proxy/: tls baz (200; 14.926233ms)
  I0704 04:17:07.839395 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname2/proxy/: tls qux (200; 14.814424ms)
  I0704 04:17:07.839801 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:462/proxy/: tls qux (200; 15.075118ms)
  I0704 04:17:07.840508 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname2/proxy/: bar (200; 15.691927ms)
  I0704 04:17:07.840508 20 proxy.go:558] (11) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname1/proxy/: foo (200; 15.738526ms)
  I0704 04:17:07.848995 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/tlsrewritem... (200; 8.381877ms)
  I0704 04:17:07.848993 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:460/proxy/: tls baz (200; 8.134857ms)
  I0704 04:17:07.851914 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 11.06404ms)
  I0704 04:17:07.852886 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 11.784641ms)
  I0704 04:17:07.853151 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname1/proxy/: tls baz (200; 12.392344ms)
  I0704 04:17:07.854331 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname2/proxy/: tls qux (200; 13.525724ms)
  I0704 04:17:07.854555 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 13.528068ms)
  I0704 04:17:07.854667 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname2/proxy/: bar (200; 13.759233ms)
  I0704 04:17:07.855017 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname1/proxy/: foo (200; 14.133819ms)
  I0704 04:17:07.855530 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/rewriteme">test</a> (200; 14.398123ms)
  I0704 04:17:07.855562 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">test<... (200; 14.89346ms)
  I0704 04:17:07.855727 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 14.568241ms)
  I0704 04:17:07.855771 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">... (200; 14.794892ms)
  I0704 04:17:07.855790 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname1/proxy/: foo (200; 14.844281ms)
  I0704 04:17:07.855980 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:462/proxy/: tls qux (200; 14.923769ms)
  I0704 04:17:07.856007 20 proxy.go:558] (12) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname2/proxy/: bar (200; 15.297259ms)
  I0704 04:17:07.863148 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 6.877045ms)
  I0704 04:17:07.863935 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">... (200; 7.39739ms)
  I0704 04:17:07.864315 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 8.179889ms)
  I0704 04:17:07.864347 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:462/proxy/: tls qux (200; 8.029504ms)
  I0704 04:17:07.865726 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">test<... (200; 9.233051ms)
  I0704 04:17:07.867983 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname1/proxy/: foo (200; 11.386037ms)
  I0704 04:17:07.867995 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/rewriteme">test</a> (200; 11.344203ms)
  I0704 04:17:07.868080 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname2/proxy/: bar (200; 11.645882ms)
  I0704 04:17:07.868154 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 11.442207ms)
  I0704 04:17:07.868783 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname1/proxy/: foo (200; 12.422008ms)
  I0704 04:17:07.869166 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/tlsrewritem... (200; 12.37083ms)
  I0704 04:17:07.869202 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 12.455596ms)
  I0704 04:17:07.871217 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname2/proxy/: bar (200; 14.330763ms)
  I0704 04:17:07.871225 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:460/proxy/: tls baz (200; 14.384743ms)
  I0704 04:17:07.871302 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname2/proxy/: tls qux (200; 14.318785ms)
  I0704 04:17:07.871799 20 proxy.go:558] (13) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname1/proxy/: tls baz (200; 14.759815ms)
  I0704 04:17:07.880188 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/rewriteme">test</a> (200; 7.995636ms)
  I0704 04:17:07.880244 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 7.989418ms)
  I0704 04:17:07.880213 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 8.110576ms)
  I0704 04:17:07.896565 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:460/proxy/: tls baz (200; 24.263186ms)
  I0704 04:17:07.897506 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/tlsrewritem... (200; 25.031419ms)
  I0704 04:17:07.897526 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname2/proxy/: bar (200; 25.085925ms)
  I0704 04:17:07.897941 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname2/proxy/: bar (200; 25.398041ms)
  I0704 04:17:07.897962 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">test<... (200; 25.325676ms)
  I0704 04:17:07.898106 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname1/proxy/: foo (200; 26.219396ms)
  I0704 04:17:07.898127 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname1/proxy/: tls baz (200; 25.461415ms)
  I0704 04:17:07.899583 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 27.009879ms)
  I0704 04:17:07.900003 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname1/proxy/: foo (200; 27.631873ms)
  I0704 04:17:07.904179 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 31.34327ms)
  I0704 04:17:07.906342 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">... (200; 33.588234ms)
  I0704 04:17:07.907758 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:462/proxy/: tls qux (200; 34.877304ms)
  I0704 04:17:07.909402 20 proxy.go:558] (14) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname2/proxy/: tls qux (200; 36.635615ms)
  I0704 04:17:07.930013 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 20.55244ms)
  I0704 04:17:07.933825 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/rewriteme">test</a> (200; 23.973434ms)
  I0704 04:17:07.933825 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 24.070179ms)
  I0704 04:17:07.933877 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">test<... (200; 24.192767ms)
  I0704 04:17:07.942730 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:462/proxy/: tls qux (200; 32.943762ms)
  I0704 04:17:07.942792 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">... (200; 33.076949ms)
  I0704 04:17:07.947575 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 37.569096ms)
  I0704 04:17:07.947575 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 37.636622ms)
  I0704 04:17:07.948385 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/tlsrewritem... (200; 38.415119ms)
  I0704 04:17:07.948613 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:460/proxy/: tls baz (200; 38.557557ms)
  I0704 04:17:07.948646 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname1/proxy/: tls baz (200; 38.771158ms)
  I0704 04:17:07.949301 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname2/proxy/: bar (200; 39.277061ms)
  I0704 04:17:07.949308 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname1/proxy/: foo (200; 39.484279ms)
  I0704 04:17:07.952584 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname2/proxy/: bar (200; 42.946407ms)
  I0704 04:17:07.952591 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname1/proxy/: foo (200; 42.994676ms)
  I0704 04:17:07.953548 20 proxy.go:558] (15) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname2/proxy/: tls qux (200; 43.6384ms)
  I0704 04:17:07.976038 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:462/proxy/: tls qux (200; 21.913126ms)
  I0704 04:17:07.976067 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 21.918931ms)
  I0704 04:17:07.976101 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">test<... (200; 22.016631ms)
  I0704 04:17:07.976163 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">... (200; 22.166214ms)
  I0704 04:17:07.976329 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 22.583699ms)
  I0704 04:17:07.976550 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:460/proxy/: tls baz (200; 22.919226ms)
  I0704 04:17:07.977000 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/tlsrewritem... (200; 23.170135ms)
  I0704 04:17:07.977163 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 23.19505ms)
  I0704 04:17:07.977292 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/rewriteme">test</a> (200; 23.584101ms)
  I0704 04:17:07.977520 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 23.680835ms)
  I0704 04:17:07.981181 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname2/proxy/: bar (200; 27.123679ms)
  I0704 04:17:07.982438 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname2/proxy/: bar (200; 28.579919ms)
  I0704 04:17:07.984329 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname1/proxy/: foo (200; 30.149229ms)
  I0704 04:17:07.986238 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname1/proxy/: tls baz (200; 32.332616ms)
  I0704 04:17:07.986246 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname2/proxy/: tls qux (200; 32.309531ms)
  I0704 04:17:07.986301 20 proxy.go:558] (16) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname1/proxy/: foo (200; 32.273763ms)
  I0704 04:17:08.012195 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:462/proxy/: tls qux (200; 25.806984ms)
  I0704 04:17:08.012625 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 25.591564ms)
  I0704 04:17:08.018312 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname1/proxy/: foo (200; 31.486841ms)
  I0704 04:17:08.020326 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/rewriteme">test</a> (200; 33.555619ms)
  I0704 04:17:08.020351 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname2/proxy/: tls qux (200; 33.776161ms)
  I0704 04:17:08.020326 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:460/proxy/: tls baz (200; 33.585021ms)
  I0704 04:17:08.022502 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname2/proxy/: bar (200; 35.238367ms)
  I0704 04:17:08.022495 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">... (200; 35.25567ms)
  I0704 04:17:08.022530 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">test<... (200; 35.381604ms)
  I0704 04:17:08.024298 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 37.177039ms)
  I0704 04:17:08.024697 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/tlsrewritem... (200; 37.502724ms)
  I0704 04:17:08.024731 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname1/proxy/: tls baz (200; 37.383447ms)
  I0704 04:17:08.024812 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 38.120489ms)
  I0704 04:17:08.024843 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname2/proxy/: bar (200; 37.765214ms)
  I0704 04:17:08.028424 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname1/proxy/: foo (200; 41.771509ms)
  I0704 04:17:08.028440 20 proxy.go:558] (17) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 41.116969ms)
  E0704 04:17:08.046824      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:17:08.057919 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname1/proxy/: foo (200; 28.617278ms)
  I0704 04:17:08.057919 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 28.316477ms)
  I0704 04:17:08.057969 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 28.079905ms)
  I0704 04:17:08.066864 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">... (200; 37.215612ms)
  I0704 04:17:08.068968 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 39.530572ms)
  I0704 04:17:08.068995 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/rewriteme">test</a> (200; 39.625138ms)
  I0704 04:17:08.069019 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 39.803845ms)
  I0704 04:17:08.069035 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname2/proxy/: bar (200; 39.346071ms)
  I0704 04:17:08.069077 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/tlsrewritem... (200; 39.581795ms)
  I0704 04:17:08.069112 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:462/proxy/: tls qux (200; 39.282705ms)
  I0704 04:17:08.069593 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">test<... (200; 39.799819ms)
  I0704 04:17:08.070837 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:460/proxy/: tls baz (200; 41.752726ms)
  I0704 04:17:08.072109 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname1/proxy/: tls baz (200; 42.375862ms)
  I0704 04:17:08.074295 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname2/proxy/: tls qux (200; 44.749072ms)
  I0704 04:17:08.075864 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname2/proxy/: bar (200; 46.818666ms)
  I0704 04:17:08.075863 20 proxy.go:558] (18) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname1/proxy/: foo (200; 45.905749ms)
  I0704 04:17:08.111553 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">test<... (200; 34.921599ms)
  I0704 04:17:08.111553 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:460/proxy/: tls baz (200; 35.070066ms)
  I0704 04:17:08.116500 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:462/proxy/: tls qux (200; 40.233914ms)
  I0704 04:17:08.116606 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/https:proxy-service-27tq9-pdtkn:443/proxy/tlsrewritem... (200; 40.158902ms)
  I0704 04:17:08.116689 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 40.556472ms)
  I0704 04:17:08.116507 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:162/proxy/: bar (200; 40.277367ms)
  I0704 04:17:08.116831 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn/proxy/rewriteme">test</a> (200; 40.621414ms)
  I0704 04:17:08.117713 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/: <a href="/api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:1080/proxy/rewriteme">... (200; 41.115266ms)
  I0704 04:17:08.120255 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname1/proxy/: foo (200; 43.592248ms)
  I0704 04:17:08.129808 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname2/proxy/: bar (200; 53.27644ms)
  I0704 04:17:08.130441 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname1/proxy/: tls baz (200; 53.898891ms)
  I0704 04:17:08.130442 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8604/pods/http:proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 54.059492ms)
  I0704 04:17:08.130467 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8604/pods/proxy-service-27tq9-pdtkn:160/proxy/: foo (200; 54.049202ms)
  I0704 04:17:08.130582 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8604/services/proxy-service-27tq9:portname2/proxy/: bar (200; 54.233024ms)
  I0704 04:17:08.130670 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8604/services/https:proxy-service-27tq9:tlsportname2/proxy/: tls qux (200; 54.105784ms)
  I0704 04:17:08.136547 20 proxy.go:558] (19) /api/v1/namespaces/proxy-8604/services/http:proxy-service-27tq9:portname1/proxy/: foo (200; 60.235124ms)
  STEP: deleting ReplicationController proxy-service-27tq9 in namespace proxy-8604, will wait for the garbage collector to delete the pods @ 07/04/24 04:17:08.136
  I0704 04:17:08.200315 20 resources.go:139] Deleting ReplicationController proxy-service-27tq9 took: 8.640418ms
  I0704 04:17:08.300554 20 resources.go:163] Terminating ReplicationController proxy-service-27tq9 pods took: 100.237411ms
  E0704 04:17:09.047754      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:10.048453      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:17:10.400872 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8604" for this suite. @ 07/04/24 04:17:10.404
â€¢ [5.066 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 07/04/24 04:17:10.412
  I0704 04:17:10.412966 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename webhook @ 07/04/24 04:17:10.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:17:10.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:17:10.471
  STEP: Setting up server cert @ 07/04/24 04:17:10.514
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/04/24 04:17:10.994
  STEP: Deploying the webhook pod @ 07/04/24 04:17:11.003
  STEP: Wait for the deployment to be ready @ 07/04/24 04:17:11.015
  I0704 04:17:11.028256 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0704 04:17:11.049300      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:12.049784      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:13.050135      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:17:13.070523 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 4, 4, 17, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 4, 17, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 4, 17, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 4, 17, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0704 04:17:14.051886      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:15.051631      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/04/24 04:17:15.075
  STEP: Verifying the service has paired with the endpoint @ 07/04/24 04:17:15.09
  E0704 04:17:16.052499      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:17:16.090782 20 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 07/04/24 04:17:16.097
  STEP: create a configmap that should be updated by the webhook @ 07/04/24 04:17:16.151
  I0704 04:17:16.213474 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6639" for this suite. @ 07/04/24 04:17:16.24
  STEP: Destroying namespace "webhook-markers-7372" for this suite. @ 07/04/24 04:17:16.275
â€¢ [5.891 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 07/04/24 04:17:16.304
  I0704 04:17:16.304094 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename container-probe @ 07/04/24 04:17:16.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:17:16.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:17:16.367
  STEP: Creating pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899 @ 07/04/24 04:17:16.371
  E0704 04:17:17.052627      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:18.052934      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:19.053085      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:20.053185      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/04/24 04:17:20.415
  I0704 04:17:20.418583 20 container_probe.go:1749] Initial restart count of pod liveness-def38be8-49af-49fa-a192-9831db406847 is 0
  I0704 04:17:20.422217 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:17:21.054131      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:22.054420      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:17:22.426210 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:17:23.054607      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:24.055375      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:17:24.432696 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:17:25.055538      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:26.055692      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:17:26.435976 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:17:27.056696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:28.057164      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:17:28.439584 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:17:29.057319      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:30.057583      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:17:30.451354 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:17:31.057742      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:32.057872      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:17:32.455371 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:17:33.058288      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:34.059007      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:17:34.462741 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:17:35.059079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:36.059283      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:17:36.467148 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:17:37.059825      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:38.059993      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:17:38.470977 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  I0704 04:17:38.471027 20 container_probe.go:1763] Restart count of pod container-probe-899/liveness-def38be8-49af-49fa-a192-9831db406847 is now 1 (18.052401746s elapsed)
  E0704 04:17:39.060075      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:40.060830      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:17:40.474430 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:17:41.062297      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:42.062601      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:17:42.477896 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:17:43.063596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:44.063667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:17:44.490371 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:17:45.063797      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:46.064807      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:17:46.494393 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:17:47.064932      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:48.065172      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:17:48.498582 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:17:49.065250      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:50.066274      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:17:50.501927 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:17:51.066451      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:52.067161      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:17:52.505515 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:17:53.068195      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:54.069520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:17:54.509315 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:17:55.069960      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:56.070119      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:17:56.512735 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:17:57.070218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:17:58.070345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:17:58.517225 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  I0704 04:17:58.517271 20 container_probe.go:1763] Restart count of pod container-probe-899/liveness-def38be8-49af-49fa-a192-9831db406847 is now 2 (38.098647223s elapsed)
  E0704 04:17:59.070532      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:00.070731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:00.522070 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:01.070728      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:02.071179      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:02.526873 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:03.071394      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:04.071693      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:04.534089 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:05.071779      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:06.071994      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:06.538293 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:07.072757      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:08.073553      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:08.557574 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:09.074105      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:10.074584      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:10.564131 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:11.075637      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:12.075771      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:12.568549 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:13.075894      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:14.075963      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:14.571829 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:15.076110      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:16.076224      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:16.578705 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:17.077255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:18.077393      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:18.582391 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  I0704 04:18:18.582438 20 container_probe.go:1763] Restart count of pod container-probe-899/liveness-def38be8-49af-49fa-a192-9831db406847 is now 3 (58.163814094s elapsed)
  E0704 04:18:19.077910      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:20.078893      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:20.585398 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:21.079001      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:22.079274      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:22.589152 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:23.079421      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:24.080332      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:24.594094 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:25.080750      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:26.080927      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:26.598424 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:27.081958      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:28.082426      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:28.602503 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:29.083108      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:30.083350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:30.605935 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:31.083620      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:32.084435      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:32.609577 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:33.084718      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:34.085178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:34.613342 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:35.085872      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:36.086015      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:36.616516 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:37.086092      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:38.086315      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:38.620251 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  I0704 04:18:38.620300 20 container_probe.go:1763] Restart count of pod container-probe-899/liveness-def38be8-49af-49fa-a192-9831db406847 is now 4 (1m18.201674319s elapsed)
  E0704 04:18:39.086615      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:40.086967      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:40.623748 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:41.087247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:42.087745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:42.627448 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:43.088215      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:44.088775      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:44.631759 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:45.089437      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:46.089566      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:46.639916 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:47.090522      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:48.090862      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:48.643994 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:49.091626      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:50.091995      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:50.647788 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:51.094097      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:52.094207      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:52.650974 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:53.094631      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:54.095068      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:54.655263 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:55.095791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:56.096771      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:56.658887 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:57.097701      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:18:58.098089      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:18:58.673192 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:18:59.098257      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:00.098425      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:00.678547 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:19:01.099158      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:02.099798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:02.682663 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:19:03.099978      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:04.100031      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:04.688397 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:19:05.100103      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:06.100187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:06.691682 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:19:07.101212      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:08.102309      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:08.696391 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:19:09.103606      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:10.103695      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:10.700500 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:19:11.103916      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:12.104880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:12.703845 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:19:13.105248      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:14.105722      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:14.710794 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:19:15.105858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:16.105971      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:16.717010 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:19:17.106559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:18.106707      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:18.723209 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:19:19.107691      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:20.107772      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:20.729107 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:19:21.108721      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:22.108739      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:22.732722 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:19:23.108948      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:24.109368      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:24.737312 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:19:25.109697      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:26.109841      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:26.740654 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:19:27.110084      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:28.110477      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:28.744860 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:19:29.111293      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:30.111532      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:30.751135 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:19:31.112196      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:32.112317      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:32.755757 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:19:33.113229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:34.113398      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:34.764941 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:19:35.113553      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:36.113616      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:36.768251 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:19:37.114709      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:38.114952      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:38.771728 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  E0704 04:19:39.115151      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:40.115270      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:40.777820 20 container_probe.go:1759] Get pod liveness-def38be8-49af-49fa-a192-9831db406847 in namespace container-probe-899
  I0704 04:19:40.777871 20 container_probe.go:1763] Restart count of pod container-probe-899/liveness-def38be8-49af-49fa-a192-9831db406847 is now 5 (2m20.359246104s elapsed)
  STEP: deleting the pod @ 07/04/24 04:19:40.777
  I0704 04:19:40.792299 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-899" for this suite. @ 07/04/24 04:19:40.796
â€¢ [144.501 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 07/04/24 04:19:40.805
  I0704 04:19:40.805359 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename daemonsets @ 07/04/24 04:19:40.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:19:40.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:19:40.831
  STEP: Creating simple DaemonSet "daemon-set" @ 07/04/24 04:19:40.86
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/04/24 04:19:40.867
  I0704 04:19:40.883030 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0704 04:19:40.883070 20 fixtures.go:130] Node 18.118.109.209 is running 0 daemon pod, expected 1
  E0704 04:19:41.115458      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:41.879240 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0704 04:19:41.879561 20 fixtures.go:130] Node 18.118.109.209 is running 0 daemon pod, expected 1
  E0704 04:19:42.116247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:42.877758 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0704 04:19:42.877796 20 fixtures.go:130] Node 18.118.109.209 is running 0 daemon pod, expected 1
  E0704 04:19:43.117021      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:43.878746 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0704 04:19:43.879613 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 07/04/24 04:19:43.882
  I0704 04:19:43.884999 20 daemon_set.go:912] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 07/04/24 04:19:43.885
  I0704 04:19:43.893767 20 daemon_set.go:932] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 07/04/24 04:19:43.893
  I0704 04:19:43.896001 20 daemon_set.go:957] Observed &DaemonSet event: ADDED
  I0704 04:19:43.896911 20 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0704 04:19:43.897156 20 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0704 04:19:43.897662 20 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0704 04:19:43.899885 20 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0704 04:19:43.901535 20 daemon_set.go:950] Found daemon set daemon-set in namespace daemonsets-7889 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0704 04:19:43.903046 20 daemon_set.go:961] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 07/04/24 04:19:43.906
  STEP: watching for the daemon set status to be patched @ 07/04/24 04:19:43.927
  I0704 04:19:43.932210 20 daemon_set.go:1001] Observed &DaemonSet event: ADDED
  I0704 04:19:43.933994 20 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0704 04:19:43.934360 20 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0704 04:19:43.935837 20 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0704 04:19:43.936229 20 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0704 04:19:43.936340 20 daemon_set.go:997] Observed daemon set daemon-set in namespace daemonsets-7889 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0704 04:19:43.937285 20 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0704 04:19:43.937690 20 daemon_set.go:994] Found daemon set daemon-set in namespace daemonsets-7889 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0704 04:19:43.940912 20 daemon_set.go:1005] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 07/04/24 04:19:43.945
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7889, will wait for the garbage collector to delete the pods @ 07/04/24 04:19:43.945
  I0704 04:19:44.008164 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.027933ms
  I0704 04:19:44.108792 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.627139ms
  E0704 04:19:44.118071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:45.118312      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:46.119465      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:46.412380 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0704 04:19:46.412430 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0704 04:19:46.415847 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"24611"},"items":null}

  I0704 04:19:46.418204 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"24611"},"items":null}

  I0704 04:19:46.437402 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7889" for this suite. @ 07/04/24 04:19:46.44
â€¢ [5.641 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 07/04/24 04:19:46.448
  I0704 04:19:46.448296 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/04/24 04:19:46.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:19:46.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:19:46.47
  I0704 04:19:46.473585 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  E0704 04:19:47.119722      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:47.538833 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3904" for this suite. @ 07/04/24 04:19:47.547
â€¢ [1.109 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 07/04/24 04:19:47.557
  I0704 04:19:47.557608 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename replication-controller @ 07/04/24 04:19:47.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:19:47.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:19:47.592
  I0704 04:19:47.595326 20 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0704 04:19:48.120549      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 07/04/24 04:19:48.606
  STEP: Checking rc "condition-test" has the desired failure condition set @ 07/04/24 04:19:48.613
  E0704 04:19:49.121097      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 07/04/24 04:19:49.625
  I0704 04:19:49.635417 20 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 07/04/24 04:19:49.635
  I0704 04:19:49.645639 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6987" for this suite. @ 07/04/24 04:19:49.649
â€¢ [2.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 07/04/24 04:19:49.67
  I0704 04:19:49.670272 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename watch @ 07/04/24 04:19:49.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:19:49.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:19:49.715
  STEP: getting a starting resourceVersion @ 07/04/24 04:19:49.719
  STEP: starting a background goroutine to produce watch events @ 07/04/24 04:19:49.721
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 07/04/24 04:19:49.721
  E0704 04:19:50.121797      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:51.122446      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:52.122852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:52.475556 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4669" for this suite. @ 07/04/24 04:19:52.529
â€¢ [2.906 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1459
  STEP: Creating a kubernetes client @ 07/04/24 04:19:52.576
  I0704 04:19:52.576878 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename services @ 07/04/24 04:19:52.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:19:52.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:19:52.598
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7839 @ 07/04/24 04:19:52.601
  STEP: changing the ExternalName service to type=NodePort @ 07/04/24 04:19:52.609
  STEP: creating replication controller externalname-service in namespace services-7839 @ 07/04/24 04:19:52.63
  I0704 04:19:52.642824      20 runners.go:198] Created replication controller with name: externalname-service, namespace: services-7839, replica count: 2
  E0704 04:19:53.123608      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:54.124276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:55.124881      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:55.694983      20 runners.go:198] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0704 04:19:55.695133 20 resource.go:361] Creating new exec pod
  E0704 04:19:56.125649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:57.125960      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:19:58.126038      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:58.740922 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-7839 exec execpodpfw7c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0704 04:19:58.933826 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0704 04:19:58.933995 20 builder.go:147] stdout: ""
  E0704 04:19:59.126642      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:19:59.741723 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-7839 exec execpodpfw7c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0704 04:19:59.914056 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0704 04:19:59.914112 20 builder.go:147] stdout: ""
  E0704 04:20:00.126973      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:20:00.741754 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-7839 exec execpodpfw7c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0704 04:20:00.931780 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0704 04:20:00.931919 20 builder.go:147] stdout: "externalname-service-q5xhd"
  I0704 04:20:00.932119 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-7839 exec execpodpfw7c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.31.13 80'
  I0704 04:20:01.108088 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.31.13 80\nConnection to 10.43.31.13 80 port [tcp/http] succeeded!\n"
  I0704 04:20:01.108143 20 builder.go:147] stdout: ""
  E0704 04:20:01.127751      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:20:01.932991 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-7839 exec execpodpfw7c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.31.13 80'
  E0704 04:20:02.127835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:20:02.277651 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.31.13 80\nConnection to 10.43.31.13 80 port [tcp/http] succeeded!\n"
  I0704 04:20:02.277705 20 builder.go:147] stdout: ""
  I0704 04:20:02.932716 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-7839 exec execpodpfw7c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.31.13 80'
  E0704 04:20:03.128766      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:20:03.140953 20 builder.go:146] stderr: "E0704 04:20:03.064303     665 websocket.go:296] Unknown stream id 1, discarding message\n+ + echo hostName\nnc -v -t -w 2 10.43.31.13 80\nConnection to 10.43.31.13 80 port [tcp/http] succeeded!\n"
  I0704 04:20:03.141084 20 builder.go:147] stdout: "externalname-service-q5xhd"
  I0704 04:20:03.141208 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-7839 exec execpodpfw7c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.23.45 31474'
  I0704 04:20:03.363306 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.23.45 31474\nConnection to 172.31.23.45 31474 port [tcp/*] succeeded!\n"
  I0704 04:20:03.363357 20 builder.go:147] stdout: "externalname-service-q5xhd"
  I0704 04:20:03.363574 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-7839 exec execpodpfw7c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.23.191 31474'
  I0704 04:20:03.659760 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.23.191 31474\nConnection to 172.31.23.191 31474 port [tcp/*] succeeded!\n"
  I0704 04:20:03.659902 20 builder.go:147] stdout: "externalname-service-7d72q"
  I0704 04:20:03.660006 20 service.go:1468] Cleaning up the ExternalName to NodePort test service
  I0704 04:20:03.747595 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7839" for this suite. @ 07/04/24 04:20:03.757
â€¢ [11.194 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 07/04/24 04:20:03.772
  I0704 04:20:03.772037 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename watch @ 07/04/24 04:20:03.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:20:03.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:20:03.874
  STEP: creating a watch on configmaps with label A @ 07/04/24 04:20:03.879
  STEP: creating a watch on configmaps with label B @ 07/04/24 04:20:03.88
  STEP: creating a watch on configmaps with label A or B @ 07/04/24 04:20:03.882
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 07/04/24 04:20:03.886
  I0704 04:20:03.891020 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6042  f3c63ffe-fe87-4e1d-b925-d33d5ea967bb 24922 0 2024-07-04 04:20:03 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-04 04:20:03 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0704 04:20:03.891334 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6042  f3c63ffe-fe87-4e1d-b925-d33d5ea967bb 24922 0 2024-07-04 04:20:03 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-04 04:20:03 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 07/04/24 04:20:03.891
  I0704 04:20:03.902639 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6042  f3c63ffe-fe87-4e1d-b925-d33d5ea967bb 24923 0 2024-07-04 04:20:03 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-04 04:20:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0704 04:20:03.906899 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6042  f3c63ffe-fe87-4e1d-b925-d33d5ea967bb 24923 0 2024-07-04 04:20:03 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-04 04:20:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 07/04/24 04:20:03.91
  I0704 04:20:03.933576 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6042  f3c63ffe-fe87-4e1d-b925-d33d5ea967bb 24924 0 2024-07-04 04:20:03 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-04 04:20:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0704 04:20:03.933710 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6042  f3c63ffe-fe87-4e1d-b925-d33d5ea967bb 24924 0 2024-07-04 04:20:03 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-04 04:20:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 07/04/24 04:20:03.933
  I0704 04:20:03.949366 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6042  f3c63ffe-fe87-4e1d-b925-d33d5ea967bb 24925 0 2024-07-04 04:20:03 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-04 04:20:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0704 04:20:03.949729 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6042  f3c63ffe-fe87-4e1d-b925-d33d5ea967bb 24925 0 2024-07-04 04:20:03 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-04 04:20:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 07/04/24 04:20:03.949
  I0704 04:20:03.960631 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6042  bf09bd59-f5eb-41bf-95ba-a584175f40d7 24926 0 2024-07-04 04:20:03 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-04 04:20:03 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0704 04:20:03.961757 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6042  bf09bd59-f5eb-41bf-95ba-a584175f40d7 24926 0 2024-07-04 04:20:03 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-04 04:20:03 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0704 04:20:04.129773      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:05.129914      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:06.130288      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:07.130344      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:08.130776      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:09.130874      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:10.131002      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:11.131316      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:12.131459      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:13.131646      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 07/04/24 04:20:13.963
  I0704 04:20:13.973269 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6042  bf09bd59-f5eb-41bf-95ba-a584175f40d7 24978 0 2024-07-04 04:20:03 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-04 04:20:03 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0704 04:20:13.973495 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6042  bf09bd59-f5eb-41bf-95ba-a584175f40d7 24978 0 2024-07-04 04:20:03 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-04 04:20:03 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0704 04:20:14.132518      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:15.132765      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:16.132745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:17.132975      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:18.133201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:19.133839      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:20.133937      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:21.134256      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:22.134393      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:23.135578      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:20:23.973802 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6042" for this suite. @ 07/04/24 04:20:23.979
â€¢ [20.224 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 07/04/24 04:20:23.997
  I0704 04:20:23.997613 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename dns @ 07/04/24 04:20:23.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:20:24.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:20:24.072
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5575.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-5575.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 07/04/24 04:20:24.079
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5575.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-5575.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 07/04/24 04:20:24.079
  STEP: creating a pod to probe /etc/hosts @ 07/04/24 04:20:24.079
  STEP: submitting the pod to kubernetes @ 07/04/24 04:20:24.079
  E0704 04:20:24.136140      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:25.136503      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/04/24 04:20:26.131
  E0704 04:20:26.136703      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: looking for the results for each expected name from probers @ 07/04/24 04:20:26.138
  I0704 04:20:26.161684 20 dns_common.go:527] DNS probes using dns-5575/dns-test-7cf8af4f-7b01-4e32-a583-9ff13c5edf1c succeeded

  STEP: deleting the pod @ 07/04/24 04:20:26.162
  I0704 04:20:26.175182 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5575" for this suite. @ 07/04/24 04:20:26.178
â€¢ [2.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 07/04/24 04:20:26.185
  I0704 04:20:26.185930 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename deployment @ 07/04/24 04:20:26.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:20:26.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:20:26.215
  STEP: creating a Deployment @ 07/04/24 04:20:26.222
  I0704 04:20:26.222664 20 deployment.go:507] Creating simple deployment test-deployment-x2jt9
  I0704 04:20:26.244993 20 deployment.go:222] deployment "test-deployment-x2jt9" doesn't have the required revision set
  E0704 04:20:27.136867      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:28.136919      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 07/04/24 04:20:28.259
  I0704 04:20:28.263467 20 deployment.go:532] Deployment test-deployment-x2jt9 has Conditions: [{Available True 2024-07-04 04:20:28 +0000 UTC 2024-07-04 04:20:28 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-07-04 04:20:28 +0000 UTC 2024-07-04 04:20:26 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-x2jt9-c8586b885" has successfully progressed.}]
  STEP: updating Deployment Status @ 07/04/24 04:20:28.263
  I0704 04:20:28.274651 20 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 4, 20, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 4, 20, 28, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 4, 20, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 4, 20, 26, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-x2jt9-c8586b885\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 07/04/24 04:20:28.274
  I0704 04:20:28.283055 20 deployment.go:579] Observed &Deployment event: ADDED
  I0704 04:20:28.283124 20 deployment.go:575] Observed Deployment test-deployment-x2jt9 in namespace deployment-1019 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-04 04:20:26 +0000 UTC 2024-07-04 04:20:26 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-x2jt9-c8586b885"}
  I0704 04:20:28.283281 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I0704 04:20:28.283315 20 deployment.go:575] Observed Deployment test-deployment-x2jt9 in namespace deployment-1019 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-04 04:20:26 +0000 UTC 2024-07-04 04:20:26 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-x2jt9-c8586b885"}
  I0704 04:20:28.283344 20 deployment.go:575] Observed Deployment test-deployment-x2jt9 in namespace deployment-1019 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-04 04:20:26 +0000 UTC 2024-07-04 04:20:26 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0704 04:20:28.283555 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I0704 04:20:28.283619 20 deployment.go:575] Observed Deployment test-deployment-x2jt9 in namespace deployment-1019 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-04 04:20:26 +0000 UTC 2024-07-04 04:20:26 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0704 04:20:28.283642 20 deployment.go:575] Observed Deployment test-deployment-x2jt9 in namespace deployment-1019 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-04 04:20:26 +0000 UTC 2024-07-04 04:20:26 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-x2jt9-c8586b885" is progressing.}
  I0704 04:20:28.283799 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I0704 04:20:28.287386 20 deployment.go:575] Observed Deployment test-deployment-x2jt9 in namespace deployment-1019 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-04 04:20:28 +0000 UTC 2024-07-04 04:20:28 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0704 04:20:28.287434 20 deployment.go:575] Observed Deployment test-deployment-x2jt9 in namespace deployment-1019 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-04 04:20:28 +0000 UTC 2024-07-04 04:20:26 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-x2jt9-c8586b885" has successfully progressed.}
  I0704 04:20:28.288385 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I0704 04:20:28.288574 20 deployment.go:575] Observed Deployment test-deployment-x2jt9 in namespace deployment-1019 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-04 04:20:28 +0000 UTC 2024-07-04 04:20:28 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0704 04:20:28.288599 20 deployment.go:575] Observed Deployment test-deployment-x2jt9 in namespace deployment-1019 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-04 04:20:28 +0000 UTC 2024-07-04 04:20:26 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-x2jt9-c8586b885" has successfully progressed.}
  I0704 04:20:28.288660 20 deployment.go:572] Found Deployment test-deployment-x2jt9 in namespace deployment-1019 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0704 04:20:28.288693 20 deployment.go:583] Deployment test-deployment-x2jt9 has an updated status
  STEP: patching the Statefulset Status @ 07/04/24 04:20:28.288
  I0704 04:20:28.288890 20 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0704 04:20:28.299648 20 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 07/04/24 04:20:28.299
  I0704 04:20:28.302508 20 deployment.go:616] Observed &Deployment event: ADDED
  I0704 04:20:28.302554 20 deployment.go:612] Observed deployment test-deployment-x2jt9 in namespace deployment-1019 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-04 04:20:26 +0000 UTC 2024-07-04 04:20:26 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-x2jt9-c8586b885"}
  I0704 04:20:28.302678 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I0704 04:20:28.303937 20 deployment.go:612] Observed deployment test-deployment-x2jt9 in namespace deployment-1019 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-04 04:20:26 +0000 UTC 2024-07-04 04:20:26 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-x2jt9-c8586b885"}
  I0704 04:20:28.303973 20 deployment.go:612] Observed deployment test-deployment-x2jt9 in namespace deployment-1019 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-04 04:20:26 +0000 UTC 2024-07-04 04:20:26 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0704 04:20:28.304278 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I0704 04:20:28.304334 20 deployment.go:612] Observed deployment test-deployment-x2jt9 in namespace deployment-1019 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-04 04:20:26 +0000 UTC 2024-07-04 04:20:26 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0704 04:20:28.304355 20 deployment.go:612] Observed deployment test-deployment-x2jt9 in namespace deployment-1019 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-04 04:20:26 +0000 UTC 2024-07-04 04:20:26 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-x2jt9-c8586b885" is progressing.}
  I0704 04:20:28.304542 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I0704 04:20:28.304590 20 deployment.go:612] Observed deployment test-deployment-x2jt9 in namespace deployment-1019 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-04 04:20:28 +0000 UTC 2024-07-04 04:20:28 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0704 04:20:28.304606 20 deployment.go:612] Observed deployment test-deployment-x2jt9 in namespace deployment-1019 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-04 04:20:28 +0000 UTC 2024-07-04 04:20:26 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-x2jt9-c8586b885" has successfully progressed.}
  I0704 04:20:28.304754 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I0704 04:20:28.304782 20 deployment.go:612] Observed deployment test-deployment-x2jt9 in namespace deployment-1019 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-04 04:20:28 +0000 UTC 2024-07-04 04:20:28 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0704 04:20:28.304797 20 deployment.go:612] Observed deployment test-deployment-x2jt9 in namespace deployment-1019 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-04 04:20:28 +0000 UTC 2024-07-04 04:20:26 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-x2jt9-c8586b885" has successfully progressed.}
  I0704 04:20:28.304812 20 deployment.go:612] Observed deployment test-deployment-x2jt9 in namespace deployment-1019 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0704 04:20:28.304957 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I0704 04:20:28.304984 20 deployment.go:609] Found deployment test-deployment-x2jt9 in namespace deployment-1019 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0704 04:20:28.305001 20 deployment.go:620] Deployment test-deployment-x2jt9 has a patched status
  I0704 04:20:28.320352 20 deployment.go:633] Deployment "test-deployment-x2jt9":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-x2jt9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1019",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "03b65aa4-455c-4115-8f50-b25362bd72ef",
      ResourceVersion: (string) (len=5) "25047",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855663626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855663626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855663628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855663628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855663628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855663628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-x2jt9-c8586b885\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0704 04:20:28.339628 20 deployment.go:39] New ReplicaSet "test-deployment-x2jt9-c8586b885" of Deployment "test-deployment-x2jt9":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-x2jt9-c8586b885",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1019",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8e8a2de1-40d9-4446-bc93-6b9d126a35fd",
      ResourceVersion: (string) (len=5) "25043",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855663626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-x2jt9",
          UID: (types.UID) (len=36) "03b65aa4-455c-4115-8f50-b25362bd72ef",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855663626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 30 33 62  |k:{\"uid\":\"03b|
              00000120  36 35 61 61 34 2d 34 35  35 63 2d 34 31 31 35 2d  |65aa4-455c-4115-|
              00000130  38 66 35 30 2d 62 32 35  33 36 32 62 64 37 32 65  |8f50-b25362bd72e|
              00000140  66 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |f\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855663628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0704 04:20:28.352722 20 deployment.go:67] Pod "test-deployment-x2jt9-c8586b885-qx6jx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-x2jt9-c8586b885-qx6jx",
      GenerateName: (string) (len=32) "test-deployment-x2jt9-c8586b885-",
      Namespace: (string) (len=15) "deployment-1019",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8707d22c-4dda-445e-b13b-acb79cfe9f4d",
      ResourceVersion: (string) (len=5) "25042",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855663626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "5b3d4de9c88ff23a0392b3d8d25b5decce6e9e14098920cba3310421abee728a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.0.192/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.0.192/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-x2jt9-c8586b885",
          UID: (types.UID) (len=36) "8e8a2de1-40d9-4446-bc93-6b9d126a35fd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855663626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 38 65 38 61 32 64 65  31 2d 34 30 64 39 2d 34  |"8e8a2de1-40d9-4|
              000000a0  34 34 36 2d 62 63 39 33  2d 36 62 39 64 31 32 36  |446-bc93-6b9d126|
              000000b0  61 33 35 66 64 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |a35fd\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855663627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855663628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 31 39  32 5c 22 7d 22 3a 7b 22  |.42.0.192\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pv4vd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pv4vd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "18.191.27.132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855663628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855663626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855663628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855663628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855663626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.55"
        }
      },
      PodIP: (string) (len=11) "10.42.0.192",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.192"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855663626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855663627,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://a8927e7a05d3804659525a14c4d55ef0dacd225888f2e8602cfe1ac9c3875bfc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 04:20:28.354720 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1019" for this suite. @ 07/04/24 04:20:28.359
â€¢ [2.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:355
  STEP: Creating a kubernetes client @ 07/04/24 04:20:28.371
  I0704 04:20:28.371653 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename kubectl @ 07/04/24 04:20:28.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:20:28.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:20:28.393
  STEP: creating a replication controller @ 07/04/24 04:20:28.396
  I0704 04:20:28.396773 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2803 create -f -'
  I0704 04:20:28.563147 20 builder.go:146] stderr: ""
  I0704 04:20:28.563699 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/04/24 04:20:28.563
  I0704 04:20:28.563949 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2803 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0704 04:20:28.664148 20 builder.go:146] stderr: ""
  I0704 04:20:28.664430 20 builder.go:147] stdout: "update-demo-nautilus-7cgz7 update-demo-nautilus-rtjsj "
  I0704 04:20:28.664693 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2803 get pods update-demo-nautilus-7cgz7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0704 04:20:28.784790 20 builder.go:146] stderr: ""
  I0704 04:20:28.784893 20 builder.go:147] stdout: ""
  I0704 04:20:28.784912 20 kubectl.go:2501] update-demo-nautilus-7cgz7 is created but not running
  E0704 04:20:29.137021      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:30.137425      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:31.137736      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:32.138936      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:33.139268      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:20:33.785350 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2803 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0704 04:20:33.892715 20 builder.go:146] stderr: ""
  I0704 04:20:33.892801 20 builder.go:147] stdout: "update-demo-nautilus-7cgz7 update-demo-nautilus-rtjsj "
  I0704 04:20:33.892860 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2803 get pods update-demo-nautilus-7cgz7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0704 04:20:34.071182 20 builder.go:146] stderr: ""
  I0704 04:20:34.071231 20 builder.go:147] stdout: "true"
  I0704 04:20:34.071302 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2803 get pods update-demo-nautilus-7cgz7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E0704 04:20:34.140297      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:20:34.196492 20 builder.go:146] stderr: ""
  I0704 04:20:34.196546 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0704 04:20:34.196571 20 kubectl.go:2392] validating pod update-demo-nautilus-7cgz7
  I0704 04:20:34.220292 20 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0704 04:20:34.220368 20 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0704 04:20:34.220387 20 kubectl.go:2519] update-demo-nautilus-7cgz7 is verified up and running
  I0704 04:20:34.220610 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2803 get pods update-demo-nautilus-rtjsj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0704 04:20:34.336507 20 builder.go:146] stderr: ""
  I0704 04:20:34.336907 20 builder.go:147] stdout: "true"
  I0704 04:20:34.339007 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2803 get pods update-demo-nautilus-rtjsj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0704 04:20:34.428700 20 builder.go:146] stderr: ""
  I0704 04:20:34.429121 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0704 04:20:34.429146 20 kubectl.go:2392] validating pod update-demo-nautilus-rtjsj
  I0704 04:20:34.442140 20 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0704 04:20:34.442202 20 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0704 04:20:34.442220 20 kubectl.go:2519] update-demo-nautilus-rtjsj is verified up and running
  STEP: scaling down the replication controller @ 07/04/24 04:20:34.442
  I0704 04:20:34.452980 20 kubectl.go:324] scanned /root for discovery docs: <nil>
  I0704 04:20:34.453319 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2803 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0704 04:20:35.140374      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:20:35.552626 20 builder.go:146] stderr: ""
  I0704 04:20:35.552685 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/04/24 04:20:35.552
  I0704 04:20:35.552797 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2803 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0704 04:20:35.744303 20 builder.go:146] stderr: ""
  I0704 04:20:35.744360 20 builder.go:147] stdout: "update-demo-nautilus-rtjsj "
  I0704 04:20:35.744419 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2803 get pods update-demo-nautilus-rtjsj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0704 04:20:35.827154 20 builder.go:146] stderr: ""
  I0704 04:20:35.827373 20 builder.go:147] stdout: "true"
  I0704 04:20:35.827441 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2803 get pods update-demo-nautilus-rtjsj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0704 04:20:35.902023 20 builder.go:146] stderr: ""
  I0704 04:20:35.902071 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0704 04:20:35.902105 20 kubectl.go:2392] validating pod update-demo-nautilus-rtjsj
  I0704 04:20:35.912580 20 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0704 04:20:35.912647 20 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0704 04:20:35.912665 20 kubectl.go:2519] update-demo-nautilus-rtjsj is verified up and running
  STEP: scaling up the replication controller @ 07/04/24 04:20:35.912
  I0704 04:20:35.919159 20 kubectl.go:324] scanned /root for discovery docs: <nil>
  I0704 04:20:35.919341 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2803 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0704 04:20:36.141057      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:20:37.036178 20 builder.go:146] stderr: ""
  I0704 04:20:37.036225 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/04/24 04:20:37.036
  I0704 04:20:37.036551 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2803 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0704 04:20:37.107653 20 builder.go:146] stderr: ""
  I0704 04:20:37.107695 20 builder.go:147] stdout: "update-demo-nautilus-8k98q update-demo-nautilus-rtjsj "
  I0704 04:20:37.107996 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2803 get pods update-demo-nautilus-8k98q -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0704 04:20:37.141475      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:20:37.176170 20 builder.go:146] stderr: ""
  I0704 04:20:37.176211 20 builder.go:147] stdout: ""
  I0704 04:20:37.176227 20 kubectl.go:2501] update-demo-nautilus-8k98q is created but not running
  E0704 04:20:38.141970      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:39.142299      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:40.142416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:41.142476      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:42.142661      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:20:42.177045 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2803 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0704 04:20:42.281234 20 builder.go:146] stderr: ""
  I0704 04:20:42.281281 20 builder.go:147] stdout: "update-demo-nautilus-8k98q update-demo-nautilus-rtjsj "
  I0704 04:20:42.281522 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2803 get pods update-demo-nautilus-8k98q -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0704 04:20:42.348261 20 builder.go:146] stderr: ""
  I0704 04:20:42.348308 20 builder.go:147] stdout: "true"
  I0704 04:20:42.348366 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2803 get pods update-demo-nautilus-8k98q -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0704 04:20:42.446136 20 builder.go:146] stderr: ""
  I0704 04:20:42.446198 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0704 04:20:42.446214 20 kubectl.go:2392] validating pod update-demo-nautilus-8k98q
  I0704 04:20:42.451295 20 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0704 04:20:42.451362 20 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0704 04:20:42.451379 20 kubectl.go:2519] update-demo-nautilus-8k98q is verified up and running
  I0704 04:20:42.451606 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2803 get pods update-demo-nautilus-rtjsj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0704 04:20:42.535613 20 builder.go:146] stderr: ""
  I0704 04:20:42.535662 20 builder.go:147] stdout: "true"
  I0704 04:20:42.535722 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2803 get pods update-demo-nautilus-rtjsj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0704 04:20:42.617975 20 builder.go:146] stderr: ""
  I0704 04:20:42.618249 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0704 04:20:42.618265 20 kubectl.go:2392] validating pod update-demo-nautilus-rtjsj
  I0704 04:20:42.621130 20 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0704 04:20:42.621192 20 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0704 04:20:42.621209 20 kubectl.go:2519] update-demo-nautilus-rtjsj is verified up and running
  STEP: using delete to clean up resources @ 07/04/24 04:20:42.621
  I0704 04:20:42.621349 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2803 delete --grace-period=0 --force -f -'
  I0704 04:20:42.699736 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0704 04:20:42.699785 20 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0704 04:20:42.699891 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2803 get rc,svc -l name=update-demo --no-headers'
  I0704 04:20:42.792079 20 builder.go:146] stderr: "No resources found in kubectl-2803 namespace.\n"
  I0704 04:20:42.792135 20 builder.go:147] stdout: ""
  I0704 04:20:42.792216 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2803 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0704 04:20:42.875786 20 builder.go:146] stderr: ""
  I0704 04:20:42.875841 20 builder.go:147] stdout: ""
  I0704 04:20:42.876009 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2803" for this suite. @ 07/04/24 04:20:42.88
â€¢ [14.521 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 07/04/24 04:20:42.892
  I0704 04:20:42.892704 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/04/24 04:20:42.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:20:42.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:20:42.93
  I0704 04:20:42.934156 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  E0704 04:20:43.143238      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:44.145707      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/04/24 04:20:44.367
  I0704 04:20:44.368046 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-6186 --namespace=crd-publish-openapi-6186 create -f -'
  I0704 04:20:44.465463 20 builder.go:146] stderr: ""
  I0704 04:20:44.465511 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3999-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0704 04:20:44.465917 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-6186 --namespace=crd-publish-openapi-6186 delete e2e-test-crd-publish-openapi-3999-crds test-cr'
  I0704 04:20:44.537329 20 builder.go:146] stderr: ""
  I0704 04:20:44.537393 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3999-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0704 04:20:44.537452 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-6186 --namespace=crd-publish-openapi-6186 apply -f -'
  I0704 04:20:44.613335 20 builder.go:146] stderr: ""
  I0704 04:20:44.613387 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3999-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0704 04:20:44.613457 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-6186 --namespace=crd-publish-openapi-6186 delete e2e-test-crd-publish-openapi-3999-crds test-cr'
  I0704 04:20:44.685768 20 builder.go:146] stderr: ""
  I0704 04:20:44.685835 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3999-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/04/24 04:20:44.685
  I0704 04:20:44.685910 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-6186 explain e2e-test-crd-publish-openapi-3999-crds'
  I0704 04:20:44.753831 20 builder.go:146] stderr: ""
  I0704 04:20:44.753961 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-3999-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0704 04:20:45.146548      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:20:46.087847 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6186" for this suite. @ 07/04/24 04:20:46.096
â€¢ [3.209 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 07/04/24 04:20:46.103
  I0704 04:20:46.103460 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename certificates @ 07/04/24 04:20:46.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:20:46.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:20:46.129
  E0704 04:20:46.147443      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /apis @ 07/04/24 04:20:47.08
  STEP: getting /apis/certificates.k8s.io @ 07/04/24 04:20:47.09
  STEP: getting /apis/certificates.k8s.io/v1 @ 07/04/24 04:20:47.093
  STEP: creating @ 07/04/24 04:20:47.096
  STEP: getting @ 07/04/24 04:20:47.116
  STEP: listing @ 07/04/24 04:20:47.119
  STEP: watching @ 07/04/24 04:20:47.121
  I0704 04:20:47.121537 20 certificates.go:316] starting watch
  STEP: patching @ 07/04/24 04:20:47.123
  STEP: updating @ 07/04/24 04:20:47.128
  I0704 04:20:47.135084 20 certificates.go:332] waiting for watch events with expected annotations
  I0704 04:20:47.135155 20 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 07/04/24 04:20:47.135
  STEP: patching /approval @ 07/04/24 04:20:47.138
  STEP: updating /approval @ 07/04/24 04:20:47.144
  E0704 04:20:47.148046      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /status @ 07/04/24 04:20:47.15
  STEP: patching /status @ 07/04/24 04:20:47.153
  STEP: updating /status @ 07/04/24 04:20:47.161
  STEP: deleting @ 07/04/24 04:20:47.169
  STEP: deleting a collection @ 07/04/24 04:20:47.178
  I0704 04:20:47.188250 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-4898" for this suite. @ 07/04/24 04:20:47.191
â€¢ [1.093 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 07/04/24 04:20:47.198
  I0704 04:20:47.198457 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename secrets @ 07/04/24 04:20:47.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:20:47.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:20:47.216
  STEP: creating a secret @ 07/04/24 04:20:47.219
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 07/04/24 04:20:47.223
  STEP: patching the secret @ 07/04/24 04:20:47.226
  STEP: deleting the secret using a LabelSelector @ 07/04/24 04:20:47.233
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 07/04/24 04:20:47.242
  I0704 04:20:47.245920 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8502" for this suite. @ 07/04/24 04:20:47.248
â€¢ [0.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 07/04/24 04:20:47.254
  I0704 04:20:47.254235 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename downward-api @ 07/04/24 04:20:47.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:20:47.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:20:47.272
  STEP: Creating a pod to test downward api env vars @ 07/04/24 04:20:47.275
  E0704 04:20:48.148186      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:49.148817      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:50.149073      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:51.149218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:20:51.312
  I0704 04:20:51.316275 20 output.go:196] Trying to get logs from node 3.142.51.114 pod downward-api-44c2a05f-57ba-45cb-99c9-db9762e5dd8f container dapi-container: <nil>
  STEP: delete the pod @ 07/04/24 04:20:51.336
  I0704 04:20:51.348413 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-476" for this suite. @ 07/04/24 04:20:51.351
â€¢ [4.102 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 07/04/24 04:20:51.356
  I0704 04:20:51.356493 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename kubelet-test @ 07/04/24 04:20:51.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:20:51.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:20:51.37
  E0704 04:20:52.149382      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:53.149743      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:54.150234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:55.150485      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:20:55.444676 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8842" for this suite. @ 07/04/24 04:20:55.458
â€¢ [4.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 07/04/24 04:20:55.473
  I0704 04:20:55.473820 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename container-probe @ 07/04/24 04:20:55.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:20:55.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:20:55.492
  STEP: Creating pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911 @ 07/04/24 04:20:55.494
  E0704 04:20:56.150678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:57.150867      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/04/24 04:20:57.51
  I0704 04:20:57.513213 20 container_probe.go:1749] Initial restart count of pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e is 0
  I0704 04:20:57.516776 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:20:58.151636      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:20:59.151695      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:20:59.520058 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:00.153161      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:01.153801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:01.531917 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:02.153853      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:03.153955      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:03.541429 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:04.154122      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:05.154236      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:05.546018 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:06.154690      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:07.154829      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:07.550423 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:08.154952      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:09.155031      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:09.554043 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:10.155181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:11.155425      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:11.558891 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:12.155495      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:13.155678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:13.564060 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:14.155878      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:15.156322      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:15.568563 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:16.157278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:17.157787      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:17.572180 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:18.158306      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:19.158426      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:19.576333 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:20.158970      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:21.159129      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:21.586141 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:22.159783      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:23.159892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:23.589902 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:24.160189      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:25.160967      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:25.594639 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:26.161161      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:27.161411      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:27.597850 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:28.161637      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:29.161804      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:29.601721 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:30.162357      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:31.162490      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:31.610897 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:32.163240      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:33.163584      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:33.618622 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:34.163712      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:35.164684      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:35.626111 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:36.164959      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:37.165178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:37.630370 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:38.166051      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:39.166198      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:39.633257 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:40.167242      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:41.166719      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:41.637294 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:42.166864      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:43.167101      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:43.640771 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:44.168251      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:45.168425      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:45.644714 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:46.168563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:47.168819      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:47.648934 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:48.168980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:49.169571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:49.652881 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:50.170759      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:51.170993      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:51.656844 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:52.171140      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:53.171291      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:53.661488 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:54.172115      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:55.172237      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:55.665683 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:56.172699      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:57.173424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:57.668606 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:21:58.174262      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:21:59.174379      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:21:59.671770 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:00.175457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:01.175646      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:01.678718 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:02.176451      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:03.176901      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:03.682349 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:04.178019      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:05.178135      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:05.689251 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:06.179005      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:07.179164      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:07.695324 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:08.180030      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:09.180084      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:09.698637 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:10.180203      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:11.180336      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:11.702116 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:12.180650      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:13.180776      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:13.706735 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:14.181386      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:15.181600      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:15.710553 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:16.182021      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:17.182486      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:17.714132 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:18.182525      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:19.182627      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:19.719077 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:20.183602      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:21.183740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:21.723029 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:22.184582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:23.184961      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:23.726823 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:24.185129      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:25.185331      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:25.731792 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:26.186360      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:27.186548      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:27.734713 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:28.187297      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:29.187645      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:29.738740 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:30.188394      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:31.188613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:31.742391 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:32.188883      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:33.189037      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:33.745615 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:34.189133      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:35.189338      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:35.752074 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:36.189489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:37.189611      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:37.757696 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:38.190296      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:39.190411      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:39.760977 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:40.190612      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:41.190943      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:41.764700 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:42.191183      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:43.191352      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:43.768987 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:44.191810      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:45.192934      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:45.779617 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:46.194545      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:47.193702      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:47.783518 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:48.193712      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:49.194008      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:49.791007 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:50.194414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:51.194683      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:51.799020 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:52.195578      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:53.195661      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:53.802239 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:54.196684      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:55.196842      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:55.805892 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:56.197390      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:57.197642      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:57.810653 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:22:58.198111      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:22:59.198433      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:22:59.813651 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:00.199221      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:01.199506      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:01.817614 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:02.200194      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:03.200739      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:03.820368 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:04.200879      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:05.201022      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:05.823564 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:06.202101      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:07.202422      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:07.827613 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:08.202963      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:09.203725      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:09.834242 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:10.204309      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:11.204436      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:11.838774 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:12.205028      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:13.205345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:13.842998 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:14.206305      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:15.206565      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:15.846702 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:16.207166      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:17.207390      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:17.849525 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:18.208217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:19.208728      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:19.853423 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:20.208854      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:21.209075      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:21.857052 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:22.210776      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:23.211574      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:23.863331 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:24.211644      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:25.211845      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:25.866719 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:26.212581      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:27.213055      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:27.871034 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:28.213994      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:29.213944      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:29.874266 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:30.214710      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:31.214856      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:31.878173 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:32.215751      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:33.217401      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:33.881561 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:34.217875      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:35.218027      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:35.885077 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:36.218179      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:37.218461      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:37.889035 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:38.218789      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:39.219145      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:39.893538 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:40.219952      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:41.220219      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:41.896661 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:42.220877      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:43.220953      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:43.900137 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:44.221929      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:45.222154      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:45.903757 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:46.223373      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:47.223742      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:47.908880 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:48.224538      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:49.224821      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:49.912492 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:50.225889      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:51.226178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:51.915691 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:52.227159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:53.227594      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:53.920748 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:54.227374      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:55.227522      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:55.924706 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:56.228099      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:57.228423      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:57.928906 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:23:58.229470      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:23:59.229755      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:23:59.932356 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:00.229855      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:01.230092      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:01.937170 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:02.230243      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:03.230894      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:03.941119 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:04.231604      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:05.231748      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:05.944928 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:06.232366      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:07.232715      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:07.950449 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:08.232937      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:09.235319      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:09.954582 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:10.235979      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:11.236693      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:11.958763 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:12.237156      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:13.237931      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:13.964061 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:14.238639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:15.239053      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:15.971324 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:16.240032      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:17.240256      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:17.976599 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:18.241182      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:19.241292      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:19.981751 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:20.242136      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:21.242823      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:21.985204 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:22.243550      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:23.244246      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:23.998687 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:24.245705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:25.245962      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:26.003207 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:26.246564      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:27.246797      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:28.006841 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:28.247430      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:29.247656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:30.010877 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:30.248265      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:31.249291      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:32.015878 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:32.250448      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:33.250869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:34.022348 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:34.251891      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:35.253012      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:36.026802 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:36.253951      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:37.254216      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:38.031662 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:38.255165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:39.255213      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:40.034877 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:40.256241      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:41.256742      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:42.038474 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:42.257925      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:43.258115      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:44.046145 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:44.258580      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:45.258982      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:46.049372 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:46.259265      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:47.259468      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:48.052799 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:48.259447      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:49.259607      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:50.056756 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:50.260187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:51.260367      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:52.060381 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:52.260585      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:53.261103      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:54.067368 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:54.261699      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:55.261874      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:24:56.071672 20 container_probe.go:1759] Get pod test-grpc-88f4b176-4222-41af-8235-a983cd4bcf0e in namespace container-probe-9911
  E0704 04:24:56.262804      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:57.263081      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/04/24 04:24:58.072
  I0704 04:24:58.084780 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9911" for this suite. @ 07/04/24 04:24:58.089
â€¢ [242.621 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 07/04/24 04:24:58.095
  I0704 04:24:58.095116 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename secrets @ 07/04/24 04:24:58.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:24:58.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:24:58.115
  STEP: Creating secret with name secret-test-fb3f85ae-8543-472a-9008-c313a07b2090 @ 07/04/24 04:24:58.136
  STEP: Creating a pod to test consume secrets @ 07/04/24 04:24:58.14
  E0704 04:24:58.263387      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:24:59.263653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:00.264844      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:01.264776      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:25:02.157
  I0704 04:25:02.160501 20 output.go:196] Trying to get logs from node 3.142.51.114 pod pod-secrets-a3752ed6-d94b-4083-84d7-d23f7542b7e7 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/04/24 04:25:02.203
  I0704 04:25:02.220963 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7466" for this suite. @ 07/04/24 04:25:02.229
  STEP: Destroying namespace "secret-namespace-2387" for this suite. @ 07/04/24 04:25:02.238
â€¢ [4.153 seconds]
------------------------------
SSSSSSSSS  E0704 04:25:02.265277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 07/04/24 04:25:02.27
  I0704 04:25:02.270726 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename container-runtime @ 07/04/24 04:25:02.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:25:02.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:25:02.308
  STEP: create the container @ 07/04/24 04:25:02.311
  W0704 04:25:02.318672      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 07/04/24 04:25:02.318
  E0704 04:25:03.265996      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:04.266199      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:05.266292      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/04/24 04:25:05.335
  STEP: the container should be terminated @ 07/04/24 04:25:05.338
  STEP: the termination message should be set @ 07/04/24 04:25:05.338
  I0704 04:25:05.338313 20 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 07/04/24 04:25:05.338
  I0704 04:25:05.352070 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3430" for this suite. @ 07/04/24 04:25:05.357
â€¢ [3.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 07/04/24 04:25:05.363
  I0704 04:25:05.363860 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename resourcequota @ 07/04/24 04:25:05.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:25:05.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:25:05.386
  STEP: Creating a ResourceQuota with terminating scope @ 07/04/24 04:25:05.398
  STEP: Ensuring ResourceQuota status is calculated @ 07/04/24 04:25:05.411
  E0704 04:25:06.266448      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:07.266715      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 07/04/24 04:25:07.416
  STEP: Ensuring ResourceQuota status is calculated @ 07/04/24 04:25:07.433
  E0704 04:25:08.267009      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:09.267136      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 07/04/24 04:25:09.437
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 07/04/24 04:25:09.457
  E0704 04:25:10.267631      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:11.267724      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 07/04/24 04:25:11.46
  E0704 04:25:12.268670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:13.269150      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/04/24 04:25:13.464
  STEP: Ensuring resource quota status released the pod usage @ 07/04/24 04:25:13.473
  E0704 04:25:14.269863      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:15.270011      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 07/04/24 04:25:15.477
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 07/04/24 04:25:15.488
  E0704 04:25:16.270158      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:17.270553      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 07/04/24 04:25:17.491
  E0704 04:25:18.271068      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:19.271405      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/04/24 04:25:19.494
  STEP: Ensuring resource quota status released the pod usage @ 07/04/24 04:25:19.507
  E0704 04:25:20.271701      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:21.271934      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:25:21.510011 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4388" for this suite. @ 07/04/24 04:25:21.512
â€¢ [16.153 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 07/04/24 04:25:21.517
  I0704 04:25:21.517625 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename limitrange @ 07/04/24 04:25:21.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:25:21.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:25:21.535
  STEP: Creating a LimitRange @ 07/04/24 04:25:21.538
  STEP: Setting up watch @ 07/04/24 04:25:21.538
  STEP: Submitting a LimitRange @ 07/04/24 04:25:21.641
  STEP: Verifying LimitRange creation was observed @ 07/04/24 04:25:21.646
  STEP: Fetching the LimitRange to ensure it has proper values @ 07/04/24 04:25:21.648
  I0704 04:25:21.651160 20 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0704 04:25:21.651211 20 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 07/04/24 04:25:21.651
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 07/04/24 04:25:21.656
  I0704 04:25:21.660484 20 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0704 04:25:21.660533 20 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 07/04/24 04:25:21.66
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 07/04/24 04:25:21.666
  I0704 04:25:21.670976 20 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0704 04:25:21.671025 20 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 07/04/24 04:25:21.671
  STEP: Failing to create a Pod with more than max resources @ 07/04/24 04:25:21.675
  STEP: Updating a LimitRange @ 07/04/24 04:25:21.678
  STEP: Verifying LimitRange updating is effective @ 07/04/24 04:25:21.683
  E0704 04:25:22.272169      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:23.273084      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 07/04/24 04:25:23.687
  STEP: Failing to create a Pod with more than max resources @ 07/04/24 04:25:23.692
  STEP: Deleting a LimitRange @ 07/04/24 04:25:23.695
  STEP: Verifying the LimitRange was deleted @ 07/04/24 04:25:23.701
  E0704 04:25:24.274200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:25.274308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:26.274583      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:27.274887      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:28.276697      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:25:28.705303 20 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 07/04/24 04:25:28.705
  I0704 04:25:28.716610 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-522" for this suite. @ 07/04/24 04:25:28.723
â€¢ [7.215 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 07/04/24 04:25:28.732
  I0704 04:25:28.732553 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename taint-multiple-pods @ 07/04/24 04:25:28.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:25:28.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:25:28.775
  I0704 04:25:28.778986 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0704 04:25:29.277347      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:30.277582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:31.277904      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:32.277976      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:33.278227      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:34.278511      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:35.278640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:36.278888      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:37.279732      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:38.280176      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:39.280330      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:40.280700      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:41.282544      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:42.282719      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:43.283514      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:44.283684      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:45.284713      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:46.284974      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:47.285157      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:48.285839      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:49.286367      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:50.286714      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:51.286851      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:52.286985      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:53.287622      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:54.287689      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:55.288099      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:56.288413      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:57.288433      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:58.289225      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:25:59.289566      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:00.290250      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:01.291155      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:02.291292      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:03.291858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:04.291994      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:05.292406      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:06.293800      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:07.293781      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:08.294278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:09.294820      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:10.295276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:11.295370      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:12.295588      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:13.296011      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:14.296718      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:15.297399      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:16.297536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:17.297944      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:18.298020      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:19.298566      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:20.298766      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:21.299570      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:22.299985      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:23.300360      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:24.300707      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:25.300857      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:26.301117      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:27.301450      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:28.302041      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:26:28.780082 20 util.go:400] Waiting for terminating namespaces to be deleted...
  I0704 04:26:28.783348 20 taints.go:150] Starting informer...
  STEP: Starting pods... @ 07/04/24 04:26:28.783
  I0704 04:26:29.004116 20 taints.go:469] Pod1 is running on 3.142.51.114. Tainting Node
  E0704 04:26:29.302510      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:30.303309      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:26:31.242427 20 taints.go:477] Pod2 is running on 3.142.51.114. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/04/24 04:26:31.242
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/04/24 04:26:31.259
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 07/04/24 04:26:31.271
  E0704 04:26:31.303941      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:32.304163      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:33.304747      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:34.304978      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:35.305169      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:36.305151      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:26:37.078008 20 taints.go:498] Noticed Pod "taint-eviction-b1" gets evicted.
  E0704 04:26:37.305301      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:38.306157      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:39.306250      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:40.306377      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:41.306647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:42.307181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:43.308075      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:44.308750      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:45.308996      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:46.309163      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:47.310104      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:48.311084      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:49.311368      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:50.312389      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:51.312490      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:52.312897      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:53.313373      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:54.313583      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:55.314211      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:56.314446      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:57.314826      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:26:57.329933 20 taints.go:498] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/04/24 04:26:57.343
  I0704 04:26:57.348065 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-6142" for this suite. @ 07/04/24 04:26:57.351
â€¢ [88.624 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 07/04/24 04:26:57.356
  I0704 04:26:57.356959 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename replicaset @ 07/04/24 04:26:57.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:26:57.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:26:57.381
  I0704 04:26:57.392203 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0704 04:26:58.315399      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:26:59.315638      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:00.315734      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:01.315875      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:02.315950      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:27:02.405699 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/04/24 04:27:02.405
  STEP: Scaling up "test-rs" replicaset @ 07/04/24 04:27:02.405
  I0704 04:27:02.429579 20 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 07/04/24 04:27:02.429
  I0704 04:27:02.445539 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-5307 with ReadyReplicas 1, AvailableReplicas 1
  I0704 04:27:02.465618 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-5307 with ReadyReplicas 1, AvailableReplicas 1
  I0704 04:27:02.490559 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-5307 with ReadyReplicas 1, AvailableReplicas 1
  I0704 04:27:02.498692 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-5307 with ReadyReplicas 1, AvailableReplicas 1
  E0704 04:27:03.316677      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:04.319637      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:27:04.332538 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-5307 with ReadyReplicas 2, AvailableReplicas 2
  I0704 04:27:04.653151 20 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-5307 with ReadyReplicas 3 found true
  I0704 04:27:04.653450 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5307" for this suite. @ 07/04/24 04:27:04.656
â€¢ [7.306 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 07/04/24 04:27:04.663
  I0704 04:27:04.663618 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename secrets @ 07/04/24 04:27:04.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:27:04.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:27:04.692
  STEP: Creating secret with name secret-test-map-7d9e7a6b-3277-472a-a23f-f0f8ef11f1c3 @ 07/04/24 04:27:04.696
  STEP: Creating a pod to test consume secrets @ 07/04/24 04:27:04.701
  E0704 04:27:05.319943      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:06.320284      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:07.320206      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:08.321050      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:27:08.725
  I0704 04:27:08.729353 20 output.go:196] Trying to get logs from node 3.142.51.114 pod pod-secrets-ec057af1-e826-4a5d-ac51-f23f7ec7836c container secret-volume-test: <nil>
  STEP: delete the pod @ 07/04/24 04:27:08.765
  I0704 04:27:08.790330 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2075" for this suite. @ 07/04/24 04:27:08.793
â€¢ [4.137 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 07/04/24 04:27:08.801
  I0704 04:27:08.801464 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 04:27:08.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:27:08.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:27:08.823
  STEP: Creating projection with secret that has name projected-secret-test-c44d66ae-2d3c-4df7-8736-425f425d32d3 @ 07/04/24 04:27:08.827
  STEP: Creating a pod to test consume secrets @ 07/04/24 04:27:08.833
  E0704 04:27:09.321290      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:10.321416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:11.323156      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:12.323243      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:27:12.857
  I0704 04:27:12.868279 20 output.go:196] Trying to get logs from node 3.142.51.114 pod pod-projected-secrets-f217d4ff-6a99-4d36-b3d9-a261e03ecbf9 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/04/24 04:27:12.887
  I0704 04:27:12.910900 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7294" for this suite. @ 07/04/24 04:27:12.914
â€¢ [4.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 07/04/24 04:27:12.924
  I0704 04:27:12.925051 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename taint-single-pod @ 07/04/24 04:27:12.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:27:12.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:27:12.945
  I0704 04:27:12.948518 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0704 04:27:13.323713      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:14.324780      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:15.326190      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:16.325699      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:17.325807      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:18.326136      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:19.326761      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:20.327144      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:21.327908      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:22.328498      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:23.328858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:24.329442      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:25.330309      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:26.330485      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:27.330590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:28.331060      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:29.331433      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:30.331669      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:31.331740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:32.332801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:33.333841      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:34.333995      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:35.334702      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:36.334847      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:37.335220      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:38.336194      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:39.336334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:40.336463      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:41.337486      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:42.338034      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:43.339128      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:44.339406      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:45.340429      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:46.340658      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:47.340761      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:48.341820      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:49.342956      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:50.343667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:51.344369      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:52.344474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:53.345594      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:54.345825      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:55.345942      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:56.346069      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:57.346899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:58.347421      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:27:59.348432      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:00.348654      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:01.349654      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:02.350293      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:03.350992      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:04.351260      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:05.351347      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:06.351875      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:07.352543      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:08.353129      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:09.354174      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:10.354283      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:11.354870      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:12.355618      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:28:12.949571 20 util.go:400] Waiting for terminating namespaces to be deleted...
  I0704 04:28:12.953927 20 taints.go:150] Starting informer...
  STEP: Starting pod... @ 07/04/24 04:28:12.953
  I0704 04:28:13.175841 20 taints.go:300] Pod is running on 3.142.51.114. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/04/24 04:28:13.175
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/04/24 04:28:13.19
  STEP: Waiting short time to make sure Pod is queued for deletion @ 07/04/24 04:28:13.197
  I0704 04:28:13.197478 20 taints.go:319] Pod wasn't evicted. Proceeding
  I0704 04:28:13.197665 20 taints.go:326] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/04/24 04:28:13.222
  STEP: Waiting some time to make sure that toleration time passed. @ 07/04/24 04:28:13.226
  E0704 04:28:13.356581      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:14.356757      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:15.356850      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:16.357218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:17.357589      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:18.358048      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:19.358594      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:20.358798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:21.359103      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:22.359397      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:23.360193      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:24.360510      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:25.360670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:26.360940      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:27.361106      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:28.362102      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:29.362191      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:30.362299      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:31.362407      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:32.362524      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:33.362940      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:34.363123      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:35.363740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:36.364799      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:37.365188      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:38.366101      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:39.366360      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:40.366506      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:41.366641      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:42.366843      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:43.367159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:44.367329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:45.367714      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:46.367901      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:47.368168      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:48.368776      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:49.368908      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:50.369097      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:51.371944      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:52.372028      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:53.372085      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:54.372205      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:55.373141      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:56.373365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:57.373657      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:58.374165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:28:59.374404      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:00.374521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:01.375251      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:02.375531      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:03.376398      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:04.377045      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:05.377401      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:06.377619      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:07.377789      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:08.378227      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:09.378529      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:10.378776      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:11.379030      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:12.379172      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:13.380110      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:14.380363      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:15.380660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:16.381494      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:17.381876      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:18.382022      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:19.382450      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:20.382940      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:21.383074      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:22.383439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:23.384028      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:24.384751      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:25.385409      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:26.385577      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:27.385969      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:29:28.227183 20 taints.go:335] Pod wasn't evicted. Test successful
  I0704 04:29:28.227356 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-8722" for this suite. @ 07/04/24 04:29:28.233
â€¢ [135.315 seconds]
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 07/04/24 04:29:28.24
  I0704 04:29:28.240289 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename controllerrevisions @ 07/04/24 04:29:28.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:29:28.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:29:28.294
  STEP: Creating DaemonSet "e2e-55hlr-daemon-set" @ 07/04/24 04:29:28.334
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/04/24 04:29:28.342
  I0704 04:29:28.352651 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-55hlr-daemon-set: 0
  I0704 04:29:28.352710 20 fixtures.go:130] Node 18.118.109.209 is running 0 daemon pod, expected 1
  E0704 04:29:28.386883      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:29:29.351851 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-55hlr-daemon-set: 0
  I0704 04:29:29.352100 20 fixtures.go:130] Node 18.118.109.209 is running 0 daemon pod, expected 1
  E0704 04:29:29.387341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:29:30.350041 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-55hlr-daemon-set: 2
  I0704 04:29:30.350090 20 fixtures.go:130] Node 3.142.51.114 is running 0 daemon pod, expected 1
  E0704 04:29:30.389518      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:29:31.355286 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-55hlr-daemon-set: 3
  I0704 04:29:31.355330 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-55hlr-daemon-set
  STEP: Confirm DaemonSet "e2e-55hlr-daemon-set" successfully created with "daemonset-name=e2e-55hlr-daemon-set" label @ 07/04/24 04:29:31.358
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-55hlr-daemon-set" @ 07/04/24 04:29:31.364
  I0704 04:29:31.366717 20 controller_revision.go:162] Located ControllerRevision: "e2e-55hlr-daemon-set-58d865fc67"
  STEP: Patching ControllerRevision "e2e-55hlr-daemon-set-58d865fc67" @ 07/04/24 04:29:31.369
  I0704 04:29:31.379381 20 controller_revision.go:173] e2e-55hlr-daemon-set-58d865fc67 has been patched
  STEP: Create a new ControllerRevision @ 07/04/24 04:29:31.379
  I0704 04:29:31.385591 20 controller_revision.go:191] Created ControllerRevision: e2e-55hlr-daemon-set-f58675dcc
  STEP: Confirm that there are two ControllerRevisions @ 07/04/24 04:29:31.385
  I0704 04:29:31.385681 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0704 04:29:31.388240 20 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-55hlr-daemon-set-58d865fc67" @ 07/04/24 04:29:31.388
  E0704 04:29:31.393477      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Confirm that there is only one ControllerRevision @ 07/04/24 04:29:31.398
  I0704 04:29:31.398274 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0704 04:29:31.400516 20 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-55hlr-daemon-set-f58675dcc" @ 07/04/24 04:29:31.402
  I0704 04:29:31.409958 20 controller_revision.go:220] e2e-55hlr-daemon-set-f58675dcc has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 07/04/24 04:29:31.41
  W0704 04:29:31.423785      20 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 07/04/24 04:29:31.423
  I0704 04:29:31.424041 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  E0704 04:29:32.391811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:29:32.425080 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0704 04:29:32.430319 20 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-55hlr-daemon-set-f58675dcc=updated" @ 07/04/24 04:29:32.43
  STEP: Confirm that there is only one ControllerRevision @ 07/04/24 04:29:32.442
  I0704 04:29:32.442673 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0704 04:29:32.446143 20 controller_revision.go:265] Found 1 ControllerRevisions
  I0704 04:29:32.448882 20 controller_revision.go:246] ControllerRevision "e2e-55hlr-daemon-set-5d9dd7b5b8" has revision 3
  STEP: Deleting DaemonSet "e2e-55hlr-daemon-set" @ 07/04/24 04:29:32.451
  STEP: deleting DaemonSet.extensions e2e-55hlr-daemon-set in namespace controllerrevisions-471, will wait for the garbage collector to delete the pods @ 07/04/24 04:29:32.451
  I0704 04:29:32.515062 20 resources.go:139] Deleting DaemonSet.extensions e2e-55hlr-daemon-set took: 7.989666ms
  I0704 04:29:32.616393 20 resources.go:163] Terminating DaemonSet.extensions e2e-55hlr-daemon-set pods took: 101.328262ms
  E0704 04:29:33.392157      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:34.393008      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:29:34.820081 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-55hlr-daemon-set: 0
  I0704 04:29:34.820124 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-55hlr-daemon-set
  I0704 04:29:34.822612 20 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26589"},"items":null}

  I0704 04:29:34.827831 20 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26590"},"items":null}

  I0704 04:29:34.839880 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-471" for this suite. @ 07/04/24 04:29:34.842
â€¢ [6.607 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 07/04/24 04:29:34.846
  I0704 04:29:34.846877 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename subpath @ 07/04/24 04:29:34.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:29:34.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:29:34.863
  STEP: Setting up data @ 07/04/24 04:29:34.866
  STEP: Creating pod pod-subpath-test-downwardapi-htsl @ 07/04/24 04:29:34.878
  STEP: Creating a pod to test atomic-volume-subpath @ 07/04/24 04:29:34.878
  E0704 04:29:35.393268      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:36.393470      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:37.394413      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:38.395206      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:39.395886      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:40.396721      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:41.397441      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:42.397845      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:43.398362      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:44.398761      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:45.398888      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:46.398973      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:47.399113      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:48.399202      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:49.399337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:50.399536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:51.400447      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:52.400554      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:53.400963      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:54.401980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:55.403056      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:56.403286      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:57.403374      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:29:58.403457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:29:58.949
  I0704 04:29:58.952305 20 output.go:196] Trying to get logs from node 18.191.27.132 pod pod-subpath-test-downwardapi-htsl container test-container-subpath-downwardapi-htsl: <nil>
  STEP: delete the pod @ 07/04/24 04:29:58.967
  STEP: Deleting pod pod-subpath-test-downwardapi-htsl @ 07/04/24 04:29:58.979
  I0704 04:29:58.980227 20 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-htsl" in namespace "subpath-6106"
  I0704 04:29:58.982670 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6106" for this suite. @ 07/04/24 04:29:58.987
â€¢ [24.145 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 07/04/24 04:29:58.991
  I0704 04:29:58.991609 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename resourcequota @ 07/04/24 04:29:59.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:29:59.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:29:59.024
  STEP: Creating a ResourceQuota @ 07/04/24 04:29:59.028
  STEP: Getting a ResourceQuota @ 07/04/24 04:29:59.033
  STEP: Updating a ResourceQuota @ 07/04/24 04:29:59.036
  STEP: Verifying a ResourceQuota was modified @ 07/04/24 04:29:59.04
  STEP: Deleting a ResourceQuota @ 07/04/24 04:29:59.043
  STEP: Verifying the deleted ResourceQuota @ 07/04/24 04:29:59.05
  I0704 04:29:59.053075 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8584" for this suite. @ 07/04/24 04:29:59.056
â€¢ [0.070 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 07/04/24 04:29:59.062
  I0704 04:29:59.063004 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename gc @ 07/04/24 04:29:59.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:29:59.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:29:59.081
  STEP: create the rc @ 07/04/24 04:29:59.089
  W0704 04:29:59.094087      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0704 04:29:59.403773      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:00.404807      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:01.411294      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:02.412331      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:03.413166      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:04.413629      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 07/04/24 04:30:05.232
  STEP: wait for the rc to be deleted @ 07/04/24 04:30:05.354
  E0704 04:30:05.415720      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:06.415910      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:30:06.989223 20 garbage_collector.go:670] 88 pods remaining
  I0704 04:30:06.989282 20 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0704 04:30:06.989292 20 garbage_collector.go:678] 
  E0704 04:30:07.416725      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:30:07.717450 20 garbage_collector.go:670] 75 pods remaining
  I0704 04:30:07.717635 20 garbage_collector.go:677] 75 pods has nil DeletionTimestamp
  I0704 04:30:07.717734 20 garbage_collector.go:678] 
  E0704 04:30:08.416796      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:30:09.143302 20 garbage_collector.go:670] 59 pods remaining
  I0704 04:30:09.147625 20 garbage_collector.go:677] 55 pods has nil DeletionTimestamp
  I0704 04:30:09.147735 20 garbage_collector.go:678] 
  E0704 04:30:09.419643      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:30:10.031913 20 garbage_collector.go:670] 42 pods remaining
  I0704 04:30:10.032106 20 garbage_collector.go:677] 42 pods has nil DeletionTimestamp
  I0704 04:30:10.036115 20 garbage_collector.go:678] 
  E0704 04:30:10.421572      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:30:11.022682 20 garbage_collector.go:670] 33 pods remaining
  I0704 04:30:11.022863 20 garbage_collector.go:677] 30 pods has nil DeletionTimestamp
  I0704 04:30:11.022965 20 garbage_collector.go:678] 
  E0704 04:30:11.421975      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:30:11.534231 20 garbage_collector.go:670] 21 pods remaining
  I0704 04:30:11.534402 20 garbage_collector.go:677] 21 pods has nil DeletionTimestamp
  I0704 04:30:11.534509 20 garbage_collector.go:678] 
  E0704 04:30:12.422851      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:30:12.763679 20 garbage_collector.go:670] 4 pods remaining
  I0704 04:30:12.763716 20 garbage_collector.go:677] 2 pods has nil DeletionTimestamp
  I0704 04:30:12.763727 20 garbage_collector.go:678] 
  E0704 04:30:13.423748      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/04/24 04:30:13.674
  W0704 04:30:13.970541      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0704 04:30:13.970738 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0704 04:30:13.972454 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-474" for this suite. @ 07/04/24 04:30:14.114
â€¢ [15.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 07/04/24 04:30:14.291
  I0704 04:30:14.291112 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename discovery @ 07/04/24 04:30:14.292
  E0704 04:30:14.424043      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:30:14.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:30:14.619
  STEP: Setting up server cert @ 07/04/24 04:30:14.741
  E0704 04:30:15.424953      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:30:15.717374 20 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0704 04:30:15.722642 20 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0704 04:30:15.722691 20 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0704 04:30:15.722705 20 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0704 04:30:15.722720 20 discovery.go:139] Checking APIGroup: apps
  I0704 04:30:15.724121 20 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0704 04:30:15.724154 20 discovery.go:148] Versions found [{apps/v1 v1}]
  I0704 04:30:15.724164 20 discovery.go:154] apps/v1 matches apps/v1
  I0704 04:30:15.724175 20 discovery.go:139] Checking APIGroup: events.k8s.io
  I0704 04:30:15.725141 20 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0704 04:30:15.725168 20 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0704 04:30:15.725178 20 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0704 04:30:15.725188 20 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0704 04:30:15.726130 20 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0704 04:30:15.726169 20 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0704 04:30:15.726180 20 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0704 04:30:15.726191 20 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0704 04:30:15.727368 20 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0704 04:30:15.727394 20 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0704 04:30:15.727404 20 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0704 04:30:15.727414 20 discovery.go:139] Checking APIGroup: autoscaling
  I0704 04:30:15.728473 20 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0704 04:30:15.728501 20 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0704 04:30:15.728510 20 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0704 04:30:15.728520 20 discovery.go:139] Checking APIGroup: batch
  I0704 04:30:15.731454 20 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0704 04:30:15.731613 20 discovery.go:148] Versions found [{batch/v1 v1}]
  I0704 04:30:15.731698 20 discovery.go:154] batch/v1 matches batch/v1
  I0704 04:30:15.731803 20 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0704 04:30:15.736428 20 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0704 04:30:15.736572 20 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0704 04:30:15.736685 20 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0704 04:30:15.736775 20 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0704 04:30:15.738053 20 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0704 04:30:15.738173 20 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0704 04:30:15.738259 20 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0704 04:30:15.738332 20 discovery.go:139] Checking APIGroup: policy
  I0704 04:30:15.739344 20 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0704 04:30:15.739455 20 discovery.go:148] Versions found [{policy/v1 v1}]
  I0704 04:30:15.739582 20 discovery.go:154] policy/v1 matches policy/v1
  I0704 04:30:15.739666 20 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0704 04:30:15.740653 20 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0704 04:30:15.740758 20 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0704 04:30:15.740848 20 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0704 04:30:15.740931 20 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0704 04:30:15.741944 20 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0704 04:30:15.742048 20 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0704 04:30:15.742137 20 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0704 04:30:15.742222 20 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0704 04:30:15.744046 20 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0704 04:30:15.744157 20 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0704 04:30:15.744241 20 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0704 04:30:15.744331 20 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0704 04:30:15.745434 20 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0704 04:30:15.745555 20 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0704 04:30:15.745648 20 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0704 04:30:15.745721 20 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0704 04:30:15.749331 20 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0704 04:30:15.749458 20 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0704 04:30:15.749560 20 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0704 04:30:15.749642 20 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0704 04:30:15.750676 20 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0704 04:30:15.750773 20 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0704 04:30:15.750891 20 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0704 04:30:15.750976 20 discovery.go:139] Checking APIGroup: node.k8s.io
  I0704 04:30:15.752087 20 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0704 04:30:15.752204 20 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0704 04:30:15.752289 20 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0704 04:30:15.752372 20 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0704 04:30:15.753448 20 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0704 04:30:15.753578 20 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0704 04:30:15.753673 20 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0704 04:30:15.753758 20 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0704 04:30:15.754705 20 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0704 04:30:15.754860 20 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I0704 04:30:15.754956 20 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0704 04:30:15.755037 20 discovery.go:139] Checking APIGroup: crd.projectcalico.org
  I0704 04:30:15.756276 20 discovery.go:147] PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  I0704 04:30:15.756631 20 discovery.go:148] Versions found [{crd.projectcalico.org/v1 v1}]
  I0704 04:30:15.756716 20 discovery.go:154] crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  I0704 04:30:15.756796 20 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0704 04:30:15.757828 20 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0704 04:30:15.758000 20 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0704 04:30:15.758113 20 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0704 04:30:15.758728 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-510" for this suite. @ 07/04/24 04:30:15.762
â€¢ [1.484 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:348
  STEP: Creating a kubernetes client @ 07/04/24 04:30:15.78
  I0704 04:30:15.780491 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename disruption @ 07/04/24 04:30:15.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:30:15.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:30:16.039
  STEP: Creating a pdb that targets all three pods in a test replica set @ 07/04/24 04:30:16.12
  STEP: Waiting for the pdb to be processed @ 07/04/24 04:30:16.189
  STEP: First trying to evict a pod which shouldn't be evictable @ 07/04/24 04:30:16.294
  STEP: Waiting for all pods to be running @ 07/04/24 04:30:16.295
  I0704 04:30:16.364345 20 disruption.go:567] pods: 0 < 3
  E0704 04:30:16.425859      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:17.427637      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:30:18.304145 20 disruption.go:578] running pods: 0 < 3
  E0704 04:30:18.428615      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:19.429156      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:30:20.299394 20 disruption.go:578] running pods: 0 < 3
  E0704 04:30:20.430027      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:21.430232      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:30:22.299871 20 disruption.go:578] running pods: 2 < 3
  E0704 04:30:22.431057      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:23.431178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:30:24.355060 20 disruption.go:578] running pods: 2 < 3
  E0704 04:30:24.432180      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:25.432342      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:30:26.302950 20 disruption.go:578] running pods: 2 < 3
  E0704 04:30:26.432712      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:27.432812      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 07/04/24 04:30:28.298
  STEP: Updating the pdb to allow a pod to be evicted @ 07/04/24 04:30:28.31
  STEP: Waiting for the pdb to be processed @ 07/04/24 04:30:28.33
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/04/24 04:30:28.335
  STEP: Waiting for all pods to be running @ 07/04/24 04:30:28.335
  STEP: Waiting for the pdb to observed all healthy pods @ 07/04/24 04:30:28.338
  STEP: Patching the pdb to disallow a pod to be evicted @ 07/04/24 04:30:28.367
  STEP: Waiting for the pdb to be processed @ 07/04/24 04:30:28.411
  E0704 04:30:28.433440      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:29.433441      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 07/04/24 04:30:30.417
  STEP: locating a running pod @ 07/04/24 04:30:30.423
  E0704 04:30:30.435760      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pdb to allow a pod to be evicted @ 07/04/24 04:30:30.447
  STEP: Waiting for the pdb to be deleted @ 07/04/24 04:30:30.455
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/04/24 04:30:30.458
  STEP: Waiting for all pods to be running @ 07/04/24 04:30:30.458
  I0704 04:30:30.497087 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8215" for this suite. @ 07/04/24 04:30:30.521
â€¢ [14.769 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 07/04/24 04:30:30.551
  I0704 04:30:30.551180 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/04/24 04:30:30.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:30:30.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:30:30.637
  STEP: create the container to handle the HTTPGet hook request. @ 07/04/24 04:30:30.646
  E0704 04:30:31.437680      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:32.437552      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:33.438187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:34.438337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/04/24 04:30:34.679
  E0704 04:30:35.438563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:36.438678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 07/04/24 04:30:36.702
  E0704 04:30:37.438820      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:38.439363      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:39.439541      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:40.439764      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 07/04/24 04:30:40.724
  I0704 04:30:40.740325 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4906" for this suite. @ 07/04/24 04:30:40.743
â€¢ [10.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1048
  STEP: Creating a kubernetes client @ 07/04/24 04:30:40.752
  I0704 04:30:40.752759 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename kubectl @ 07/04/24 04:30:40.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:30:40.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:30:40.769
  STEP: create deployment with httpd image @ 07/04/24 04:30:40.772
  I0704 04:30:40.772939 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-6644 create -f -'
  I0704 04:30:40.875024 20 builder.go:146] stderr: ""
  I0704 04:30:40.875066 20 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 07/04/24 04:30:40.875
  I0704 04:30:40.875365 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-6644 diff -f -'
  E0704 04:30:41.440359      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:42.440502      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:43.441474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:44.441630      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:45.441932      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:30:45.474362 20 builder.go:135] rc: 1
  I0704 04:30:45.474450 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-6644 delete -f -'
  I0704 04:30:45.575941 20 builder.go:146] stderr: ""
  I0704 04:30:45.575987 20 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0704 04:30:45.576090 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6644" for this suite. @ 07/04/24 04:30:45.579
â€¢ [4.835 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 07/04/24 04:30:45.587
  I0704 04:30:45.587554 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename emptydir @ 07/04/24 04:30:45.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:30:45.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:30:45.628
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/04/24 04:30:45.631
  E0704 04:30:46.442046      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:47.443070      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:48.443965      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:49.444702      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:30:49.656
  I0704 04:30:49.659491 20 output.go:196] Trying to get logs from node 3.142.51.114 pod pod-ee73ae24-613a-4e25-94e4-65a8fc0321af container test-container: <nil>
  STEP: delete the pod @ 07/04/24 04:30:49.693
  I0704 04:30:49.717239 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7485" for this suite. @ 07/04/24 04:30:49.722
â€¢ [4.150 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 07/04/24 04:30:49.738
  I0704 04:30:49.738316 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/04/24 04:30:49.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:30:49.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:30:49.76
  STEP: create the container to handle the HTTPGet hook request. @ 07/04/24 04:30:49.772
  E0704 04:30:50.445298      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:51.445435      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/04/24 04:30:51.806
  E0704 04:30:52.446905      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:53.448809      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 07/04/24 04:30:53.844
  STEP: delete the pod with lifecycle hook @ 07/04/24 04:30:53.863
  E0704 04:30:54.449181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:55.449460      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:56.449563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:57.449890      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:30:57.898593 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3250" for this suite. @ 07/04/24 04:30:57.905
â€¢ [8.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 07/04/24 04:30:57.912
  I0704 04:30:57.912671 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename webhook @ 07/04/24 04:30:57.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:30:57.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:30:57.932
  STEP: Setting up server cert @ 07/04/24 04:30:57.965
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/04/24 04:30:58.295
  STEP: Deploying the webhook pod @ 07/04/24 04:30:58.303
  STEP: Wait for the deployment to be ready @ 07/04/24 04:30:58.316
  I0704 04:30:58.332624 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0704 04:30:58.453079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:30:59.453185      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/04/24 04:31:00.347
  STEP: Verifying the service has paired with the endpoint @ 07/04/24 04:31:00.371
  E0704 04:31:00.453236      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:31:01.372129 20 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 07/04/24 04:31:01.378
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/04/24 04:31:01.397
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 07/04/24 04:31:01.405
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/04/24 04:31:01.415
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 07/04/24 04:31:01.429
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/04/24 04:31:01.438
  E0704 04:31:01.454121      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:31:01.513573 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3310" for this suite. @ 07/04/24 04:31:01.519
  STEP: Destroying namespace "webhook-markers-9829" for this suite. @ 07/04/24 04:31:01.539
â€¢ [3.635 seconds]
------------------------------
SSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 07/04/24 04:31:01.547
  I0704 04:31:01.547846 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename prestop @ 07/04/24 04:31:01.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:31:01.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:31:01.62
  STEP: Creating server pod server in namespace prestop-6275 @ 07/04/24 04:31:01.638
  STEP: Waiting for pods to come up. @ 07/04/24 04:31:01.65
  E0704 04:31:02.454414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:03.454581      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:04.454744      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:05.454971      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-6275 @ 07/04/24 04:31:05.675
  E0704 04:31:06.454922      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:07.455123      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 07/04/24 04:31:07.693
  E0704 04:31:08.455133      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:09.455263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:10.455380      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:11.455684      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:12.455863      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:31:12.704478 20 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 07/04/24 04:31:12.704
  I0704 04:31:12.717111 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-6275" for this suite. @ 07/04/24 04:31:12.727
â€¢ [11.198 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 07/04/24 04:31:12.746
  I0704 04:31:12.746194 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename webhook @ 07/04/24 04:31:12.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:31:12.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:31:12.799
  STEP: Setting up server cert @ 07/04/24 04:31:12.819
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/04/24 04:31:13.267
  STEP: Deploying the webhook pod @ 07/04/24 04:31:13.272
  STEP: Wait for the deployment to be ready @ 07/04/24 04:31:13.282
  I0704 04:31:13.290632 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0704 04:31:13.456781      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:14.457066      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:31:15.310102 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 4, 4, 31, 13, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 4, 31, 13, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 4, 31, 13, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 4, 31, 13, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0704 04:31:15.457428      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:16.457904      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/04/24 04:31:17.313
  STEP: Verifying the service has paired with the endpoint @ 07/04/24 04:31:17.323
  E0704 04:31:17.458755      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:31:18.323829 20 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 07/04/24 04:31:18.335
  I0704 04:31:18.391747 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6349" for this suite. @ 07/04/24 04:31:18.397
  STEP: Destroying namespace "webhook-markers-3845" for this suite. @ 07/04/24 04:31:18.409
â€¢ [5.671 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 07/04/24 04:31:18.417
  I0704 04:31:18.417194 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/04/24 04:31:18.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:31:18.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:31:18.436
  STEP: Creating 50 configmaps @ 07/04/24 04:31:18.44
  E0704 04:31:18.458954      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 07/04/24 04:31:18.673
  I0704 04:31:18.875984 20 resource.go:87] Pod name wrapped-volume-race-ab1efa4e-516a-4327-99d5-0ee11b59b809: Found 1 pods out of 5
  E0704 04:31:19.459670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:20.463650      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:21.465771      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:22.466700      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:23.467147      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:31:23.890789 20 resource.go:87] Pod name wrapped-volume-race-ab1efa4e-516a-4327-99d5-0ee11b59b809: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/04/24 04:31:23.89
  STEP: Creating RC which spawns configmap-volume pods @ 07/04/24 04:31:23.926
  I0704 04:31:23.958534 20 resource.go:87] Pod name wrapped-volume-race-f8123a52-ccfa-424b-87d2-ec37ca7e4517: Found 0 pods out of 5
  E0704 04:31:24.468300      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:25.468407      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:26.468729      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:27.471031      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:28.474008      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:31:28.964669 20 resource.go:87] Pod name wrapped-volume-race-f8123a52-ccfa-424b-87d2-ec37ca7e4517: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/04/24 04:31:28.964
  STEP: Creating RC which spawns configmap-volume pods @ 07/04/24 04:31:28.982
  I0704 04:31:29.000553 20 resource.go:87] Pod name wrapped-volume-race-ae02103a-b4f7-4f0b-b49a-5014d9df3bb2: Found 0 pods out of 5
  E0704 04:31:29.472660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:30.472449      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:31.473186      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:32.473428      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:33.474350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:31:34.014829 20 resource.go:87] Pod name wrapped-volume-race-ae02103a-b4f7-4f0b-b49a-5014d9df3bb2: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/04/24 04:31:34.015
  STEP: deleting ReplicationController wrapped-volume-race-ae02103a-b4f7-4f0b-b49a-5014d9df3bb2 in namespace emptydir-wrapper-4603, will wait for the garbage collector to delete the pods @ 07/04/24 04:31:34.042
  I0704 04:31:34.102713 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-ae02103a-b4f7-4f0b-b49a-5014d9df3bb2 took: 5.492374ms
  I0704 04:31:34.303134 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-ae02103a-b4f7-4f0b-b49a-5014d9df3bb2 pods took: 200.420242ms
  E0704 04:31:34.474549      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:35.475580      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:36.477013      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-f8123a52-ccfa-424b-87d2-ec37ca7e4517 in namespace emptydir-wrapper-4603, will wait for the garbage collector to delete the pods @ 07/04/24 04:31:36.903
  I0704 04:31:36.968020 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-f8123a52-ccfa-424b-87d2-ec37ca7e4517 took: 11.082959ms
  I0704 04:31:37.170246 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-f8123a52-ccfa-424b-87d2-ec37ca7e4517 pods took: 202.224124ms
  E0704 04:31:37.477915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:38.478205      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:39.479103      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-ab1efa4e-516a-4327-99d5-0ee11b59b809 in namespace emptydir-wrapper-4603, will wait for the garbage collector to delete the pods @ 07/04/24 04:31:39.771
  I0704 04:31:39.838705 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-ab1efa4e-516a-4327-99d5-0ee11b59b809 took: 8.290586ms
  I0704 04:31:39.940174 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-ab1efa4e-516a-4327-99d5-0ee11b59b809 pods took: 101.466931ms
  E0704 04:31:40.479743      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:41.480337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 07/04/24 04:31:42.343
  E0704 04:31:42.480855      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:31:42.556382 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4603" for this suite. @ 07/04/24 04:31:42.559
â€¢ [24.149 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 07/04/24 04:31:42.567
  I0704 04:31:42.567509 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename downward-api @ 07/04/24 04:31:42.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:31:42.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:31:42.585
  STEP: Creating a pod to test downward api env vars @ 07/04/24 04:31:42.589
  E0704 04:31:43.481427      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:44.481574      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:45.481974      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:46.482149      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:31:46.612
  I0704 04:31:46.615358 20 output.go:196] Trying to get logs from node 3.142.51.114 pod downward-api-c12ab29d-cefa-42ea-8ac0-973e9eed5a51 container dapi-container: <nil>
  STEP: delete the pod @ 07/04/24 04:31:46.625
  I0704 04:31:46.639874 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3755" for this suite. @ 07/04/24 04:31:46.643
â€¢ [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 07/04/24 04:31:46.65
  I0704 04:31:46.650799 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename field-validation @ 07/04/24 04:31:46.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:31:46.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:31:46.676
  STEP: apply creating a deployment @ 07/04/24 04:31:46.682
  I0704 04:31:46.714420 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8939" for this suite. @ 07/04/24 04:31:46.718
â€¢ [0.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3345
  STEP: Creating a kubernetes client @ 07/04/24 04:31:46.727
  I0704 04:31:46.727234 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename services @ 07/04/24 04:31:46.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:31:46.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:31:46.747
  STEP: creating a Service @ 07/04/24 04:31:46.752
  STEP: watching for the Service to be added @ 07/04/24 04:31:46.772
  I0704 04:31:46.780544 20 service.go:3397] Found Service test-service-pn9lm in namespace services-2251 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31433}]
  I0704 04:31:46.781020 20 service.go:3404] Service test-service-pn9lm created
  STEP: Getting /status @ 07/04/24 04:31:46.781
  I0704 04:31:46.788243 20 service.go:3415] Service test-service-pn9lm has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 07/04/24 04:31:46.788
  STEP: watching for the Service to be patched @ 07/04/24 04:31:46.796
  I0704 04:31:46.799462 20 service.go:3438] observed Service test-service-pn9lm in namespace services-2251 with annotations: map[] & LoadBalancer: {[]}
  I0704 04:31:46.799966 20 service.go:3441] Found Service test-service-pn9lm in namespace services-2251 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc0072c6aa0 []}]}
  I0704 04:31:46.800338 20 service.go:3448] Service test-service-pn9lm has service status patched
  STEP: updating the ServiceStatus @ 07/04/24 04:31:46.8
  I0704 04:31:46.811957 20 service.go:3468] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 07/04/24 04:31:46.812
  I0704 04:31:46.814630 20 service.go:3479] Observed Service test-service-pn9lm in namespace services-2251 with annotations: map[] & Conditions: {[]}
  I0704 04:31:46.814879 20 service.go:3494] Observed event: &Service{ObjectMeta:{test-service-pn9lm  services-2251  b2f029fd-900b-483b-a782-ea7025e5ea3a 28664 0 2024-07-04 04:31:46 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-07-04 04:31:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-07-04 04:31:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:31433,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.43.202.166,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.43.202.166],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,TrafficDistribution:nil,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:*VIP,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  I0704 04:31:46.814925 20 service.go:3486] Found Service test-service-pn9lm in namespace services-2251 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0704 04:31:46.814940 20 service.go:3498] Service test-service-pn9lm has service status updated
  STEP: patching the service @ 07/04/24 04:31:46.814
  STEP: watching for the Service to be patched @ 07/04/24 04:31:46.83
  I0704 04:31:46.834493 20 service.go:3521] observed Service test-service-pn9lm in namespace services-2251 with labels: map[test-service-static:true]
  I0704 04:31:46.834572 20 service.go:3521] observed Service test-service-pn9lm in namespace services-2251 with labels: map[test-service-static:true]
  I0704 04:31:46.834594 20 service.go:3521] observed Service test-service-pn9lm in namespace services-2251 with labels: map[test-service-static:true]
  I0704 04:31:46.834719 20 service.go:3524] Found Service test-service-pn9lm in namespace services-2251 with labels: map[test-service:patched test-service-static:true]
  I0704 04:31:46.834785 20 service.go:3531] Service test-service-pn9lm patched
  STEP: deleting the service @ 07/04/24 04:31:46.834
  STEP: watching for the Service to be deleted @ 07/04/24 04:31:46.847
  I0704 04:31:46.849378 20 service.go:3555] Observed event: ADDED
  I0704 04:31:46.849653 20 service.go:3555] Observed event: MODIFIED
  I0704 04:31:46.849828 20 service.go:3555] Observed event: MODIFIED
  I0704 04:31:46.850146 20 service.go:3555] Observed event: MODIFIED
  I0704 04:31:46.850319 20 service.go:3551] Found Service test-service-pn9lm in namespace services-2251 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0704 04:31:46.850343 20 service.go:3560] Service test-service-pn9lm deleted
  I0704 04:31:46.850563 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2251" for this suite. @ 07/04/24 04:31:46.853
â€¢ [0.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 07/04/24 04:31:46.86
  I0704 04:31:46.860274 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename podtemplate @ 07/04/24 04:31:46.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:31:46.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:31:46.875
  I0704 04:31:46.901007 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3176" for this suite. @ 07/04/24 04:31:46.904
â€¢ [0.049 seconds]
------------------------------
SSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 07/04/24 04:31:46.909
  I0704 04:31:46.909472 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename events @ 07/04/24 04:31:46.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:31:46.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:31:46.939
  STEP: Create set of events @ 07/04/24 04:31:46.943
  STEP: get a list of Events with a label in the current namespace @ 07/04/24 04:31:46.978
  STEP: delete a list of events @ 07/04/24 04:31:46.984
  I0704 04:31:46.984827 20 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 07/04/24 04:31:46.999
  I0704 04:31:47.002768 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4881" for this suite. @ 07/04/24 04:31:47.006
â€¢ [0.102 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 07/04/24 04:31:47.012
  I0704 04:31:47.012593 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename webhook @ 07/04/24 04:31:47.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:31:47.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:31:47.027
  STEP: Setting up server cert @ 07/04/24 04:31:47.058
  E0704 04:31:47.483110      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/04/24 04:31:47.657
  STEP: Deploying the webhook pod @ 07/04/24 04:31:47.667
  STEP: Wait for the deployment to be ready @ 07/04/24 04:31:47.68
  I0704 04:31:47.692312 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0704 04:31:48.483262      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:49.483590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:31:49.705465 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 4, 4, 31, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 4, 31, 47, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 4, 31, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 4, 31, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0704 04:31:50.483661      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:51.484084      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/04/24 04:31:51.71
  STEP: Verifying the service has paired with the endpoint @ 07/04/24 04:31:51.743
  E0704 04:31:52.484233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:31:52.744614 20 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/04/24 04:31:52.755
  STEP: create a pod that should be denied by the webhook @ 07/04/24 04:31:52.774
  STEP: create a pod that causes the webhook to hang @ 07/04/24 04:31:52.785
  E0704 04:31:53.485186      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:54.485419      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:55.485672      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:56.485960      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:57.486733      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:58.488198      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:31:59.488731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:00.489036      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:01.489832      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:02.491039      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 07/04/24 04:32:02.791
  STEP: create a configmap that should be admitted by the webhook @ 07/04/24 04:32:02.814
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/04/24 04:32:02.845
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/04/24 04:32:02.877
  STEP: create a namespace that bypass the webhook @ 07/04/24 04:32:02.901
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 07/04/24 04:32:02.926
  I0704 04:32:03.040297 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6239" for this suite. @ 07/04/24 04:32:03.051
  STEP: Destroying namespace "webhook-markers-7691" for this suite. @ 07/04/24 04:32:03.079
  STEP: Destroying namespace "exempted-namespace-4899" for this suite. @ 07/04/24 04:32:03.09
â€¢ [16.089 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 07/04/24 04:32:03.102
  I0704 04:32:03.102426 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename emptydir @ 07/04/24 04:32:03.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:32:03.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:32:03.127
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/04/24 04:32:03.131
  E0704 04:32:03.491329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:04.491966      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:05.492504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:06.492801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:32:07.184
  I0704 04:32:07.187589 20 output.go:196] Trying to get logs from node 18.191.27.132 pod pod-3b8deb29-a354-4291-a2a8-2a808f9a5b9e container test-container: <nil>
  STEP: delete the pod @ 07/04/24 04:32:07.204
  I0704 04:32:07.241707 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6387" for this suite. @ 07/04/24 04:32:07.245
â€¢ [4.151 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 07/04/24 04:32:07.253
  I0704 04:32:07.253874 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/04/24 04:32:07.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:32:07.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:32:07.276
  I0704 04:32:07.279621 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  E0704 04:32:07.493990      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:08.495055      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:09.495209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:32:10.375088 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2596" for this suite. @ 07/04/24 04:32:10.378
â€¢ [3.131 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 07/04/24 04:32:10.385
  I0704 04:32:10.385072 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename subpath @ 07/04/24 04:32:10.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:32:10.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:32:10.406
  STEP: Setting up data @ 07/04/24 04:32:10.409
  STEP: Creating pod pod-subpath-test-secret-s42r @ 07/04/24 04:32:10.416
  STEP: Creating a pod to test atomic-volume-subpath @ 07/04/24 04:32:10.416
  E0704 04:32:10.496009      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:11.496851      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:12.497643      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:13.498425      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:14.499252      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:15.499283      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:16.499381      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:17.499693      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:18.500604      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:19.501076      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:20.501529      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:21.501909      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:22.502604      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:23.503315      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:24.503971      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:25.504111      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:26.505103      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:27.505352      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:28.506022      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:29.506410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:30.507084      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:31.507936      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:32.508946      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:33.509401      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:32:34.474
  I0704 04:32:34.480380 20 output.go:196] Trying to get logs from node 3.142.51.114 pod pod-subpath-test-secret-s42r container test-container-subpath-secret-s42r: <nil>
  STEP: delete the pod @ 07/04/24 04:32:34.499
  E0704 04:32:34.510012      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pod pod-subpath-test-secret-s42r @ 07/04/24 04:32:34.522
  I0704 04:32:34.522962 20 delete.go:62] Deleting pod "pod-subpath-test-secret-s42r" in namespace "subpath-3254"
  I0704 04:32:34.527414 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3254" for this suite. @ 07/04/24 04:32:34.53
â€¢ [24.151 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 07/04/24 04:32:34.536
  I0704 04:32:34.536913 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename emptydir @ 07/04/24 04:32:34.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:32:34.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:32:34.56
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/04/24 04:32:34.563
  E0704 04:32:35.510358      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:36.510527      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:37.510655      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:38.511173      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:32:38.589
  I0704 04:32:38.592790 20 output.go:196] Trying to get logs from node 3.142.51.114 pod pod-9c3e355f-a86b-4e85-945c-d3acd20d557b container test-container: <nil>
  STEP: delete the pod @ 07/04/24 04:32:38.602
  I0704 04:32:38.616632 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7308" for this suite. @ 07/04/24 04:32:38.622
â€¢ [4.095 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 07/04/24 04:32:38.632
  I0704 04:32:38.632843 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename deployment @ 07/04/24 04:32:38.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:32:38.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:32:38.71
  STEP: creating a Deployment @ 07/04/24 04:32:38.721
  STEP: waiting for Deployment to be created @ 07/04/24 04:32:38.729
  STEP: waiting for all Replicas to be Ready @ 07/04/24 04:32:38.731
  I0704 04:32:38.737336 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0704 04:32:38.737863 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0704 04:32:38.764736 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0704 04:32:38.764781 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0704 04:32:38.808791 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0704 04:32:38.808832 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0704 04:32:38.842000 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0704 04:32:38.843015 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0704 04:32:39.512307      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:40.512794      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:32:40.563625 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0704 04:32:40.563772 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0704 04:32:40.679794 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 07/04/24 04:32:40.679
  I0704 04:32:40.699238 20 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 07/04/24 04:32:40.699
  I0704 04:32:40.702141 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 0
  I0704 04:32:40.702183 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 0
  I0704 04:32:40.702209 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 0
  I0704 04:32:40.702220 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 0
  I0704 04:32:40.702450 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 0
  I0704 04:32:40.702478 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 0
  I0704 04:32:40.702490 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 0
  I0704 04:32:40.702501 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 0
  I0704 04:32:40.702602 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 1
  I0704 04:32:40.702656 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 1
  I0704 04:32:40.702687 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 2
  I0704 04:32:40.702702 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 2
  I0704 04:32:40.702717 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 2
  I0704 04:32:40.702727 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 2
  I0704 04:32:40.713560 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 2
  I0704 04:32:40.713602 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 2
  I0704 04:32:40.757888 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 2
  I0704 04:32:40.757941 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 2
  I0704 04:32:40.776421 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 1
  I0704 04:32:40.776463 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 1
  I0704 04:32:40.795101 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 1
  I0704 04:32:40.795157 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 1
  E0704 04:32:41.513820      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:42.513999      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:32:42.703016 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 2
  I0704 04:32:42.703057 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 2
  I0704 04:32:42.783542 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 1
  STEP: listing Deployments @ 07/04/24 04:32:42.783
  I0704 04:32:42.819944 20 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 07/04/24 04:32:42.82
  I0704 04:32:42.853439 20 deployment.go:360] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 07/04/24 04:32:42.853
  I0704 04:32:42.878291 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0704 04:32:42.883579 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0704 04:32:42.956601 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0704 04:32:42.983328 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0704 04:32:42.997463 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0704 04:32:43.514137      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:32:44.255438 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0704 04:32:44.277383 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0704 04:32:44.309595 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0704 04:32:44.319312 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0704 04:32:44.325871 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0704 04:32:44.514798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:45.514958      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:32:46.088995 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 07/04/24 04:32:46.14
  STEP: fetching the DeploymentStatus @ 07/04/24 04:32:46.175
  I0704 04:32:46.196216 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 1
  I0704 04:32:46.196920 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 1
  I0704 04:32:46.197130 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 1
  I0704 04:32:46.198670 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 1
  I0704 04:32:46.199974 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 1
  I0704 04:32:46.200199 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 2
  I0704 04:32:46.200414 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 2
  I0704 04:32:46.200721 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 2
  I0704 04:32:46.202443 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 2
  I0704 04:32:46.202742 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 2
  I0704 04:32:46.202984 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-8418 with ReadyReplicas 3
  STEP: deleting the Deployment @ 07/04/24 04:32:46.203
  I0704 04:32:46.212867 20 deployment.go:475] observed event type MODIFIED
  I0704 04:32:46.215555 20 deployment.go:475] observed event type MODIFIED
  I0704 04:32:46.215601 20 deployment.go:475] observed event type MODIFIED
  I0704 04:32:46.219133 20 deployment.go:475] observed event type MODIFIED
  I0704 04:32:46.219317 20 deployment.go:475] observed event type MODIFIED
  I0704 04:32:46.219333 20 deployment.go:475] observed event type MODIFIED
  I0704 04:32:46.220308 20 deployment.go:475] observed event type MODIFIED
  I0704 04:32:46.220366 20 deployment.go:475] observed event type MODIFIED
  I0704 04:32:46.220521 20 deployment.go:475] observed event type MODIFIED
  I0704 04:32:46.220723 20 deployment.go:475] observed event type MODIFIED
  I0704 04:32:46.220814 20 deployment.go:475] observed event type MODIFIED
  I0704 04:32:46.221010 20 deployment.go:475] observed event type MODIFIED
  I0704 04:32:46.221041 20 deployment.go:475] observed event type MODIFIED
  I0704 04:32:46.221154 20 deployment.go:475] observed event type MODIFIED
  I0704 04:32:46.227950 20 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0704 04:32:46.235229 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8418" for this suite. @ 07/04/24 04:32:46.256
â€¢ [7.634 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 07/04/24 04:32:46.267
  I0704 04:32:46.267108 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename endpointslice @ 07/04/24 04:32:46.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:32:46.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:32:46.288
  STEP: getting /apis @ 07/04/24 04:32:46.293
  STEP: getting /apis/discovery.k8s.io @ 07/04/24 04:32:46.299
  STEP: getting /apis/discovery.k8s.iov1 @ 07/04/24 04:32:46.3
  STEP: creating @ 07/04/24 04:32:46.301
  STEP: getting @ 07/04/24 04:32:46.323
  STEP: listing @ 07/04/24 04:32:46.328
  STEP: watching @ 07/04/24 04:32:46.331
  I0704 04:32:46.331783 20 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 07/04/24 04:32:46.334
  STEP: cluster-wide watching @ 07/04/24 04:32:46.337
  I0704 04:32:46.337296 20 endpointslice.go:459] starting watch
  STEP: patching @ 07/04/24 04:32:46.339
  STEP: updating @ 07/04/24 04:32:46.347
  I0704 04:32:46.356776 20 endpointslice.go:482] waiting for watch events with expected annotations
  I0704 04:32:46.356974 20 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 07/04/24 04:32:46.357
  STEP: deleting a collection @ 07/04/24 04:32:46.366
  I0704 04:32:46.382338 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1628" for this suite. @ 07/04/24 04:32:46.386
â€¢ [0.130 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 07/04/24 04:32:46.396
  I0704 04:32:46.396978 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename crd-webhook @ 07/04/24 04:32:46.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:32:46.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:32:46.447
  STEP: Setting up server cert @ 07/04/24 04:32:46.473
  E0704 04:32:46.515034      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/04/24 04:32:46.979
  STEP: Deploying the custom resource conversion webhook pod @ 07/04/24 04:32:46.991
  STEP: Wait for the deployment to be ready @ 07/04/24 04:32:47.009
  I0704 04:32:47.026858 20 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0704 04:32:47.515214      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:48.515285      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/04/24 04:32:49.045
  STEP: Verifying the service has paired with the endpoint @ 07/04/24 04:32:49.085
  E0704 04:32:49.515905      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:32:50.085761 20 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0704 04:32:50.090861 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  E0704 04:32:50.516633      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:51.517589      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:52.517860      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 07/04/24 04:32:52.647
  STEP: Create a v2 custom resource @ 07/04/24 04:32:52.662
  STEP: List CRs in v1 @ 07/04/24 04:32:52.694
  STEP: List CRs in v2 @ 07/04/24 04:32:52.698
  I0704 04:32:53.291419 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-9192" for this suite. @ 07/04/24 04:32:53.3
â€¢ [6.916 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 07/04/24 04:32:53.313
  I0704 04:32:53.313961 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename cronjob @ 07/04/24 04:32:53.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:32:53.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:32:53.335
  STEP: Creating a cronjob @ 07/04/24 04:32:53.339
  STEP: Ensuring more than one job is running at a time @ 07/04/24 04:32:53.346
  E0704 04:32:53.519107      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:54.519426      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:55.520217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:56.520469      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:57.521011      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:58.521138      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:32:59.525024      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:00.523421      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:01.523826      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:02.524895      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:03.524859      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:04.525693      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:05.526139      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:06.526546      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:07.526669      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:08.527321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:09.527533      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:10.527683      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:11.527972      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:12.528084      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:13.528214      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:14.528338      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:15.529374      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:16.529761      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:17.529998      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:18.530297      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:19.530807      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:20.530983      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:21.531986      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:22.532180      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:23.532857      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:24.533055      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:25.533149      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:26.533547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:27.534669      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:28.535309      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:29.535806      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:30.536729      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:31.537206      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:32.537398      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:33.539411      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:34.539574      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:35.539870      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:36.540097      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:37.540139      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:38.540295      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:39.541274      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:40.541505      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:41.542771      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:42.542859      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:43.544027      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:44.544017      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:45.544230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:46.544761      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:47.545247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:48.551072      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:49.550914      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:50.551098      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:51.551875      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:52.551889      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:53.555312      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:54.555764      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:55.556269      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:56.556305      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:57.557152      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:58.558246      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:33:59.558360      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:00.558491      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 07/04/24 04:34:01.35
  STEP: Removing cronjob @ 07/04/24 04:34:01.358
  I0704 04:34:01.372064 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1597" for this suite. @ 07/04/24 04:34:01.38
â€¢ [68.088 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 07/04/24 04:34:01.402
  I0704 04:34:01.402188 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename proxy @ 07/04/24 04:34:01.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:34:01.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:34:01.459
  I0704 04:34:01.477841 20 proxy.go:387] Creating pod...
  E0704 04:34:01.559980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:02.560480      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:34:03.516156 20 proxy.go:411] Creating service...
  I0704 04:34:03.526350 20 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1585/pods/agnhost/proxy?method=DELETE
  I0704 04:34:03.539102 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0704 04:34:03.539312 20 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1585/pods/agnhost/proxy?method=OPTIONS
  I0704 04:34:03.545894 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0704 04:34:03.546120 20 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1585/pods/agnhost/proxy?method=PATCH
  I0704 04:34:03.554195 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0704 04:34:03.554572 20 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1585/pods/agnhost/proxy?method=POST
  I0704 04:34:03.558417 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0704 04:34:03.558611 20 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1585/pods/agnhost/proxy?method=PUT
  E0704 04:34:03.560902      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:34:03.565322 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0704 04:34:03.565380 20 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1585/services/e2e-proxy-test-service/proxy?method=DELETE
  I0704 04:34:03.571570 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0704 04:34:03.571732 20 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1585/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0704 04:34:03.576975 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0704 04:34:03.577023 20 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1585/services/e2e-proxy-test-service/proxy?method=PATCH
  I0704 04:34:03.600643 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0704 04:34:03.600709 20 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1585/services/e2e-proxy-test-service/proxy?method=POST
  I0704 04:34:03.617650 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0704 04:34:03.618262 20 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1585/services/e2e-proxy-test-service/proxy?method=PUT
  I0704 04:34:03.635763 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0704 04:34:03.635928 20 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1585/pods/agnhost/proxy?method=GET
  I0704 04:34:03.640307 20 proxy.go:487] http.Client request:GET StatusCode:301
  I0704 04:34:03.640369 20 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1585/services/e2e-proxy-test-service/proxy?method=GET
  I0704 04:34:03.643379 20 proxy.go:487] http.Client request:GET StatusCode:301
  I0704 04:34:03.643422 20 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1585/pods/agnhost/proxy?method=HEAD
  I0704 04:34:03.645659 20 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0704 04:34:03.645702 20 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1585/services/e2e-proxy-test-service/proxy?method=HEAD
  I0704 04:34:03.648570 20 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0704 04:34:03.648692 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1585" for this suite. @ 07/04/24 04:34:03.653
â€¢ [2.258 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 07/04/24 04:34:03.66
  I0704 04:34:03.660474 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename pods @ 07/04/24 04:34:03.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:34:03.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:34:03.679
  STEP: creating a Pod with a static label @ 07/04/24 04:34:03.703
  STEP: watching for Pod to be ready @ 07/04/24 04:34:03.715
  I0704 04:34:03.718709 20 pods.go:945] observed Pod pod-test in namespace pods-3365 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0704 04:34:03.719492 20 pods.go:945] observed Pod pod-test in namespace pods-3365 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-04 04:34:03 +0000 UTC  }]
  I0704 04:34:03.756509 20 pods.go:945] observed Pod pod-test in namespace pods-3365 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-07-04 04:34:03 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-04 04:34:03 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-04 04:34:03 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-04 04:34:03 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-04 04:34:03 +0000 UTC  }]
  I0704 04:34:04.531823 20 pods.go:945] observed Pod pod-test in namespace pods-3365 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-07-04 04:34:03 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-04 04:34:03 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-04 04:34:03 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-04 04:34:03 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-04 04:34:03 +0000 UTC  }]
  E0704 04:34:04.561173      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:34:05.466270 20 pods.go:948] Found Pod pod-test in namespace pods-3365 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-04 04:34:05 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-04 04:34:03 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-07-04 04:34:05 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-07-04 04:34:05 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-04 04:34:03 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 07/04/24 04:34:05.471
  STEP: getting the Pod and ensuring that it's patched @ 07/04/24 04:34:05.504
  STEP: replacing the Pod's status Ready condition to False @ 07/04/24 04:34:05.51
  STEP: check the Pod again to ensure its Ready conditions are False @ 07/04/24 04:34:05.528
  STEP: deleting the Pod via a Collection with a LabelSelector @ 07/04/24 04:34:05.528
  STEP: watching for the Pod to be deleted @ 07/04/24 04:34:05.538
  I0704 04:34:05.546891 20 pods.go:1058] observed event type MODIFIED
  E0704 04:34:05.561592      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:06.561577      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:34:07.504743 20 pods.go:1058] observed event type MODIFIED
  E0704 04:34:07.561983      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:34:07.685803 20 pods.go:1058] observed event type MODIFIED
  I0704 04:34:07.831612 20 pods.go:1058] observed event type MODIFIED
  I0704 04:34:08.501862 20 pods.go:1058] observed event type MODIFIED
  I0704 04:34:08.513438 20 pods.go:1058] observed event type MODIFIED
  I0704 04:34:08.519949 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3365" for this suite. @ 07/04/24 04:34:08.524
â€¢ [4.874 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 07/04/24 04:34:08.534
  I0704 04:34:08.534344 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename daemonsets @ 07/04/24 04:34:08.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:34:08.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:34:08.554
  E0704 04:34:08.561930      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a simple DaemonSet "daemon-set" @ 07/04/24 04:34:08.575
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/04/24 04:34:08.581
  I0704 04:34:08.593209 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0704 04:34:08.593251 20 fixtures.go:130] Node 18.118.109.209 is running 0 daemon pod, expected 1
  E0704 04:34:09.562278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:34:09.599576 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0704 04:34:09.599734 20 fixtures.go:130] Node 18.118.109.209 is running 0 daemon pod, expected 1
  E0704 04:34:10.562268      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:34:10.591798 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0704 04:34:10.591940 20 fixtures.go:130] Node 3.142.51.114 is running 0 daemon pod, expected 1
  E0704 04:34:11.564142      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:34:11.599676 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0704 04:34:11.599746 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 07/04/24 04:34:11.606
  I0704 04:34:11.646525 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0704 04:34:11.646574 20 fixtures.go:130] Node 18.118.109.209 is running 0 daemon pod, expected 1
  E0704 04:34:12.564706      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:34:12.639607 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0704 04:34:12.639767 20 fixtures.go:130] Node 18.118.109.209 is running 0 daemon pod, expected 1
  E0704 04:34:13.565663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:34:13.637165 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0704 04:34:13.637212 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 07/04/24 04:34:13.637
  STEP: Deleting DaemonSet "daemon-set" @ 07/04/24 04:34:13.643
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5926, will wait for the garbage collector to delete the pods @ 07/04/24 04:34:13.643
  I0704 04:34:13.703410 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.758427ms
  I0704 04:34:13.804270 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.858288ms
  E0704 04:34:14.566841      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:15.567598      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:16.568246      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:34:16.606688 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0704 04:34:16.606729 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0704 04:34:16.611815 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"29735"},"items":null}

  I0704 04:34:16.615613 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"29735"},"items":null}

  I0704 04:34:16.624003 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5926" for this suite. @ 07/04/24 04:34:16.626
â€¢ [8.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 07/04/24 04:34:16.632
  I0704 04:34:16.632651 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename secrets @ 07/04/24 04:34:16.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:34:16.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:34:16.667
  STEP: Creating projection with secret that has name secret-emptykey-test-d3188329-1c67-413d-9f5a-a179fce06dae @ 07/04/24 04:34:16.67
  I0704 04:34:16.672775 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5422" for this suite. @ 07/04/24 04:34:16.677
â€¢ [0.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 07/04/24 04:34:16.688
  I0704 04:34:16.688845 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename lease-test @ 07/04/24 04:34:16.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:34:16.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:34:16.709
  I0704 04:34:16.789140 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-2139" for this suite. @ 07/04/24 04:34:16.791
â€¢ [0.108 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 07/04/24 04:34:16.798
  I0704 04:34:16.798255 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename runtimeclass @ 07/04/24 04:34:16.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:34:16.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:34:16.822
  I0704 04:34:16.854815 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1578" for this suite. @ 07/04/24 04:34:16.868
â€¢ [0.075 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 07/04/24 04:34:16.874
  I0704 04:34:16.874404 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename endpointslice @ 07/04/24 04:34:16.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:34:16.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:34:16.903
  E0704 04:34:17.568495      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:18.569151      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 07/04/24 04:34:19.036
  STEP: referencing matching pods with named port @ 07/04/24 04:34:19.041
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 07/04/24 04:34:19.045
  STEP: recreating EndpointSlices after they've been deleted @ 07/04/24 04:34:19.049
  I0704 04:34:19.064538 20 endpointslice.go:938] EndpointSlice for Service endpointslice-741/example-named-port not found
  E0704 04:34:19.570287      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:20.570498      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:34:21.077153 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-741" for this suite. @ 07/04/24 04:34:21.083
â€¢ [4.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 07/04/24 04:34:21.097
  I0704 04:34:21.098749 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename runtimeclass @ 07/04/24 04:34:21.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:34:21.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:34:21.158
  STEP: Deleting RuntimeClass runtimeclass-1615-delete-me @ 07/04/24 04:34:21.17
  STEP: Waiting for the RuntimeClass to disappear @ 07/04/24 04:34:21.177
  I0704 04:34:21.190459 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1615" for this suite. @ 07/04/24 04:34:21.195
â€¢ [0.106 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 07/04/24 04:34:21.203
  I0704 04:34:21.203925 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename svcaccounts @ 07/04/24 04:34:21.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:34:21.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:34:21.251
  I0704 04:34:21.279040 20 service_accounts.go:253] created pod pod-service-account-defaultsa
  I0704 04:34:21.279801 20 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I0704 04:34:21.293528 20 service_accounts.go:253] created pod pod-service-account-mountsa
  I0704 04:34:21.293566 20 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I0704 04:34:21.306743 20 service_accounts.go:253] created pod pod-service-account-nomountsa
  I0704 04:34:21.306806 20 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I0704 04:34:21.342845 20 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I0704 04:34:21.343109 20 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0704 04:34:21.363318 20 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I0704 04:34:21.363780 20 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0704 04:34:21.397559 20 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I0704 04:34:21.397862 20 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0704 04:34:21.424709 20 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I0704 04:34:21.425106 20 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0704 04:34:21.435794 20 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I0704 04:34:21.435878 20 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0704 04:34:21.455391 20 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I0704 04:34:21.455919 20 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0704 04:34:21.457826 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1006" for this suite. @ 07/04/24 04:34:21.488
â€¢ [0.300 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 07/04/24 04:34:21.505
  I0704 04:34:21.505752 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename downward-api @ 07/04/24 04:34:21.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:34:21.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:34:21.568
  E0704 04:34:21.570665      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a pod to test downward api env vars @ 07/04/24 04:34:21.574
  E0704 04:34:22.571431      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:23.573218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:24.572151      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:25.573089      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:34:25.616
  I0704 04:34:25.618629 20 output.go:196] Trying to get logs from node 3.142.51.114 pod downward-api-b4e86c72-d449-495c-866f-3b0aff026765 container dapi-container: <nil>
  STEP: delete the pod @ 07/04/24 04:34:25.639
  I0704 04:34:25.653483 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9035" for this suite. @ 07/04/24 04:34:25.657
â€¢ [4.159 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 07/04/24 04:34:25.664
  I0704 04:34:25.664260 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename var-expansion @ 07/04/24 04:34:25.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:34:25.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:34:25.682
  STEP: creating the pod @ 07/04/24 04:34:25.688
  STEP: waiting for pod running @ 07/04/24 04:34:25.702
  E0704 04:34:26.573241      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:27.573546      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 07/04/24 04:34:27.714
  I0704 04:34:27.717676 20 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-2428 PodName:var-expansion-103c49a4-49da-4a25-ab1b-772e69bccc96 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 04:34:27.717713 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:34:27.718373 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 04:34:27.718670 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-2428/pods/var-expansion-103c49a4-49da-4a25-ab1b-772e69bccc96/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 07/04/24 04:34:27.816
  I0704 04:34:27.819897 20 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-2428 PodName:var-expansion-103c49a4-49da-4a25-ab1b-772e69bccc96 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 04:34:27.819937 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:34:27.820725 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 04:34:27.820889 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-2428/pods/var-expansion-103c49a4-49da-4a25-ab1b-772e69bccc96/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 07/04/24 04:34:27.916
  I0704 04:34:28.426412 20 pod_client.go:141] Successfully updated pod "var-expansion-103c49a4-49da-4a25-ab1b-772e69bccc96"
  STEP: waiting for annotated pod running @ 07/04/24 04:34:28.426
  STEP: deleting the pod gracefully @ 07/04/24 04:34:28.429
  I0704 04:34:28.429162 20 delete.go:62] Deleting pod "var-expansion-103c49a4-49da-4a25-ab1b-772e69bccc96" in namespace "var-expansion-2428"
  I0704 04:34:28.437721 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-103c49a4-49da-4a25-ab1b-772e69bccc96" to be fully deleted
  E0704 04:34:28.574512      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:29.574814      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:30.574822      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:31.574846      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:32.575650      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:33.576326      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:34.577002      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:35.577503      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:36.578162      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:37.578559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:38.579011      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:39.579351      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:40.579572      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:41.579696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:42.580637      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:43.581363      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:44.581946      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:45.583000      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:46.583596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:47.583802      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:48.584299      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:49.584692      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:50.585447      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:51.585550      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:52.586466      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:53.587102      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:54.587772      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:55.591528      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:56.593311      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:57.593539      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:58.594491      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:34:59.594751      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:00.595624      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:01.596053      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:35:02.528344 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2428" for this suite. @ 07/04/24 04:35:02.531
â€¢ [36.873 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 07/04/24 04:35:02.538
  I0704 04:35:02.538650 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename watch @ 07/04/24 04:35:02.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:35:02.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:35:02.563
  STEP: creating a watch on configmaps with a certain label @ 07/04/24 04:35:02.567
  STEP: creating a new configmap @ 07/04/24 04:35:02.569
  STEP: modifying the configmap once @ 07/04/24 04:35:02.573
  STEP: changing the label value of the configmap @ 07/04/24 04:35:02.58
  STEP: Expecting to observe a delete notification for the watched object @ 07/04/24 04:35:02.588
  I0704 04:35:02.588551 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8058  597b6acb-2c46-4c04-beee-5dfec21ac860 30144 0 2024-07-04 04:35:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-04 04:35:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0704 04:35:02.588877 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8058  597b6acb-2c46-4c04-beee-5dfec21ac860 30145 0 2024-07-04 04:35:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-04 04:35:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0704 04:35:02.589078 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8058  597b6acb-2c46-4c04-beee-5dfec21ac860 30146 0 2024-07-04 04:35:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-04 04:35:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 07/04/24 04:35:02.589
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 07/04/24 04:35:02.595
  E0704 04:35:02.596470      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:03.597175      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:04.597487      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:05.600915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:06.600981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:07.601749      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:08.602744      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:09.602961      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:10.603145      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:11.603914      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 07/04/24 04:35:12.597
  E0704 04:35:12.604304      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: modifying the configmap a third time @ 07/04/24 04:35:12.605
  STEP: deleting the configmap @ 07/04/24 04:35:12.612
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 07/04/24 04:35:12.617
  I0704 04:35:12.617993 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8058  597b6acb-2c46-4c04-beee-5dfec21ac860 30172 0 2024-07-04 04:35:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-04 04:35:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0704 04:35:12.618224 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8058  597b6acb-2c46-4c04-beee-5dfec21ac860 30173 0 2024-07-04 04:35:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-04 04:35:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0704 04:35:12.618327 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8058  597b6acb-2c46-4c04-beee-5dfec21ac860 30174 0 2024-07-04 04:35:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-04 04:35:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0704 04:35:12.618420 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8058" for this suite. @ 07/04/24 04:35:12.625
â€¢ [10.096 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 07/04/24 04:35:12.634
  I0704 04:35:12.634600 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/04/24 04:35:12.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:35:12.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:35:12.703
  STEP: set up a multi version CRD @ 07/04/24 04:35:12.705
  I0704 04:35:12.706277 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  E0704 04:35:13.604901      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:14.605675      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:15.606298      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 07/04/24 04:35:16.504
  STEP: check the new version name is served @ 07/04/24 04:35:16.517
  E0704 04:35:16.606980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 07/04/24 04:35:17.521
  E0704 04:35:17.607951      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 07/04/24 04:35:18.26
  E0704 04:35:18.608072      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:19.608188      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:20.609259      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:35:21.134411 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4022" for this suite. @ 07/04/24 04:35:21.14
â€¢ [8.510 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 07/04/24 04:35:21.145
  I0704 04:35:21.145538 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename kubectl @ 07/04/24 04:35:21.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:35:21.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:35:21.214
  I0704 04:35:21.218452 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2788 create -f -'
  I0704 04:35:21.354306 20 builder.go:146] stderr: ""
  I0704 04:35:21.354359 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0704 04:35:21.354431 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2788 create -f -'
  I0704 04:35:21.505797 20 builder.go:146] stderr: ""
  I0704 04:35:21.505847 20 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/04/24 04:35:21.505
  E0704 04:35:21.610308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:35:22.509280 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0704 04:35:22.509325 20 framework.go:733] Found 0 / 1
  E0704 04:35:22.610402      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:35:23.510005 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0704 04:35:23.510053 20 framework.go:733] Found 1 / 1
  I0704 04:35:23.510082 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0704 04:35:23.513317 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0704 04:35:23.513363 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0704 04:35:23.513417 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2788 describe pod agnhost-primary-shvjb'
  E0704 04:35:23.612392      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:35:23.659248 20 builder.go:146] stderr: ""
  I0704 04:35:23.659388 20 builder.go:147] stdout: "Name:             agnhost-primary-shvjb\nNamespace:        kubectl-2788\nPriority:         0\nService Account:  default\nNode:             3.142.51.114/172.31.23.45\nStart Time:       Thu, 04 Jul 2024 04:35:21 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 060897cb61cce806b0df3e0f529f5f1829afa077b0ac3eb902aa67e709efca62\n                  cni.projectcalico.org/podIP: 10.42.2.231/32\n                  cni.projectcalico.org/podIPs: 10.42.2.231/32\nStatus:           Running\nIP:               10.42.2.231\nIPs:\n  IP:           10.42.2.231\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   docker://4af3316ae3bef26705d487b3034b55bca488b325b94e64830a90766f22b33c8d\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Thu, 04 Jul 2024 04:35:22 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-7g9d7 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-7g9d7:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-2788/agnhost-primary-shvjb to 3.142.51.114\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0704 04:35:23.659675 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2788 describe rc agnhost-primary'
  I0704 04:35:23.776761 20 builder.go:146] stderr: ""
  I0704 04:35:23.776886 20 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-2788\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-shvjb\n"
  I0704 04:35:23.776988 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2788 describe service agnhost-primary'
  I0704 04:35:23.895847 20 builder.go:146] stderr: ""
  I0704 04:35:23.895911 20 builder.go:147] stdout: "Name:              agnhost-primary\nNamespace:         kubectl-2788\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.43.68.7\nIPs:               10.43.68.7\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.42.2.231:6379\nSession Affinity:  None\nEvents:            <none>\n"
  I0704 04:35:23.901917 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2788 describe node 18.118.109.209'
  I0704 04:35:24.110626 20 builder.go:146] stderr: ""
  I0704 04:35:24.110746 20 builder.go:147] stdout: "Name:               18.118.109.209\nRoles:              worker\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=18.118.109.209\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/worker=true\nAnnotations:        flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"82:5c:eb:d4:1a:54\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 172.31.23.191\n                    node.alpha.kubernetes.io/ttl: 0\n                    rke.cattle.io/external-ip: 18.118.109.209\n                    rke.cattle.io/internal-ip: 172.31.23.191\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Thu, 04 Jul 2024 02:59:29 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  18.118.109.209\n  AcquireTime:     <unset>\n  RenewTime:       Thu, 04 Jul 2024 04:35:21 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Thu, 04 Jul 2024 03:00:32 +0000   Thu, 04 Jul 2024 03:00:32 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Thu, 04 Jul 2024 04:35:19 +0000   Thu, 04 Jul 2024 02:59:29 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Thu, 04 Jul 2024 04:35:19 +0000   Thu, 04 Jul 2024 02:59:29 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Thu, 04 Jul 2024 04:35:19 +0000   Thu, 04 Jul 2024 02:59:29 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Thu, 04 Jul 2024 04:35:19 +0000   Thu, 04 Jul 2024 03:00:14 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.23.191\n  Hostname:    18.118.109.209\nCapacity:\n  cpu:                    2\n  ephemeral-storage:      55841164Ki\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 3968640Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    2\n  ephemeral-storage:      55841164Ki\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 3968640Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                 \n  System UUID:                ec25660b-ef9b-73d9-7f31-0e323a4df706\n  Boot ID:                    ca1b419e-a3e5-4182-aaf4-6c95e9d328ca\n  Kernel Version:             5.8.0-1038-aws\n  OS Image:                   Ubuntu 20.04.2 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  docker://20.10.7\n  Kubelet Version:            v1.30.2\n  Kube-Proxy Version:         v1.30.2\nPodCIDR:                      10.42.1.0/24\nPodCIDRs:                     10.42.1.0/24\nNon-terminated Pods:          (5 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-kube-controllers-5b878c8d6f-qchnq                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         95m\n  kube-system                 canal-7mrtp                                                250m (12%)    0 (0%)      0 (0%)           0 (0%)         95m\n  kube-system                 coredns-autoscaler-7db8ddc8cf-c6v99                        20m (1%)      0 (0%)      10Mi (0%)        0 (0%)         95m\n  sonobuoy                    sonobuoy-e2e-job-29e78ee3095b40b0                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         73m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-f25fe8f61e184228-dc5qd    0 (0%)        0 (0%)      0 (0%)           0 (0%)         73m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests    Limits\n  --------               --------    ------\n  cpu                    270m (13%)  0 (0%)\n  memory                 10Mi (0%)   0 (0%)\n  ephemeral-storage      0 (0%)      0 (0%)\n  hugepages-1Gi          0 (0%)      0 (0%)\n  hugepages-2Mi          0 (0%)      0 (0%)\n  scheduling.k8s.io/foo  0           0\nEvents:                  <none>\n"
  I0704 04:35:24.110826 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-2788 describe namespace kubectl-2788'
  I0704 04:35:24.227099 20 builder.go:146] stderr: ""
  I0704 04:35:24.227154 20 builder.go:147] stdout: "Name:         kubectl-2788\nLabels:       e2e-framework=kubectl\n              e2e-run=252c0fc8-3647-4ebc-9705-0cb25ddd4e82\n              kubernetes.io/metadata.name=kubectl-2788\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0704 04:35:24.228359 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2788" for this suite. @ 07/04/24 04:35:24.234
â€¢ [3.095 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1497
  STEP: Creating a kubernetes client @ 07/04/24 04:35:24.241
  I0704 04:35:24.241864 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename services @ 07/04/24 04:35:24.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:35:24.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:35:24.265
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-3521 @ 07/04/24 04:35:24.269
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/04/24 04:35:24.279
  STEP: creating service externalsvc in namespace services-3521 @ 07/04/24 04:35:24.28
  STEP: creating replication controller externalsvc in namespace services-3521 @ 07/04/24 04:35:24.3
  I0704 04:35:24.310179      20 runners.go:198] Created replication controller with name: externalsvc, namespace: services-3521, replica count: 2
  E0704 04:35:24.612557      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:25.612778      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:26.612991      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:35:27.360882      20 runners.go:198] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 07/04/24 04:35:27.374
  I0704 04:35:27.400870 20 resource.go:361] Creating new exec pod
  E0704 04:35:27.613389      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:28.613422      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:29.614551      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:30.614667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:35:31.425023 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-3521 exec execpodvk8j5 -- /bin/sh -x -c nslookup clusterip-service.services-3521.svc.cluster.local'
  E0704 04:35:31.615361      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:35:31.743214 20 builder.go:146] stderr: "+ nslookup clusterip-service.services-3521.svc.cluster.local\n"
  I0704 04:35:31.743330 20 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nclusterip-service.services-3521.svc.cluster.local\tcanonical name = externalsvc.services-3521.svc.cluster.local.\nName:\texternalsvc.services-3521.svc.cluster.local\nAddress: 10.43.6.96\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-3521, will wait for the garbage collector to delete the pods @ 07/04/24 04:35:31.743
  I0704 04:35:31.816880 20 resources.go:139] Deleting ReplicationController externalsvc took: 20.342146ms
  I0704 04:35:31.917364 20 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.48288ms
  E0704 04:35:32.616286      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:33.616990      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:34.618133      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:35:34.639977 20 service.go:1506] Cleaning up the ClusterIP to ExternalName test service
  I0704 04:35:34.654916 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3521" for this suite. @ 07/04/24 04:35:34.66
â€¢ [10.428 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:766
  STEP: Creating a kubernetes client @ 07/04/24 04:35:34.668
  I0704 04:35:34.668847 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename webhook @ 07/04/24 04:35:34.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:35:34.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:35:34.693
  STEP: Setting up server cert @ 07/04/24 04:35:34.722
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/04/24 04:35:34.941
  STEP: Deploying the webhook pod @ 07/04/24 04:35:34.948
  STEP: Wait for the deployment to be ready @ 07/04/24 04:35:34.964
  I0704 04:35:34.974949 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0704 04:35:35.618393      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:36.618493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/04/24 04:35:36.984
  STEP: Verifying the service has paired with the endpoint @ 07/04/24 04:35:36.995
  E0704 04:35:37.619096      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:35:37.995944 20 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/04/24 04:35:38.002
  STEP: verifying the mutating webhook match conditions @ 07/04/24 04:35:38.025
  STEP: updating the mutating webhook match conditions @ 07/04/24 04:35:38.037
  STEP: verifying the mutating webhook match conditions @ 07/04/24 04:35:38.056
  I0704 04:35:38.156022 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3267" for this suite. @ 07/04/24 04:35:38.164
  STEP: Destroying namespace "webhook-markers-3396" for this suite. @ 07/04/24 04:35:38.173
â€¢ [3.516 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 07/04/24 04:35:38.185
  I0704 04:35:38.185545 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename daemonsets @ 07/04/24 04:35:38.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:35:38.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:35:38.209
  I0704 04:35:38.256018 20 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/04/24 04:35:38.272
  I0704 04:35:38.283289 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0704 04:35:38.283335 20 fixtures.go:130] Node 18.118.109.209 is running 0 daemon pod, expected 1
  E0704 04:35:38.619279      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:35:39.291864 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0704 04:35:39.292332 20 fixtures.go:130] Node 18.118.109.209 is running 0 daemon pod, expected 1
  E0704 04:35:39.619565      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:35:40.289985 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0704 04:35:40.290026 20 fixtures.go:130] Node 18.191.27.132 is running 0 daemon pod, expected 1
  E0704 04:35:40.620417      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:35:41.279287 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0704 04:35:41.279329 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 07/04/24 04:35:41.29
  STEP: Check that daemon pods images are updated. @ 07/04/24 04:35:41.3
  I0704 04:35:41.303452 20 daemon_set.go:1178] Wrong image for pod: daemon-set-69297. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0704 04:35:41.303514 20 daemon_set.go:1178] Wrong image for pod: daemon-set-t7kqg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0704 04:35:41.303525 20 daemon_set.go:1178] Wrong image for pod: daemon-set-v598d. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0704 04:35:41.621179      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:35:42.305094 20 daemon_set.go:1178] Wrong image for pod: daemon-set-69297. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0704 04:35:42.305136 20 daemon_set.go:1178] Wrong image for pod: daemon-set-t7kqg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0704 04:35:42.621339      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:35:43.317189 20 daemon_set.go:1178] Wrong image for pod: daemon-set-69297. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0704 04:35:43.317237 20 daemon_set.go:1178] Wrong image for pod: daemon-set-t7kqg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0704 04:35:43.621414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:35:44.305090 20 daemon_set.go:1178] Wrong image for pod: daemon-set-69297. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0704 04:35:44.305139 20 daemon_set.go:1183] Pod daemon-set-9wlkm is not available
  I0704 04:35:44.305268 20 daemon_set.go:1178] Wrong image for pod: daemon-set-t7kqg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0704 04:35:44.622071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:35:45.308680 20 daemon_set.go:1178] Wrong image for pod: daemon-set-t7kqg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0704 04:35:45.623865      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:35:46.305244 20 daemon_set.go:1178] Wrong image for pod: daemon-set-t7kqg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0704 04:35:46.305283 20 daemon_set.go:1183] Pod daemon-set-whqgf is not available
  E0704 04:35:46.623981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:35:47.303860 20 daemon_set.go:1178] Wrong image for pod: daemon-set-t7kqg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0704 04:35:47.303908 20 daemon_set.go:1183] Pod daemon-set-whqgf is not available
  E0704 04:35:47.625200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:35:48.305353 20 daemon_set.go:1183] Pod daemon-set-8xhwf is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 07/04/24 04:35:48.308
  I0704 04:35:48.322663 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0704 04:35:48.322896 20 fixtures.go:130] Node 3.142.51.114 is running 0 daemon pod, expected 1
  E0704 04:35:48.627329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:35:49.317486 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0704 04:35:49.317525 20 fixtures.go:130] Node 3.142.51.114 is running 0 daemon pod, expected 1
  E0704 04:35:49.627167      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:35:50.319625 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0704 04:35:50.319670 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/04/24 04:35:50.364
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9746, will wait for the garbage collector to delete the pods @ 07/04/24 04:35:50.364
  I0704 04:35:50.443582 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 17.558674ms
  I0704 04:35:50.543939 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.356025ms
  E0704 04:35:50.627171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:51.628729      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:52.629021      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:35:52.647645 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0704 04:35:52.647689 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0704 04:35:52.649806 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30601"},"items":null}

  I0704 04:35:52.651855 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30601"},"items":null}

  I0704 04:35:52.660783 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9746" for this suite. @ 07/04/24 04:35:52.663
â€¢ [14.483 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 07/04/24 04:35:52.67
  I0704 04:35:52.670624 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename field-validation @ 07/04/24 04:35:52.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:35:52.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:35:52.688
  STEP: apply creating a deployment @ 07/04/24 04:35:52.691
  I0704 04:35:52.704754 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8356" for this suite. @ 07/04/24 04:35:52.723
â€¢ [0.067 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 07/04/24 04:35:52.737
  I0704 04:35:52.737663 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename emptydir @ 07/04/24 04:35:52.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:35:52.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:35:52.759
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/04/24 04:35:52.764
  E0704 04:35:53.629337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:54.629479      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:55.629564      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:56.629879      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:35:56.807
  I0704 04:35:56.809682 20 output.go:196] Trying to get logs from node 18.191.27.132 pod pod-9c8b3f8b-0e1b-43b9-8abc-15cc98ebf9ea container test-container: <nil>
  STEP: delete the pod @ 07/04/24 04:35:56.824
  I0704 04:35:56.842577 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2179" for this suite. @ 07/04/24 04:35:56.845
â€¢ [4.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3572
  STEP: Creating a kubernetes client @ 07/04/24 04:35:56.851
  I0704 04:35:56.851654 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename services @ 07/04/24 04:35:56.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:35:56.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:35:56.872
  STEP: creating a collection of services @ 07/04/24 04:35:56.875
  I0704 04:35:56.875607 20 service.go:3608] Creating e2e-svc-a-cnrpn
  I0704 04:35:56.886050 20 service.go:3608] Creating e2e-svc-b-s955m
  I0704 04:35:56.904427 20 service.go:3608] Creating e2e-svc-c-jj7xp
  STEP: deleting service collection @ 07/04/24 04:35:56.932
  I0704 04:35:57.016862 20 service.go:3643] Collection of services has been deleted
  I0704 04:35:57.017090 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9649" for this suite. @ 07/04/24 04:35:57.027
â€¢ [0.186 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 07/04/24 04:35:57.037
  I0704 04:35:57.037593 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename container-probe @ 07/04/24 04:35:57.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:35:57.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:35:57.073
  STEP: Creating pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 in namespace container-probe-9689 @ 07/04/24 04:35:57.076
  E0704 04:35:57.630018      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:35:58.630333      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/04/24 04:35:59.096
  I0704 04:35:59.100621 20 container_probe.go:1749] Initial restart count of pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 is 0
  I0704 04:35:59.102869 20 container_probe.go:1759] Get pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 in namespace container-probe-9689
  E0704 04:35:59.631259      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:00.631724      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:01.106240 20 container_probe.go:1759] Get pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 in namespace container-probe-9689
  E0704 04:36:01.631773      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:02.632228      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:03.110005 20 container_probe.go:1759] Get pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 in namespace container-probe-9689
  E0704 04:36:03.632725      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:04.632823      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:05.113490 20 container_probe.go:1759] Get pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 in namespace container-probe-9689
  E0704 04:36:05.633454      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:06.633313      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:07.116697 20 container_probe.go:1759] Get pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 in namespace container-probe-9689
  E0704 04:36:07.634294      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:08.635571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:09.120323 20 container_probe.go:1759] Get pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 in namespace container-probe-9689
  E0704 04:36:09.636149      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:10.636275      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:11.124184 20 container_probe.go:1759] Get pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 in namespace container-probe-9689
  E0704 04:36:11.636798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:12.637072      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:13.127921 20 container_probe.go:1759] Get pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 in namespace container-probe-9689
  E0704 04:36:13.637815      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:14.637949      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:15.131981 20 container_probe.go:1759] Get pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 in namespace container-probe-9689
  E0704 04:36:15.638791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:16.638936      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:17.135542 20 container_probe.go:1759] Get pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 in namespace container-probe-9689
  E0704 04:36:17.639171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:18.639266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:19.138988 20 container_probe.go:1759] Get pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 in namespace container-probe-9689
  E0704 04:36:19.639548      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:20.639823      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:21.142138 20 container_probe.go:1759] Get pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 in namespace container-probe-9689
  E0704 04:36:21.640717      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:22.640878      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:23.145717 20 container_probe.go:1759] Get pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 in namespace container-probe-9689
  E0704 04:36:23.641324      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:24.642409      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:25.149444 20 container_probe.go:1759] Get pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 in namespace container-probe-9689
  E0704 04:36:25.642486      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:26.642631      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:27.153620 20 container_probe.go:1759] Get pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 in namespace container-probe-9689
  E0704 04:36:27.642918      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:28.643387      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:29.157307 20 container_probe.go:1759] Get pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 in namespace container-probe-9689
  E0704 04:36:29.643657      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:30.643788      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:31.167063 20 container_probe.go:1759] Get pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 in namespace container-probe-9689
  E0704 04:36:31.645208      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:32.645586      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:33.170297 20 container_probe.go:1759] Get pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 in namespace container-probe-9689
  E0704 04:36:33.645716      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:34.646693      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:35.173988 20 container_probe.go:1759] Get pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 in namespace container-probe-9689
  E0704 04:36:35.647573      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:36.647672      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:37.177423 20 container_probe.go:1759] Get pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 in namespace container-probe-9689
  E0704 04:36:37.647809      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:38.648226      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:39.180544 20 container_probe.go:1759] Get pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 in namespace container-probe-9689
  E0704 04:36:39.648758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:40.649201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:41.183908 20 container_probe.go:1759] Get pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 in namespace container-probe-9689
  E0704 04:36:41.649587      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:42.650460      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:43.197542 20 container_probe.go:1759] Get pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 in namespace container-probe-9689
  E0704 04:36:43.650959      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:44.652596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:45.202334 20 container_probe.go:1759] Get pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 in namespace container-probe-9689
  E0704 04:36:45.651665      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:46.651779      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:47.207712 20 container_probe.go:1759] Get pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 in namespace container-probe-9689
  E0704 04:36:47.652037      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:48.652200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:49.211683 20 container_probe.go:1759] Get pod busybox-de5445dd-72f4-4160-894c-e3bd1e412235 in namespace container-probe-9689
  I0704 04:36:49.212299 20 container_probe.go:1763] Restart count of pod container-probe-9689/busybox-de5445dd-72f4-4160-894c-e3bd1e412235 is now 1 (50.11163037s elapsed)
  STEP: deleting the pod @ 07/04/24 04:36:49.212
  I0704 04:36:49.252788 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9689" for this suite. @ 07/04/24 04:36:49.278
â€¢ [52.255 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 07/04/24 04:36:49.292
  I0704 04:36:49.292824 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/04/24 04:36:49.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:36:49.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:36:49.324
  I0704 04:36:49.332124 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3488" for this suite. @ 07/04/24 04:36:49.337
â€¢ [0.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 07/04/24 04:36:49.349
  I0704 04:36:49.349300 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/04/24 04:36:49.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:36:49.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:36:49.375
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 07/04/24 04:36:49.378
  I0704 04:36:49.379003 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  E0704 04:36:49.652871      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:50.654799      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:50.807793 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  E0704 04:36:51.655010      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:52.655354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:53.656447      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:54.657144      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:55.657684      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:56.662557      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:56.819641 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5317" for this suite. @ 07/04/24 04:36:56.827
â€¢ [7.485 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2181
  STEP: Creating a kubernetes client @ 07/04/24 04:36:56.834
  I0704 04:36:56.834236 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename services @ 07/04/24 04:36:56.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:36:56.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:36:56.851
  STEP: creating service in namespace services-3334 @ 07/04/24 04:36:56.856
  STEP: creating service affinity-clusterip in namespace services-3334 @ 07/04/24 04:36:56.856
  STEP: creating replication controller affinity-clusterip in namespace services-3334 @ 07/04/24 04:36:56.867
  I0704 04:36:56.881343      20 runners.go:198] Created replication controller with name: affinity-clusterip, namespace: services-3334, replica count: 3
  E0704 04:36:57.663965      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:58.664730      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:36:59.664977      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:36:59.934012      20 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0704 04:36:59.939413 20 resource.go:361] Creating new exec pod
  E0704 04:37:00.665102      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:01.666061      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:02.666365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:37:02.954159 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-3334 exec execpod-affinitydbn8x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0704 04:37:03.133790 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I0704 04:37:03.133847 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0704 04:37:03.134122 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-3334 exec execpod-affinitydbn8x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.52.123 80'
  I0704 04:37:03.302449 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.52.123 80\nConnection to 10.43.52.123 80 port [tcp/http] succeeded!\n"
  I0704 04:37:03.302501 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0704 04:37:03.302750 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-3334 exec execpod-affinitydbn8x -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.52.123:80/ ; done'
  I0704 04:37:03.541562 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.52.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.52.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.52.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.52.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.52.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.52.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.52.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.52.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.52.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.52.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.52.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.52.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.52.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.52.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.52.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.52.123:80/\n"
  I0704 04:37:03.541616 20 builder.go:147] stdout: "\naffinity-clusterip-lnfr6\naffinity-clusterip-lnfr6\naffinity-clusterip-lnfr6\naffinity-clusterip-lnfr6\naffinity-clusterip-lnfr6\naffinity-clusterip-lnfr6\naffinity-clusterip-lnfr6\naffinity-clusterip-lnfr6\naffinity-clusterip-lnfr6\naffinity-clusterip-lnfr6\naffinity-clusterip-lnfr6\naffinity-clusterip-lnfr6\naffinity-clusterip-lnfr6\naffinity-clusterip-lnfr6\naffinity-clusterip-lnfr6\naffinity-clusterip-lnfr6"
  I0704 04:37:03.541637 20 service.go:242] Received response from host: affinity-clusterip-lnfr6
  I0704 04:37:03.541650 20 service.go:242] Received response from host: affinity-clusterip-lnfr6
  I0704 04:37:03.541661 20 service.go:242] Received response from host: affinity-clusterip-lnfr6
  I0704 04:37:03.541672 20 service.go:242] Received response from host: affinity-clusterip-lnfr6
  I0704 04:37:03.541683 20 service.go:242] Received response from host: affinity-clusterip-lnfr6
  I0704 04:37:03.541695 20 service.go:242] Received response from host: affinity-clusterip-lnfr6
  I0704 04:37:03.541719 20 service.go:242] Received response from host: affinity-clusterip-lnfr6
  I0704 04:37:03.541971 20 service.go:242] Received response from host: affinity-clusterip-lnfr6
  I0704 04:37:03.541993 20 service.go:242] Received response from host: affinity-clusterip-lnfr6
  I0704 04:37:03.542005 20 service.go:242] Received response from host: affinity-clusterip-lnfr6
  I0704 04:37:03.542112 20 service.go:242] Received response from host: affinity-clusterip-lnfr6
  I0704 04:37:03.542129 20 service.go:242] Received response from host: affinity-clusterip-lnfr6
  I0704 04:37:03.542140 20 service.go:242] Received response from host: affinity-clusterip-lnfr6
  I0704 04:37:03.542151 20 service.go:242] Received response from host: affinity-clusterip-lnfr6
  I0704 04:37:03.542162 20 service.go:242] Received response from host: affinity-clusterip-lnfr6
  I0704 04:37:03.542174 20 service.go:242] Received response from host: affinity-clusterip-lnfr6
  I0704 04:37:03.542261 20 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-3334, will wait for the garbage collector to delete the pods @ 07/04/24 04:37:03.559
  I0704 04:37:03.625690 20 resources.go:139] Deleting ReplicationController affinity-clusterip took: 6.86629ms
  E0704 04:37:03.687853      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:37:03.726157 20 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.461665ms
  E0704 04:37:04.667613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:05.668352      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:06.668756      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:37:07.343693 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3334" for this suite. @ 07/04/24 04:37:07.347
â€¢ [10.522 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 07/04/24 04:37:07.362
  I0704 04:37:07.362346 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename field-validation @ 07/04/24 04:37:07.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:37:07.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:37:07.406
  I0704 04:37:07.415222 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  E0704 04:37:07.669104      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:08.669175      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:09.669599      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:37:10.490582 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9615" for this suite. @ 07/04/24 04:37:10.497
â€¢ [3.153 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 07/04/24 04:37:10.515
  I0704 04:37:10.515368 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename disruption @ 07/04/24 04:37:10.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:37:10.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:37:10.543
  STEP: Creating a kubernetes client @ 07/04/24 04:37:10.548
  I0704 04:37:10.548329 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename disruption-2 @ 07/04/24 04:37:10.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:37:10.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:37:10.577
  STEP: Waiting for the pdb to be processed @ 07/04/24 04:37:10.584
  STEP: Waiting for the pdb to be processed @ 07/04/24 04:37:10.595
  E0704 04:37:10.670840      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:11.671346      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 07/04/24 04:37:12.604
  STEP: listing a collection of PDBs across all namespaces @ 07/04/24 04:37:12.611
  STEP: listing a collection of PDBs in namespace disruption-3823 @ 07/04/24 04:37:12.617
  STEP: deleting a collection of PDBs @ 07/04/24 04:37:12.622
  STEP: Waiting for the PDB collection to be deleted @ 07/04/24 04:37:12.633
  I0704 04:37:12.636989 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-8760" for this suite. @ 07/04/24 04:37:12.641
  I0704 04:37:12.648905 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3823" for this suite. @ 07/04/24 04:37:12.652
â€¢ [2.143 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 07/04/24 04:37:12.658
  I0704 04:37:12.658354 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 04:37:12.659
  E0704 04:37:12.671447      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:37:12.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:37:12.698
  STEP: Creating the pod @ 07/04/24 04:37:12.71
  E0704 04:37:13.672406      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:14.673418      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:37:15.261966 20 pod_client.go:141] Successfully updated pod "labelsupdate0fae0481-966d-4b4e-826a-a4c5e5aea007"
  E0704 04:37:15.673956      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:16.674843      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:37:17.284769 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-259" for this suite. @ 07/04/24 04:37:17.291
â€¢ [4.654 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 07/04/24 04:37:17.312
  I0704 04:37:17.312850 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename kubectl @ 07/04/24 04:37:17.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:37:17.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:37:17.346
  STEP: creating Agnhost RC @ 07/04/24 04:37:17.349
  I0704 04:37:17.349303 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-1080 create -f -'
  I0704 04:37:17.538689 20 builder.go:146] stderr: ""
  I0704 04:37:17.538734 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/04/24 04:37:17.538
  E0704 04:37:17.675027      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:37:18.543624 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0704 04:37:18.543668 20 framework.go:733] Found 0 / 1
  E0704 04:37:18.675816      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:37:19.552405 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0704 04:37:19.552448 20 framework.go:733] Found 1 / 1
  I0704 04:37:19.552471 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 07/04/24 04:37:19.552
  I0704 04:37:19.571668 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0704 04:37:19.571708 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0704 04:37:19.571759 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-1080 patch pod agnhost-primary-xghhv -p {"metadata":{"annotations":{"x":"y"}}}'
  I0704 04:37:19.655202 20 builder.go:146] stderr: ""
  I0704 04:37:19.655282 20 builder.go:147] stdout: "pod/agnhost-primary-xghhv patched\n"
  STEP: checking annotations @ 07/04/24 04:37:19.655
  I0704 04:37:19.658151 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0704 04:37:19.658189 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0704 04:37:19.658353 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1080" for this suite. @ 07/04/24 04:37:19.661
â€¢ [2.353 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 07/04/24 04:37:19.665
  I0704 04:37:19.665939 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename configmap @ 07/04/24 04:37:19.666
  E0704 04:37:19.679573      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:37:19.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:37:19.687
  STEP: Creating configMap with name configmap-test-volume-map-3bfbe79b-83d4-431f-afbc-c7e0ef6660e3 @ 07/04/24 04:37:19.689
  STEP: Creating a pod to test consume configMaps @ 07/04/24 04:37:19.693
  E0704 04:37:20.679822      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:21.680464      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:22.681261      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:23.681994      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:37:23.711
  I0704 04:37:23.714534 20 output.go:196] Trying to get logs from node 3.142.51.114 pod pod-configmaps-8576a125-36ed-475a-a0d0-b0472cad86c9 container agnhost-container: <nil>
  STEP: delete the pod @ 07/04/24 04:37:23.729
  I0704 04:37:23.765505 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3286" for this suite. @ 07/04/24 04:37:23.769
â€¢ [4.119 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 07/04/24 04:37:23.786
  I0704 04:37:23.786697 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename emptydir @ 07/04/24 04:37:23.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:37:23.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:37:23.822
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/04/24 04:37:23.832
  E0704 04:37:24.683223      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:25.684504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:26.685164      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:27.687607      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:37:27.889
  I0704 04:37:27.891866 20 output.go:196] Trying to get logs from node 18.191.27.132 pod pod-395fc87c-7d72-4693-8000-79c006d46371 container test-container: <nil>
  STEP: delete the pod @ 07/04/24 04:37:27.899
  I0704 04:37:27.913791 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1359" for this suite. @ 07/04/24 04:37:27.916
â€¢ [4.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 07/04/24 04:37:27.926
  I0704 04:37:27.926909 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/04/24 04:37:27.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:37:27.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:37:27.961
  STEP: fetching the /apis discovery document @ 07/04/24 04:37:27.966
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 07/04/24 04:37:27.967
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 07/04/24 04:37:27.967
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 07/04/24 04:37:27.967
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 07/04/24 04:37:27.969
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 07/04/24 04:37:27.969
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 07/04/24 04:37:27.97
  I0704 04:37:27.970530 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6410" for this suite. @ 07/04/24 04:37:27.973
â€¢ [0.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 07/04/24 04:37:27.978
  I0704 04:37:27.978424 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename conformance-tests @ 07/04/24 04:37:27.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:37:27.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:37:27.998
  STEP: Getting node addresses @ 07/04/24 04:37:28.001
  I0704 04:37:28.001189 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0704 04:37:28.005386 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-1842" for this suite. @ 07/04/24 04:37:28.008
â€¢ [0.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 07/04/24 04:37:28.016
  I0704 04:37:28.016618 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename daemonsets @ 07/04/24 04:37:28.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:37:28.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:37:28.047
  STEP: Creating simple DaemonSet "daemon-set" @ 07/04/24 04:37:28.067
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/04/24 04:37:28.075
  I0704 04:37:28.080662 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0704 04:37:28.080710 20 fixtures.go:130] Node 18.118.109.209 is running 0 daemon pod, expected 1
  E0704 04:37:28.689493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:37:29.089361 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0704 04:37:29.089568 20 fixtures.go:130] Node 18.118.109.209 is running 0 daemon pod, expected 1
  E0704 04:37:29.689636      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:37:30.090626 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0704 04:37:30.090673 20 fixtures.go:130] Node 18.191.27.132 is running 0 daemon pod, expected 1
  E0704 04:37:30.689793      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:37:31.082917 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0704 04:37:31.082965 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 07/04/24 04:37:31.084
  I0704 04:37:31.100179 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0704 04:37:31.100221 20 fixtures.go:130] Node 3.142.51.114 is running 0 daemon pod, expected 1
  E0704 04:37:31.690908      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:37:32.100714 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0704 04:37:32.100757 20 fixtures.go:130] Node 3.142.51.114 is running 0 daemon pod, expected 1
  E0704 04:37:32.691184      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:37:33.106859 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0704 04:37:33.106901 20 fixtures.go:130] Node 3.142.51.114 is running 0 daemon pod, expected 1
  E0704 04:37:33.691271      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:37:34.100760 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0704 04:37:34.100805 20 fixtures.go:130] Node 3.142.51.114 is running 0 daemon pod, expected 1
  E0704 04:37:34.691781      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:37:35.100760 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0704 04:37:35.100801 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/04/24 04:37:35.104
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2402, will wait for the garbage collector to delete the pods @ 07/04/24 04:37:35.104
  I0704 04:37:35.162077 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 4.83414ms
  I0704 04:37:35.263046 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.967425ms
  E0704 04:37:35.692341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:36.692860      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:37:37.266834 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0704 04:37:37.266876 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0704 04:37:37.269471 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"31308"},"items":null}

  I0704 04:37:37.271643 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"31308"},"items":null}

  I0704 04:37:37.281101 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2402" for this suite. @ 07/04/24 04:37:37.283
â€¢ [9.273 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 07/04/24 04:37:37.289
  I0704 04:37:37.289769 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 04:37:37.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:37:37.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:37:37.324
  STEP: Creating a pod to test downward API volume plugin @ 07/04/24 04:37:37.335
  E0704 04:37:37.693622      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:38.694671      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:39.695461      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:40.695708      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:37:41.369
  I0704 04:37:41.372004 20 output.go:196] Trying to get logs from node 3.142.51.114 pod downwardapi-volume-5d621d1d-d96f-46c5-84a0-e45a336199ad container client-container: <nil>
  STEP: delete the pod @ 07/04/24 04:37:41.38
  I0704 04:37:41.397808 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3450" for this suite. @ 07/04/24 04:37:41.4
â€¢ [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 07/04/24 04:37:41.406
  I0704 04:37:41.406987 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename downward-api @ 07/04/24 04:37:41.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:37:41.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:37:41.423
  STEP: Creating a pod to test downward API volume plugin @ 07/04/24 04:37:41.426
  E0704 04:37:41.696758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:42.696999      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:43.697662      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:44.697947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:37:45.446
  I0704 04:37:45.480331 20 output.go:196] Trying to get logs from node 18.191.27.132 pod downwardapi-volume-2cafeac3-4f6b-4c94-9280-5cf891839e4d container client-container: <nil>
  STEP: delete the pod @ 07/04/24 04:37:45.504
  I0704 04:37:45.523636 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5957" for this suite. @ 07/04/24 04:37:45.527
â€¢ [4.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 07/04/24 04:37:45.539
  I0704 04:37:45.539578 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename emptydir @ 07/04/24 04:37:45.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:37:45.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:37:45.57
  STEP: Creating a pod to test emptydir volume type on node default medium @ 07/04/24 04:37:45.574
  E0704 04:37:45.698290      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:46.698383      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:47.699085      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:48.699737      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:37:49.595
  I0704 04:37:49.597765 20 output.go:196] Trying to get logs from node 18.191.27.132 pod pod-9fcc52c2-daa5-4cd6-9e67-bad70d369131 container test-container: <nil>
  STEP: delete the pod @ 07/04/24 04:37:49.605
  I0704 04:37:49.624329 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8645" for this suite. @ 07/04/24 04:37:49.627
â€¢ [4.099 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 07/04/24 04:37:49.638
  I0704 04:37:49.638995 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename namespaces @ 07/04/24 04:37:49.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:37:49.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:37:49.662
  STEP: Creating a test namespace @ 07/04/24 04:37:49.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:37:49.682
  STEP: Creating a pod in the namespace @ 07/04/24 04:37:49.687
  E0704 04:37:49.699394      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pod to have running status @ 07/04/24 04:37:49.725
  E0704 04:37:50.700216      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:51.701769      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 07/04/24 04:37:51.741
  STEP: Waiting for the namespace to be removed. @ 07/04/24 04:37:51.747
  E0704 04:37:52.701386      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:53.701457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:54.702198      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:55.702308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:56.702585      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:57.702708      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:58.703536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:37:59.703753      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:00.703891      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:01.703990      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:02.704107      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 07/04/24 04:38:02.751
  STEP: Verifying there are no pods in the namespace @ 07/04/24 04:38:02.815
  I0704 04:38:02.818163 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7654" for this suite. @ 07/04/24 04:38:02.822
  STEP: Destroying namespace "nsdeletetest-4875" for this suite. @ 07/04/24 04:38:02.828
  I0704 04:38:02.830713 20 framework.go:370] Namespace nsdeletetest-4875 was already deleted
  STEP: Destroying namespace "nsdeletetest-9768" for this suite. @ 07/04/24 04:38:02.83
â€¢ [13.197 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 07/04/24 04:38:02.836
  I0704 04:38:02.836031 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 04:38:02.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:38:02.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:38:02.857
  STEP: Creating a pod to test downward API volume plugin @ 07/04/24 04:38:02.86
  E0704 04:38:03.704805      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:04.705056      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:05.705229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:06.705411      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:38:06.879
  I0704 04:38:06.881559 20 output.go:196] Trying to get logs from node 3.142.51.114 pod downwardapi-volume-ee6e3e31-bcaf-4643-a07e-53f9b399da4d container client-container: <nil>
  STEP: delete the pod @ 07/04/24 04:38:06.887
  I0704 04:38:06.901113 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9162" for this suite. @ 07/04/24 04:38:06.905
â€¢ [4.076 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 07/04/24 04:38:06.915
  I0704 04:38:06.915608 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename discovery @ 07/04/24 04:38:06.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:38:06.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:38:06.951
  STEP: Setting up server cert @ 07/04/24 04:38:06.955
  STEP: Requesting APIResourceList from "/api/v1" @ 07/04/24 04:38:07.422
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 07/04/24 04:38:07.424
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 07/04/24 04:38:07.426
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 07/04/24 04:38:07.428
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 07/04/24 04:38:07.429
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 07/04/24 04:38:07.43
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 07/04/24 04:38:07.431
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 07/04/24 04:38:07.433
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 07/04/24 04:38:07.435
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 07/04/24 04:38:07.436
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 07/04/24 04:38:07.437
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 07/04/24 04:38:07.438
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 07/04/24 04:38:07.439
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 07/04/24 04:38:07.44
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 07/04/24 04:38:07.441
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 07/04/24 04:38:07.442
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 07/04/24 04:38:07.443
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 07/04/24 04:38:07.444
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 07/04/24 04:38:07.445
  I0704 04:38:07.446906 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-380" for this suite. @ 07/04/24 04:38:07.449
â€¢ [0.539 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 07/04/24 04:38:07.453
  I0704 04:38:07.453913 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/04/24 04:38:07.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:38:07.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:38:07.47
  I0704 04:38:07.473671 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  E0704 04:38:07.707034      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:08.707327      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:09.707636      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:38:10.558188 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1527" for this suite. @ 07/04/24 04:38:10.563
â€¢ [3.122 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 07/04/24 04:38:10.576
  I0704 04:38:10.576025 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename webhook @ 07/04/24 04:38:10.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:38:10.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:38:10.6
  STEP: Setting up server cert @ 07/04/24 04:38:10.621
  E0704 04:38:10.708608      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/04/24 04:38:11.321
  STEP: Deploying the webhook pod @ 07/04/24 04:38:11.334
  STEP: Wait for the deployment to be ready @ 07/04/24 04:38:11.352
  I0704 04:38:11.370101 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0704 04:38:11.710515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:12.710742      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/04/24 04:38:13.381
  STEP: Verifying the service has paired with the endpoint @ 07/04/24 04:38:13.39
  E0704 04:38:13.711645      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:38:14.391561 20 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0704 04:38:14.399019 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  E0704 04:38:14.712704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6729-crds.webhook.example.com via the AdmissionRegistration API @ 07/04/24 04:38:14.915
  STEP: Creating a custom resource while v1 is storage version @ 07/04/24 04:38:14.936
  E0704 04:38:15.713006      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:16.712995      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 07/04/24 04:38:16.982
  STEP: Patching the custom resource while v2 is storage version @ 07/04/24 04:38:17.015
  I0704 04:38:17.672294 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4528" for this suite. @ 07/04/24 04:38:17.678
  STEP: Destroying namespace "webhook-markers-7518" for this suite. @ 07/04/24 04:38:17.688
â€¢ [7.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS  E0704 04:38:17.714025      20 retrywatcher.go:129] "Watch failed" err="context canceled"

------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 07/04/24 04:38:17.714
  I0704 04:38:17.714701 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename security-context-test @ 07/04/24 04:38:17.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:38:17.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:38:17.764
  E0704 04:38:18.714114      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:19.714608      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:20.714993      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:21.715058      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:38:21.803862 20 security_context.go:538] Got logs for pod "busybox-privileged-false-0c3f32c1-2a49-4bcb-a411-b6e1803033ff": "ip: RTNETLINK answers: Operation not permitted\n"
  I0704 04:38:21.804074 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4290" for this suite. @ 07/04/24 04:38:21.807
â€¢ [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:927
  STEP: Creating a kubernetes client @ 07/04/24 04:38:21.819
  I0704 04:38:21.819837 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename job @ 07/04/24 04:38:21.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:38:21.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:38:21.848
  STEP: Creating a suspended job @ 07/04/24 04:38:21.856
  STEP: Patching the Job @ 07/04/24 04:38:21.864
  STEP: Watching for Job to be patched @ 07/04/24 04:38:21.891
  I0704 04:38:21.893764 20 job.go:1109] Event ADDED observed for Job e2e-srhjf in namespace job-6497 with labels: map[e2e-job-label:e2e-srhjf] and annotations: map[]
  I0704 04:38:21.893944 20 job.go:1109] Event MODIFIED observed for Job e2e-srhjf in namespace job-6497 with labels: map[e2e-job-label:e2e-srhjf] and annotations: map[]
  I0704 04:38:21.894060 20 job.go:1112] Event MODIFIED found for Job e2e-srhjf in namespace job-6497 with labels: map[e2e-job-label:e2e-srhjf e2e-srhjf:patched] and annotations: map[]
  STEP: Updating the job @ 07/04/24 04:38:21.894
  STEP: Watching for Job to be updated @ 07/04/24 04:38:21.903
  I0704 04:38:21.906273 20 job.go:1112] Event MODIFIED found for Job e2e-srhjf in namespace job-6497 with labels: map[e2e-job-label:e2e-srhjf e2e-srhjf:patched] and annotations: map[updated:true]
  I0704 04:38:21.906333 20 job.go:1005] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 07/04/24 04:38:21.906
  I0704 04:38:21.909792 20 job.go:1012] Job: e2e-srhjf as labels: map[e2e-job-label:e2e-srhjf e2e-srhjf:patched]
  STEP: Waiting for job to complete @ 07/04/24 04:38:21.909
  E0704 04:38:22.715948      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:23.716578      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:24.717536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:25.717845      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:26.717999      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:27.718122      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:28.718773      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:29.719134      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:30.719184      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:31.720062      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 07/04/24 04:38:31.92
  STEP: Watching for Job to be deleted @ 07/04/24 04:38:31.927
  I0704 04:38:31.932250 20 job.go:1109] Event MODIFIED observed for Job e2e-srhjf in namespace job-6497 with labels: map[e2e-job-label:e2e-srhjf e2e-srhjf:patched] and annotations: map[updated:true]
  I0704 04:38:31.932316 20 job.go:1109] Event MODIFIED observed for Job e2e-srhjf in namespace job-6497 with labels: map[e2e-job-label:e2e-srhjf e2e-srhjf:patched] and annotations: map[updated:true]
  I0704 04:38:31.932484 20 job.go:1109] Event MODIFIED observed for Job e2e-srhjf in namespace job-6497 with labels: map[e2e-job-label:e2e-srhjf e2e-srhjf:patched] and annotations: map[updated:true]
  I0704 04:38:31.932741 20 job.go:1109] Event MODIFIED observed for Job e2e-srhjf in namespace job-6497 with labels: map[e2e-job-label:e2e-srhjf e2e-srhjf:patched] and annotations: map[updated:true]
  I0704 04:38:31.932874 20 job.go:1109] Event MODIFIED observed for Job e2e-srhjf in namespace job-6497 with labels: map[e2e-job-label:e2e-srhjf e2e-srhjf:patched] and annotations: map[updated:true]
  I0704 04:38:31.933058 20 job.go:1112] Event DELETED found for Job e2e-srhjf in namespace job-6497 with labels: map[e2e-job-label:e2e-srhjf e2e-srhjf:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 07/04/24 04:38:31.933
  I0704 04:38:31.940244 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6497" for this suite. @ 07/04/24 04:38:31.951
â€¢ [10.151 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 07/04/24 04:38:31.97
  I0704 04:38:31.970933 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename resourcequota @ 07/04/24 04:38:31.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:38:32.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:38:32.027
  E0704 04:38:32.720194      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:33.721247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:34.721447      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:35.722521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:36.722896      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:37.723575      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:38.724410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:39.724891      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:40.724993      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:41.725639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:42.725962      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:43.726030      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:44.726171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:45.726284      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:46.726557      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:47.726742      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:48.726815      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 07/04/24 04:38:49.034
  E0704 04:38:49.726909      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:50.727757      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:51.728764      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:52.729765      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:53.730071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/04/24 04:38:54.04
  STEP: Ensuring resource quota status is calculated @ 07/04/24 04:38:54.049
  E0704 04:38:54.731056      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:55.731204      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 07/04/24 04:38:56.054
  STEP: Ensuring resource quota status captures configMap creation @ 07/04/24 04:38:56.071
  E0704 04:38:56.732162      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:57.732736      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 07/04/24 04:38:58.075
  STEP: Ensuring resource quota status released usage @ 07/04/24 04:38:58.088
  E0704 04:38:58.732880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:38:59.732996      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:39:00.091830 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1619" for this suite. @ 07/04/24 04:39:00.1
â€¢ [28.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 07/04/24 04:39:00.147
  I0704 04:39:00.147074 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename var-expansion @ 07/04/24 04:39:00.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:39:00.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:39:00.17
  E0704 04:39:00.733119      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:01.733358      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:39:02.190825 20 delete.go:62] Deleting pod "var-expansion-2e154cc5-9342-48ac-bcac-0ac8e1767d76" in namespace "var-expansion-5943"
  I0704 04:39:02.223654 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-2e154cc5-9342-48ac-bcac-0ac8e1767d76" to be fully deleted
  E0704 04:39:02.733381      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:03.733472      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:04.734445      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:05.734876      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:39:06.240216 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5943" for this suite. @ 07/04/24 04:39:06.27
â€¢ [6.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 07/04/24 04:39:06.3
  I0704 04:39:06.300532 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename dns @ 07/04/24 04:39:06.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:39:06.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:39:06.375
  STEP: Creating a test externalName service @ 07/04/24 04:39:06.378
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8474.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8474.svc.cluster.local; sleep 1; done
   @ 07/04/24 04:39:06.383
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8474.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8474.svc.cluster.local; sleep 1; done
   @ 07/04/24 04:39:06.383
  STEP: creating a pod to probe DNS @ 07/04/24 04:39:06.383
  STEP: submitting the pod to kubernetes @ 07/04/24 04:39:06.383
  E0704 04:39:06.735610      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:07.736721      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:08.737281      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:09.737363      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/04/24 04:39:10.406
  STEP: looking for the results for each expected name from probers @ 07/04/24 04:39:10.408
  I0704 04:39:10.415379 20 dns_common.go:552] DNS probes using dns-test-fc3856c6-8bc0-44b7-afe6-d210f66ef31a succeeded

  STEP: changing the externalName to bar.example.com @ 07/04/24 04:39:10.415
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8474.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8474.svc.cluster.local; sleep 1; done
   @ 07/04/24 04:39:10.433
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8474.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8474.svc.cluster.local; sleep 1; done
   @ 07/04/24 04:39:10.433
  STEP: creating a second pod to probe DNS @ 07/04/24 04:39:10.433
  STEP: submitting the pod to kubernetes @ 07/04/24 04:39:10.434
  E0704 04:39:10.738417      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:11.739057      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/04/24 04:39:12.477
  STEP: looking for the results for each expected name from probers @ 07/04/24 04:39:12.479
  I0704 04:39:12.493294 20 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-8474.svc.cluster.local from pod  dns-8474/dns-test-56a80bfd-dd7c-4fea-abd1-52513f934a4d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0704 04:39:12.497866 20 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-8474.svc.cluster.local from pod  dns-8474/dns-test-56a80bfd-dd7c-4fea-abd1-52513f934a4d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0704 04:39:12.497915 20 dns_common.go:489] Lookups using dns-8474/dns-test-56a80bfd-dd7c-4fea-abd1-52513f934a4d failed for: [wheezy_udp@dns-test-service-3.dns-8474.svc.cluster.local jessie_udp@dns-test-service-3.dns-8474.svc.cluster.local]

  I0704 04:39:12.507067 20 dns_common.go:495] Pod client logs for webserver: 
  I0704 04:39:12.515583 20 dns_common.go:495] Pod client logs for querier: 
  I0704 04:39:12.522057 20 dns_common.go:495] Pod client logs for jessie-querier: 
  E0704 04:39:12.739630      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:13.740751      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:14.740689      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:15.740828      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:16.741106      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:39:17.487951 20 dns_common.go:552] DNS probes using dns-test-56a80bfd-dd7c-4fea-abd1-52513f934a4d succeeded

  STEP: changing the service to type=ClusterIP @ 07/04/24 04:39:17.488
  W0704 04:39:17.500749      20 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8474.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-8474.svc.cluster.local; sleep 1; done
   @ 07/04/24 04:39:17.502
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8474.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-8474.svc.cluster.local; sleep 1; done
   @ 07/04/24 04:39:17.502
  STEP: creating a third pod to probe DNS @ 07/04/24 04:39:17.502
  STEP: submitting the pod to kubernetes @ 07/04/24 04:39:17.506
  E0704 04:39:17.741632      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:18.742194      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:19.742998      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:20.743702      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:21.743812      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:22.748377      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:23.748709      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:24.748791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:25.749673      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:26.749774      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:27.750549      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:28.750423      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/04/24 04:39:29.546
  STEP: looking for the results for each expected name from probers @ 07/04/24 04:39:29.549
  I0704 04:39:29.556520 20 dns_common.go:552] DNS probes using dns-test-25bcdabf-a83e-4da0-a636-49148a4e5e28 succeeded

  STEP: deleting the pod @ 07/04/24 04:39:29.556
  STEP: deleting the pod @ 07/04/24 04:39:29.57
  STEP: deleting the pod @ 07/04/24 04:39:29.582
  STEP: deleting the test externalName service @ 07/04/24 04:39:29.613
  I0704 04:39:29.704091 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8474" for this suite. @ 07/04/24 04:39:29.709
â€¢ [23.424 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 07/04/24 04:39:29.727
  I0704 04:39:29.727194 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename pods @ 07/04/24 04:39:29.728
  E0704 04:39:29.751123      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:39:29.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:39:29.774
  STEP: Create a pod @ 07/04/24 04:39:29.786
  E0704 04:39:30.751307      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:31.751953      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 07/04/24 04:39:31.812
  I0704 04:39:31.831328 20 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0704 04:39:31.831439 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3978" for this suite. @ 07/04/24 04:39:31.845
â€¢ [2.129 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 07/04/24 04:39:31.855
  I0704 04:39:31.855980 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/04/24 04:39:31.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:39:31.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:39:31.891
  I0704 04:39:31.894441 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:39:32.437524 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-190" for this suite. @ 07/04/24 04:39:32.444
â€¢ [0.600 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 07/04/24 04:39:32.469
  I0704 04:39:32.470253 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename webhook @ 07/04/24 04:39:32.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:39:32.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:39:32.491
  STEP: Setting up server cert @ 07/04/24 04:39:32.512
  E0704 04:39:32.752008      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/04/24 04:39:32.924
  STEP: Deploying the webhook pod @ 07/04/24 04:39:32.935
  STEP: Wait for the deployment to be ready @ 07/04/24 04:39:32.947
  I0704 04:39:32.957224 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0704 04:39:33.753251      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:34.753464      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:39:34.969720 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 4, 4, 39, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 4, 39, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 4, 39, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 4, 39, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0704 04:39:35.754718      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:36.755075      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/04/24 04:39:36.974
  STEP: Verifying the service has paired with the endpoint @ 07/04/24 04:39:36.989
  E0704 04:39:37.755253      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:39:37.989683 20 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0704 04:39:37.998388 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9382-crds.webhook.example.com via the AdmissionRegistration API @ 07/04/24 04:39:38.508
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/04/24 04:39:38.526
  E0704 04:39:38.755650      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:39.755771      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:40.756816      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:39:41.174095 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6435" for this suite. @ 07/04/24 04:39:41.177
  STEP: Destroying namespace "webhook-markers-3915" for this suite. @ 07/04/24 04:39:41.184
â€¢ [8.721 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 07/04/24 04:39:41.194
  I0704 04:39:41.194485 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename namespaces @ 07/04/24 04:39:41.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:39:41.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:39:41.211
  STEP: Creating namespace "e2e-ns-x6bnd" @ 07/04/24 04:39:41.214
  I0704 04:39:41.226242 20 namespace.go:411] Namespace "e2e-ns-x6bnd-6443" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-x6bnd-6443" @ 07/04/24 04:39:41.226
  I0704 04:39:41.233462 20 namespace.go:434] Namespace "e2e-ns-x6bnd-6443" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-x6bnd-6443" @ 07/04/24 04:39:41.233
  I0704 04:39:41.245202 20 namespace.go:463] Namespace "e2e-ns-x6bnd-6443" has []v1.FinalizerName{"kubernetes"}
  I0704 04:39:41.245483 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6667" for this suite. @ 07/04/24 04:39:41.25
  STEP: Destroying namespace "e2e-ns-x6bnd-6443" for this suite. @ 07/04/24 04:39:41.257
â€¢ [0.072 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 07/04/24 04:39:41.265
  I0704 04:39:41.265527 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename webhook @ 07/04/24 04:39:41.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:39:41.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:39:41.287
  STEP: Setting up server cert @ 07/04/24 04:39:41.308
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/04/24 04:39:41.727
  STEP: Deploying the webhook pod @ 07/04/24 04:39:41.732
  STEP: Wait for the deployment to be ready @ 07/04/24 04:39:41.749
  E0704 04:39:41.757118      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:39:41.768523 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0704 04:39:42.757284      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:43.757416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/04/24 04:39:43.778
  STEP: Verifying the service has paired with the endpoint @ 07/04/24 04:39:43.797
  E0704 04:39:44.757628      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:39:44.797852 20 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 07/04/24 04:39:44.806
  STEP: create a pod that should be updated by the webhook @ 07/04/24 04:39:44.865
  I0704 04:39:44.976226 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5019" for this suite. @ 07/04/24 04:39:44.98
  STEP: Destroying namespace "webhook-markers-975" for this suite. @ 07/04/24 04:39:44.992
â€¢ [3.739 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:446
  STEP: Creating a kubernetes client @ 07/04/24 04:39:45.006
  I0704 04:39:45.006256 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename sched-pred @ 07/04/24 04:39:45.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:39:45.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:39:45.024
  I0704 04:39:45.027465 20 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0704 04:39:45.033184 20 util.go:400] Waiting for terminating namespaces to be deleted...
  I0704 04:39:45.036118 20 predicates.go:121] 
  Logging pods the apiserver thinks is on node 18.118.109.209 before test
  I0704 04:39:45.041742 20 predicates.go:887] calico-kube-controllers-5b878c8d6f-qchnq from kube-system started at 2024-07-04 03:00:03 +0000 UTC (1 container statuses recorded)
  I0704 04:39:45.041779 20 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I0704 04:39:45.041791 20 predicates.go:887] canal-7mrtp from kube-system started at 2024-07-04 03:00:03 +0000 UTC (2 container statuses recorded)
  I0704 04:39:45.041812 20 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0704 04:39:45.041821 20 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0704 04:39:45.041832 20 predicates.go:887] coredns-autoscaler-7db8ddc8cf-c6v99 from kube-system started at 2024-07-04 03:00:15 +0000 UTC (1 container statuses recorded)
  I0704 04:39:45.041863 20 predicates.go:889] 	Container autoscaler ready: true, restart count 0
  I0704 04:39:45.041877 20 predicates.go:887] sonobuoy-e2e-job-29e78ee3095b40b0 from sonobuoy started at 2024-07-04 03:22:00 +0000 UTC (2 container statuses recorded)
  I0704 04:39:45.041886 20 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0704 04:39:45.041894 20 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0704 04:39:45.041904 20 predicates.go:887] sonobuoy-systemd-logs-daemon-set-f25fe8f61e184228-dc5qd from sonobuoy started at 2024-07-04 03:22:00 +0000 UTC (2 container statuses recorded)
  I0704 04:39:45.041913 20 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0704 04:39:45.041941 20 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0704 04:39:45.041955 20 predicates.go:121] 
  Logging pods the apiserver thinks is on node 18.191.27.132 before test
  I0704 04:39:45.047389 20 predicates.go:887] canal-fjqx2 from kube-system started at 2024-07-04 03:00:03 +0000 UTC (2 container statuses recorded)
  I0704 04:39:45.047672 20 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0704 04:39:45.049022 20 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0704 04:39:45.049828 20 predicates.go:887] coredns-878dbb559-n6nrk from kube-system started at 2024-07-04 03:00:34 +0000 UTC (1 container statuses recorded)
  I0704 04:39:45.050104 20 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0704 04:39:45.050218 20 predicates.go:887] rke-coredns-addon-deploy-job-vl45b from kube-system started at 2024-07-04 03:00:13 +0000 UTC (1 container statuses recorded)
  I0704 04:39:45.050338 20 predicates.go:889] 	Container rke-coredns-addon-pod ready: false, restart count 0
  I0704 04:39:45.050436 20 predicates.go:887] rke-metrics-addon-deploy-job-h5rd9 from kube-system started at 2024-07-04 03:00:20 +0000 UTC (1 container statuses recorded)
  I0704 04:39:45.050543 20 predicates.go:889] 	Container rke-metrics-addon-pod ready: false, restart count 0
  I0704 04:39:45.050650 20 predicates.go:887] rke-network-plugin-deploy-job-p5wc5 from kube-system started at 2024-07-04 03:00:00 +0000 UTC (1 container statuses recorded)
  I0704 04:39:45.050751 20 predicates.go:889] 	Container rke-network-plugin-pod ready: false, restart count 0
  I0704 04:39:45.050862 20 predicates.go:887] sonobuoy from sonobuoy started at 2024-07-04 03:21:56 +0000 UTC (1 container statuses recorded)
  I0704 04:39:45.050973 20 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0704 04:39:45.051073 20 predicates.go:887] sonobuoy-systemd-logs-daemon-set-f25fe8f61e184228-7wp7w from sonobuoy started at 2024-07-04 03:22:00 +0000 UTC (2 container statuses recorded)
  I0704 04:39:45.051568 20 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0704 04:39:45.051579 20 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0704 04:39:45.051591 20 predicates.go:121] 
  Logging pods the apiserver thinks is on node 3.142.51.114 before test
  I0704 04:39:45.058360 20 predicates.go:887] canal-55jg5 from kube-system started at 2024-07-04 03:00:03 +0000 UTC (2 container statuses recorded)
  I0704 04:39:45.058750 20 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0704 04:39:45.058964 20 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0704 04:39:45.058986 20 predicates.go:887] coredns-878dbb559-x42jf from kube-system started at 2024-07-04 03:00:14 +0000 UTC (1 container statuses recorded)
  I0704 04:39:45.058997 20 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0704 04:39:45.059164 20 predicates.go:887] metrics-server-85f57469bf-24s6n from kube-system started at 2024-07-04 03:00:23 +0000 UTC (1 container statuses recorded)
  I0704 04:39:45.059184 20 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I0704 04:39:45.059196 20 predicates.go:887] sonobuoy-systemd-logs-daemon-set-f25fe8f61e184228-gg2w2 from sonobuoy started at 2024-07-04 03:22:00 +0000 UTC (2 container statuses recorded)
  I0704 04:39:45.059206 20 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0704 04:39:45.059217 20 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0704 04:39:45.059428 20 predicates.go:887] webhook-to-be-mutated from webhook-5019 started at 2024-07-04 04:39:44 +0000 UTC (1 container statuses recorded)
  I0704 04:39:45.059442 20 predicates.go:889] 	Container example ready: false, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 07/04/24 04:39:45.059
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17dee8b81841a69f], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.] @ 07/04/24 04:39:45.085
  E0704 04:39:45.757777      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:39:46.084632 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4489" for this suite. @ 07/04/24 04:39:46.092
â€¢ [1.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 07/04/24 04:39:46.104
  I0704 04:39:46.104256 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename pod-network-test @ 07/04/24 04:39:46.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:39:46.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:39:46.121
  STEP: Performing setup for networking test in namespace pod-network-test-3644 @ 07/04/24 04:39:46.125
  STEP: creating a selector @ 07/04/24 04:39:46.126
  STEP: Creating the service pods in kubernetes @ 07/04/24 04:39:46.126
  I0704 04:39:46.126185 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0704 04:39:46.758183      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:47.758636      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:48.758968      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:49.759215      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:50.759367      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:51.759610      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:52.759978      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:53.760469      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:54.761468      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:55.762172      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:56.762303      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:57.762425      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:58.763245      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:39:59.763510      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:00.763644      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:01.763774      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:02.764885      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:03.765462      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:04.765791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:05.766100      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:06.766232      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:07.766460      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/04/24 04:40:08.25
  E0704 04:40:08.767120      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:09.767511      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:40:10.304965 20 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0704 04:40:10.305071 20 utils.go:472] Going to poll 10.42.1.142 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0704 04:40:10.310757 20 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.1.142:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3644 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 04:40:10.310860 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:40:10.312049 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 04:40:10.312129 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-3644/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.1.142%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0704 04:40:10.413448 20 utils.go:489] Found all 1 expected endpoints: [netserver-0]
  I0704 04:40:10.413498 20 utils.go:472] Going to poll 10.42.0.237 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0704 04:40:10.420235 20 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.0.237:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3644 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 04:40:10.420274 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:40:10.421457 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 04:40:10.421638 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-3644/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.0.237%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0704 04:40:10.522726 20 utils.go:489] Found all 1 expected endpoints: [netserver-1]
  I0704 04:40:10.522778 20 utils.go:472] Going to poll 10.42.2.251 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0704 04:40:10.525461 20 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.2.251:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3644 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 04:40:10.525507 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:40:10.526334 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 04:40:10.526432 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-3644/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.2.251%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0704 04:40:10.665540 20 utils.go:489] Found all 1 expected endpoints: [netserver-2]
  I0704 04:40:10.666016 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3644" for this suite. @ 07/04/24 04:40:10.672
â€¢ [24.576 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 07/04/24 04:40:10.681
  I0704 04:40:10.681637 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename subpath @ 07/04/24 04:40:10.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:40:10.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:40:10.711
  STEP: Setting up data @ 07/04/24 04:40:10.714
  STEP: Creating pod pod-subpath-test-configmap-tpct @ 07/04/24 04:40:10.727
  STEP: Creating a pod to test atomic-volume-subpath @ 07/04/24 04:40:10.727
  E0704 04:40:10.768202      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:11.768467      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:12.768853      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:13.769001      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:14.769955      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:15.770393      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:16.771295      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:17.771457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:18.771591      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:19.771649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:20.773345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:21.773313      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:22.773765      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:23.774234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:24.774321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:25.774558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:26.775354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:27.776241      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:28.776441      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:29.776739      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:30.776958      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:31.777699      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:32.777872      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:33.778219      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:34.778470      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:40:34.79
  I0704 04:40:34.796719 20 output.go:196] Trying to get logs from node 18.191.27.132 pod pod-subpath-test-configmap-tpct container test-container-subpath-configmap-tpct: <nil>
  STEP: delete the pod @ 07/04/24 04:40:34.81
  STEP: Deleting pod pod-subpath-test-configmap-tpct @ 07/04/24 04:40:34.83
  I0704 04:40:34.830346 20 delete.go:62] Deleting pod "pod-subpath-test-configmap-tpct" in namespace "subpath-6825"
  I0704 04:40:34.832917 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6825" for this suite. @ 07/04/24 04:40:34.836
â€¢ [24.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 07/04/24 04:40:34.844
  I0704 04:40:34.844843 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename kubelet-test @ 07/04/24 04:40:34.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:40:34.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:40:34.87
  I0704 04:40:34.928470 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2361" for this suite. @ 07/04/24 04:40:34.94
â€¢ [0.108 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 07/04/24 04:40:34.953
  I0704 04:40:34.953329 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename configmap @ 07/04/24 04:40:34.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:40:34.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:40:35.001
  STEP: Creating configMap with name configmap-test-upd-28ee8355-4495-4a57-96f3-db3f90d8ef58 @ 07/04/24 04:40:35.006
  STEP: Creating the pod @ 07/04/24 04:40:35.016
  E0704 04:40:35.779491      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:36.780079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:37.780692      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:38.780864      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 07/04/24 04:40:39.038
  STEP: Waiting for pod with binary data @ 07/04/24 04:40:39.046
  I0704 04:40:39.053523 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3282" for this suite. @ 07/04/24 04:40:39.056
â€¢ [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 07/04/24 04:40:39.063
  I0704 04:40:39.063869 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 07/04/24 04:40:39.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:40:39.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:40:39.081
  STEP: Setting up the test @ 07/04/24 04:40:39.085
  STEP: Creating hostNetwork=false pod @ 07/04/24 04:40:39.085
  E0704 04:40:39.780981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:40.781694      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 07/04/24 04:40:41.103
  E0704 04:40:41.782434      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:42.782565      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 07/04/24 04:40:43.117
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 07/04/24 04:40:43.118
  I0704 04:40:43.118031 20 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-121 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 04:40:43.118246 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:40:43.119030 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 04:40:43.119180 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-121/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0704 04:40:43.211258 20 exec_util.go:106] Exec stderr: ""
  I0704 04:40:43.211595 20 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-121 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 04:40:43.211699 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:40:43.212406 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 04:40:43.212737 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-121/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0704 04:40:43.298579 20 exec_util.go:106] Exec stderr: ""
  I0704 04:40:43.298959 20 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-121 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 04:40:43.299036 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:40:43.299930 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 04:40:43.300088 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-121/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0704 04:40:43.435467 20 exec_util.go:106] Exec stderr: ""
  I0704 04:40:43.435577 20 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-121 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 04:40:43.435591 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:40:43.436179 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 04:40:43.436251 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-121/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0704 04:40:43.538462 20 exec_util.go:106] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 07/04/24 04:40:43.538
  I0704 04:40:43.538952 20 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-121 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 04:40:43.539108 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:40:43.540126 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 04:40:43.540470 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-121/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0704 04:40:43.641355 20 exec_util.go:106] Exec stderr: ""
  I0704 04:40:43.641546 20 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-121 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 04:40:43.641611 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:40:43.642969 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 04:40:43.643173 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-121/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0704 04:40:43.759551 20 exec_util.go:106] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 07/04/24 04:40:43.759
  I0704 04:40:43.759659 20 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-121 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 04:40:43.759728 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:40:43.760629 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 04:40:43.760699 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-121/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  E0704 04:40:43.783640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:40:43.856524 20 exec_util.go:106] Exec stderr: ""
  I0704 04:40:43.856718 20 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-121 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 04:40:43.856747 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:40:43.857258 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 04:40:43.857325 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-121/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0704 04:40:44.043729 20 exec_util.go:106] Exec stderr: ""
  I0704 04:40:44.043788 20 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-121 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 04:40:44.048193 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:40:44.049428 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 04:40:44.049900 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-121/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0704 04:40:44.164621 20 exec_util.go:106] Exec stderr: ""
  I0704 04:40:44.165752 20 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-121 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 04:40:44.166392 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:40:44.168054 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 04:40:44.168670 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-121/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0704 04:40:44.286011 20 exec_util.go:106] Exec stderr: ""
  I0704 04:40:44.286672 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-121" for this suite. @ 07/04/24 04:40:44.298
â€¢ [5.253 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 07/04/24 04:40:44.316
  I0704 04:40:44.316601 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename daemonsets @ 07/04/24 04:40:44.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:40:44.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:40:44.355
  I0704 04:40:44.374844 20 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 07/04/24 04:40:44.382
  I0704 04:40:44.386427 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0704 04:40:44.386465 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 07/04/24 04:40:44.386
  I0704 04:40:44.407579 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0704 04:40:44.411871 20 fixtures.go:130] Node 18.118.109.209 is running 0 daemon pod, expected 1
  E0704 04:40:44.783797      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:40:45.405390 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0704 04:40:45.405427 20 fixtures.go:130] Node 18.118.109.209 is running 0 daemon pod, expected 1
  E0704 04:40:45.783932      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:40:46.405380 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0704 04:40:46.405438 20 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 07/04/24 04:40:46.41
  I0704 04:40:46.434940 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0704 04:40:46.435522 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0704 04:40:46.784724      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:40:47.432040 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0704 04:40:47.433848 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 07/04/24 04:40:47.433
  I0704 04:40:47.446789 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0704 04:40:47.446929 20 fixtures.go:130] Node 18.118.109.209 is running 0 daemon pod, expected 1
  E0704 04:40:47.786373      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:40:48.445098 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0704 04:40:48.445253 20 fixtures.go:130] Node 18.118.109.209 is running 0 daemon pod, expected 1
  E0704 04:40:48.789696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:40:49.445444 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0704 04:40:49.445489 20 fixtures.go:130] Node 18.118.109.209 is running 0 daemon pod, expected 1
  E0704 04:40:49.789888      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:40:50.454302 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0704 04:40:50.454344 20 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/04/24 04:40:50.472
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1832, will wait for the garbage collector to delete the pods @ 07/04/24 04:40:50.472
  I0704 04:40:50.531322 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.429522ms
  I0704 04:40:50.632334 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.009229ms
  E0704 04:40:50.790934      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:51.791751      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:52.792725      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:40:53.136717 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0704 04:40:53.136760 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0704 04:40:53.139117 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32695"},"items":null}

  I0704 04:40:53.150473 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32695"},"items":null}

  I0704 04:40:53.190861 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1832" for this suite. @ 07/04/24 04:40:53.194
â€¢ [8.883 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 07/04/24 04:40:53.2
  I0704 04:40:53.200258 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename security-context @ 07/04/24 04:40:53.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:40:53.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:40:53.219
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/04/24 04:40:53.222
  E0704 04:40:53.793318      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:54.793643      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:55.794329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:56.794366      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:40:57.242
  I0704 04:40:57.244768 20 output.go:196] Trying to get logs from node 3.142.51.114 pod security-context-c40ce363-d101-4600-a953-c70a8d3b69d3 container test-container: <nil>
  STEP: delete the pod @ 07/04/24 04:40:57.258
  I0704 04:40:57.286568 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-9163" for this suite. @ 07/04/24 04:40:57.292
â€¢ [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 07/04/24 04:40:57.306
  I0704 04:40:57.306353 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename pods @ 07/04/24 04:40:57.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:40:57.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:40:57.322
  E0704 04:40:57.794473      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:58.794530      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:40:59.795248      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:00.795965      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:01.796257      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:02.796386      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:41:03.416
  I0704 04:41:03.419170 20 output.go:196] Trying to get logs from node 18.191.27.132 pod client-envvars-b6717a05-c95a-4b5a-b7df-10f1f49e3530 container env3cont: <nil>
  STEP: delete the pod @ 07/04/24 04:41:03.431
  I0704 04:41:03.471351 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2400" for this suite. @ 07/04/24 04:41:03.476
â€¢ [6.187 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 07/04/24 04:41:03.494
  I0704 04:41:03.494168 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename container-probe @ 07/04/24 04:41:03.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:41:03.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:41:03.621
  STEP: Creating pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180 @ 07/04/24 04:41:03.625
  E0704 04:41:03.796493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:04.797069      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:05.798200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:06.798307      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/04/24 04:41:07.653
  I0704 04:41:07.655757 20 container_probe.go:1749] Initial restart count of pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 is 0
  I0704 04:41:07.658192 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:41:07.798416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:08.798728      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:41:09.661323 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:41:09.799666      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:10.799775      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:41:11.664514 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:41:11.800800      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:12.801202      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:41:13.668753 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:41:13.801596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:14.802179      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:41:15.676806 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:41:15.802747      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:16.802853      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:41:17.680315 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:41:17.803488      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:18.803616      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:41:19.683502 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:41:19.803671      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:20.804689      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:41:21.686927 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:41:21.805200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:22.805463      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:41:23.690638 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:41:23.805848      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:24.806419      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:41:25.694040 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:41:25.807240      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:26.807610      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:41:27.697694 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:41:27.807990      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:28.808412      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:41:29.702600 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:41:29.809774      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:30.810389      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:41:31.705930 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:41:31.811335      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:32.811404      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:41:33.710215 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:41:33.812347      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:34.812468      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:41:35.715206 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:41:35.813261      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:36.813502      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:41:37.719856 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:41:37.813975      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:38.814212      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:41:39.723813 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:41:39.814970      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:40.815186      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:41:41.732284 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:41:41.815367      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:42.815648      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:41:43.736575 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:41:43.816663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:44.816803      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:41:45.739469 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:41:45.817563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:46.817700      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:41:47.743978 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:41:47.818155      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:48.818325      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:41:49.748300 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:41:49.819117      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:50.819071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:41:51.754693 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:41:51.819868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:52.819974      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:41:53.759767 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:41:53.820988      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:54.821222      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:41:55.763561 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:41:55.821707      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:56.821959      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:41:57.767938 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:41:57.823004      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:41:58.823136      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:41:59.772150 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:41:59.823514      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:00.823623      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:01.778977 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:01.824400      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:02.824670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:03.783900 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:03.824956      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:04.825181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:05.788685 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:05.825798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:06.825937      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:07.791878 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:07.827811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:08.826143      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:09.794948 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:09.827136      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:10.827299      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:11.800944 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:11.828092      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:12.829012      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:13.804671 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:13.829685      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:14.829986      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:15.809964 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:15.830075      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:16.830255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:17.816390 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:17.830893      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:18.830991      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:19.821214 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:19.831356      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:20.831538      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:21.828752 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:21.831886      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:22.832079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:23.832424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:23.833160 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:24.832979      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:25.833028      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:25.837325 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:26.834117      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:27.834261      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:27.840256 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:28.834460      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:29.834689      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:29.846013 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:30.834835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:31.835125      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:31.849734 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:32.835691      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:33.835745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:33.854712 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:34.835866      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:35.836706      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:35.858186 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:36.836858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:37.837298      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:37.862744 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:38.837460      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:39.837697      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:39.866118 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:40.837827      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:41.839092      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:41.870502 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:42.838576      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:43.839120      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:43.880286 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:44.839365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:45.839813      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:45.888429 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:46.839983      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:47.840217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:47.893332 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:48.840596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:49.841135      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:49.903868 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:50.841150      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:51.842090      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:51.907440 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:52.842051      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:53.842500      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:53.912222 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:54.842603      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:55.843576      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:55.915767 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:56.843654      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:57.844818      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:57.919149 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:42:58.844945      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:42:59.845138      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:42:59.923665 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:00.845594      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:01.845675      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:01.927979 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:02.845800      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:03.846436      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:03.933123 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:04.847524      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:05.847864      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:05.938755 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:06.848697      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:07.848865      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:07.944667 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:08.849697      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:09.850615      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:09.948453 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:10.850783      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:11.850880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:11.952553 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:12.851240      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:13.851540      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:13.958336 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:14.852598      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:15.852981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:15.962367 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:16.853383      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:17.853791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:17.966428 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:18.854774      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:19.854922      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:19.970517 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:20.855092      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:21.856507      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:21.974035 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:22.856814      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:23.857276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:23.987813 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:24.857328      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:25.857454      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:25.992864 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:26.857900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:27.858065      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:27.998694 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:28.858126      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:29.858262      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:30.011076 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:30.858775      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:31.858836      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:32.018313 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:32.859025      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:33.859766      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:34.023910 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:34.859916      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:35.860197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:36.030364 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:36.861242      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:37.861429      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:38.036180 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:38.861578      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:39.861816      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:40.042987 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:40.862578      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:41.863202      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:42.056117 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:42.862797      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:43.863408      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:44.060360 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:44.863526      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:45.863631      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:46.067082 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:46.864701      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:47.864904      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:48.079199 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:48.865092      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:49.865327      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:50.083965 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:50.865609      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:51.865915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:52.087642 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:52.866054      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:53.866681      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:54.093233 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:54.867141      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:55.867207      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:56.096806 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:56.867663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:57.868839      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:43:58.102075 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:43:58.869056      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:43:59.869224      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:00.105975 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:00.869376      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:01.869819      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:02.110229 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:02.869944      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:03.870539      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:04.117874 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:04.870783      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:05.870837      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:06.123520 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:06.871021      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:07.871329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:08.127330 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:08.871507      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:09.871714      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:10.132441 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:10.872254      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:11.872539      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:12.135977 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:12.873104      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:13.873210      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:14.139986 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:14.873426      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:15.873585      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:16.144196 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:16.873580      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:17.873824      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:18.147988 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:18.873920      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:19.874125      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:20.153002 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:20.875691      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:21.876250      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:22.160140 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:22.876762      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:23.876898      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:24.168025 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:24.877971      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:25.878452      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:26.172701 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:26.878390      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:27.878526      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:28.176345 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:28.878670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:29.879139      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:30.182200 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:30.879727      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:31.879882      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:32.189910 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:32.880161      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:33.880474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:34.197512 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:34.880618      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:35.880860      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:36.203429 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:36.880975      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:37.881231      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:38.217961 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:38.881353      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:39.881475      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:40.221652 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:40.886295      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:41.886466      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:42.225002 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:42.888290      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:43.888727      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:44.228344 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:44.889008      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:45.889249      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:46.231927 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:46.889997      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:47.890333      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:48.236040 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:48.890801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:49.890951      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:50.239704 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:50.891091      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:51.891292      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:52.243673 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:52.891382      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:53.892242      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:54.248330 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:54.892743      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:55.893303      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:56.252398 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:56.894093      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:57.894266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:44:58.256020 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:44:58.894410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:44:59.894569      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:45:00.260904 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:45:00.894582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:01.895314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:45:02.268498 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:45:02.896209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:03.896822      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:45:04.272414 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:45:04.897088      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:05.897301      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:45:06.275812 20 container_probe.go:1759] Get pod test-webserver-178c04e0-48ee-4765-804c-21858eacf851 in namespace container-probe-5180
  E0704 04:45:06.897394      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:07.897597      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/04/24 04:45:08.277
  I0704 04:45:08.333893 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5180" for this suite. @ 07/04/24 04:45:08.358
â€¢ [244.872 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 07/04/24 04:45:08.367
  I0704 04:45:08.367499 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename statefulset @ 07/04/24 04:45:08.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:45:08.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:45:08.454
  STEP: Creating service test in namespace statefulset-3177 @ 07/04/24 04:45:08.458
  STEP: Looking for a node to schedule stateful set and pod @ 07/04/24 04:45:08.463
  STEP: Creating pod with conflicting port in namespace statefulset-3177 @ 07/04/24 04:45:08.477
  STEP: Waiting until pod test-pod will start running in namespace statefulset-3177 @ 07/04/24 04:45:08.494
  E0704 04:45:08.898229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:09.898476      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-3177 @ 07/04/24 04:45:10.501
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-3177 @ 07/04/24 04:45:10.509
  I0704 04:45:10.531228 20 statefulset.go:866] Observed stateful pod in namespace: statefulset-3177, name: ss-0, uid: 07ec5d32-df8a-468d-8682-e47d89965639, status phase: Pending. Waiting for statefulset controller to delete.
  I0704 04:45:10.554990 20 statefulset.go:866] Observed stateful pod in namespace: statefulset-3177, name: ss-0, uid: 07ec5d32-df8a-468d-8682-e47d89965639, status phase: Failed. Waiting for statefulset controller to delete.
  I0704 04:45:10.571021 20 statefulset.go:866] Observed stateful pod in namespace: statefulset-3177, name: ss-0, uid: 07ec5d32-df8a-468d-8682-e47d89965639, status phase: Failed. Waiting for statefulset controller to delete.
  I0704 04:45:10.589734 20 statefulset.go:860] Observed delete event for stateful pod ss-0 in namespace statefulset-3177
  STEP: Removing pod with conflicting port in namespace statefulset-3177 @ 07/04/24 04:45:10.589
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-3177 and will be in running state @ 07/04/24 04:45:10.658
  E0704 04:45:10.899393      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:11.899670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:45:12.681220 20 statefulset.go:135] Deleting all statefulset in ns statefulset-3177
  I0704 04:45:12.685020 20 rest.go:150] Scaling statefulset ss to 0
  E0704 04:45:12.900185      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:13.901801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:14.902029      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:15.902492      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:16.902546      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:17.903549      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:18.903636      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:19.903750      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:20.904689      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:21.904829      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:45:22.728366 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0704 04:45:22.740437 20 rest.go:88] Deleting statefulset ss
  I0704 04:45:22.779064 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3177" for this suite. @ 07/04/24 04:45:22.789
â€¢ [14.446 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 07/04/24 04:45:22.814
  I0704 04:45:22.814267 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename secrets @ 07/04/24 04:45:22.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:45:22.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:45:22.841
  STEP: Creating secret with name secret-test-map-c57e22cf-b511-480c-b87a-206b74f70841 @ 07/04/24 04:45:22.844
  STEP: Creating a pod to test consume secrets @ 07/04/24 04:45:22.849
  E0704 04:45:22.905683      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:23.906149      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:24.906939      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:25.907230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:45:26.876
  I0704 04:45:26.880003 20 output.go:196] Trying to get logs from node 18.191.27.132 pod pod-secrets-ed47b20e-7c4b-4a82-a453-663836e990ee container secret-volume-test: <nil>
  STEP: delete the pod @ 07/04/24 04:45:26.898
  E0704 04:45:26.913313      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:45:26.916341 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5376" for this suite. @ 07/04/24 04:45:26.929
â€¢ [4.132 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 07/04/24 04:45:26.945
  I0704 04:45:26.945251 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename resourcequota @ 07/04/24 04:45:26.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:45:26.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:45:26.984
  STEP: Counting existing ResourceQuota @ 07/04/24 04:45:26.997
  E0704 04:45:27.914255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:28.914544      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:29.917582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:30.915687      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:31.916629      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/04/24 04:45:32.002
  STEP: Ensuring resource quota status is calculated @ 07/04/24 04:45:32.013
  E0704 04:45:32.916897      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:33.917504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 07/04/24 04:45:34.018
  STEP: Ensuring resource quota status captures replication controller creation @ 07/04/24 04:45:34.039
  E0704 04:45:34.917609      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:35.917766      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 07/04/24 04:45:36.046
  STEP: Ensuring resource quota status released usage @ 07/04/24 04:45:36.056
  E0704 04:45:36.917930      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:37.918069      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:45:38.059931 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8056" for this suite. @ 07/04/24 04:45:38.064
â€¢ [11.138 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 07/04/24 04:45:38.083
  I0704 04:45:38.083547 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename runtimeclass @ 07/04/24 04:45:38.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:45:38.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:45:38.1
  STEP: getting /apis @ 07/04/24 04:45:38.103
  STEP: getting /apis/node.k8s.io @ 07/04/24 04:45:38.108
  STEP: getting /apis/node.k8s.io/v1 @ 07/04/24 04:45:38.109
  STEP: creating @ 07/04/24 04:45:38.11
  STEP: watching @ 07/04/24 04:45:38.129
  I0704 04:45:38.129267 20 runtimeclass.go:275] starting watch
  STEP: getting @ 07/04/24 04:45:38.135
  STEP: listing @ 07/04/24 04:45:38.147
  STEP: patching @ 07/04/24 04:45:38.155
  STEP: updating @ 07/04/24 04:45:38.162
  I0704 04:45:38.168510 20 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 07/04/24 04:45:38.168
  STEP: deleting a collection @ 07/04/24 04:45:38.178
  I0704 04:45:38.188663 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-730" for this suite. @ 07/04/24 04:45:38.191
â€¢ [0.120 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 07/04/24 04:45:38.204
  I0704 04:45:38.204147 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename resourcequota @ 07/04/24 04:45:38.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:45:38.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:45:38.219
  STEP: Counting existing ResourceQuota @ 07/04/24 04:45:38.226
  E0704 04:45:38.919728      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:39.918504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:40.918946      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:41.919405      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:42.920452      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/04/24 04:45:43.234
  STEP: Ensuring resource quota status is calculated @ 07/04/24 04:45:43.262
  E0704 04:45:43.920668      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:44.920838      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 07/04/24 04:45:45.265
  STEP: Ensuring resource quota status captures replicaset creation @ 07/04/24 04:45:45.276
  E0704 04:45:45.920981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:46.921188      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 07/04/24 04:45:47.286
  STEP: Ensuring resource quota status released usage @ 07/04/24 04:45:47.297
  E0704 04:45:47.922137      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:48.923237      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:45:49.301146 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1936" for this suite. @ 07/04/24 04:45:49.308
â€¢ [11.110 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 07/04/24 04:45:49.313
  I0704 04:45:49.313907 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename svcaccounts @ 07/04/24 04:45:49.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:45:49.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:45:49.354
  I0704 04:45:49.373497 20 service_accounts.go:618] created pod
  E0704 04:45:49.923373      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:50.923669      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:51.924457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:52.924514      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:45:53.387
  E0704 04:45:53.925159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:54.925294      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:55.925418      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:56.925538      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:57.925692      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:58.925780      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:45:59.926753      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:00.927005      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:01.927193      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:02.927301      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:03.927690      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:04.928712      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:05.931049      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:06.929030      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:07.929380      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:08.929453      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:09.929703      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:10.930262      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:11.930573      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:12.930755      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:13.930964      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:14.931174      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:15.931335      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:16.932582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:17.932724      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:18.933079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:19.935995      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:20.936685      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:21.937081      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:22.937301      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:46:23.387960 20 service_accounts.go:624] polling logs
  I0704 04:46:23.415990 20 service_accounts.go:634] Pod logs: 
  I0704 04:45:50.467401       1 log.go:245] OK: Got token
  I0704 04:45:50.467542       1 log.go:245] validating with in-cluster discovery
  I0704 04:45:50.467909       1 log.go:245] OK: got issuer https://18.191.27.132:6443
  I0704 04:45:50.467944       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://18.191.27.132:6443", Subject:"system:serviceaccount:svcaccounts-4546:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000454e50), NotBefore:(*jwt.NumericDate)(0xc000454f40), IssuedAt:(*jwt.NumericDate)(0xc000454e60), ID:"427e9a03-148c-49fe-918e-d7c0a646ab31"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4546", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"4b55f4dd-00d6-4575-aae7-2d0b7f7ad9ff"}}}
  I0704 04:45:50.476592       1 log.go:245] OK: Constructed OIDC provider for issuer https://18.191.27.132:6443
  I0704 04:45:50.481248       1 log.go:245] OK: Validated signature on JWT
  I0704 04:45:50.481340       1 log.go:245] OK: Got valid claims from token!
  I0704 04:45:50.481372       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://18.191.27.132:6443", Subject:"system:serviceaccount:svcaccounts-4546:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000013710), NotBefore:(*jwt.NumericDate)(0xc000013738), IssuedAt:(*jwt.NumericDate)(0xc000013718), ID:"427e9a03-148c-49fe-918e-d7c0a646ab31"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4546", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"4b55f4dd-00d6-4575-aae7-2d0b7f7ad9ff"}}}

  I0704 04:46:23.416064 20 service_accounts.go:638] completed pod
  I0704 04:46:23.420292 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4546" for this suite. @ 07/04/24 04:46:23.423
â€¢ [34.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 07/04/24 04:46:23.429
  I0704 04:46:23.429690 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename pods @ 07/04/24 04:46:23.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:46:23.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:46:23.455
  STEP: creating the pod @ 07/04/24 04:46:23.458
  STEP: setting up watch @ 07/04/24 04:46:23.458
  STEP: submitting the pod to kubernetes @ 07/04/24 04:46:23.562
  STEP: verifying the pod is in kubernetes @ 07/04/24 04:46:23.582
  STEP: verifying pod creation was observed @ 07/04/24 04:46:23.588
  E0704 04:46:23.938353      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:24.938601      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:25.939520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:26.939630      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 07/04/24 04:46:27.607
  STEP: verifying pod deletion was observed @ 07/04/24 04:46:27.615
  E0704 04:46:27.940751      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:46:28.773694 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1005" for this suite. @ 07/04/24 04:46:28.781
â€¢ [5.360 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 07/04/24 04:46:28.79
  I0704 04:46:28.790426 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename gc @ 07/04/24 04:46:28.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:46:28.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:46:28.808
  STEP: create the deployment @ 07/04/24 04:46:28.81
  W0704 04:46:28.817517      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/04/24 04:46:28.817
  E0704 04:46:28.941020      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 07/04/24 04:46:29.329
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 07/04/24 04:46:29.354
  STEP: Gathering metrics @ 07/04/24 04:46:29.895
  W0704 04:46:29.903267      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0704 04:46:29.903316 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0704 04:46:29.903609 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5195" for this suite. @ 07/04/24 04:46:29.911
â€¢ [1.127 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 07/04/24 04:46:29.917
  I0704 04:46:29.917693 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename webhook @ 07/04/24 04:46:29.918
  E0704 04:46:29.941457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:46:29.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:46:29.946
  STEP: Setting up server cert @ 07/04/24 04:46:29.99
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/04/24 04:46:30.761
  STEP: Deploying the webhook pod @ 07/04/24 04:46:30.768
  STEP: Wait for the deployment to be ready @ 07/04/24 04:46:30.797
  I0704 04:46:30.806991 20 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0704 04:46:30.942245      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:31.943192      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/04/24 04:46:32.815
  STEP: Verifying the service has paired with the endpoint @ 07/04/24 04:46:32.824
  E0704 04:46:32.944197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:46:33.825083 20 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 07/04/24 04:46:33.835
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 07/04/24 04:46:33.838
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 07/04/24 04:46:33.838
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 07/04/24 04:46:33.839
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 07/04/24 04:46:33.841
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/04/24 04:46:33.841
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/04/24 04:46:33.844
  E0704 04:46:33.944767      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:46:33.976162 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6857" for this suite. @ 07/04/24 04:46:33.994
  STEP: Destroying namespace "webhook-markers-9879" for this suite. @ 07/04/24 04:46:34.025
â€¢ [4.168 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 07/04/24 04:46:34.086
  I0704 04:46:34.086057 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename disruption @ 07/04/24 04:46:34.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:46:34.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:46:34.144
  STEP: Waiting for the pdb to be processed @ 07/04/24 04:46:34.178
  STEP: Waiting for all pods to be running @ 07/04/24 04:46:34.268
  I0704 04:46:34.290564 20 disruption.go:578] running pods: 0 < 3
  E0704 04:46:34.944903      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:35.944947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:46:36.271401 20 disruption.go:578] running pods: 2 < 3
  E0704 04:46:36.945088      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:37.945316      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:46:38.276185 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2963" for this suite. @ 07/04/24 04:46:38.279
â€¢ [4.204 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 07/04/24 04:46:38.29
  I0704 04:46:38.290131 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename watch @ 07/04/24 04:46:38.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:46:38.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:46:38.319
  STEP: creating a new configmap @ 07/04/24 04:46:38.322
  STEP: modifying the configmap once @ 07/04/24 04:46:38.326
  STEP: modifying the configmap a second time @ 07/04/24 04:46:38.332
  STEP: deleting the configmap @ 07/04/24 04:46:38.339
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 07/04/24 04:46:38.346
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 07/04/24 04:46:38.348
  I0704 04:46:38.349006 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1363  0c56938e-d907-40b2-ad59-49bb65597cf4 33701 0 2024-07-04 04:46:38 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-07-04 04:46:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0704 04:46:38.349268 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1363  0c56938e-d907-40b2-ad59-49bb65597cf4 33702 0 2024-07-04 04:46:38 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-07-04 04:46:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0704 04:46:38.349456 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1363" for this suite. @ 07/04/24 04:46:38.353
â€¢ [0.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 07/04/24 04:46:38.361
  I0704 04:46:38.361557 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 04:46:38.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:46:38.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:46:38.385
  STEP: Creating configMap with name configmap-projected-all-test-volume-564c0793-7e3b-4506-8187-9745c6a54a23 @ 07/04/24 04:46:38.39
  STEP: Creating secret with name secret-projected-all-test-volume-b60ede8f-4094-4cb5-8f70-097dac5a345f @ 07/04/24 04:46:38.395
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 07/04/24 04:46:38.399
  E0704 04:46:38.945538      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:39.945891      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:40.946021      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:41.946107      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:46:42.423
  I0704 04:46:42.426340 20 output.go:196] Trying to get logs from node 3.142.51.114 pod projected-volume-8af3aee0-a380-44b2-9f3a-27c6d17074c8 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 07/04/24 04:46:42.437
  I0704 04:46:42.451610 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1264" for this suite. @ 07/04/24 04:46:42.455
â€¢ [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 07/04/24 04:46:42.461
  I0704 04:46:42.461603 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename resourcequota @ 07/04/24 04:46:42.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:46:42.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:46:42.481
  STEP: Counting existing ResourceQuota @ 07/04/24 04:46:42.485
  E0704 04:46:42.946558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:43.947540      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:44.948337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:45.949035      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:46.949197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/04/24 04:46:47.488
  STEP: Ensuring resource quota status is calculated @ 07/04/24 04:46:47.494
  E0704 04:46:47.949716      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:48.949885      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 07/04/24 04:46:49.497
  STEP: Ensuring ResourceQuota status captures the pod usage @ 07/04/24 04:46:49.518
  E0704 04:46:49.950592      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:50.950739      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 07/04/24 04:46:51.522
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 07/04/24 04:46:51.525
  STEP: Ensuring a pod cannot update its resource requirements @ 07/04/24 04:46:51.527
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 07/04/24 04:46:51.532
  E0704 04:46:51.951752      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:52.951948      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/04/24 04:46:53.536
  STEP: Ensuring resource quota status released the pod usage @ 07/04/24 04:46:53.547
  E0704 04:46:53.952001      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:54.952204      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:46:55.552158 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6482" for this suite. @ 07/04/24 04:46:55.556
â€¢ [13.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 07/04/24 04:46:55.566
  I0704 04:46:55.566025 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename tables @ 07/04/24 04:46:55.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:46:55.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:46:55.59
  I0704 04:46:55.595939 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-2598" for this suite. @ 07/04/24 04:46:55.599
â€¢ [0.039 seconds]
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 07/04/24 04:46:55.605
  I0704 04:46:55.606079 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename dns @ 07/04/24 04:46:55.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:46:55.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:46:55.625
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/04/24 04:46:55.628
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/04/24 04:46:55.628
  STEP: creating a pod to probe DNS @ 07/04/24 04:46:55.628
  STEP: submitting the pod to kubernetes @ 07/04/24 04:46:55.628
  E0704 04:46:55.952920      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:56.953482      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/04/24 04:46:57.653
  STEP: looking for the results for each expected name from probers @ 07/04/24 04:46:57.656
  I0704 04:46:57.677776 20 dns_common.go:527] DNS probes using dns-4655/dns-test-19a9b626-77ee-4153-87c5-801d4fdbd3cc succeeded

  STEP: deleting the pod @ 07/04/24 04:46:57.677
  I0704 04:46:57.698205 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4655" for this suite. @ 07/04/24 04:46:57.701
â€¢ [2.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 07/04/24 04:46:57.711
  I0704 04:46:57.711210 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename container-probe @ 07/04/24 04:46:57.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:46:57.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:46:57.741
  STEP: Creating pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824 @ 07/04/24 04:46:57.747
  E0704 04:46:57.954429      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:46:58.954624      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/04/24 04:46:59.773
  I0704 04:46:59.781115 20 container_probe.go:1749] Initial restart count of pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 is 0
  I0704 04:46:59.785434 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:46:59.954639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:00.955182      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:01.789485 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:01.955818      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:02.955903      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:03.792999 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:03.958054      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:04.957987      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:05.795827 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:05.958171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:06.958419      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:07.799964 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:07.959016      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:08.959542      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:09.803144 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:09.960501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:10.960754      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:11.806886 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:11.961582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:12.962031      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:13.810513 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:13.962789      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:14.962947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:15.814207 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:15.963433      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:16.963671      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:17.817785 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:17.964025      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:18.964546      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:19.822037 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:19.965079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:20.965240      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:21.827685 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:21.965928      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:22.966232      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:23.835710 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:23.966846      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:24.967021      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:25.845251 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:25.967417      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:26.967726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:27.848812 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:27.968105      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:28.968559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:29.853064 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:29.969080      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:30.969670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:31.866210 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:31.970225      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:32.970555      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:33.869848 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:33.971041      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:34.971225      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:35.883118 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:35.971298      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:36.971634      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:37.886358 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:37.972678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:38.973253      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:39.892081 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:39.974210      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:40.974559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:41.895248 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:41.976855      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:42.977886      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:43.901901 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:43.978201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:44.978519      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:45.904898 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:45.979048      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:46.979247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:47.910401 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:47.979499      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:48.979615      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:49.921204 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:49.980477      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:50.980708      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:51.928715 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:51.980862      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:52.980969      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:53.935763 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:53.982161      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:54.983205      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:55.944584 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:55.983563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:56.983641      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:57.949237 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:57.984392      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:47:58.984504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:47:59.952532 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:47:59.984888      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:00.985608      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:01.956532 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:01.985680      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:02.985980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:03.966445 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:03.990917      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:04.992403      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:05.971284 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:05.991457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:06.991666      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:07.974883 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:07.992134      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:08.992275      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:09.978425 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:09.992341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:10.992611      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:11.981855 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:11.993083      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:12.993187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:14.002388      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:14.015753 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:15.002418      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:16.002650      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:16.018939 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:17.002760      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:18.002883      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:18.023522 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:19.003495      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:20.003698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:20.028402 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:21.004785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:22.004885      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:22.032690 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:23.005114      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:24.005538      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:24.041994 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:25.005576      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:26.005889      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:26.047259 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:27.006013      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:28.006257      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:28.051429 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:29.006491      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:30.010037      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:30.056035 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:31.011070      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:32.011227      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:32.060074 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:33.011625      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:34.012449      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:34.064458 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:35.013490      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:36.013991      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:36.069127 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:37.014111      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:38.014502      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:38.073952 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:39.014618      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:40.014725      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:40.078067 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:41.014921      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:42.015275      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:42.081783 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:43.015615      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:44.015691      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:44.094196 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:45.015823      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:46.015976      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:46.097794 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:47.016156      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:48.016807      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:48.106287 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:49.016991      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:50.017361      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:50.109913 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:51.017375      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:52.017584      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:52.113640 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:53.017690      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:54.017846      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:54.127610 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:55.018002      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:56.018162      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:56.131374 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:57.019833      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:48:58.019689      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:48:58.135686 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:48:59.019779      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:00.019991      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:00.140321 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:01.020901      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:02.021379      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:02.145019 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:03.021545      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:04.021812      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:04.149582 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:05.021821      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:06.022088      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:06.153598 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:07.022255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:08.022848      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:08.160311 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:09.023346      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:10.023606      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:10.164356 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:11.023679      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:12.023741      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:12.168615 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:13.024543      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:14.025899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:14.172944 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:15.026045      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:16.026428      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:16.178389 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:17.026628      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:18.027165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:18.184341 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:19.027144      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:20.027386      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:20.187695 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:21.027521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:22.027656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:22.191584 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:23.028459      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:24.028550      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:24.195649 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:25.028670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:26.029085      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:26.200546 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:27.029356      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:28.029776      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:28.216519 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:29.029929      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:30.030283      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:30.226240 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:31.030356      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:32.031396      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:32.230443 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:33.032497      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:34.033625      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:34.235577 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:35.033254      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:36.033379      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:36.239590 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:37.034114      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:38.034354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:38.243339 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:39.034414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:40.034743      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:40.247490 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:41.035113      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:42.034970      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:42.254816 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:43.035587      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:44.035715      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:44.265976 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:45.036692      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:46.037086      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:46.270014 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:47.037110      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:48.037201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:48.273714 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:49.037536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:50.037718      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:50.281581 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:51.038148      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:52.038239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:52.288610 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:53.038345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:54.038606      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:54.292591 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:55.039152      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:56.039277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:56.296430 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:57.040241      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:49:58.040416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:49:58.300729 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:49:59.041323      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:00.041586      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:00.307589 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:01.042247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:02.043222      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:02.310740 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:03.043341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:04.043637      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:04.314332 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:05.043798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:06.044710      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:06.323557 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:07.044849      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:08.045045      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:08.327202 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:09.045136      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:10.045242      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:10.331078 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:11.046075      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:12.046270      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:12.339668 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:13.046403      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:14.046812      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:14.343517 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:15.047359      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:16.047651      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:16.347184 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:17.047947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:18.048083      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:18.350648 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:19.048297      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:20.049076      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:20.356068 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:21.049852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:22.050337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:22.360009 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:23.050840      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:24.051017      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:24.364736 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:25.051875      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:26.052167      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:26.376176 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:27.052362      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:28.052493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:28.381264 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:29.052900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:30.053154      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:30.385839 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:31.053514      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:32.054033      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:32.390974 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:33.054705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:34.054857      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:34.396777 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:35.055391      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:36.055757      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:36.400257 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:37.055855      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:38.056764      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:38.403662 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:39.057988      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:40.057881      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:40.408161 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:41.058954      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:42.059314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:42.411795 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:43.059640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:44.060377      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:44.416912 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:45.060473      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:46.060792      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:46.420490 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:47.060959      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:48.061099      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:48.423773 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:49.061275      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:50.061442      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:50.426665 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:51.062461      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:52.062800      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:52.433078 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:53.063857      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:54.064720      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:54.437684 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:55.065757      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:56.065790      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:56.441266 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:57.066124      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:50:58.066752      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:50:58.444786 20 container_probe.go:1759] Get pod liveness-61b0f64c-cba8-4e6a-8b16-a164523c7b71 in namespace container-probe-7824
  E0704 04:50:59.066854      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:00.066999      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/04/24 04:51:00.445
  I0704 04:51:00.467206 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7824" for this suite. @ 07/04/24 04:51:00.479
â€¢ [242.775 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 07/04/24 04:51:00.489
  I0704 04:51:00.489318 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 04:51:00.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:51:00.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:51:00.533
  STEP: Creating configMap with name cm-test-opt-del-caae122a-84e5-48f5-82eb-f3ce6d12c857 @ 07/04/24 04:51:00.547
  STEP: Creating configMap with name cm-test-opt-upd-f6146f9e-7204-4797-961d-9162f8825eda @ 07/04/24 04:51:00.553
  STEP: Creating the pod @ 07/04/24 04:51:00.558
  E0704 04:51:01.068032      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:02.068432      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-caae122a-84e5-48f5-82eb-f3ce6d12c857 @ 07/04/24 04:51:02.624
  STEP: Updating configmap cm-test-opt-upd-f6146f9e-7204-4797-961d-9162f8825eda @ 07/04/24 04:51:02.631
  STEP: Creating configMap with name cm-test-opt-create-9961ec56-2f77-46a4-b5cc-0faed5a64b3e @ 07/04/24 04:51:02.636
  STEP: waiting to observe update in volume @ 07/04/24 04:51:02.642
  E0704 04:51:03.069447      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:04.069521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:51:04.673424 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6018" for this suite. @ 07/04/24 04:51:04.677
â€¢ [4.195 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 07/04/24 04:51:04.684
  I0704 04:51:04.684620 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename webhook @ 07/04/24 04:51:04.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:51:04.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:51:04.706
  STEP: Setting up server cert @ 07/04/24 04:51:04.728
  E0704 04:51:05.069828      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/04/24 04:51:05.124
  STEP: Deploying the webhook pod @ 07/04/24 04:51:05.135
  STEP: Wait for the deployment to be ready @ 07/04/24 04:51:05.147
  I0704 04:51:05.155620 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0704 04:51:06.070169      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:07.070544      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:51:07.163974 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 4, 4, 51, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 4, 51, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 4, 4, 51, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 4, 4, 51, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0704 04:51:08.070779      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:09.071298      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/04/24 04:51:09.172
  STEP: Verifying the service has paired with the endpoint @ 07/04/24 04:51:09.188
  E0704 04:51:10.071447      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:51:10.189970 20 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/04/24 04:51:10.2
  I0704 04:51:10.320184 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4382" for this suite. @ 07/04/24 04:51:10.326
  STEP: Destroying namespace "webhook-markers-7508" for this suite. @ 07/04/24 04:51:10.333
â€¢ [5.658 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 07/04/24 04:51:10.342
  I0704 04:51:10.343007 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename resourcequota @ 07/04/24 04:51:10.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:51:10.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:51:10.368
  STEP: Counting existing ResourceQuota @ 07/04/24 04:51:10.371
  E0704 04:51:11.071668      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:12.072493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:13.072653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:14.072895      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:15.072937      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/04/24 04:51:15.379
  STEP: Ensuring resource quota status is calculated @ 07/04/24 04:51:15.386
  E0704 04:51:16.073427      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:17.073541      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:51:17.390813 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9848" for this suite. @ 07/04/24 04:51:17.394
â€¢ [7.057 seconds]
------------------------------
S
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 07/04/24 04:51:17.4
  I0704 04:51:17.400987 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/04/24 04:51:17.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:51:17.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:51:17.441
  STEP: creating @ 07/04/24 04:51:17.443
  STEP: getting @ 07/04/24 04:51:17.46
  STEP: listing in namespace @ 07/04/24 04:51:17.467
  STEP: patching @ 07/04/24 04:51:17.471
  STEP: deleting @ 07/04/24 04:51:17.486
  I0704 04:51:17.497603 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2653" for this suite. @ 07/04/24 04:51:17.501
â€¢ [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 07/04/24 04:51:17.511
  I0704 04:51:17.511181 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename hostport @ 07/04/24 04:51:17.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:51:17.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:51:17.536
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 07/04/24 04:51:17.546
  E0704 04:51:18.074451      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:19.074572      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:20.075327      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:21.075498      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.16.55 on the node which pod1 resides and expect scheduled @ 07/04/24 04:51:21.582
  E0704 04:51:22.076114      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:23.076837      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.16.55 but use UDP protocol on the node which pod2 resides @ 07/04/24 04:51:23.611
  E0704 04:51:24.076866      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:25.077197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:26.077558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:27.077687      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:28.078503      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:29.078832      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 07/04/24 04:51:29.652
  I0704 04:51:29.652255 20 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.16.55 http://127.0.0.1:54323/hostname] Namespace:hostport-2159 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 04:51:29.652301 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:51:29.653867 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 04:51:29.653976 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-2159/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.16.55+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.16.55, port: 54323 @ 07/04/24 04:51:29.764
  I0704 04:51:29.764952 20 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.16.55:54323/hostname] Namespace:hostport-2159 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 04:51:29.765000 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:51:29.765687 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 04:51:29.765798 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-2159/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.16.55%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.16.55, port: 54323 UDP @ 07/04/24 04:51:29.902
  I0704 04:51:29.902569 20 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.16.55 54323] Namespace:hostport-2159 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 04:51:29.902680 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:51:29.903228 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 04:51:29.903311 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-2159/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.16.55+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0704 04:51:30.079352      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:31.079594      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:32.079721      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:33.079970      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:34.080793      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:51:35.017932 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-2159" for this suite. @ 07/04/24 04:51:35.032
â€¢ [17.536 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 07/04/24 04:51:35.048
  I0704 04:51:35.048256 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename init-container @ 07/04/24 04:51:35.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:51:35.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:51:35.069
  STEP: creating the pod @ 07/04/24 04:51:35.072
  I0704 04:51:35.072933 20 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0704 04:51:35.080882      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:36.081824      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:37.082478      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:38.082655      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:39.083595      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:51:39.087702 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3505" for this suite. @ 07/04/24 04:51:39.094
â€¢ [4.056 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 07/04/24 04:51:39.104
  I0704 04:51:39.104824 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 04:51:39.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:51:39.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:51:39.138
  STEP: Creating projection with secret that has name projected-secret-test-6d8f9972-119c-432f-9fbe-e7c1d44d15c8 @ 07/04/24 04:51:39.141
  STEP: Creating a pod to test consume secrets @ 07/04/24 04:51:39.145
  E0704 04:51:40.083670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:41.083767      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:42.083907      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:43.085073      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:51:43.251
  I0704 04:51:43.253853 20 output.go:196] Trying to get logs from node 3.142.51.114 pod pod-projected-secrets-b4f55a77-0da1-43b3-b495-1ff3c90717bc container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/04/24 04:51:43.282
  I0704 04:51:43.296926 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7901" for this suite. @ 07/04/24 04:51:43.299
â€¢ [4.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 07/04/24 04:51:43.304
  I0704 04:51:43.304337 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename container-runtime @ 07/04/24 04:51:43.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:51:43.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:51:43.371
  STEP: create the container @ 07/04/24 04:51:43.375
  W0704 04:51:43.382971      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 07/04/24 04:51:43.383
  E0704 04:51:44.084138      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:45.084238      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:46.084862      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:47.085160      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/04/24 04:51:47.408
  STEP: the container should be terminated @ 07/04/24 04:51:47.412
  STEP: the termination message should be set @ 07/04/24 04:51:47.412
  I0704 04:51:47.412207 20 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 07/04/24 04:51:47.412
  I0704 04:51:47.431227 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4203" for this suite. @ 07/04/24 04:51:47.434
â€¢ [4.141 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 07/04/24 04:51:47.446
  I0704 04:51:47.446841 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename pod-network-test @ 07/04/24 04:51:47.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:51:47.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:51:47.469
  STEP: Performing setup for networking test in namespace pod-network-test-8714 @ 07/04/24 04:51:47.472
  STEP: creating a selector @ 07/04/24 04:51:47.472
  STEP: Creating the service pods in kubernetes @ 07/04/24 04:51:47.472
  I0704 04:51:47.472940 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0704 04:51:48.085086      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:49.085595      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:50.085748      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:51.085823      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:52.087069      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:53.087176      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:54.087639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:55.088733      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:56.088956      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:57.089154      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:58.090004      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:51:59.090199      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:00.091290      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:01.091436      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:02.092093      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:03.092800      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:04.096214      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:05.093221      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:06.094298      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:07.094517      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:08.094642      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:09.095099      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/04/24 04:52:09.592
  E0704 04:52:10.095318      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:11.095418      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:12.096366      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:13.096767      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:52:13.671712 20 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0704 04:52:13.671760 20 utils.go:472] Going to poll 10.42.1.146 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0704 04:52:13.673962 20 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.1.146 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8714 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 04:52:13.674002 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:52:13.674628 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 04:52:13.674710 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-8714/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.1.146+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0704 04:52:14.097169      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:52:14.804912 20 utils.go:489] Found all 1 expected endpoints: [netserver-0]
  I0704 04:52:14.805247 20 utils.go:472] Going to poll 10.42.0.254 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0704 04:52:14.808010 20 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.0.254 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8714 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 04:52:14.808049 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:52:14.808684 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 04:52:14.808780 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-8714/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.0.254+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0704 04:52:15.097420      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:52:15.938062 20 utils.go:489] Found all 1 expected endpoints: [netserver-1]
  I0704 04:52:15.938257 20 utils.go:472] Going to poll 10.42.2.14 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0704 04:52:15.942032 20 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.2.14 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8714 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0704 04:52:15.942075 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  I0704 04:52:15.942845 20 exec_util.go:62] ExecWithOptions: Clientset creation
  I0704 04:52:15.942955 20 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-8714/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.2.14+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0704 04:52:16.098211      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:52:17.039707 20 utils.go:489] Found all 1 expected endpoints: [netserver-2]
  I0704 04:52:17.040337 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8714" for this suite. @ 07/04/24 04:52:17.043
â€¢ [29.603 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 07/04/24 04:52:17.051
  I0704 04:52:17.051400 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename security-context-test @ 07/04/24 04:52:17.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:52:17.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:52:17.078
  E0704 04:52:17.098455      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:18.098980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:19.099374      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:20.099596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:21.099717      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:22.100721      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:23.101029      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:52:23.126498 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4588" for this suite. @ 07/04/24 04:52:23.129
â€¢ [6.084 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 07/04/24 04:52:23.135
  I0704 04:52:23.135688 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename sched-preemption @ 07/04/24 04:52:23.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:52:23.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:52:23.155
  I0704 04:52:23.184099 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0704 04:52:24.101388      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:25.101277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:26.101413      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:27.101697      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:28.102681      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:29.102835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:30.102981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:31.103097      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:32.103733      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:33.103840      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:34.105172      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:35.105387      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:36.105483      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:37.105653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:38.105816      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:39.105964      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:40.106126      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:41.106279      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:42.106967      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:43.107284      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:44.107704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:45.108564      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:46.109475      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:47.109879      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:48.110130      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:49.110378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:50.110392      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:51.110806      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:52.111029      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:53.111504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:54.111588      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:55.111704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:56.111805      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:57.111971      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:58.112803      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:52:59.113748      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:00.114028      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:01.114369      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:02.114506      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:03.114906      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:04.114731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:05.114880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:06.115169      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:07.115331      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:08.115637      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:09.116953      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:10.117094      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:11.117329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:12.117601      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:13.118301      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:14.123604      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:15.123705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:16.123761      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:17.123954      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:18.124791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:19.125261      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:20.125444      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:21.125575      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:22.126018      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:23.126187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:53:23.187872 20 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/04/24 04:53:23.195
  I0704 04:53:23.243697 20 preemption.go:178] Created pod: pod0-0-sched-preemption-low-priority
  I0704 04:53:23.258688 20 preemption.go:178] Created pod: pod0-1-sched-preemption-medium-priority
  I0704 04:53:23.278139 20 preemption.go:178] Created pod: pod1-0-sched-preemption-medium-priority
  I0704 04:53:23.287425 20 preemption.go:178] Created pod: pod1-1-sched-preemption-medium-priority
  I0704 04:53:23.321260 20 preemption.go:178] Created pod: pod2-0-sched-preemption-medium-priority
  I0704 04:53:23.331770 20 preemption.go:178] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/04/24 04:53:23.331
  E0704 04:53:24.130584      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:25.130754      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:26.130902      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:27.131085      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 07/04/24 04:53:27.366
  E0704 04:53:28.131920      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:29.132945      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:30.132977      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:31.133149      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:53:31.543989 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4107" for this suite. @ 07/04/24 04:53:31.549
â€¢ [68.422 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 07/04/24 04:53:31.559
  I0704 04:53:31.559632 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 04:53:31.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:53:31.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:53:31.582
  STEP: Creating the pod @ 07/04/24 04:53:31.585
  E0704 04:53:32.134184      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:33.134016      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:34.134169      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:53:34.140077 20 pod_client.go:141] Successfully updated pod "annotationupdatefecdfd00-7915-49f1-a103-c8de5cd6288f"
  E0704 04:53:35.135080      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:36.135497      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:53:36.162296 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2400" for this suite. @ 07/04/24 04:53:36.166
â€¢ [4.614 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 07/04/24 04:53:36.177
  I0704 04:53:36.177659 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename kubelet-test @ 07/04/24 04:53:36.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:53:36.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:53:36.202
  STEP: Waiting for pod completion @ 07/04/24 04:53:36.221
  E0704 04:53:37.135791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:38.135981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:39.136167      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:40.136106      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:53:40.250288 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-779" for this suite. @ 07/04/24 04:53:40.254
â€¢ [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 07/04/24 04:53:40.262
  I0704 04:53:40.262996 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename container-probe @ 07/04/24 04:53:40.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:53:40.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:53:40.283
  E0704 04:53:41.136257      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:42.136723      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:43.137206      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:44.136876      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:45.136976      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:46.137121      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:47.137360      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:48.137705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:49.138061      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:50.138500      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:51.138627      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:52.138786      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:53.139718      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:54.139868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:55.140600      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:56.141184      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:57.141623      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:58.141643      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:53:59.142558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:00.143125      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:01.143616      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:02.143926      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:03.144759      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:04.144896      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:05.145072      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:06.145197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:07.145324      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:08.145520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:09.145682      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:10.145940      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:11.146181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:12.147248      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:13.148130      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:14.148353      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:15.149345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:16.149572      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:17.149857      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:18.150759      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:19.150877      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:20.151623      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:21.151673      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:22.151837      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:23.152278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:24.153133      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:25.154106      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:26.154608      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:27.154584      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:28.155400      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:29.155612      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:30.155732      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:31.155857      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:32.156443      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:33.156571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:34.156772      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:35.156887      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:36.157805      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:37.158857      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:38.159895      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:39.160139      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:40.161114      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:54:40.303758 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2610" for this suite. @ 07/04/24 04:54:40.306
â€¢ [60.049 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 07/04/24 04:54:40.314
  I0704 04:54:40.314547 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/04/24 04:54:40.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:54:40.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:54:40.332
  I0704 04:54:40.335260 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  E0704 04:54:41.161938      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/04/24 04:54:41.823
  I0704 04:54:41.823377 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-3662 --namespace=crd-publish-openapi-3662 create -f -'
  E0704 04:54:42.162681      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:43.162655      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:54:43.931115 20 builder.go:146] stderr: ""
  I0704 04:54:43.931164 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9127-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0704 04:54:43.931233 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-3662 --namespace=crd-publish-openapi-3662 delete e2e-test-crd-publish-openapi-9127-crds test-cr'
  I0704 04:54:44.117126 20 builder.go:146] stderr: ""
  I0704 04:54:44.117180 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9127-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0704 04:54:44.117275 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-3662 --namespace=crd-publish-openapi-3662 apply -f -'
  E0704 04:54:44.164942      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:54:44.220587 20 builder.go:146] stderr: ""
  I0704 04:54:44.220634 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9127-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0704 04:54:44.220917 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-3662 --namespace=crd-publish-openapi-3662 delete e2e-test-crd-publish-openapi-9127-crds test-cr'
  I0704 04:54:44.311600 20 builder.go:146] stderr: ""
  I0704 04:54:44.311647 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9127-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/04/24 04:54:44.311
  I0704 04:54:44.311735 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=crd-publish-openapi-3662 explain e2e-test-crd-publish-openapi-9127-crds'
  I0704 04:54:44.385578 20 builder.go:146] stderr: ""
  I0704 04:54:44.385800 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-9127-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0704 04:54:45.165444      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:54:45.891033 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3662" for this suite. @ 07/04/24 04:54:45.899
â€¢ [5.590 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 07/04/24 04:54:45.907
  I0704 04:54:45.907738 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename configmap @ 07/04/24 04:54:45.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:54:45.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:54:45.925
  STEP: Creating configMap with name configmap-test-volume-map-6df752c6-f308-4b77-876f-4273e3680410 @ 07/04/24 04:54:45.928
  STEP: Creating a pod to test consume configMaps @ 07/04/24 04:54:45.932
  E0704 04:54:46.165968      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:47.166298      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:48.167331      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:49.167675      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:54:49.951
  I0704 04:54:49.956264 20 output.go:196] Trying to get logs from node 3.142.51.114 pod pod-configmaps-5f93b6be-756a-4218-9713-437175ac5852 container agnhost-container: <nil>
  STEP: delete the pod @ 07/04/24 04:54:49.971
  I0704 04:54:50.008028 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8884" for this suite. @ 07/04/24 04:54:50.018
â€¢ [4.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 07/04/24 04:54:50.034
  I0704 04:54:50.034972 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename configmap @ 07/04/24 04:54:50.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:54:50.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:54:50.07
  STEP: Creating configMap with name configmap-test-volume-map-e59d06f3-a719-4210-8ddd-14242560fba5 @ 07/04/24 04:54:50.074
  STEP: Creating a pod to test consume configMaps @ 07/04/24 04:54:50.078
  E0704 04:54:50.168210      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:51.168170      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:52.169020      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:53.169333      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:54:54.097
  I0704 04:54:54.100700 20 output.go:196] Trying to get logs from node 18.191.27.132 pod pod-configmaps-ded9ccfc-2a2f-4c5e-8770-f25bfe107b5e container agnhost-container: <nil>
  STEP: delete the pod @ 07/04/24 04:54:54.109
  I0704 04:54:54.127890 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1259" for this suite. @ 07/04/24 04:54:54.136
â€¢ [4.108 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 07/04/24 04:54:54.143
  I0704 04:54:54.143438 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 04:54:54.151
  E0704 04:54:54.169615      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:54:54.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:54:54.252
  STEP: Creating configMap with name projected-configmap-test-volume-09103502-0414-4576-8f57-a48744c02a0f @ 07/04/24 04:54:54.255
  STEP: Creating a pod to test consume configMaps @ 07/04/24 04:54:54.26
  E0704 04:54:55.170105      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:56.170295      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:57.170413      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:54:58.170585      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:54:58.294
  I0704 04:54:58.296290 20 output.go:196] Trying to get logs from node 18.191.27.132 pod pod-projected-configmaps-282974b1-cee3-48f5-a300-7ab46f8cd8bf container agnhost-container: <nil>
  STEP: delete the pod @ 07/04/24 04:54:58.312
  I0704 04:54:58.328294 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7370" for this suite. @ 07/04/24 04:54:58.332
â€¢ [4.196 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 07/04/24 04:54:58.339
  I0704 04:54:58.339909 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename container-probe @ 07/04/24 04:54:58.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:54:58.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:54:58.372
  STEP: Creating pod liveness-fc63a9ca-7ad9-46a4-9ee8-047a9eb85b67 in namespace container-probe-9394 @ 07/04/24 04:54:58.382
  E0704 04:54:59.170737      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:00.171027      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/04/24 04:55:00.411
  I0704 04:55:00.419922 20 container_probe.go:1749] Initial restart count of pod liveness-fc63a9ca-7ad9-46a4-9ee8-047a9eb85b67 is 0
  I0704 04:55:00.425888 20 container_probe.go:1759] Get pod liveness-fc63a9ca-7ad9-46a4-9ee8-047a9eb85b67 in namespace container-probe-9394
  E0704 04:55:01.171798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:02.171959      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:55:02.433783 20 container_probe.go:1759] Get pod liveness-fc63a9ca-7ad9-46a4-9ee8-047a9eb85b67 in namespace container-probe-9394
  E0704 04:55:03.172715      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:04.172815      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:55:04.437513 20 container_probe.go:1759] Get pod liveness-fc63a9ca-7ad9-46a4-9ee8-047a9eb85b67 in namespace container-probe-9394
  E0704 04:55:05.173655      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:06.173961      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:55:06.442001 20 container_probe.go:1759] Get pod liveness-fc63a9ca-7ad9-46a4-9ee8-047a9eb85b67 in namespace container-probe-9394
  E0704 04:55:07.174783      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:08.175201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:55:08.445877 20 container_probe.go:1759] Get pod liveness-fc63a9ca-7ad9-46a4-9ee8-047a9eb85b67 in namespace container-probe-9394
  E0704 04:55:09.175685      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:10.176738      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:55:10.449105 20 container_probe.go:1759] Get pod liveness-fc63a9ca-7ad9-46a4-9ee8-047a9eb85b67 in namespace container-probe-9394
  E0704 04:55:11.176874      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:12.177181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:55:12.452711 20 container_probe.go:1759] Get pod liveness-fc63a9ca-7ad9-46a4-9ee8-047a9eb85b67 in namespace container-probe-9394
  E0704 04:55:13.177300      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:14.177435      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:55:14.455906 20 container_probe.go:1759] Get pod liveness-fc63a9ca-7ad9-46a4-9ee8-047a9eb85b67 in namespace container-probe-9394
  E0704 04:55:15.177584      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:16.178578      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:55:16.459759 20 container_probe.go:1759] Get pod liveness-fc63a9ca-7ad9-46a4-9ee8-047a9eb85b67 in namespace container-probe-9394
  E0704 04:55:17.178723      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:18.179008      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:55:18.463127 20 container_probe.go:1759] Get pod liveness-fc63a9ca-7ad9-46a4-9ee8-047a9eb85b67 in namespace container-probe-9394
  E0704 04:55:19.179049      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:20.179205      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 04:55:20.467860 20 container_probe.go:1759] Get pod liveness-fc63a9ca-7ad9-46a4-9ee8-047a9eb85b67 in namespace container-probe-9394
  I0704 04:55:20.467910 20 container_probe.go:1763] Restart count of pod container-probe-9394/liveness-fc63a9ca-7ad9-46a4-9ee8-047a9eb85b67 is now 1 (20.047944409s elapsed)
  STEP: deleting the pod @ 07/04/24 04:55:20.468
  I0704 04:55:20.479972 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9394" for this suite. @ 07/04/24 04:55:20.483
â€¢ [22.149 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 07/04/24 04:55:20.496
  I0704 04:55:20.496155 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename secrets @ 07/04/24 04:55:20.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:55:20.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:55:20.52
  STEP: creating secret secrets-3563/secret-test-e4e0ddd8-11fd-4255-9757-8205d479aa5f @ 07/04/24 04:55:20.529
  STEP: Creating a pod to test consume secrets @ 07/04/24 04:55:20.533
  E0704 04:55:21.179528      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:22.180165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:23.180292      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:24.180418      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 04:55:24.568
  I0704 04:55:24.574521 20 output.go:196] Trying to get logs from node 18.191.27.132 pod pod-configmaps-76eccd68-740d-43e8-a137-13371869e60e container env-test: <nil>
  STEP: delete the pod @ 07/04/24 04:55:24.595
  I0704 04:55:24.609432 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3563" for this suite. @ 07/04/24 04:55:24.612
â€¢ [4.125 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:707
  STEP: Creating a kubernetes client @ 07/04/24 04:55:24.621
  I0704 04:55:24.621777 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename sched-pred @ 07/04/24 04:55:24.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 04:55:24.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 04:55:24.638
  I0704 04:55:24.641372 20 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0704 04:55:24.647740 20 util.go:400] Waiting for terminating namespaces to be deleted...
  I0704 04:55:24.650281 20 predicates.go:121] 
  Logging pods the apiserver thinks is on node 18.118.109.209 before test
  I0704 04:55:24.655949 20 predicates.go:887] calico-kube-controllers-5b878c8d6f-qchnq from kube-system started at 2024-07-04 03:00:03 +0000 UTC (1 container statuses recorded)
  I0704 04:55:24.655978 20 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I0704 04:55:24.655990 20 predicates.go:887] canal-7mrtp from kube-system started at 2024-07-04 03:00:03 +0000 UTC (2 container statuses recorded)
  I0704 04:55:24.656019 20 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0704 04:55:24.656041 20 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0704 04:55:24.656052 20 predicates.go:887] coredns-autoscaler-7db8ddc8cf-c6v99 from kube-system started at 2024-07-04 03:00:15 +0000 UTC (1 container statuses recorded)
  I0704 04:55:24.656101 20 predicates.go:889] 	Container autoscaler ready: true, restart count 0
  I0704 04:55:24.656114 20 predicates.go:887] sonobuoy-e2e-job-29e78ee3095b40b0 from sonobuoy started at 2024-07-04 03:22:00 +0000 UTC (2 container statuses recorded)
  I0704 04:55:24.656124 20 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0704 04:55:24.656168 20 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0704 04:55:24.656193 20 predicates.go:887] sonobuoy-systemd-logs-daemon-set-f25fe8f61e184228-dc5qd from sonobuoy started at 2024-07-04 03:22:00 +0000 UTC (2 container statuses recorded)
  I0704 04:55:24.656204 20 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0704 04:55:24.656212 20 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0704 04:55:24.656276 20 predicates.go:121] 
  Logging pods the apiserver thinks is on node 18.191.27.132 before test
  I0704 04:55:24.661620 20 predicates.go:887] canal-fjqx2 from kube-system started at 2024-07-04 03:00:03 +0000 UTC (2 container statuses recorded)
  I0704 04:55:24.661922 20 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0704 04:55:24.662028 20 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0704 04:55:24.662045 20 predicates.go:887] coredns-878dbb559-n6nrk from kube-system started at 2024-07-04 03:00:34 +0000 UTC (1 container statuses recorded)
  I0704 04:55:24.662055 20 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0704 04:55:24.662162 20 predicates.go:887] rke-coredns-addon-deploy-job-vl45b from kube-system started at 2024-07-04 03:00:13 +0000 UTC (1 container statuses recorded)
  I0704 04:55:24.662174 20 predicates.go:889] 	Container rke-coredns-addon-pod ready: false, restart count 0
  I0704 04:55:24.662185 20 predicates.go:887] rke-metrics-addon-deploy-job-h5rd9 from kube-system started at 2024-07-04 03:00:20 +0000 UTC (1 container statuses recorded)
  I0704 04:55:24.662272 20 predicates.go:889] 	Container rke-metrics-addon-pod ready: false, restart count 0
  I0704 04:55:24.662286 20 predicates.go:887] rke-network-plugin-deploy-job-p5wc5 from kube-system started at 2024-07-04 03:00:00 +0000 UTC (1 container statuses recorded)
  I0704 04:55:24.662295 20 predicates.go:889] 	Container rke-network-plugin-pod ready: false, restart count 0
  I0704 04:55:24.662306 20 predicates.go:887] sonobuoy from sonobuoy started at 2024-07-04 03:21:56 +0000 UTC (1 container statuses recorded)
  I0704 04:55:24.662316 20 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0704 04:55:24.662503 20 predicates.go:887] sonobuoy-systemd-logs-daemon-set-f25fe8f61e184228-7wp7w from sonobuoy started at 2024-07-04 03:22:00 +0000 UTC (2 container statuses recorded)
  I0704 04:55:24.662514 20 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0704 04:55:24.662524 20 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0704 04:55:24.662535 20 predicates.go:121] 
  Logging pods the apiserver thinks is on node 3.142.51.114 before test
  I0704 04:55:24.667709 20 predicates.go:887] canal-55jg5 from kube-system started at 2024-07-04 03:00:03 +0000 UTC (2 container statuses recorded)
  I0704 04:55:24.669036 20 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0704 04:55:24.669076 20 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0704 04:55:24.669106 20 predicates.go:887] coredns-878dbb559-x42jf from kube-system started at 2024-07-04 03:00:14 +0000 UTC (1 container statuses recorded)
  I0704 04:55:24.669153 20 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0704 04:55:24.669168 20 predicates.go:887] metrics-server-85f57469bf-24s6n from kube-system started at 2024-07-04 03:00:23 +0000 UTC (1 container statuses recorded)
  I0704 04:55:24.669178 20 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I0704 04:55:24.669232 20 predicates.go:887] sonobuoy-systemd-logs-daemon-set-f25fe8f61e184228-gg2w2 from sonobuoy started at 2024-07-04 03:22:00 +0000 UTC (2 container statuses recorded)
  I0704 04:55:24.669245 20 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0704 04:55:24.669275 20 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/04/24 04:55:24.669
  E0704 04:55:25.180540      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:26.181015      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:27.181585      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:28.181733      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/04/24 04:55:28.697
  STEP: Trying to apply a random label on the found node. @ 07/04/24 04:55:28.736
  STEP: verifying the node has the label kubernetes.io/e2e-8b67eedf-d2d0-4ae7-82c1-8fc602ce9743 95 @ 07/04/24 04:55:28.749
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 07/04/24 04:55:28.756
  E0704 04:55:29.182728      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:30.183097      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:31.183275      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:32.183785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.23.45 on the node which pod4 resides and expect not scheduled @ 07/04/24 04:55:32.778
  E0704 04:55:33.184380      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:34.185207      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:35.185882      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:36.185941      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:37.186309      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:38.186695      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:39.187031      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:40.187145      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:41.187257      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:42.187641      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:43.187793      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:44.188827      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:45.188888      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:46.189043      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:47.189269      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:48.189547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:49.190399      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:50.190551      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:51.190749      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:52.190905      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:53.191006      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:54.191421      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:55.191639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:56.192174      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:57.192463      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:58.192682      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:55:59.193730      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:00.193852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:01.194675      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:02.194851      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:03.195568      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:04.195691      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:05.196218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:06.196295      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:07.196439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:08.196739      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:09.197344      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:10.197660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:11.198271      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:12.199187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:13.200036      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:14.200619      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:15.201229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:16.201549      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:17.202158      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:18.202286      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:19.203112      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:20.203252      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:21.206139      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:22.206589      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:23.208944      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:24.208990      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:25.209772      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:26.211024      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:27.211854      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:28.212674      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:29.212756      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:30.213873      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:31.213794      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:32.213861      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:33.213923      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:34.214159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:35.214320      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:36.214414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:37.215322      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:38.216079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:39.216285      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:40.216470      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:41.217489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:42.217709      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:43.218022      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:44.218558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:45.218774      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:46.220182      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:47.221026      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:48.221783      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:49.222856      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:50.222968      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:51.223848      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:52.224719      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:53.225096      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:54.225167      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:55.225646      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:56.225787      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:57.226808      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:58.227054      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:56:59.227736      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:00.227874      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:01.228487      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:02.229038      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:03.229606      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:04.229930      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:05.230871      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:06.231103      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:07.231248      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:08.232280      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:09.232581      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:10.233522      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:11.233635      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:12.234093      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:13.234359      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:14.235375      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:15.235890      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:16.237093      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:17.237649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:18.239464      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:19.239663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:20.239889      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:21.240072      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:22.240035      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:23.240588      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:24.240702      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:25.240745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:26.240963      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:27.241809      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:28.242009      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:29.242558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:30.242795      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:31.243607      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:32.243621      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:33.244503      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:34.244614      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:35.245172      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:36.245308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:37.245905      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:38.246323      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:39.246808      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:40.247200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:41.247365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:42.249871      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:43.249232      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:44.249724      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:45.250509      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:46.250685      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:47.251329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:48.252239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:49.252852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:50.252969      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:51.253405      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:52.253522      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:53.254215      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:54.254479      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:55.255287      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:56.255407      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:57.256220      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:58.257200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:57:59.258160      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:00.258358      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:01.259373      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:02.259656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:03.260052      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:04.260334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:05.261304      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:06.261535      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:07.262613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:08.263065      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:09.263180      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:10.263567      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:11.263765      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:12.264840      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:13.264801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:14.265121      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:15.268179      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:16.267764      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:17.267901      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:18.268659      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:19.268955      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:20.269170      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:21.269171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:22.269536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:23.270433      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:24.270804      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:25.271204      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:26.271444      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:27.272423      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:28.273045      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:29.273118      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:30.273422      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:31.274160      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:32.274189      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:33.275214      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:34.275680      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:35.276776      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:36.276841      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:37.277259      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:38.278116      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:39.278448      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:40.278752      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:41.279036      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:42.279692      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:43.279868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:44.280183      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:45.280689      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:46.281121      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:47.281340      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:48.282113      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:49.283260      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:50.285557      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:51.286515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:52.286658      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:53.287526      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:54.287627      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:55.288697      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:56.290031      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:57.289544      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:58.290029      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:58:59.290719      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:00.291411      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:01.291608      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:02.292172      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:03.293229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:04.293334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:05.293445      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:06.293585      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:07.294029      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:08.295037      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:09.295667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:10.295766      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:11.296008      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:12.296139      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:13.296652      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:14.296771      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:15.297233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:16.297901      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:17.298141      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:18.299101      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:19.299322      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:20.303629      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:21.303765      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:22.303842      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:23.304110      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:24.304630      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:25.304940      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:26.304843      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:27.304941      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:28.305612      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:29.305742      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:30.305867      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:31.310748      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:32.311038      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:33.312061      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:34.312869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:35.312986      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:36.313772      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:37.314496      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:38.315126      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:39.315504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:40.315640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:41.316757      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:42.317300      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:43.318067      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:44.318319      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:45.318343      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:46.318607      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:47.318591      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:48.319019      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:49.319310      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:50.320349      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:51.320375      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:52.321407      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:53.322161      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:54.322468      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:55.322708      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:56.322833      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:57.323070      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:58.324239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 04:59:59.324647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:00.324811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:01.325165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:02.325314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:03.326209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:04.326357      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:05.326657      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:06.326817      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:07.327629      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:08.328239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:09.328704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:10.328837      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:11.329181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:12.329325      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:13.330373      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:14.330302      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:15.330611      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:16.330565      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:17.331140      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:18.332074      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:19.332490      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:20.332457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:21.332812      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:22.333125      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:23.334026      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:24.334244      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:25.334826      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:26.335440      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:27.335648      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:28.336060      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:29.336134      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:30.336842      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:31.337068      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:32.337199      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-8b67eedf-d2d0-4ae7-82c1-8fc602ce9743 off the node 3.142.51.114 @ 07/04/24 05:00:32.787
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-8b67eedf-d2d0-4ae7-82c1-8fc602ce9743 @ 07/04/24 05:00:32.799
  I0704 05:00:32.802824 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2931" for this suite. @ 07/04/24 05:00:32.806
â€¢ [308.191 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3136
  STEP: Creating a kubernetes client @ 07/04/24 05:00:32.813
  I0704 05:00:32.813284 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename services @ 07/04/24 05:00:32.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 05:00:32.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 05:00:32.852
  STEP: fetching services @ 07/04/24 05:00:32.862
  I0704 05:00:32.865248 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7047" for this suite. @ 07/04/24 05:00:32.87
â€¢ [0.065 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 07/04/24 05:00:32.878
  I0704 05:00:32.878132 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename subpath @ 07/04/24 05:00:32.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 05:00:32.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 05:00:32.898
  STEP: Setting up data @ 07/04/24 05:00:32.909
  STEP: Creating pod pod-subpath-test-projected-clnm @ 07/04/24 05:00:32.923
  STEP: Creating a pod to test atomic-volume-subpath @ 07/04/24 05:00:32.923
  E0704 05:00:33.338265      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:34.338597      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:35.338744      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:36.339838      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:37.339070      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:38.339792      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:39.339970      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:40.340085      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:41.340262      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:42.340559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:43.340661      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:44.340811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:45.341027      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:46.341321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:47.341867      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:48.342047      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:49.342135      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:50.343690      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:51.343845      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:52.344695      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:53.344772      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:54.345076      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:55.345328      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:56.345634      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 05:00:56.99
  I0704 05:00:56.994843 20 output.go:196] Trying to get logs from node 18.191.27.132 pod pod-subpath-test-projected-clnm container test-container-subpath-projected-clnm: <nil>
  STEP: delete the pod @ 07/04/24 05:00:57.01
  STEP: Deleting pod pod-subpath-test-projected-clnm @ 07/04/24 05:00:57.038
  I0704 05:00:57.038193 20 delete.go:62] Deleting pod "pod-subpath-test-projected-clnm" in namespace "subpath-9460"
  I0704 05:00:57.040505 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9460" for this suite. @ 07/04/24 05:00:57.044
â€¢ [24.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 07/04/24 05:00:57.053
  I0704 05:00:57.053777 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename chunking @ 07/04/24 05:00:57.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 05:00:57.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 05:00:57.076
  STEP: creating a large number of resources @ 07/04/24 05:00:57.079
  E0704 05:00:57.346657      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:58.348293      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:00:59.349837      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:00.351043      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:01.351272      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:02.352508      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:03.352774      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:04.353454      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:05.353962      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:06.355005      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:07.355331      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:08.355503      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:01:08.812447      20 request.go:697] Waited for 1.000218796s due to client-side throttling, not priority and fairness, request: POST:https://10.43.0.1:443/api/v1/namespaces/chunking-8528/podtemplates
  E0704 05:01:09.356193      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:10.356867      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:11.357366      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:12.357821      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:13.360163      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:14.361210      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 07/04/24 05:01:14.766
  I0704 05:01:14.811547 20 chunking.go:98] Retrieved 17/17 results with rv 36529 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MjksInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0704 05:01:14.862211 20 chunking.go:98] Retrieved 17/17 results with rv 36529 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MjksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0704 05:01:14.911755 20 chunking.go:98] Retrieved 17/17 results with rv 36529 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MjksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0704 05:01:14.961665 20 chunking.go:98] Retrieved 17/17 results with rv 36529 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MjksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0704 05:01:15.011687 20 chunking.go:98] Retrieved 17/17 results with rv 36529 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MjksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0704 05:01:15.060418 20 chunking.go:98] Retrieved 17/17 results with rv 36529 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MjksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0704 05:01:15.111406 20 chunking.go:98] Retrieved 17/17 results with rv 36529 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MjksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0704 05:01:15.161512 20 chunking.go:98] Retrieved 17/17 results with rv 36529 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MjksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0704 05:01:15.211760 20 chunking.go:98] Retrieved 17/17 results with rv 36529 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MjksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0704 05:01:15.261974 20 chunking.go:98] Retrieved 17/17 results with rv 36529 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MjksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0704 05:01:15.310928 20 chunking.go:98] Retrieved 17/17 results with rv 36529 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MjksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0704 05:01:15.361129 20 chunking.go:98] Retrieved 17/17 results with rv 36529 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MjksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  E0704 05:01:15.361482      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:01:15.411416 20 chunking.go:98] Retrieved 17/17 results with rv 36529 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MjksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0704 05:01:15.463242 20 chunking.go:98] Retrieved 17/17 results with rv 36529 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MjksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0704 05:01:15.510633 20 chunking.go:98] Retrieved 17/17 results with rv 36529 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MjksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0704 05:01:15.563786 20 chunking.go:98] Retrieved 17/17 results with rv 36529 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MjksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0704 05:01:15.610674 20 chunking.go:98] Retrieved 17/17 results with rv 36529 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MjksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0704 05:01:15.660946 20 chunking.go:98] Retrieved 17/17 results with rv 36529 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MjksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0704 05:01:15.710959 20 chunking.go:98] Retrieved 17/17 results with rv 36529 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MjksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0704 05:01:15.761715 20 chunking.go:98] Retrieved 17/17 results with rv 36529 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MjksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0704 05:01:15.812253 20 chunking.go:98] Retrieved 17/17 results with rv 36529 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MjksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0704 05:01:15.865705 20 chunking.go:98] Retrieved 17/17 results with rv 36529 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MjksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0704 05:01:15.911274 20 chunking.go:98] Retrieved 17/17 results with rv 36529 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MjksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0704 05:01:15.960854 20 chunking.go:98] Retrieved 9/17 results with rv 36529 and continue 
  I0704 05:01:16.019730 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0704 05:01:16.061573 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0704 05:01:16.111396 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0704 05:01:16.163535 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0704 05:01:16.213559 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0704 05:01:16.261288 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0704 05:01:16.311820 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0704 05:01:16.360809 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  E0704 05:01:16.361715      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:01:16.418364 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0704 05:01:16.467986 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0704 05:01:16.511828 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0704 05:01:16.561341 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0704 05:01:16.625147 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0704 05:01:16.662332 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0704 05:01:16.715612 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0704 05:01:16.762419 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0704 05:01:16.814774 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0704 05:01:16.861407 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0704 05:01:16.911007 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0704 05:01:16.962203 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0704 05:01:17.010942 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0704 05:01:17.060619 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0704 05:01:17.111808 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0704 05:01:17.162667 20 chunking.go:98] Retrieved 9/17 results with rv 36531 and continue 
  I0704 05:01:17.215529 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0704 05:01:17.261392 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0704 05:01:17.315765 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  E0704 05:01:17.362500      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:01:17.364026 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0704 05:01:17.411189 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0704 05:01:17.462477 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0704 05:01:17.511512 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0704 05:01:17.566690 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0704 05:01:17.610382 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0704 05:01:17.670919 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0704 05:01:17.711212 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0704 05:01:17.760909 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0704 05:01:17.810752 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0704 05:01:17.864346 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0704 05:01:17.913882 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0704 05:01:17.961823 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0704 05:01:18.016160 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0704 05:01:18.061187 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0704 05:01:18.120520 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0704 05:01:18.164080 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0704 05:01:18.210692 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0704 05:01:18.261581 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0704 05:01:18.310347 20 chunking.go:98] Retrieved 17/17 results with rv 36531 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzY1MzEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0704 05:01:18.360686 20 chunking.go:98] Retrieved 9/17 results with rv 36531 and continue 
  STEP: retrieving those results all at once @ 07/04/24 05:01:18.36
  E0704 05:01:18.362743      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:01:18.428805 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8528" for this suite. @ 07/04/24 05:01:18.46
â€¢ [21.460 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 07/04/24 05:01:18.515
  I0704 05:01:18.515157 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename endpointslice @ 07/04/24 05:01:18.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 05:01:18.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 05:01:18.53
  E0704 05:01:19.362859      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:20.363052      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:21.363713      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:22.363930      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:01:22.604839 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2798" for this suite. @ 07/04/24 05:01:22.62
â€¢ [4.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 07/04/24 05:01:22.638
  I0704 05:01:22.638999 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename cronjob @ 07/04/24 05:01:22.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 05:01:22.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 05:01:22.658
  STEP: Creating a cronjob @ 07/04/24 05:01:22.661
  STEP: creating @ 07/04/24 05:01:22.662
  STEP: getting @ 07/04/24 05:01:22.667
  STEP: listing @ 07/04/24 05:01:22.671
  STEP: watching @ 07/04/24 05:01:22.673
  I0704 05:01:22.673686 20 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 07/04/24 05:01:22.675
  STEP: cluster-wide watching @ 07/04/24 05:01:22.677
  I0704 05:01:22.677733 20 cronjob.go:382] starting watch
  STEP: patching @ 07/04/24 05:01:22.679
  STEP: updating @ 07/04/24 05:01:22.686
  I0704 05:01:22.696402 20 cronjob.go:406] waiting for watch events with expected annotations
  I0704 05:01:22.696675 20 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 07/04/24 05:01:22.696
  STEP: updating /status @ 07/04/24 05:01:22.702
  STEP: get /status @ 07/04/24 05:01:22.711
  STEP: deleting @ 07/04/24 05:01:22.713
  STEP: deleting a collection @ 07/04/24 05:01:22.728
  I0704 05:01:22.743033 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4460" for this suite. @ 07/04/24 05:01:22.746
â€¢ [0.115 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 07/04/24 05:01:22.754
  I0704 05:01:22.754605 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename statefulset @ 07/04/24 05:01:22.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 05:01:22.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 05:01:22.77
  STEP: Creating service test in namespace statefulset-3792 @ 07/04/24 05:01:22.774
  STEP: Creating statefulset ss in namespace statefulset-3792 @ 07/04/24 05:01:22.785
  I0704 05:01:22.795230 20 wait.go:40] Found 0 stateful pods, waiting for 1
  E0704 05:01:23.363997      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:24.364108      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:25.364217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:26.364622      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:27.364751      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:28.365252      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:29.365291      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:30.365584      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:31.365697      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:32.365846      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:01:32.795877 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 07/04/24 05:01:32.801
  STEP: Getting /status @ 07/04/24 05:01:32.816
  I0704 05:01:32.822943 20 statefulset.go:1067] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 07/04/24 05:01:32.822
  I0704 05:01:32.838790 20 statefulset.go:1087] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 07/04/24 05:01:32.838
  I0704 05:01:32.847612 20 statefulset.go:1115] Observed &StatefulSet event: ADDED
  I0704 05:01:32.847667 20 statefulset.go:1108] Found Statefulset ss in namespace statefulset-3792 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0704 05:01:32.847690 20 statefulset.go:1119] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 07/04/24 05:01:32.847
  I0704 05:01:32.847753 20 statefulset.go:1123] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0704 05:01:32.867185 20 statefulset.go:1127] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 07/04/24 05:01:32.867
  I0704 05:01:32.869614 20 statefulset.go:1152] Observed &StatefulSet event: ADDED
  I0704 05:01:32.870084 20 statefulset.go:135] Deleting all statefulset in ns statefulset-3792
  I0704 05:01:32.879029 20 rest.go:150] Scaling statefulset ss to 0
  E0704 05:01:33.366016      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:34.366392      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:35.366615      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:36.366757      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:37.367060      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:38.367114      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:39.367266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:40.367387      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:41.367685      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:42.368743      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:01:42.911021 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0704 05:01:42.913843 20 rest.go:88] Deleting statefulset ss
  I0704 05:01:42.925212 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3792" for this suite. @ 07/04/24 05:01:42.929
â€¢ [20.181 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 07/04/24 05:01:42.935
  I0704 05:01:42.935554 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename csistoragecapacity @ 07/04/24 05:01:42.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 05:01:42.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 05:01:42.971
  STEP: getting /apis @ 07/04/24 05:01:42.974
  STEP: getting /apis/storage.k8s.io @ 07/04/24 05:01:42.985
  STEP: getting /apis/storage.k8s.io/v1 @ 07/04/24 05:01:42.988
  STEP: creating @ 07/04/24 05:01:42.989
  STEP: watching @ 07/04/24 05:01:43.016
  I0704 05:01:43.016408 20 csistoragecapacity.go:143] starting watch
  STEP: getting @ 07/04/24 05:01:43.023
  STEP: listing in namespace @ 07/04/24 05:01:43.026
  STEP: listing across namespaces @ 07/04/24 05:01:43.028
  STEP: patching @ 07/04/24 05:01:43.031
  STEP: updating @ 07/04/24 05:01:43.037
  I0704 05:01:43.041808 20 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0704 05:01:43.041940 20 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 07/04/24 05:01:43.042
  STEP: deleting a collection @ 07/04/24 05:01:43.05
  I0704 05:01:43.060217 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-7366" for this suite. @ 07/04/24 05:01:43.063
â€¢ [0.134 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2203
  STEP: Creating a kubernetes client @ 07/04/24 05:01:43.07
  I0704 05:01:43.070411 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename services @ 07/04/24 05:01:43.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 05:01:43.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 05:01:43.098
  STEP: creating service in namespace services-5616 @ 07/04/24 05:01:43.101
  STEP: creating service affinity-clusterip-transition in namespace services-5616 @ 07/04/24 05:01:43.101
  STEP: creating replication controller affinity-clusterip-transition in namespace services-5616 @ 07/04/24 05:01:43.113
  I0704 05:01:43.162272      20 runners.go:198] Created replication controller with name: affinity-clusterip-transition, namespace: services-5616, replica count: 3
  E0704 05:01:43.369111      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:44.370110      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:45.370350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:01:46.213348      20 runners.go:198] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0704 05:01:46.218769 20 resource.go:361] Creating new exec pod
  E0704 05:01:46.370872      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:47.371217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:48.371913      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:01:49.246298 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-5616 exec execpod-affinityxhtnh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  E0704 05:01:49.372592      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:01:49.486153 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I0704 05:01:49.486277 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0704 05:01:49.486591 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-5616 exec execpod-affinityxhtnh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.124.49 80'
  I0704 05:01:49.699421 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.124.49 80\n+ echo hostName\nConnection to 10.43.124.49 80 port [tcp/http] succeeded!\n"
  I0704 05:01:49.699552 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0704 05:01:49.711891 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-5616 exec execpod-affinityxhtnh -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.124.49:80/ ; done'
  I0704 05:01:50.035039 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n"
  I0704 05:01:50.035120 20 builder.go:147] stdout: "\naffinity-clusterip-transition-vbqqk\naffinity-clusterip-transition-f6bsk\naffinity-clusterip-transition-f6bsk\naffinity-clusterip-transition-bv2gw\naffinity-clusterip-transition-vbqqk\naffinity-clusterip-transition-bv2gw\naffinity-clusterip-transition-vbqqk\naffinity-clusterip-transition-bv2gw\naffinity-clusterip-transition-bv2gw\naffinity-clusterip-transition-f6bsk\naffinity-clusterip-transition-vbqqk\naffinity-clusterip-transition-bv2gw\naffinity-clusterip-transition-bv2gw\naffinity-clusterip-transition-f6bsk\naffinity-clusterip-transition-bv2gw\naffinity-clusterip-transition-bv2gw"
  I0704 05:01:50.035140 20 service.go:242] Received response from host: affinity-clusterip-transition-vbqqk
  I0704 05:01:50.035154 20 service.go:242] Received response from host: affinity-clusterip-transition-f6bsk
  I0704 05:01:50.035169 20 service.go:242] Received response from host: affinity-clusterip-transition-f6bsk
  I0704 05:01:50.035179 20 service.go:242] Received response from host: affinity-clusterip-transition-bv2gw
  I0704 05:01:50.035190 20 service.go:242] Received response from host: affinity-clusterip-transition-vbqqk
  I0704 05:01:50.035333 20 service.go:242] Received response from host: affinity-clusterip-transition-bv2gw
  I0704 05:01:50.035350 20 service.go:242] Received response from host: affinity-clusterip-transition-vbqqk
  I0704 05:01:50.035362 20 service.go:242] Received response from host: affinity-clusterip-transition-bv2gw
  I0704 05:01:50.035374 20 service.go:242] Received response from host: affinity-clusterip-transition-bv2gw
  I0704 05:01:50.035396 20 service.go:242] Received response from host: affinity-clusterip-transition-f6bsk
  I0704 05:01:50.035407 20 service.go:242] Received response from host: affinity-clusterip-transition-vbqqk
  I0704 05:01:50.035419 20 service.go:242] Received response from host: affinity-clusterip-transition-bv2gw
  I0704 05:01:50.035447 20 service.go:242] Received response from host: affinity-clusterip-transition-bv2gw
  I0704 05:01:50.035458 20 service.go:242] Received response from host: affinity-clusterip-transition-f6bsk
  I0704 05:01:50.035469 20 service.go:242] Received response from host: affinity-clusterip-transition-bv2gw
  I0704 05:01:50.036604 20 service.go:242] Received response from host: affinity-clusterip-transition-bv2gw
  I0704 05:01:50.059794 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-5616 exec execpod-affinityxhtnh -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.124.49:80/ ; done'
  I0704 05:01:50.306029 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.124.49:80/\n"
  I0704 05:01:50.306093 20 builder.go:147] stdout: "\naffinity-clusterip-transition-f6bsk\naffinity-clusterip-transition-f6bsk\naffinity-clusterip-transition-f6bsk\naffinity-clusterip-transition-f6bsk\naffinity-clusterip-transition-f6bsk\naffinity-clusterip-transition-f6bsk\naffinity-clusterip-transition-f6bsk\naffinity-clusterip-transition-f6bsk\naffinity-clusterip-transition-f6bsk\naffinity-clusterip-transition-f6bsk\naffinity-clusterip-transition-f6bsk\naffinity-clusterip-transition-f6bsk\naffinity-clusterip-transition-f6bsk\naffinity-clusterip-transition-f6bsk\naffinity-clusterip-transition-f6bsk\naffinity-clusterip-transition-f6bsk"
  I0704 05:01:50.306113 20 service.go:242] Received response from host: affinity-clusterip-transition-f6bsk
  I0704 05:01:50.306484 20 service.go:242] Received response from host: affinity-clusterip-transition-f6bsk
  I0704 05:01:50.306498 20 service.go:242] Received response from host: affinity-clusterip-transition-f6bsk
  I0704 05:01:50.306599 20 service.go:242] Received response from host: affinity-clusterip-transition-f6bsk
  I0704 05:01:50.306632 20 service.go:242] Received response from host: affinity-clusterip-transition-f6bsk
  I0704 05:01:50.306718 20 service.go:242] Received response from host: affinity-clusterip-transition-f6bsk
  I0704 05:01:50.306731 20 service.go:242] Received response from host: affinity-clusterip-transition-f6bsk
  I0704 05:01:50.306741 20 service.go:242] Received response from host: affinity-clusterip-transition-f6bsk
  I0704 05:01:50.306749 20 service.go:242] Received response from host: affinity-clusterip-transition-f6bsk
  I0704 05:01:50.306758 20 service.go:242] Received response from host: affinity-clusterip-transition-f6bsk
  I0704 05:01:50.306765 20 service.go:242] Received response from host: affinity-clusterip-transition-f6bsk
  I0704 05:01:50.306772 20 service.go:242] Received response from host: affinity-clusterip-transition-f6bsk
  I0704 05:01:50.306779 20 service.go:242] Received response from host: affinity-clusterip-transition-f6bsk
  I0704 05:01:50.306792 20 service.go:242] Received response from host: affinity-clusterip-transition-f6bsk
  I0704 05:01:50.306812 20 service.go:242] Received response from host: affinity-clusterip-transition-f6bsk
  I0704 05:01:50.306819 20 service.go:242] Received response from host: affinity-clusterip-transition-f6bsk
  I0704 05:01:50.306947 20 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-5616, will wait for the garbage collector to delete the pods @ 07/04/24 05:01:50.336
  E0704 05:01:50.372833      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:01:50.408839 20 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 5.24416ms
  I0704 05:01:50.509928 20 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 101.083947ms
  E0704 05:01:51.373119      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:52.373942      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:53.374695      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:01:53.425586 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5616" for this suite. @ 07/04/24 05:01:53.429
â€¢ [10.364 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 07/04/24 05:01:53.434
  I0704 05:01:53.434692 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename statefulset @ 07/04/24 05:01:53.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 05:01:53.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 05:01:53.469
  STEP: Creating service test in namespace statefulset-4697 @ 07/04/24 05:01:53.473
  STEP: Creating a new StatefulSet @ 07/04/24 05:01:53.478
  I0704 05:01:53.494052 20 wait.go:40] Found 0 stateful pods, waiting for 3
  E0704 05:01:54.374907      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:55.374994      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:56.375631      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:57.375769      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:58.376285      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:01:59.376446      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:00.376581      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:01.376708      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:02.377104      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:03.377880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:02:03.494668 20 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0704 05:02:03.494714 20 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0704 05:02:03.494727 20 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/04/24 05:02:03.504
  I0704 05:02:03.534107 20 statefulset.go:2241] Updating stateful set ss2
  STEP: Creating a new revision @ 07/04/24 05:02:03.534
  E0704 05:02:04.377994      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:05.379297      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:06.379393      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:07.379697      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:08.380682      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:09.381039      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:10.381155      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:11.381360      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:12.382121      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:13.382861      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 07/04/24 05:02:13.542
  STEP: Performing a canary update @ 07/04/24 05:02:13.542
  I0704 05:02:13.561661 20 statefulset.go:2241] Updating stateful set ss2
  I0704 05:02:13.574856 20 wait.go:74] Waiting for Pod statefulset-4697/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0704 05:02:14.383656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:15.384148      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:16.384914      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:17.385231      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:18.386218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:19.386343      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:20.386620      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:21.386989      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:22.387439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:23.388255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 07/04/24 05:02:23.615
  I0704 05:02:23.744968 20 wait.go:40] Found 1 stateful pods, waiting for 3
  E0704 05:02:24.388553      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:25.388757      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:26.389071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:27.389375      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:28.390171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:29.390283      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:30.390560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:31.390654      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:32.391073      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:33.392146      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:02:33.708600 20 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0704 05:02:33.708695 20 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0704 05:02:33.708713 20 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 07/04/24 05:02:33.717
  I0704 05:02:33.739612 20 statefulset.go:2241] Updating stateful set ss2
  I0704 05:02:33.751640 20 wait.go:74] Waiting for Pod statefulset-4697/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0704 05:02:34.392968      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:35.392982      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:36.393149      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:37.393954      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:38.394151      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:39.394374      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:40.394572      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:41.395544      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:42.395643      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:43.396136      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:02:43.768007 20 statefulset.go:2241] Updating stateful set ss2
  I0704 05:02:43.776558 20 wait.go:56] Waiting for StatefulSet statefulset-4697/ss2 to complete update
  I0704 05:02:43.776611 20 wait.go:63] Waiting for Pod statefulset-4697/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0704 05:02:44.396801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:45.397284      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:46.397634      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:47.398153      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:48.398192      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:49.398434      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:50.398589      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:51.398915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:52.399051      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:53.400134      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:02:53.790873 20 statefulset.go:135] Deleting all statefulset in ns statefulset-4697
  I0704 05:02:53.794372 20 rest.go:150] Scaling statefulset ss2 to 0
  E0704 05:02:54.400585      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:55.400506      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:56.400741      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:57.401238      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:58.401149      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:02:59.401252      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:00.401574      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:01.401685      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:02.401900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:03.402712      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:03:03.819287 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0704 05:03:03.821621 20 rest.go:88] Deleting statefulset ss2
  I0704 05:03:03.833288 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4697" for this suite. @ 07/04/24 05:03:03.84
â€¢ [70.411 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 07/04/24 05:03:03.851
  I0704 05:03:03.851283 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 05:03:03.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 05:03:03.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 05:03:03.896
  STEP: Creating a pod to test downward API volume plugin @ 07/04/24 05:03:03.906
  E0704 05:03:04.403545      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:05.403644      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:06.404611      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:07.404727      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 05:03:07.926
  I0704 05:03:07.929375 20 output.go:196] Trying to get logs from node 3.142.51.114 pod downwardapi-volume-717740fa-8475-4e6b-be77-33f485090423 container client-container: <nil>
  STEP: delete the pod @ 07/04/24 05:03:07.945
  I0704 05:03:07.962275 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5456" for this suite. @ 07/04/24 05:03:07.965
â€¢ [4.122 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 07/04/24 05:03:07.973
  I0704 05:03:07.973417 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/04/24 05:03:07.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 05:03:07.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 05:03:08.004
  STEP: create the container to handle the HTTPGet hook request. @ 07/04/24 05:03:08.017
  E0704 05:03:08.408166      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:09.408418      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:10.408711      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:11.408949      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/04/24 05:03:12.047
  E0704 05:03:12.409909      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:13.410063      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 07/04/24 05:03:14.067
  E0704 05:03:14.411251      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:15.411278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:16.411375      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:17.411651      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 07/04/24 05:03:18.087
  I0704 05:03:18.101628 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1749" for this suite. @ 07/04/24 05:03:18.105
â€¢ [10.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 07/04/24 05:03:18.11
  I0704 05:03:18.110928 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 05:03:18.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 05:03:18.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 05:03:18.146
  STEP: Creating a pod to test downward API volume plugin @ 07/04/24 05:03:18.148
  E0704 05:03:18.412179      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:19.412542      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:20.413559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:21.413771      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 05:03:22.167
  I0704 05:03:22.179794 20 output.go:196] Trying to get logs from node 3.142.51.114 pod downwardapi-volume-0d7bde90-3ce1-4520-bd4b-7728e32bb038 container client-container: <nil>
  STEP: delete the pod @ 07/04/24 05:03:22.192
  I0704 05:03:22.209930 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7059" for this suite. @ 07/04/24 05:03:22.212
â€¢ [4.108 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 07/04/24 05:03:22.218
  I0704 05:03:22.218601 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename downward-api @ 07/04/24 05:03:22.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 05:03:22.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 05:03:22.234
  STEP: Creating a pod to test downward API volume plugin @ 07/04/24 05:03:22.237
  E0704 05:03:22.414110      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:23.414837      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:24.415571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:25.415831      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 05:03:26.259
  I0704 05:03:26.262264 20 output.go:196] Trying to get logs from node 3.142.51.114 pod downwardapi-volume-3787e17a-f5bc-46f6-a356-3a618207f7fa container client-container: <nil>
  STEP: delete the pod @ 07/04/24 05:03:26.271
  I0704 05:03:26.290241 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5155" for this suite. @ 07/04/24 05:03:26.293
â€¢ [4.090 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1079
  STEP: Creating a kubernetes client @ 07/04/24 05:03:26.308
  I0704 05:03:26.308896 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename kubectl @ 07/04/24 05:03:26.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 05:03:26.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 05:03:26.329
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/04/24 05:03:26.332
  I0704 05:03:26.332686 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-4901 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0704 05:03:26.412654 20 builder.go:146] stderr: ""
  I0704 05:03:26.412698 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 07/04/24 05:03:26.413
  I0704 05:03:26.413801 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-4901 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  E0704 05:03:26.418149      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:03:26.506502 20 builder.go:146] stderr: ""
  I0704 05:03:26.508258 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/04/24 05:03:26.508
  I0704 05:03:26.516664 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=kubectl-4901 delete pods e2e-test-httpd-pod'
  E0704 05:03:27.419185      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:03:28.143626 20 builder.go:146] stderr: ""
  I0704 05:03:28.143668 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0704 05:03:28.143765 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4901" for this suite. @ 07/04/24 05:03:28.147
â€¢ [1.845 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 07/04/24 05:03:28.153
  I0704 05:03:28.153835 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename downward-api @ 07/04/24 05:03:28.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 05:03:28.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 05:03:28.171
  STEP: Creating the pod @ 07/04/24 05:03:28.221
  E0704 05:03:28.419907      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:29.420093      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:30.420762      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:03:30.771143 20 pod_client.go:141] Successfully updated pod "labelsupdate8153fc71-6cca-4212-9d17-5001ffdbbf72"
  E0704 05:03:31.421072      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:32.421167      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:33.422109      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:34.422123      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:03:34.805109 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-642" for this suite. @ 07/04/24 05:03:34.811
â€¢ [6.663 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 07/04/24 05:03:34.817
  I0704 05:03:34.817268 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename subjectreview @ 07/04/24 05:03:34.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 05:03:34.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 05:03:34.839
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-5658" @ 07/04/24 05:03:34.848
  I0704 05:03:34.858574 20 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-5658:e2e"
  I0704 05:03:34.858626 20 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-5658"}
  I0704 05:03:34.858638 20 subjectreviews.go:71] saUID: "9619acb8-cd6d-4f1a-a80d-d3139ea9f955"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-5658:e2e" @ 07/04/24 05:03:34.858
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-5658:e2e" @ 07/04/24 05:03:34.859
  I0704 05:03:34.865506 20 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-5658:e2e" api 'list' configmaps in "subjectreview-5658" namespace @ 07/04/24 05:03:34.865
  I0704 05:03:34.869221 20 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-5658:e2e" @ 07/04/24 05:03:34.869
  I0704 05:03:34.878859 20 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0704 05:03:34.878906 20 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0704 05:03:34.879163 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-5658" for this suite. @ 07/04/24 05:03:34.882
â€¢ [0.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 07/04/24 05:03:34.892
  I0704 05:03:34.892189 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/04/24 05:03:34.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 05:03:34.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 05:03:34.911
  STEP: create the container to handle the HTTPGet hook request. @ 07/04/24 05:03:34.917
  E0704 05:03:35.423633      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:36.423630      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/04/24 05:03:36.938
  E0704 05:03:37.423776      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:38.424133      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 07/04/24 05:03:38.955
  STEP: delete the pod with lifecycle hook @ 07/04/24 05:03:38.961
  E0704 05:03:39.424222      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:40.424750      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:41.425084      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:42.425160      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:03:42.985973 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3506" for this suite. @ 07/04/24 05:03:42.99
â€¢ [8.111 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 07/04/24 05:03:43.003
  I0704 05:03:43.003426 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename sched-preemption @ 07/04/24 05:03:43.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 05:03:43.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 05:03:43.055
  I0704 05:03:43.102803 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0704 05:03:43.426148      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:44.426363      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:45.426943      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:46.427187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:47.428094      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:48.428874      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:49.429416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:50.429681      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:51.430677      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:52.431226      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:53.431977      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:54.432417      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:55.432712      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:56.432816      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:57.432943      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:58.433171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:03:59.434096      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:00.434559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:01.434775      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:02.435224      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:03.435376      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:04.435643      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:05.436403      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:06.436726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:07.437489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:08.437838      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:09.438453      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:10.438697      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:11.440390      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:12.440874      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:13.441535      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:14.441740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:15.442334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:16.442458      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:17.443537      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:18.444091      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:19.444752      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:20.446315      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:21.446931      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:22.447070      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:23.447835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:24.447691      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:25.448557      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:26.448938      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:27.449551      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:28.450024      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:29.450174      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:30.450309      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:31.451434      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:32.451650      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:33.452645      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:34.453221      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:35.453681      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:36.453797      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:37.454558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:38.455174      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:39.455274      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:40.455624      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:41.455729      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:42.456719      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:04:43.108916 20 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/04/24 05:04:43.112
  I0704 05:04:43.112981 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/04/24 05:04:43.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 05:04:43.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 05:04:43.132
  I0704 05:04:43.155676 20 preemption.go:818] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0704 05:04:43.174041 20 preemption.go:824] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I0704 05:04:43.246086 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-7074" for this suite. @ 07/04/24 05:04:43.252
  I0704 05:04:43.259894 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1986" for this suite. @ 07/04/24 05:04:43.264
â€¢ [60.267 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 07/04/24 05:04:43.27
  I0704 05:04:43.270511 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename var-expansion @ 07/04/24 05:04:43.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 05:04:43.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 05:04:43.289
  STEP: Creating a pod to test env composition @ 07/04/24 05:04:43.292
  E0704 05:04:43.457650      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:44.458139      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:45.458761      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:46.458934      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 05:04:47.31
  I0704 05:04:47.312949 20 output.go:196] Trying to get logs from node 18.191.27.132 pod var-expansion-2fb9be93-b8ce-4b1d-af57-bf6b5ee56c94 container dapi-container: <nil>
  STEP: delete the pod @ 07/04/24 05:04:47.323
  I0704 05:04:47.338206 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8182" for this suite. @ 07/04/24 05:04:47.341
â€¢ [4.076 seconds]
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3656
  STEP: Creating a kubernetes client @ 07/04/24 05:04:47.346
  I0704 05:04:47.346479 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename services @ 07/04/24 05:04:47.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 05:04:47.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 05:04:47.368
  STEP: creating service multiprotocol-test in namespace services-7646 @ 07/04/24 05:04:47.371
  STEP: creating pod pod1 in namespace services-7646 @ 07/04/24 05:04:47.384
  STEP: Creating pod pod1 in namespace services-7646 @ 07/04/24 05:04:47.384
  E0704 05:04:47.459430      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:48.459254      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-7646 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 07/04/24 05:04:49.422
  I0704 05:04:49.436658 20 service.go:4351] successfully validated that service multiprotocol-test in namespace services-7646 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 07/04/24 05:04:49.436
  I0704 05:04:49.436754 20 resource.go:361] Creating new exec pod
  E0704 05:04:49.459511      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:50.459712      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:51.459815      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:04:51.460624 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-7646 exec execpodkr8m8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.240.129 80'
  I0704 05:04:51.658620 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.240.129 80\nConnection to 10.43.240.129 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0704 05:04:51.658671 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0704 05:04:51.658753 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-7646 exec execpodkr8m8 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.240.129 80'
  E0704 05:04:52.460531      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:53.461590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:54.461976      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:55.462262      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:04:55.812768 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.240.129 80\nConnection to 10.43.240.129 80 port [udp/*] succeeded!\n"
  I0704 05:04:55.812825 20 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 07/04/24 05:04:55.812
  I0704 05:04:55.828222 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-7646 exec execpodkr8m8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.240.129 80'
  I0704 05:04:56.076240 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.240.129 80\nConnection to 10.43.240.129 80 port [tcp/http] succeeded!\n"
  I0704 05:04:56.076287 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0704 05:04:56.076601 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-7646 exec execpodkr8m8 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.240.129 80'
  E0704 05:04:56.462899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:57.463113      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:58.463674      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:04:59.463697      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:05:00.304164 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.240.129 80\nConnection to 10.43.240.129 80 port [udp/*] succeeded!\n"
  I0704 05:05:00.304303 20 builder.go:147] stdout: ""
  I0704 05:05:00.304364 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-7646 exec execpodkr8m8 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.240.129 80'
  E0704 05:05:00.464239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:01.463977      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:02.464104      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:03.464217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:04.464416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:05:04.543742 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.240.129 80\nConnection to 10.43.240.129 80 port [udp/*] succeeded!\n"
  I0704 05:05:04.543822 20 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 07/04/24 05:05:04.544
  I0704 05:05:04.559287 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-7646 exec execpodkr8m8 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.240.129 80'
  E0704 05:05:05.464764      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:06.465027      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:07.465247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:08.466354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:05:08.783080 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.240.129 80\nConnection to 10.43.240.129 80 port [udp/*] succeeded!\n"
  I0704 05:05:08.783127 20 builder.go:147] stdout: "pod1"
  I0704 05:05:08.783284 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-7646 exec execpodkr8m8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.240.129 80'
  E0704 05:05:09.467283      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:10.467429      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:05:10.980645 20 builder.go:135] rc: 1
  I0704 05:05:10.980724 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-7646 exec execpodkr8m8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.240.129 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.240.129 80
  nc: connect to 10.43.240.129 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0704 05:05:10.980820 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-7646 exec execpodkr8m8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.240.129 80'
  E0704 05:05:11.467653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:12.467854      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:05:13.187855 20 builder.go:135] rc: 1
  I0704 05:05:13.188116 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-7646 exec execpodkr8m8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.240.129 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.240.129 80
  nc: connect to 10.43.240.129 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0704 05:05:13.188211 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-7646 exec execpodkr8m8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.240.129 80'
  E0704 05:05:13.468266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:14.468717      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:05:15.359709 20 builder.go:135] rc: 1
  I0704 05:05:15.359799 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-57641584 --namespace=services-7646 exec execpodkr8m8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.240.129 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.240.129 80
  nc: connect to 10.43.240.129 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0704 05:05:15.360291 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7646" for this suite. @ 07/04/24 05:05:15.371
â€¢ [28.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 07/04/24 05:05:15.382
  I0704 05:05:15.382547 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename container-probe @ 07/04/24 05:05:15.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 05:05:15.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 05:05:15.411
  E0704 05:05:15.469468      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:16.469762      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:17.470010      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:18.470760      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:19.471220      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:20.472137      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:21.472269      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:22.472430      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:23.472489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:24.472558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:25.473625      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:26.474233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:27.475118      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:28.475460      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:29.476119      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:30.476272      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:31.477007      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:32.477158      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:33.478050      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:34.478295      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:35.478362      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:36.478571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:37.478679      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:05:37.495969 20 container_probe.go:92] Container started at 2024-07-04 05:05:16 +0000 UTC, pod became ready at 2024-07-04 05:05:35 +0000 UTC
  I0704 05:05:37.496151 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5789" for this suite. @ 07/04/24 05:05:37.498
â€¢ [22.121 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 07/04/24 05:05:37.503
  I0704 05:05:37.503812 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename csi-storageclass @ 07/04/24 05:05:37.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 05:05:37.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 05:05:37.528
  STEP: Creating a StorageClass @ 07/04/24 05:05:37.531
  STEP: Get StorageClass "e2e-6x95h" @ 07/04/24 05:05:37.536
  STEP: Patching the StorageClass "e2e-6x95h" @ 07/04/24 05:05:37.538
  STEP: Delete StorageClass "e2e-6x95h" @ 07/04/24 05:05:37.547
  STEP: Confirm deletion of StorageClass "e2e-6x95h" @ 07/04/24 05:05:37.551
  STEP: Create a replacement StorageClass @ 07/04/24 05:05:37.554
  STEP: Updating StorageClass "e2e-v2-z4jb8" @ 07/04/24 05:05:37.558
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-z4jb8=updated" @ 07/04/24 05:05:37.565
  STEP: Deleting StorageClass "e2e-v2-z4jb8" via DeleteCollection @ 07/04/24 05:05:37.567
  STEP: Confirm deletion of StorageClass "e2e-v2-z4jb8" @ 07/04/24 05:05:37.572
  I0704 05:05:37.574620 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-8351" for this suite. @ 07/04/24 05:05:37.577
â€¢ [0.080 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 07/04/24 05:05:37.584
  I0704 05:05:37.584245 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename secrets @ 07/04/24 05:05:37.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 05:05:37.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 05:05:37.599
  STEP: Creating secret with name secret-test-4de78111-56c2-45df-8d1c-7ad408bbbcaa @ 07/04/24 05:05:37.602
  STEP: Creating a pod to test consume secrets @ 07/04/24 05:05:37.605
  E0704 05:05:38.479333      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:39.479703      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:40.479801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:41.480903      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 05:05:41.62
  I0704 05:05:41.624102 20 output.go:196] Trying to get logs from node 3.142.51.114 pod pod-secrets-3f25facc-e576-47ca-9799-ea01fc2ce094 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/04/24 05:05:41.639
  I0704 05:05:41.654961 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6591" for this suite. @ 07/04/24 05:05:41.657
â€¢ [4.079 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 07/04/24 05:05:41.663
  I0704 05:05:41.663375 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename deployment @ 07/04/24 05:05:41.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 05:05:41.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 05:05:41.684
  I0704 05:05:41.687357 20 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0704 05:05:41.691440 20 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0704 05:05:41.695893 20 deployment.go:222] new replicaset for deployment "test-recreate-deployment" is yet to be created
  E0704 05:05:42.481998      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:43.482096      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0704 05:05:43.702966 20 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0704 05:05:43.705812 20 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0704 05:05:43.713770 20 deployment.go:313] Updating deployment test-recreate-deployment
  I0704 05:05:43.713815 20 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0704 05:05:43.815600 20 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9292",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cb358b94-8eb7-4990-9c46-daa4a7b93514",
      ResourceVersion: (string) (len=5) "38341",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855666341,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855666343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855666343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855666343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855666343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855666343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855666341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-66b65d9f8f\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0704 05:05:43.821234 20 deployment.go:39] New ReplicaSet "test-recreate-deployment-66b65d9f8f" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-66b65d9f8f",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9292",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f069d912-4bb0-4fbd-80e5-2e0e56751fcf",
      ResourceVersion: (string) (len=5) "38340",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855666343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "cb358b94-8eb7-4990-9c46-daa4a7b93514",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855666343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 62 33 35 38 62  39 34 2d 38 65 62 37 2d  |\"cb358b94-8eb7-|
              00000120  34 39 39 30 2d 39 63 34  36 2d 64 61 61 34 61 37  |4990-9c46-daa4a7|
              00000130  62 39 33 35 31 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b93514\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855666343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0704 05:05:43.825816 20 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0704 05:05:43.826187 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-6b6d9cd7b6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9292",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cbeec573-2b52-4882-8683-046c708cd585",
      ResourceVersion: (string) (len=5) "38330",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855666341,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "cb358b94-8eb7-4990-9c46-daa4a7b93514",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855666343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 62 33 35 38 62  39 34 2d 38 65 62 37 2d  |\"cb358b94-8eb7-|
              00000120  34 39 39 30 2d 39 63 34  36 2d 64 61 61 34 61 37  |4990-9c46-daa4a7|
              00000130  62 39 33 35 31 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b93514\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855666343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0704 05:05:43.832576 20 deployment.go:67] Pod "test-recreate-deployment-66b65d9f8f-vc9st" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-66b65d9f8f-vc9st",
      GenerateName: (string) (len=36) "test-recreate-deployment-66b65d9f8f-",
      Namespace: (string) (len=15) "deployment-9292",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1524f48b-0366-447f-b0e7-1f5f99e490d9",
      ResourceVersion: (string) (len=5) "38339",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855666343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-66b65d9f8f",
          UID: (types.UID) (len=36) "f069d912-4bb0-4fbd-80e5-2e0e56751fcf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855666343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  36 39 64 39 31 32 2d 34  |d\":\"f069d912-4|
              00000090  62 62 30 2d 34 66 62 64  2d 38 30 65 35 2d 32 65  |bb0-4fbd-80e5-2e|
              000000a0  30 65 35 36 37 35 31 66  63 66 5c 22 7d 22 3a 7b  |0e56751fcf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855666343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8jk88",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8jk88",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "18.191.27.132",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855666343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855666343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855666343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855666343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855666343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.55"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855666343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0704 05:05:43.838864 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9292" for this suite. @ 07/04/24 05:05:43.842
â€¢ [2.189 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 07/04/24 05:05:43.855
  I0704 05:05:43.855563 20 util.go:506] >>> kubeConfig: /tmp/kubeconfig-57641584
  STEP: Building a namespace api object, basename projected @ 07/04/24 05:05:43.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/04/24 05:05:43.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/04/24 05:05:43.873
  STEP: Creating configMap with name projected-configmap-test-volume-map-4ab41280-ab15-4241-b829-821725fef18a @ 07/04/24 05:05:43.878
  STEP: Creating a pod to test consume configMaps @ 07/04/24 05:05:43.882
  E0704 05:05:44.483124      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:45.483245      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:46.483619      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0704 05:05:47.483802      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/04/24 05:05:47.906
  I0704 05:05:47.908748 20 output.go:196] Trying to get logs from node 3.142.51.114 pod pod-projected-configmaps-560a61cc-6301-4346-adce-7321e175f1c4 container agnhost-container: <nil>
  STEP: delete the pod @ 07/04/24 05:05:47.919
  I0704 05:05:47.931280 20 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6399" for this suite. @ 07/04/24 05:05:47.935
â€¢ [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0704 05:05:47.943111 20 suites.go:34] Running AfterSuite actions on node 1
  I0704 05:05:47.943446 20 util.go:614] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.001 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.060 seconds]
------------------------------

Ran 402 of 7197 Specs in 6204.098 seconds
SUCCESS! -- 402 Passed | 0 Failed | 0 Pending | 6795 Skipped
PASS

Ginkgo ran 1 suite in 1h43m26.578920278s
Test Suite Passed
