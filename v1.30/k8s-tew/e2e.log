  I0505 13:50:54.185758      21 e2e.go:109] Starting e2e run "4ae9ee21-5ccb-4a79-b160-376e7e05a459" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1714917053 - will randomize all specs

Will run 402 of 7197 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0505 13:50:54.457372 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 13:50:54.459192 21 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0505 13:50:54.531542 21 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0505 13:50:54.535132 21 e2e.go:245] e2e test version: v1.30.0
  I0505 13:50:54.536260 21 e2e.go:254] kube-apiserver version: v1.30.0
  I0505 13:50:54.536380 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 13:50:54.542311 21 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.085 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 05/05/24 13:50:54.732
  I0505 13:50:54.732815 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename svcaccounts @ 05/05/24 13:50:54.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:50:54.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:50:54.76
  I0505 13:50:54.786474 21 service_accounts.go:253] created pod pod-service-account-defaultsa
  I0505 13:50:54.786550 21 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I0505 13:50:54.799982 21 service_accounts.go:253] created pod pod-service-account-mountsa
  I0505 13:50:54.800060 21 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I0505 13:50:54.827362 21 service_accounts.go:253] created pod pod-service-account-nomountsa
  I0505 13:50:54.827523 21 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I0505 13:50:54.849447 21 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I0505 13:50:54.849520 21 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0505 13:50:54.872625 21 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I0505 13:50:54.872706 21 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0505 13:50:54.894718 21 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I0505 13:50:54.894801 21 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0505 13:50:54.912537 21 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I0505 13:50:54.912605 21 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0505 13:50:54.937809 21 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I0505 13:50:54.937884 21 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0505 13:50:54.983675 21 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I0505 13:50:54.984347 21 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0505 13:50:54.984510 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8312" for this suite. @ 05/05/24 13:50:55.023
• [0.336 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 05/05/24 13:50:55.069
  I0505 13:50:55.069864 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename prestop @ 05/05/24 13:50:55.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:50:55.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:50:55.177
  STEP: Creating server pod server in namespace prestop-8525 @ 05/05/24 13:50:55.185
  STEP: Waiting for pods to come up. @ 05/05/24 13:50:55.25
  STEP: Creating tester pod tester in namespace prestop-8525 @ 05/05/24 13:51:07.286
  STEP: Deleting pre-stop pod @ 05/05/24 13:51:11.301
  I0505 13:51:16.339450 21 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 05/05/24 13:51:16.339
  I0505 13:51:16.351549 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-8525" for this suite. @ 05/05/24 13:51:16.36
• [21.302 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 05/05/24 13:51:16.372
  I0505 13:51:16.372067 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename dns @ 05/05/24 13:51:16.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:51:16.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:51:16.386
  STEP: Creating a test headless service @ 05/05/24 13:51:16.387
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6578.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6578.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6578.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6578.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6578.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6578.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6578.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-6578.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6578.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-6578.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 224.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.224_udp@PTR;check="$$(dig +tcp +noall +answer +search 224.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.224_tcp@PTR;sleep 1; done
   @ 05/05/24 13:51:16.399
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6578.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6578.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6578.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6578.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6578.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6578.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6578.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-6578.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6578.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-6578.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 224.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.224_udp@PTR;check="$$(dig +tcp +noall +answer +search 224.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.224_tcp@PTR;sleep 1; done
   @ 05/05/24 13:51:16.399
  STEP: creating a pod to probe DNS @ 05/05/24 13:51:16.399
  STEP: submitting the pod to kubernetes @ 05/05/24 13:51:16.399
  STEP: retrieving the pod @ 05/05/24 13:51:28.436
  STEP: looking for the results for each expected name from probers @ 05/05/24 13:51:28.438
  I0505 13:51:28.439822 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:28.444937 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:28.446938 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:28.450198 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:28.459755 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:28.462151 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:28.463374 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:28.464454 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:28.468488 21 dns_common.go:489] Lookups using dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f failed for: [wheezy_udp@dns-test-service.dns-6578.svc.cluster.local wheezy_tcp@dns-test-service.dns-6578.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local jessie_udp@dns-test-service.dns-6578.svc.cluster.local jessie_tcp@dns-test-service.dns-6578.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local]

  I0505 13:51:28.471094 21 dns_common.go:495] Pod client logs for webserver: 
  I0505 13:51:28.473415 21 dns_common.go:495] Pod client logs for querier: 
  I0505 13:51:28.476438 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0505 13:51:33.440983 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:33.442773 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:33.444235 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:33.445464 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:33.455342 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:33.457540 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:33.459367 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:33.460632 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:33.466922 21 dns_common.go:489] Lookups using dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f failed for: [wheezy_udp@dns-test-service.dns-6578.svc.cluster.local wheezy_tcp@dns-test-service.dns-6578.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local jessie_udp@dns-test-service.dns-6578.svc.cluster.local jessie_tcp@dns-test-service.dns-6578.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local]

  I0505 13:51:33.469218 21 dns_common.go:495] Pod client logs for webserver: 
  I0505 13:51:33.471583 21 dns_common.go:495] Pod client logs for querier: 
  I0505 13:51:33.473712 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0505 13:51:38.452098 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:38.454154 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:38.455775 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:38.457270 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:38.463209 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:38.464999 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:38.466464 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:38.467675 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:38.472710 21 dns_common.go:489] Lookups using dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f failed for: [wheezy_udp@dns-test-service.dns-6578.svc.cluster.local wheezy_tcp@dns-test-service.dns-6578.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local jessie_udp@dns-test-service.dns-6578.svc.cluster.local jessie_tcp@dns-test-service.dns-6578.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local]

  I0505 13:51:38.475377 21 dns_common.go:495] Pod client logs for webserver: 
  I0505 13:51:38.477646 21 dns_common.go:495] Pod client logs for querier: 
  I0505 13:51:38.480509 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0505 13:51:43.442705 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:43.445146 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:43.447610 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:43.449417 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:43.455552 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:43.456782 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:43.457940 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:43.459187 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:43.463672 21 dns_common.go:489] Lookups using dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f failed for: [wheezy_udp@dns-test-service.dns-6578.svc.cluster.local wheezy_tcp@dns-test-service.dns-6578.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local jessie_udp@dns-test-service.dns-6578.svc.cluster.local jessie_tcp@dns-test-service.dns-6578.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local]

  I0505 13:51:43.466325 21 dns_common.go:495] Pod client logs for webserver: 
  I0505 13:51:43.468412 21 dns_common.go:495] Pod client logs for querier: 
  I0505 13:51:43.470462 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0505 13:51:48.446948 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:48.449368 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:48.451254 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:48.457726 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:48.459090 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:48.461433 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local from pod dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f: the server could not find the requested resource (get pods dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f)
  I0505 13:51:48.465714 21 dns_common.go:489] Lookups using dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f failed for: [wheezy_tcp@dns-test-service.dns-6578.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local jessie_udp@dns-test-service.dns-6578.svc.cluster.local jessie_tcp@dns-test-service.dns-6578.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6578.svc.cluster.local]

  I0505 13:51:48.467964 21 dns_common.go:495] Pod client logs for webserver: 
  I0505 13:51:48.469958 21 dns_common.go:495] Pod client logs for querier: 
  I0505 13:51:48.471600 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0505 13:51:53.463193 21 dns_common.go:527] DNS probes using dns-6578/dns-test-0ab34c60-ff47-438b-9954-7fe4d4d1da2f succeeded

  STEP: deleting the pod @ 05/05/24 13:51:53.463
  STEP: deleting the test service @ 05/05/24 13:51:53.482
  STEP: deleting the test headless service @ 05/05/24 13:51:53.514
  I0505 13:51:53.523074 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6578" for this suite. @ 05/05/24 13:51:53.528
• [37.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 05/05/24 13:51:53.536
  I0505 13:51:53.536220 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename secrets @ 05/05/24 13:51:53.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:51:53.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:51:53.548
  STEP: Creating secret with name secret-test-map-f8a460e3-8694-454a-a0a6-4a4977cda483 @ 05/05/24 13:51:53.55
  STEP: Creating a pod to test consume secrets @ 05/05/24 13:51:53.553
  STEP: Saw pod success @ 05/05/24 13:51:57.567
  I0505 13:51:57.570621 21 output.go:196] Trying to get logs from node worker00 pod pod-secrets-1671328d-5db2-4ba3-bda5-3754b7da94d8 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 13:51:57.574
  I0505 13:51:57.599106 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3386" for this suite. @ 05/05/24 13:51:57.601
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 05/05/24 13:51:57.605
  I0505 13:51:57.605604 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 13:51:57.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:51:57.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:51:57.617
  STEP: starting the proxy server @ 05/05/24 13:51:57.618
  I0505 13:51:57.618258 21 util.go:592] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-1156 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 05/05/24 13:51:57.646
  I0505 13:51:57.653300 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0505 13:51:57.655127 21 kubectl.go:2228] kubectl proxy stderr: W0505 13:51:57.646569      30 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  I0505 13:51:57.655158 21 kubectl.go:2223] kubectl proxy stdout: Starting to serve on 127.0.0.1:37697

  STEP: Destroying namespace "kubectl-1156" for this suite. @ 05/05/24 13:51:57.656
• [0.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 05/05/24 13:51:57.66
  I0505 13:51:57.660491 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename init-container @ 05/05/24 13:51:57.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:51:57.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:51:57.671
  STEP: creating the pod @ 05/05/24 13:51:57.673
  I0505 13:51:57.673304 21 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0505 13:52:00.882268 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9931" for this suite. @ 05/05/24 13:52:00.886
• [3.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:833
  STEP: Creating a kubernetes client @ 05/05/24 13:52:00.89
  I0505 13:52:00.890811 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename job @ 05/05/24 13:52:00.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:52:00.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:52:00.902
  STEP: Creating a job @ 05/05/24 13:52:00.903
  STEP: Ensure pods equal to parallelism count is attached to the job @ 05/05/24 13:52:00.906
  STEP: patching /status @ 05/05/24 13:52:02.913
  STEP: updating /status @ 05/05/24 13:52:02.921
  STEP: get /status @ 05/05/24 13:52:02.926
  I0505 13:52:02.928539 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2116" for this suite. @ 05/05/24 13:52:02.93
• [2.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:348
  STEP: Creating a kubernetes client @ 05/05/24 13:52:02.934
  I0505 13:52:02.934825 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename disruption @ 05/05/24 13:52:02.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:52:02.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:52:02.945
  STEP: Creating a pdb that targets all three pods in a test replica set @ 05/05/24 13:52:02.946
  STEP: Waiting for the pdb to be processed @ 05/05/24 13:52:02.949
  STEP: First trying to evict a pod which shouldn't be evictable @ 05/05/24 13:52:04.954
  STEP: Waiting for all pods to be running @ 05/05/24 13:52:04.954
  I0505 13:52:04.956428 21 disruption.go:567] pods: 0 < 3
  STEP: locating a running pod @ 05/05/24 13:52:06.957
  STEP: Updating the pdb to allow a pod to be evicted @ 05/05/24 13:52:06.961
  STEP: Waiting for the pdb to be processed @ 05/05/24 13:52:06.966
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/05/24 13:52:08.969
  STEP: Waiting for all pods to be running @ 05/05/24 13:52:08.969
  STEP: Waiting for the pdb to observed all healthy pods @ 05/05/24 13:52:08.971
  STEP: Patching the pdb to disallow a pod to be evicted @ 05/05/24 13:52:08.984
  STEP: Waiting for the pdb to be processed @ 05/05/24 13:52:09.005
  STEP: Waiting for all pods to be running @ 05/05/24 13:52:11.015
  STEP: locating a running pod @ 05/05/24 13:52:11.02
  STEP: Deleting the pdb to allow a pod to be evicted @ 05/05/24 13:52:11.025
  STEP: Waiting for the pdb to be deleted @ 05/05/24 13:52:11.038
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/05/24 13:52:11.04
  STEP: Waiting for all pods to be running @ 05/05/24 13:52:11.04
  I0505 13:52:11.051201 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8479" for this suite. @ 05/05/24 13:52:11.053
• [8.125 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 05/05/24 13:52:11.062
  I0505 13:52:11.062101 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename pods @ 05/05/24 13:52:11.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:52:11.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:52:11.074
  STEP: creating a Pod with a static label @ 05/05/24 13:52:11.079
  STEP: watching for Pod to be ready @ 05/05/24 13:52:11.083
  I0505 13:52:11.086064 21 pods.go:945] observed Pod pod-test in namespace pods-1522 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0505 13:52:11.088049 21 pods.go:945] observed Pod pod-test in namespace pods-1522 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 13:52:11 +0000 UTC  }]
  I0505 13:52:11.096148 21 pods.go:945] observed Pod pod-test in namespace pods-1522 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 13:52:11 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 13:52:11 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 13:52:11 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 13:52:11 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 13:52:11 +0000 UTC  }]
  I0505 13:52:11.471310 21 pods.go:945] observed Pod pod-test in namespace pods-1522 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 13:52:11 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 13:52:11 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 13:52:11 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 13:52:11 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 13:52:11 +0000 UTC  }]
  I0505 13:52:11.967700 21 pods.go:948] Found Pod pod-test in namespace pods-1522 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 13:52:11 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 13:52:11 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 13:52:11 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 13:52:11 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 13:52:11 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 05/05/24 13:52:11.97
  STEP: getting the Pod and ensuring that it's patched @ 05/05/24 13:52:11.979
  STEP: replacing the Pod's status Ready condition to False @ 05/05/24 13:52:11.986
  STEP: check the Pod again to ensure its Ready conditions are False @ 05/05/24 13:52:11.995
  STEP: deleting the Pod via a Collection with a LabelSelector @ 05/05/24 13:52:11.995
  STEP: watching for the Pod to be deleted @ 05/05/24 13:52:12.001
  I0505 13:52:12.003410 21 pods.go:1058] observed event type MODIFIED
  I0505 13:52:13.959885 21 pods.go:1058] observed event type MODIFIED
  I0505 13:52:14.041203 21 pods.go:1058] observed event type MODIFIED
  I0505 13:52:14.111833 21 pods.go:1058] observed event type MODIFIED
  I0505 13:52:14.964064 21 pods.go:1058] observed event type MODIFIED
  I0505 13:52:14.970639 21 pods.go:1058] observed event type MODIFIED
  I0505 13:52:14.976161 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1522" for this suite. @ 05/05/24 13:52:14.979
• [3.925 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 05/05/24 13:52:14.987
  I0505 13:52:14.987445 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 13:52:14.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:52:15.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:52:15.005
  STEP: creating the pod @ 05/05/24 13:52:15.007
  I0505 13:52:15.007637 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-5407 create -f -'
  I0505 13:52:15.113899 21 builder.go:146] stderr: ""
  I0505 13:52:15.113944 21 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 05/05/24 13:52:17.121
  I0505 13:52:17.121984 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-5407 label pods pause testing-label=testing-label-value'
  I0505 13:52:17.172170 21 builder.go:146] stderr: ""
  I0505 13:52:17.172201 21 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 05/05/24 13:52:17.172
  I0505 13:52:17.172253 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-5407 get pod pause -L testing-label'
  I0505 13:52:17.216729 21 builder.go:146] stderr: ""
  I0505 13:52:17.216767 21 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 05/05/24 13:52:17.216
  I0505 13:52:17.216829 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-5407 label pods pause testing-label-'
  I0505 13:52:17.262263 21 builder.go:146] stderr: ""
  I0505 13:52:17.262293 21 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 05/05/24 13:52:17.262
  I0505 13:52:17.262396 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-5407 get pod pause -L testing-label'
  I0505 13:52:17.306613 21 builder.go:146] stderr: ""
  I0505 13:52:17.306643 21 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 05/05/24 13:52:17.306
  I0505 13:52:17.306752 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-5407 delete --grace-period=0 --force -f -'
  I0505 13:52:17.354483 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0505 13:52:17.354513 21 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0505 13:52:17.354568 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-5407 get rc,svc -l name=pause --no-headers'
  I0505 13:52:17.405807 21 builder.go:146] stderr: "No resources found in kubectl-5407 namespace.\n"
  I0505 13:52:17.405839 21 builder.go:147] stdout: ""
  I0505 13:52:17.405909 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-5407 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0505 13:52:17.447466 21 builder.go:146] stderr: ""
  I0505 13:52:17.447500 21 builder.go:147] stdout: ""
  I0505 13:52:17.447576 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5407" for this suite. @ 05/05/24 13:52:17.449
• [2.467 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 05/05/24 13:52:17.453
  I0505 13:52:17.453638 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename subpath @ 05/05/24 13:52:17.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:52:17.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:52:17.466
  STEP: Setting up data @ 05/05/24 13:52:17.468
  STEP: Creating pod pod-subpath-test-downwardapi-rgc5 @ 05/05/24 13:52:17.475
  STEP: Creating a pod to test atomic-volume-subpath @ 05/05/24 13:52:17.475
  STEP: Saw pod success @ 05/05/24 13:52:41.543
  I0505 13:52:41.545156 21 output.go:196] Trying to get logs from node worker00 pod pod-subpath-test-downwardapi-rgc5 container test-container-subpath-downwardapi-rgc5: <nil>
  STEP: delete the pod @ 05/05/24 13:52:41.548
  STEP: Deleting pod pod-subpath-test-downwardapi-rgc5 @ 05/05/24 13:52:41.567
  I0505 13:52:41.567443 21 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-rgc5" in namespace "subpath-1317"
  I0505 13:52:41.569104 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1317" for this suite. @ 05/05/24 13:52:41.57
• [24.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 05/05/24 13:52:41.573
  I0505 13:52:41.573955 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 13:52:41.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:52:41.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:52:41.583
  STEP: validating cluster-info @ 05/05/24 13:52:41.584
  I0505 13:52:41.584611 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-9938 cluster-info'
  I0505 13:52:41.619692 21 builder.go:146] stderr: ""
  I0505 13:52:41.619724 21 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.32.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0505 13:52:41.619797 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9938" for this suite. @ 05/05/24 13:52:41.621
• [0.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 05/05/24 13:52:41.624
  I0505 13:52:41.624997 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename kubelet-test @ 05/05/24 13:52:41.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:52:41.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:52:41.634
  I0505 13:52:45.644402 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8618" for this suite. @ 05/05/24 13:52:45.648
• [4.038 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 05/05/24 13:52:45.663
  I0505 13:52:45.663038 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename pods @ 05/05/24 13:52:45.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:52:45.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:52:45.676
  I0505 13:52:45.678088 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: creating the pod @ 05/05/24 13:52:45.678
  STEP: submitting the pod to kubernetes @ 05/05/24 13:52:45.678
  I0505 13:52:47.699138 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2843" for this suite. @ 05/05/24 13:52:47.701
• [2.051 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 05/05/24 13:52:47.714
  I0505 13:52:47.714037 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename configmap @ 05/05/24 13:52:47.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:52:47.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:52:47.723
  STEP: Creating configMap with name configmap-test-upd-302d6b0c-7678-418d-9bd6-0677cf3b18c6 @ 05/05/24 13:52:47.726
  STEP: Creating the pod @ 05/05/24 13:52:47.729
  STEP: Updating configmap configmap-test-upd-302d6b0c-7678-418d-9bd6-0677cf3b18c6 @ 05/05/24 13:52:49.743
  STEP: waiting to observe update in volume @ 05/05/24 13:52:49.757
  I0505 13:52:51.769079 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-601" for this suite. @ 05/05/24 13:52:51.772
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 05/05/24 13:52:51.789
  I0505 13:52:51.789702 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename configmap @ 05/05/24 13:52:51.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:52:51.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:52:51.802
  STEP: Creating configMap with name configmap-test-volume-map-ff87d982-a073-4442-963b-387cd4b2123e @ 05/05/24 13:52:51.803
  STEP: Creating a pod to test consume configMaps @ 05/05/24 13:52:51.806
  STEP: Saw pod success @ 05/05/24 13:52:55.818
  I0505 13:52:55.820581 21 output.go:196] Trying to get logs from node worker00 pod pod-configmaps-7fc10f9c-24ce-43ec-8a7f-02e17c81790d container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 13:52:55.824
  I0505 13:52:55.834770 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6639" for this suite. @ 05/05/24 13:52:55.837
• [4.051 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 05/05/24 13:52:55.841
  I0505 13:52:55.841196 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename field-validation @ 05/05/24 13:52:55.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:52:55.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:52:55.852
  I0505 13:52:55.855251 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  W0505 13:52:58.395422      21 warnings.go:70] unknown field "alpha"
  W0505 13:52:58.395558      21 warnings.go:70] unknown field "beta"
  W0505 13:52:58.395596      21 warnings.go:70] unknown field "delta"
  W0505 13:52:58.395607      21 warnings.go:70] unknown field "epsilon"
  W0505 13:52:58.395629      21 warnings.go:70] unknown field "gamma"
  I0505 13:52:58.928611 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6311" for this suite. @ 05/05/24 13:52:58.932
• [3.108 seconds]
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:707
  STEP: Creating a kubernetes client @ 05/05/24 13:52:58.949
  I0505 13:52:58.950039 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename sched-pred @ 05/05/24 13:52:58.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:52:58.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:52:58.959
  I0505 13:52:58.961165 21 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0505 13:52:58.963456 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I0505 13:52:58.964671 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node worker00 before test
  I0505 13:52:58.968972 21 predicates.go:887] etcd-worker00 from kube-system started at 2024-05-05 13:40:24 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.969028 21 predicates.go:889] 	Container etcd ready: true, restart count 0
  I0505 13:52:58.969036 21 predicates.go:887] gobetween-worker00 from kube-system started at 2024-05-05 13:40:24 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.969041 21 predicates.go:889] 	Container gobetween ready: true, restart count 0
  I0505 13:52:58.969047 21 predicates.go:887] kube-apiserver-worker00 from kube-system started at 2024-05-05 13:40:24 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.969052 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 0
  I0505 13:52:58.969066 21 predicates.go:887] kube-controller-manager-worker00 from kube-system started at 2024-05-05 13:40:24 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.969070 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 0
  I0505 13:52:58.969076 21 predicates.go:887] kube-proxy-worker00 from kube-system started at 2024-05-05 13:40:24 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.969080 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0505 13:52:58.969085 21 predicates.go:887] kube-scheduler-worker00 from kube-system started at 2024-05-05 13:40:24 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.969090 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 0
  I0505 13:52:58.969095 21 predicates.go:887] kubernetes-dashboard-api-dbd5d8954-vgnfp from kube-system started at 2024-05-05 13:46:41 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.969100 21 predicates.go:889] 	Container kubernetes-dashboard-api ready: true, restart count 0
  I0505 13:52:58.969105 21 predicates.go:887] kubernetes-dashboard-auth-585b4bc77c-kktrh from kube-system started at 2024-05-05 13:46:41 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.969109 21 predicates.go:889] 	Container kubernetes-dashboard-auth ready: true, restart count 0
  I0505 13:52:58.969115 21 predicates.go:887] kubernetes-dashboard-kong-58c7df5b9-w2hw4 from kube-system started at 2024-05-05 13:46:41 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.969120 21 predicates.go:889] 	Container proxy ready: true, restart count 0
  I0505 13:52:58.969125 21 predicates.go:887] kubernetes-dashboard-metrics-scraper-6786f55f8b-rs6dg from kube-system started at 2024-05-05 13:46:41 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.969130 21 predicates.go:889] 	Container kubernetes-dashboard-metrics-scraper ready: true, restart count 0
  I0505 13:52:58.969135 21 predicates.go:887] kubernetes-dashboard-web-84b47c879-6vh7n from kube-system started at 2024-05-05 13:46:41 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.969139 21 predicates.go:889] 	Container kubernetes-dashboard-web ready: true, restart count 0
  I0505 13:52:58.969145 21 predicates.go:887] calico-node-nzckb from networking started at 2024-05-05 13:41:30 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.969150 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0505 13:52:58.969155 21 predicates.go:887] metallb-speaker-rt799 from networking started at 2024-05-05 13:42:07 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.969159 21 predicates.go:889] 	Container speaker ready: true, restart count 0
  I0505 13:52:58.969164 21 predicates.go:887] pod-logs-websocket-462fee4f-3149-4692-8329-273648b8a576 from pods-2843 started at 2024-05-05 13:52:45 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.969169 21 predicates.go:889] 	Container main ready: true, restart count 0
  I0505 13:52:58.969174 21 predicates.go:887] sonobuoy from sonobuoy started at 2024-05-05 13:49:53 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.969178 21 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0505 13:52:58.969183 21 predicates.go:887] sonobuoy-e2e-job-9197e61553eb4047 from sonobuoy started at 2024-05-05 13:50:00 +0000 UTC (2 container statuses recorded)
  I0505 13:52:58.969189 21 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0505 13:52:58.969194 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0505 13:52:58.969199 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-85bf87e40a77455e-sbld9 from sonobuoy started at 2024-05-05 13:50:00 +0000 UTC (2 container statuses recorded)
  I0505 13:52:58.969203 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0505 13:52:58.969208 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0505 13:52:58.969213 21 predicates.go:887] ceph-csi-cephfs-nodeplugin-w9rfl from storage started at 2024-05-05 13:41:30 +0000 UTC (3 container statuses recorded)
  I0505 13:52:58.969218 21 predicates.go:889] 	Container csi-cephfsplugin ready: true, restart count 0
  I0505 13:52:58.969222 21 predicates.go:889] 	Container driver-registrar ready: true, restart count 0
  I0505 13:52:58.969227 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 13:52:58.969232 21 predicates.go:887] ceph-csi-rbd-nodeplugin-rnrwv from storage started at 2024-05-05 13:41:30 +0000 UTC (3 container statuses recorded)
  I0505 13:52:58.969236 21 predicates.go:889] 	Container csi-rbdplugin ready: true, restart count 0
  I0505 13:52:58.969241 21 predicates.go:889] 	Container driver-registrar ready: true, restart count 0
  I0505 13:52:58.969254 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 13:52:58.969259 21 predicates.go:887] ceph-mon-worker00-7ffccc7445-thfnd from storage started at 2024-05-05 13:41:30 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.969264 21 predicates.go:889] 	Container ceph-mon ready: true, restart count 0
  I0505 13:52:58.969269 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node worker01 before test
  I0505 13:52:58.975569 21 predicates.go:887] coredns-5454f94b99-7sspb from kube-system started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.975593 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0505 13:52:58.975600 21 predicates.go:887] coredns-5454f94b99-gfmxs from kube-system started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.975605 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0505 13:52:58.975610 21 predicates.go:887] gobetween-worker01 from kube-system started at 2024-05-05 13:40:33 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.975615 21 predicates.go:889] 	Container gobetween ready: true, restart count 0
  I0505 13:52:58.975621 21 predicates.go:887] kube-proxy-worker01 from kube-system started at 2024-05-05 13:40:33 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.975626 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0505 13:52:58.975631 21 predicates.go:887] calico-kube-controllers-54f5554fcd-n22s4 from networking started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.975636 21 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I0505 13:52:58.975641 21 predicates.go:887] calico-node-t86wj from networking started at 2024-05-05 13:41:23 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.975646 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0505 13:52:58.975651 21 predicates.go:887] calico-typha-9497885f9-hncqt from networking started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.975655 21 predicates.go:889] 	Container calico-typha ready: true, restart count 0
  I0505 13:52:58.975661 21 predicates.go:887] metallb-controller-6d48ffccb-k944q from networking started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.975666 21 predicates.go:889] 	Container controller ready: true, restart count 0
  I0505 13:52:58.975671 21 predicates.go:887] metallb-speaker-rnkpg from networking started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.975676 21 predicates.go:889] 	Container speaker ready: true, restart count 0
  I0505 13:52:58.975681 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-85bf87e40a77455e-g4jkd from sonobuoy started at 2024-05-05 13:50:00 +0000 UTC (2 container statuses recorded)
  I0505 13:52:58.975686 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0505 13:52:58.975691 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0505 13:52:58.975696 21 predicates.go:887] ceph-csi-cephfs-nodeplugin-nq2zf from storage started at 2024-05-05 13:41:23 +0000 UTC (3 container statuses recorded)
  I0505 13:52:58.975701 21 predicates.go:889] 	Container csi-cephfsplugin ready: true, restart count 0
  I0505 13:52:58.975706 21 predicates.go:889] 	Container driver-registrar ready: true, restart count 0
  I0505 13:52:58.975711 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 13:52:58.975716 21 predicates.go:887] ceph-csi-cephfs-provisioner-68989c6cdd-gzwkq from storage started at 2024-05-05 13:41:23 +0000 UTC (5 container statuses recorded)
  I0505 13:52:58.975721 21 predicates.go:889] 	Container csi-cephfsplugin ready: true, restart count 0
  I0505 13:52:58.975735 21 predicates.go:889] 	Container csi-provisioner ready: true, restart count 0
  I0505 13:52:58.975742 21 predicates.go:889] 	Container csi-resizer ready: true, restart count 0
  I0505 13:52:58.975747 21 predicates.go:889] 	Container csi-snapshotter ready: true, restart count 0
  I0505 13:52:58.975752 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 13:52:58.975758 21 predicates.go:887] ceph-csi-cephfs-provisioner-68989c6cdd-jqkfb from storage started at 2024-05-05 13:41:23 +0000 UTC (5 container statuses recorded)
  I0505 13:52:58.975763 21 predicates.go:889] 	Container csi-cephfsplugin ready: true, restart count 0
  I0505 13:52:58.975768 21 predicates.go:889] 	Container csi-provisioner ready: true, restart count 0
  I0505 13:52:58.975799 21 predicates.go:889] 	Container csi-resizer ready: true, restart count 0
  I0505 13:52:58.975804 21 predicates.go:889] 	Container csi-snapshotter ready: true, restart count 0
  I0505 13:52:58.975828 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 13:52:58.975834 21 predicates.go:887] ceph-csi-cephfs-provisioner-68989c6cdd-k5mkr from storage started at 2024-05-05 13:41:23 +0000 UTC (5 container statuses recorded)
  I0505 13:52:58.975839 21 predicates.go:889] 	Container csi-cephfsplugin ready: true, restart count 0
  I0505 13:52:58.975845 21 predicates.go:889] 	Container csi-provisioner ready: true, restart count 0
  I0505 13:52:58.975859 21 predicates.go:889] 	Container csi-resizer ready: true, restart count 0
  I0505 13:52:58.975867 21 predicates.go:889] 	Container csi-snapshotter ready: true, restart count 0
  I0505 13:52:58.975872 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 13:52:58.975877 21 predicates.go:887] ceph-csi-rbd-nodeplugin-wqjcz from storage started at 2024-05-05 13:41:23 +0000 UTC (3 container statuses recorded)
  I0505 13:52:58.975890 21 predicates.go:889] 	Container csi-rbdplugin ready: true, restart count 0
  I0505 13:52:58.975896 21 predicates.go:889] 	Container driver-registrar ready: true, restart count 0
  I0505 13:52:58.976046 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 13:52:58.976056 21 predicates.go:887] ceph-csi-rbd-provisioner-7c49d466f9-29f9z from storage started at 2024-05-05 13:41:24 +0000 UTC (7 container statuses recorded)
  I0505 13:52:58.976071 21 predicates.go:889] 	Container csi-attacher ready: true, restart count 0
  I0505 13:52:58.976077 21 predicates.go:889] 	Container csi-provisioner ready: true, restart count 0
  I0505 13:52:58.976344 21 predicates.go:889] 	Container csi-rbdplugin ready: true, restart count 0
  I0505 13:52:58.976352 21 predicates.go:889] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0505 13:52:58.976357 21 predicates.go:889] 	Container csi-resizer ready: true, restart count 0
  I0505 13:52:58.976362 21 predicates.go:889] 	Container csi-snapshotter ready: true, restart count 0
  I0505 13:52:58.976615 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 13:52:58.976624 21 predicates.go:887] ceph-csi-rbd-provisioner-7c49d466f9-7kxgr from storage started at 2024-05-05 13:41:24 +0000 UTC (7 container statuses recorded)
  I0505 13:52:58.976628 21 predicates.go:889] 	Container csi-attacher ready: true, restart count 0
  I0505 13:52:58.976634 21 predicates.go:889] 	Container csi-provisioner ready: true, restart count 0
  I0505 13:52:58.976638 21 predicates.go:889] 	Container csi-rbdplugin ready: true, restart count 0
  I0505 13:52:58.976643 21 predicates.go:889] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0505 13:52:58.976648 21 predicates.go:889] 	Container csi-resizer ready: true, restart count 0
  I0505 13:52:58.976653 21 predicates.go:889] 	Container csi-snapshotter ready: true, restart count 0
  I0505 13:52:58.976657 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 13:52:58.976663 21 predicates.go:887] ceph-csi-rbd-provisioner-7c49d466f9-vlfxl from storage started at 2024-05-05 13:41:24 +0000 UTC (7 container statuses recorded)
  I0505 13:52:58.976667 21 predicates.go:889] 	Container csi-attacher ready: true, restart count 0
  I0505 13:52:58.976672 21 predicates.go:889] 	Container csi-provisioner ready: true, restart count 0
  I0505 13:52:58.976677 21 predicates.go:889] 	Container csi-rbdplugin ready: true, restart count 0
  I0505 13:52:58.976681 21 predicates.go:889] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0505 13:52:58.976687 21 predicates.go:889] 	Container csi-resizer ready: true, restart count 0
  I0505 13:52:58.976692 21 predicates.go:889] 	Container csi-snapshotter ready: true, restart count 0
  I0505 13:52:58.976697 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 13:52:58.976702 21 predicates.go:887] ceph-mds-worker01-75d7657797-c5c2m from storage started at 2024-05-05 13:41:24 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.976707 21 predicates.go:889] 	Container ceph-mds ready: true, restart count 0
  I0505 13:52:58.976712 21 predicates.go:887] ceph-mgr-worker01-58c6d8747b-m689f from storage started at 2024-05-05 13:41:24 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.976717 21 predicates.go:889] 	Container ceph-mgr ready: true, restart count 1
  I0505 13:52:58.976897 21 predicates.go:887] ceph-osd-worker01-796758b4b5-25p7m from storage started at 2024-05-05 13:41:24 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.976903 21 predicates.go:889] 	Container ceph-osd ready: true, restart count 0
  I0505 13:52:58.976909 21 predicates.go:887] ceph-rgw-worker01-d6dd485ff-7lnjl from storage started at 2024-05-05 13:41:24 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.976913 21 predicates.go:889] 	Container ceph-rgw ready: true, restart count 0
  I0505 13:52:58.976919 21 predicates.go:887] ceph-setup-wmkcq from storage started at 2024-05-05 13:41:23 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.976924 21 predicates.go:889] 	Container ceph ready: false, restart count 0
  I0505 13:52:58.976929 21 predicates.go:887] snapshot-controller-77c9f4c8d6-84v87 from storage started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.976935 21 predicates.go:889] 	Container snapshot-controller ready: true, restart count 0
  I0505 13:52:58.976940 21 predicates.go:887] snapshot-controller-77c9f4c8d6-j7qcs from storage started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.976945 21 predicates.go:889] 	Container snapshot-controller ready: true, restart count 0
  I0505 13:52:58.977113 21 predicates.go:887] snapshot-validation-webhook-865bb6896-dbmxh from storage started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 13:52:58.977122 21 predicates.go:889] 	Container snapshot-validation-webhook ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/05/24 13:52:58.977
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/05/24 13:53:00.993
  STEP: Trying to apply a random label on the found node. @ 05/05/24 13:53:01.004
  STEP: verifying the node has the label kubernetes.io/e2e-c0048c2b-f09e-476e-aab5-d9c8511aa38c 95 @ 05/05/24 13:53:01.012
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 05/05/24 13:53:01.021
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.58.100 on the node which pod4 resides and expect not scheduled @ 05/05/24 13:53:03.033
  STEP: removing the label kubernetes.io/e2e-c0048c2b-f09e-476e-aab5-d9c8511aa38c off the node worker00 @ 05/05/24 13:58:03.042
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-c0048c2b-f09e-476e-aab5-d9c8511aa38c @ 05/05/24 13:58:03.053
  I0505 13:58:03.059066 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8838" for this suite. @ 05/05/24 13:58:03.061
• [304.117 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 05/05/24 13:58:03.067
  I0505 13:58:03.067631 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 13:58:03.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:58:03.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:58:03.078
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/05/24 13:58:03.08
  STEP: Saw pod success @ 05/05/24 13:58:07.096
  I0505 13:58:07.101060 21 output.go:196] Trying to get logs from node worker00 pod pod-2d2ea1b7-f233-4eae-8f6a-2deed85b557b container test-container: <nil>
  STEP: delete the pod @ 05/05/24 13:58:07.106
  I0505 13:58:07.114265 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8593" for this suite. @ 05/05/24 13:58:07.116
• [4.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 05/05/24 13:58:07.121
  I0505 13:58:07.121556 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename resourcequota @ 05/05/24 13:58:07.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:58:07.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:58:07.132
  STEP: Counting existing ResourceQuota @ 05/05/24 13:58:24.138
  STEP: Creating a ResourceQuota @ 05/05/24 13:58:29.142
  STEP: Ensuring resource quota status is calculated @ 05/05/24 13:58:29.158
  STEP: Creating a ConfigMap @ 05/05/24 13:58:31.17
  STEP: Ensuring resource quota status captures configMap creation @ 05/05/24 13:58:31.198
  STEP: Deleting a ConfigMap @ 05/05/24 13:58:33.205
  STEP: Ensuring resource quota status released usage @ 05/05/24 13:58:33.221
  I0505 13:58:35.230445 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3296" for this suite. @ 05/05/24 13:58:35.234
• [28.119 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 05/05/24 13:58:35.24
  I0505 13:58:35.240489 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename statefulset @ 05/05/24 13:58:35.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:58:35.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:58:35.25
  STEP: Creating service test in namespace statefulset-1072 @ 05/05/24 13:58:35.252
  STEP: Creating statefulset ss in namespace statefulset-1072 @ 05/05/24 13:58:35.255
  I0505 13:58:35.264362 21 wait.go:40] Found 0 stateful pods, waiting for 1
  I0505 13:58:45.267263 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 05/05/24 13:58:45.273
  STEP: updating a scale subresource @ 05/05/24 13:58:45.276
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/05/24 13:58:45.292
  STEP: Patch a scale subresource @ 05/05/24 13:58:45.294
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/05/24 13:58:45.299
  I0505 13:58:45.302012 21 statefulset.go:135] Deleting all statefulset in ns statefulset-1072
  I0505 13:58:45.303370 21 rest.go:150] Scaling statefulset ss to 0
  I0505 13:58:55.314334 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0505 13:58:55.317477 21 rest.go:88] Deleting statefulset ss
  I0505 13:58:55.339770 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1072" for this suite. @ 05/05/24 13:58:55.342
• [20.106 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 05/05/24 13:58:55.346
  I0505 13:58:55.346377 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename pods @ 05/05/24 13:58:55.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:58:55.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:58:55.357
  STEP: creating the pod @ 05/05/24 13:58:55.358
  STEP: submitting the pod to kubernetes @ 05/05/24 13:58:55.358
  STEP: verifying QOS class is set on the pod @ 05/05/24 13:58:55.362
  I0505 13:58:55.364965 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3566" for this suite. @ 05/05/24 13:58:55.369
• [0.027 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 05/05/24 13:58:55.373
  I0505 13:58:55.373725 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/05/24 13:58:55.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:58:55.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:58:55.387
  STEP: create the container to handle the HTTPGet hook request. @ 05/05/24 13:58:55.391
  STEP: create the pod with lifecycle hook @ 05/05/24 13:58:57.404
  STEP: delete the pod with lifecycle hook @ 05/05/24 13:58:59.417
  STEP: check prestop hook @ 05/05/24 13:59:01.43
  I0505 13:59:01.444503 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2266" for this suite. @ 05/05/24 13:59:01.446
• [6.077 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 05/05/24 13:59:01.45
  I0505 13:59:01.450937 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename configmap @ 05/05/24 13:59:01.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:59:01.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:59:01.46
  STEP: Creating configMap with name configmap-test-volume-map-418884e4-c251-4c62-88ee-cdc5fea4993a @ 05/05/24 13:59:01.462
  STEP: Creating a pod to test consume configMaps @ 05/05/24 13:59:01.464
  STEP: Saw pod success @ 05/05/24 13:59:05.479
  I0505 13:59:05.482680 21 output.go:196] Trying to get logs from node worker00 pod pod-configmaps-f6a3c0f9-c631-4e2d-943e-7cedc8958148 container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 13:59:05.487
  I0505 13:59:05.494908 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-435" for this suite. @ 05/05/24 13:59:05.497
• [4.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:766
  STEP: Creating a kubernetes client @ 05/05/24 13:59:05.502
  I0505 13:59:05.502264 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename webhook @ 05/05/24 13:59:05.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:59:05.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:59:05.511
  STEP: Setting up server cert @ 05/05/24 13:59:05.522
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 13:59:05.807
  STEP: Deploying the webhook pod @ 05/05/24 13:59:05.811
  STEP: Wait for the deployment to be ready @ 05/05/24 13:59:05.815
  I0505 13:59:05.818182 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/05/24 13:59:07.831
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 13:59:07.838
  I0505 13:59:08.839762 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/05/24 13:59:08.847
  STEP: verifying the mutating webhook match conditions @ 05/05/24 13:59:08.86
  STEP: updating the mutating webhook match conditions @ 05/05/24 13:59:08.863
  STEP: verifying the mutating webhook match conditions @ 05/05/24 13:59:08.866
  I0505 13:59:08.896568 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8826" for this suite. @ 05/05/24 13:59:08.899
  STEP: Destroying namespace "webhook-markers-8735" for this suite. @ 05/05/24 13:59:08.901
• [3.404 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 05/05/24 13:59:08.908
  I0505 13:59:08.908091 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 13:59:08.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:59:08.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:59:08.923
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/05/24 13:59:08.925
  STEP: Saw pod success @ 05/05/24 13:59:10.937
  I0505 13:59:10.941095 21 output.go:196] Trying to get logs from node worker00 pod pod-6c63446c-bef6-4884-b360-79c491588104 container test-container: <nil>
  STEP: delete the pod @ 05/05/24 13:59:10.945
  I0505 13:59:10.958105 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3535" for this suite. @ 05/05/24 13:59:10.96
• [2.055 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 05/05/24 13:59:10.963
  I0505 13:59:10.963769 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename webhook @ 05/05/24 13:59:10.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:59:10.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:59:10.975
  STEP: Setting up server cert @ 05/05/24 13:59:10.984
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 13:59:11.083
  STEP: Deploying the webhook pod @ 05/05/24 13:59:11.087
  STEP: Wait for the deployment to be ready @ 05/05/24 13:59:11.092
  I0505 13:59:11.095638 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/05/24 13:59:13.106
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 13:59:13.127
  I0505 13:59:14.127981 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/05/24 13:59:14.135
  STEP: create the configmap with a random name @ 05/05/24 13:59:14.152
  STEP: verify the configmap is mutated @ 05/05/24 13:59:14.159
  STEP: create the configmap with 'skip-me' name @ 05/05/24 13:59:14.159
  I0505 13:59:14.186967 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5358" for this suite. @ 05/05/24 13:59:14.189
  STEP: Destroying namespace "webhook-markers-2741" for this suite. @ 05/05/24 13:59:14.192
• [3.234 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 05/05/24 13:59:14.198
  I0505 13:59:14.198610 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 13:59:14.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:59:14.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:59:14.21
  STEP: Creating a pod to test downward api env vars @ 05/05/24 13:59:14.212
  STEP: Saw pod success @ 05/05/24 13:59:18.228
  I0505 13:59:18.235024 21 output.go:196] Trying to get logs from node worker00 pod downward-api-221607a0-a86d-4f0e-a916-adb19e365382 container dapi-container: <nil>
  STEP: delete the pod @ 05/05/24 13:59:18.242
  I0505 13:59:18.261685 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8478" for this suite. @ 05/05/24 13:59:18.263
• [4.069 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 05/05/24 13:59:18.267
  I0505 13:59:18.267474 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 13:59:18.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:59:18.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:59:18.279
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 13:59:18.28
  STEP: Saw pod success @ 05/05/24 13:59:22.297
  I0505 13:59:22.300465 21 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-502ce67b-65ec-4489-bb3b-cc7a324aff61 container client-container: <nil>
  STEP: delete the pod @ 05/05/24 13:59:22.304
  I0505 13:59:22.313675 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5813" for this suite. @ 05/05/24 13:59:22.315
• [4.050 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 05/05/24 13:59:22.317
  I0505 13:59:22.317970 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename disruption @ 05/05/24 13:59:22.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:59:22.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:59:22.328
  STEP: Creating a kubernetes client @ 05/05/24 13:59:22.33
  I0505 13:59:22.330273 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename disruption-2 @ 05/05/24 13:59:22.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:59:22.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:59:22.338
  STEP: Waiting for the pdb to be processed @ 05/05/24 13:59:22.342
  STEP: Waiting for the pdb to be processed @ 05/05/24 13:59:24.362
  STEP: Waiting for the pdb to be processed @ 05/05/24 13:59:26.386
  STEP: listing a collection of PDBs across all namespaces @ 05/05/24 13:59:28.387
  STEP: listing a collection of PDBs in namespace disruption-9387 @ 05/05/24 13:59:28.388
  STEP: deleting a collection of PDBs @ 05/05/24 13:59:28.389
  STEP: Waiting for the PDB collection to be deleted @ 05/05/24 13:59:28.404
  I0505 13:59:28.405166 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-2503" for this suite. @ 05/05/24 13:59:28.406
  I0505 13:59:28.408440 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9387" for this suite. @ 05/05/24 13:59:28.409
• [6.094 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 05/05/24 13:59:28.412
  I0505 13:59:28.412169 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename sched-preemption @ 05/05/24 13:59:28.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 13:59:28.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 13:59:28.423
  I0505 13:59:28.429026 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0505 14:00:28.433003 21 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/05/24 14:00:28.448
  I0505 14:00:28.448296 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/05/24 14:00:28.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:00:28.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:00:28.464
  STEP: Finding an available node @ 05/05/24 14:00:28.466
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/05/24 14:00:28.466
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/05/24 14:00:30.479
  I0505 14:00:30.488621 21 preemption.go:583] found a healthy node: worker00
  I0505 14:00:36.556761 21 preemption.go:706] pods created so far: [1 1 1]
  I0505 14:00:36.556837 21 preemption.go:707] length of pods created so far: 3
  I0505 14:00:38.579816 21 preemption.go:724] pods created so far: [2 2 1]
  I0505 14:00:45.634848 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9890" for this suite. @ 05/05/24 14:00:45.636
  I0505 14:00:45.641267 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7924" for this suite. @ 05/05/24 14:00:45.642
• [77.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 05/05/24 14:00:45.646
  I0505 14:00:45.646632 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename kubectl-logs @ 05/05/24 14:00:45.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:00:45.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:00:45.659
  STEP: creating an pod @ 05/05/24 14:00:45.66
  I0505 14:00:45.660838 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-logs-1565 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0505 14:00:45.708654 21 builder.go:146] stderr: ""
  I0505 14:00:45.708683 21 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 05/05/24 14:00:45.708
  I0505 14:00:45.708887 21 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0505 14:00:47.717509 21 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 05/05/24 14:00:47.717
  I0505 14:00:47.717730 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-logs-1565 logs logs-generator logs-generator'
  I0505 14:00:47.776200 21 builder.go:146] stderr: ""
  I0505 14:00:47.776249 21 builder.go:147] stdout: "I0505 14:00:46.241286       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/p2x 548\nI0505 14:00:46.441648       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/dxc 294\nI0505 14:00:46.641448       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/c9n 539\nI0505 14:00:46.842261       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/qkl7 508\nI0505 14:00:47.042386       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/hd56 500\nI0505 14:00:47.242447       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/t545 342\nI0505 14:00:47.442408       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/qxzf 524\nI0505 14:00:47.641671       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/tj2 400\n"
  STEP: limiting log lines @ 05/05/24 14:00:47.776
  I0505 14:00:47.776325 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-logs-1565 logs logs-generator logs-generator --tail=1'
  I0505 14:00:47.819646 21 builder.go:146] stderr: ""
  I0505 14:00:47.819679 21 builder.go:147] stdout: "I0505 14:00:47.641671       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/tj2 400\n"
  I0505 14:00:47.819689 21 logs.go:127] got output "I0505 14:00:47.641671       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/tj2 400\n"
  STEP: limiting log bytes @ 05/05/24 14:00:47.819
  I0505 14:00:47.819745 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-logs-1565 logs logs-generator logs-generator --limit-bytes=1'
  I0505 14:00:47.860685 21 builder.go:146] stderr: ""
  I0505 14:00:47.860714 21 builder.go:147] stdout: "I"
  I0505 14:00:47.860722 21 logs.go:133] got output "I"
  STEP: exposing timestamps @ 05/05/24 14:00:47.86
  I0505 14:00:47.860773 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-logs-1565 logs logs-generator logs-generator --tail=1 --timestamps'
  I0505 14:00:47.903543 21 builder.go:146] stderr: ""
  I0505 14:00:47.903597 21 builder.go:147] stdout: "2024-05-05T14:00:47.842275244Z I0505 14:00:47.842177       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/lzd 493\n"
  I0505 14:00:47.903606 21 logs.go:139] got output "2024-05-05T14:00:47.842275244Z I0505 14:00:47.842177       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/lzd 493\n"
  STEP: restricting to a time range @ 05/05/24 14:00:47.903
  I0505 14:00:50.406337 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-logs-1565 logs logs-generator logs-generator --since=1s'
  I0505 14:00:50.462607 21 builder.go:146] stderr: ""
  I0505 14:00:50.462640 21 builder.go:147] stdout: "I0505 14:00:49.641477       1 logs_generator.go:76] 17 GET /api/v1/namespaces/kube-system/pods/glw 399\nI0505 14:00:49.842249       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/5cd9 595\nI0505 14:00:50.041993       1 logs_generator.go:76] 19 POST /api/v1/namespaces/ns/pods/4h4 295\nI0505 14:00:50.241639       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/qzn 391\nI0505 14:00:50.443936       1 logs_generator.go:76] 21 POST /api/v1/namespaces/ns/pods/rjcc 201\n"
  I0505 14:00:50.462671 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-logs-1565 logs logs-generator logs-generator --since=24h'
  I0505 14:00:50.502193 21 builder.go:146] stderr: ""
  I0505 14:00:50.502230 21 builder.go:147] stdout: "I0505 14:00:46.241286       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/p2x 548\nI0505 14:00:46.441648       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/dxc 294\nI0505 14:00:46.641448       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/c9n 539\nI0505 14:00:46.842261       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/qkl7 508\nI0505 14:00:47.042386       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/hd56 500\nI0505 14:00:47.242447       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/t545 342\nI0505 14:00:47.442408       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/qxzf 524\nI0505 14:00:47.641671       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/tj2 400\nI0505 14:00:47.842177       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/lzd 493\nI0505 14:00:48.041795       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/bm4 556\nI0505 14:00:48.241466       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/kube-system/pods/kdn7 252\nI0505 14:00:48.442353       1 logs_generator.go:76] 11 POST /api/v1/namespaces/kube-system/pods/dv6g 448\nI0505 14:00:48.651495       1 logs_generator.go:76] 12 GET /api/v1/namespaces/kube-system/pods/2vw 253\nI0505 14:00:48.842025       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/ns/pods/6ss 500\nI0505 14:00:49.053561       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/kube-system/pods/nl6 577\nI0505 14:00:49.242033       1 logs_generator.go:76] 15 POST /api/v1/namespaces/kube-system/pods/vpl 459\nI0505 14:00:49.441615       1 logs_generator.go:76] 16 POST /api/v1/namespaces/ns/pods/2jl 550\nI0505 14:00:49.641477       1 logs_generator.go:76] 17 GET /api/v1/namespaces/kube-system/pods/glw 399\nI0505 14:00:49.842249       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/5cd9 595\nI0505 14:00:50.041993       1 logs_generator.go:76] 19 POST /api/v1/namespaces/ns/pods/4h4 295\nI0505 14:00:50.241639       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/qzn 391\nI0505 14:00:50.443936       1 logs_generator.go:76] 21 POST /api/v1/namespaces/ns/pods/rjcc 201\n"
  I0505 14:00:50.502311 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-logs-1565 delete pod logs-generator'
  I0505 14:00:51.230956 21 builder.go:146] stderr: ""
  I0505 14:00:51.231001 21 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0505 14:00:51.231125 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-1565" for this suite. @ 05/05/24 14:00:51.234
• [5.593 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 05/05/24 14:00:51.243
  I0505 14:00:51.243699 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename container-runtime @ 05/05/24 14:00:51.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:00:51.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:00:51.263
  STEP: create the container @ 05/05/24 14:00:51.266
  W0505 14:00:51.273150      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/05/24 14:00:51.273
  STEP: get the container status @ 05/05/24 14:00:54.285
  STEP: the container should be terminated @ 05/05/24 14:00:54.288
  STEP: the termination message should be set @ 05/05/24 14:00:54.288
  I0505 14:00:54.288754 21 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/05/24 14:00:54.288
  I0505 14:00:54.297675 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4565" for this suite. @ 05/05/24 14:00:54.299
• [3.087 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:927
  STEP: Creating a kubernetes client @ 05/05/24 14:00:54.329
  I0505 14:00:54.329386 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename job @ 05/05/24 14:00:54.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:00:54.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:00:54.342
  STEP: Creating a suspended job @ 05/05/24 14:00:54.346
  STEP: Patching the Job @ 05/05/24 14:00:54.349
  STEP: Watching for Job to be patched @ 05/05/24 14:00:54.357
  I0505 14:00:54.359279 21 job.go:1109] Event ADDED observed for Job e2e-hg56q in namespace job-2505 with labels: map[e2e-job-label:e2e-hg56q] and annotations: map[]
  I0505 14:00:54.359310 21 job.go:1109] Event MODIFIED observed for Job e2e-hg56q in namespace job-2505 with labels: map[e2e-job-label:e2e-hg56q] and annotations: map[]
  I0505 14:00:54.359336 21 job.go:1112] Event MODIFIED found for Job e2e-hg56q in namespace job-2505 with labels: map[e2e-hg56q:patched e2e-job-label:e2e-hg56q] and annotations: map[]
  STEP: Updating the job @ 05/05/24 14:00:54.359
  STEP: Watching for Job to be updated @ 05/05/24 14:00:54.364
  I0505 14:00:54.366097 21 job.go:1112] Event MODIFIED found for Job e2e-hg56q in namespace job-2505 with labels: map[e2e-hg56q:patched e2e-job-label:e2e-hg56q] and annotations: map[updated:true]
  I0505 14:00:54.366129 21 job.go:1005] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 05/05/24 14:00:54.366
  I0505 14:00:54.367692 21 job.go:1012] Job: e2e-hg56q as labels: map[e2e-hg56q:patched e2e-job-label:e2e-hg56q]
  STEP: Waiting for job to complete @ 05/05/24 14:00:54.367
  STEP: Delete a job collection with a labelselector @ 05/05/24 14:01:02.373
  STEP: Watching for Job to be deleted @ 05/05/24 14:01:02.391
  I0505 14:01:02.393400 21 job.go:1109] Event MODIFIED observed for Job e2e-hg56q in namespace job-2505 with labels: map[e2e-hg56q:patched e2e-job-label:e2e-hg56q] and annotations: map[updated:true]
  I0505 14:01:02.393708 21 job.go:1109] Event MODIFIED observed for Job e2e-hg56q in namespace job-2505 with labels: map[e2e-hg56q:patched e2e-job-label:e2e-hg56q] and annotations: map[updated:true]
  I0505 14:01:02.393737 21 job.go:1109] Event MODIFIED observed for Job e2e-hg56q in namespace job-2505 with labels: map[e2e-hg56q:patched e2e-job-label:e2e-hg56q] and annotations: map[updated:true]
  I0505 14:01:02.394766 21 job.go:1109] Event MODIFIED observed for Job e2e-hg56q in namespace job-2505 with labels: map[e2e-hg56q:patched e2e-job-label:e2e-hg56q] and annotations: map[updated:true]
  I0505 14:01:02.394956 21 job.go:1109] Event MODIFIED observed for Job e2e-hg56q in namespace job-2505 with labels: map[e2e-hg56q:patched e2e-job-label:e2e-hg56q] and annotations: map[updated:true]
  I0505 14:01:02.395091 21 job.go:1109] Event MODIFIED observed for Job e2e-hg56q in namespace job-2505 with labels: map[e2e-hg56q:patched e2e-job-label:e2e-hg56q] and annotations: map[updated:true]
  I0505 14:01:02.395139 21 job.go:1109] Event MODIFIED observed for Job e2e-hg56q in namespace job-2505 with labels: map[e2e-hg56q:patched e2e-job-label:e2e-hg56q] and annotations: map[updated:true]
  I0505 14:01:02.396697 21 job.go:1109] Event MODIFIED observed for Job e2e-hg56q in namespace job-2505 with labels: map[e2e-hg56q:patched e2e-job-label:e2e-hg56q] and annotations: map[updated:true]
  I0505 14:01:02.396841 21 job.go:1109] Event MODIFIED observed for Job e2e-hg56q in namespace job-2505 with labels: map[e2e-hg56q:patched e2e-job-label:e2e-hg56q] and annotations: map[updated:true]
  I0505 14:01:02.396866 21 job.go:1112] Event DELETED found for Job e2e-hg56q in namespace job-2505 with labels: map[e2e-hg56q:patched e2e-job-label:e2e-hg56q] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 05/05/24 14:01:02.396
  I0505 14:01:02.400110 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2505" for this suite. @ 05/05/24 14:01:02.401
• [8.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 05/05/24 14:01:02.405
  I0505 14:01:02.405624 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename replication-controller @ 05/05/24 14:01:02.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:01:02.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:01:02.42
  STEP: Creating ReplicationController "e2e-rc-h8qrf" @ 05/05/24 14:01:02.422
  I0505 14:01:02.425911 21 rc.go:792] Get Replication Controller "e2e-rc-h8qrf" to confirm replicas
  I0505 14:01:03.427176 21 rc.go:792] Get Replication Controller "e2e-rc-h8qrf" to confirm replicas
  I0505 14:01:03.431431 21 rc.go:801] Found 1 replicas for "e2e-rc-h8qrf" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-h8qrf" @ 05/05/24 14:01:03.431
  STEP: Updating a scale subresource @ 05/05/24 14:01:03.433
  STEP: Verifying replicas where modified for replication controller "e2e-rc-h8qrf" @ 05/05/24 14:01:03.437
  I0505 14:01:03.437109 21 rc.go:792] Get Replication Controller "e2e-rc-h8qrf" to confirm replicas
  I0505 14:01:04.437462 21 rc.go:792] Get Replication Controller "e2e-rc-h8qrf" to confirm replicas
  I0505 14:01:04.440325 21 rc.go:801] Found 2 replicas for "e2e-rc-h8qrf" replication controller
  I0505 14:01:04.440520 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-677" for this suite. @ 05/05/24 14:01:04.442
• [2.050 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 05/05/24 14:01:04.456
  I0505 14:01:04.456118 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename statefulset @ 05/05/24 14:01:04.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:01:04.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:01:04.468
  STEP: Creating service test in namespace statefulset-9481 @ 05/05/24 14:01:04.471
  STEP: Looking for a node to schedule stateful set and pod @ 05/05/24 14:01:04.475
  STEP: Creating pod with conflicting port in namespace statefulset-9481 @ 05/05/24 14:01:04.481
  STEP: Waiting until pod test-pod will start running in namespace statefulset-9481 @ 05/05/24 14:01:04.486
  STEP: Creating statefulset with conflicting port in namespace statefulset-9481 @ 05/05/24 14:01:06.491
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-9481 @ 05/05/24 14:01:06.503
  I0505 14:01:06.509539 21 statefulset.go:866] Observed stateful pod in namespace: statefulset-9481, name: ss-0, uid: 9ae7e6cb-4716-47c6-94b9-43f7525eaba9, status phase: Pending. Waiting for statefulset controller to delete.
  I0505 14:01:06.518841 21 statefulset.go:866] Observed stateful pod in namespace: statefulset-9481, name: ss-0, uid: 9ae7e6cb-4716-47c6-94b9-43f7525eaba9, status phase: Failed. Waiting for statefulset controller to delete.
  I0505 14:01:06.537493 21 statefulset.go:866] Observed stateful pod in namespace: statefulset-9481, name: ss-0, uid: 9ae7e6cb-4716-47c6-94b9-43f7525eaba9, status phase: Failed. Waiting for statefulset controller to delete.
  I0505 14:01:06.540005 21 statefulset.go:860] Observed delete event for stateful pod ss-0 in namespace statefulset-9481
  STEP: Removing pod with conflicting port in namespace statefulset-9481 @ 05/05/24 14:01:06.54
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-9481 and will be in running state @ 05/05/24 14:01:06.553
  I0505 14:01:08.570138 21 statefulset.go:135] Deleting all statefulset in ns statefulset-9481
  I0505 14:01:08.572175 21 rest.go:150] Scaling statefulset ss to 0
  I0505 14:01:18.587002 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0505 14:01:18.590759 21 rest.go:88] Deleting statefulset ss
  I0505 14:01:18.614489 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9481" for this suite. @ 05/05/24 14:01:18.616
• [14.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 05/05/24 14:01:18.62
  I0505 14:01:18.620682 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 14:01:18.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:01:18.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:01:18.637
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 14:01:18.639
  STEP: Saw pod success @ 05/05/24 14:01:20.647
  I0505 14:01:20.648628 21 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-426ffb05-f50b-4633-ba95-2b6a9a98240c container client-container: <nil>
  STEP: delete the pod @ 05/05/24 14:01:20.65
  I0505 14:01:20.666809 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1747" for this suite. @ 05/05/24 14:01:20.668
• [2.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:715
  STEP: Creating a kubernetes client @ 05/05/24 14:01:20.671
  I0505 14:01:20.671330 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename webhook @ 05/05/24 14:01:20.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:01:20.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:01:20.682
  STEP: Setting up server cert @ 05/05/24 14:01:20.692
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 14:01:20.949
  STEP: Deploying the webhook pod @ 05/05/24 14:01:20.953
  STEP: Wait for the deployment to be ready @ 05/05/24 14:01:20.959
  I0505 14:01:20.963842 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/05/24 14:01:22.973
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 14:01:22.991
  I0505 14:01:23.991681 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 05/05/24 14:01:23.999
  STEP: verifying the validating webhook match conditions @ 05/05/24 14:01:24.012
  STEP: updating the validating webhook match conditions @ 05/05/24 14:01:24.014
  STEP: verifying the validating webhook match conditions @ 05/05/24 14:01:24.018
  I0505 14:01:24.048270 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4620" for this suite. @ 05/05/24 14:01:24.049
  STEP: Destroying namespace "webhook-markers-774" for this suite. @ 05/05/24 14:01:24.055
• [3.392 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 05/05/24 14:01:24.063
  I0505 14:01:24.063722 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename secrets @ 05/05/24 14:01:24.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:01:24.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:01:24.075
  STEP: Creating secret with name secret-test-4ed59bce-8247-40fc-92b4-105c4d011322 @ 05/05/24 14:01:24.088
  STEP: Creating a pod to test consume secrets @ 05/05/24 14:01:24.091
  STEP: Saw pod success @ 05/05/24 14:01:28.106
  I0505 14:01:28.107319 21 output.go:196] Trying to get logs from node worker00 pod pod-secrets-f4d891a3-9895-4176-86ff-a47c83808a74 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 14:01:28.109
  I0505 14:01:28.116921 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6360" for this suite. @ 05/05/24 14:01:28.119
  STEP: Destroying namespace "secret-namespace-7508" for this suite. @ 05/05/24 14:01:28.124
• [4.064 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 05/05/24 14:01:28.127
  I0505 14:01:28.127692 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/05/24 14:01:28.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:01:28.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:01:28.142
  STEP: getting /apis @ 05/05/24 14:01:28.148
  STEP: getting /apis/admissionregistration.k8s.io @ 05/05/24 14:01:28.151
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 05/05/24 14:01:28.152
  STEP: creating @ 05/05/24 14:01:28.152
  STEP: getting @ 05/05/24 14:01:28.159
  STEP: listing @ 05/05/24 14:01:28.16
  STEP: watching @ 05/05/24 14:01:28.161
  I0505 14:01:28.161812 21 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 05/05/24 14:01:28.162
  STEP: updating @ 05/05/24 14:01:28.166
  I0505 14:01:28.169819 21 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 05/05/24 14:01:28.169
  STEP: deleting a collection @ 05/05/24 14:01:28.174
  I0505 14:01:28.180570 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7001" for this suite. @ 05/05/24 14:01:28.182
• [0.058 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 05/05/24 14:01:28.186
  I0505 14:01:28.186138 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 14:01:28.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:01:28.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:01:28.198
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 14:01:28.201
  STEP: Saw pod success @ 05/05/24 14:01:32.216
  I0505 14:01:32.220222 21 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-83744374-13af-4c47-864f-f46da72da185 container client-container: <nil>
  STEP: delete the pod @ 05/05/24 14:01:32.224
  I0505 14:01:32.236059 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-809" for this suite. @ 05/05/24 14:01:32.237
• [4.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 05/05/24 14:01:32.24
  I0505 14:01:32.240931 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename container-runtime @ 05/05/24 14:01:32.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:01:32.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:01:32.252
  STEP: create the container @ 05/05/24 14:01:32.253
  W0505 14:01:32.257852      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/05/24 14:01:32.257
  STEP: get the container status @ 05/05/24 14:01:35.271
  STEP: the container should be terminated @ 05/05/24 14:01:35.274
  STEP: the termination message should be set @ 05/05/24 14:01:35.274
  I0505 14:01:35.274583 21 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 05/05/24 14:01:35.274
  I0505 14:01:35.298073 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2106" for this suite. @ 05/05/24 14:01:35.3
• [3.064 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 05/05/24 14:01:35.305
  I0505 14:01:35.305316 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 14:01:35.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:01:35.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:01:35.318
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/05/24 14:01:35.32
  STEP: Saw pod success @ 05/05/24 14:01:39.335
  I0505 14:01:39.338687 21 output.go:196] Trying to get logs from node worker00 pod pod-e4874537-6208-4620-93e5-e6c30ba9c846 container test-container: <nil>
  STEP: delete the pod @ 05/05/24 14:01:39.342
  I0505 14:01:39.366967 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6470" for this suite. @ 05/05/24 14:01:39.368
• [4.066 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 05/05/24 14:01:39.371
  I0505 14:01:39.371101 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename webhook @ 05/05/24 14:01:39.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:01:39.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:01:39.381
  STEP: Setting up server cert @ 05/05/24 14:01:39.403
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 14:01:39.552
  STEP: Deploying the webhook pod @ 05/05/24 14:01:39.559
  STEP: Wait for the deployment to be ready @ 05/05/24 14:01:39.573
  I0505 14:01:39.581474 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/05/24 14:01:41.595
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 14:01:41.61
  I0505 14:01:42.611176 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0505 14:01:42.618934 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 05/05/24 14:01:43.137
  STEP: Creating a custom resource that should be denied by the webhook @ 05/05/24 14:01:43.155
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 05/05/24 14:01:45.171
  STEP: Updating the custom resource with disallowed data should be denied @ 05/05/24 14:01:45.178
  STEP: Deleting the custom resource should be denied @ 05/05/24 14:01:45.184
  STEP: Remove the offending key and value from the custom resource data @ 05/05/24 14:01:45.189
  STEP: Deleting the updated custom resource should be successful @ 05/05/24 14:01:45.194
  I0505 14:01:45.746402 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2227" for this suite. @ 05/05/24 14:01:45.757
  STEP: Destroying namespace "webhook-markers-2644" for this suite. @ 05/05/24 14:01:45.763
• [6.396 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 05/05/24 14:01:45.767
  I0505 14:01:45.767433 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 14:01:45.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:01:45.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:01:45.78
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/05/24 14:01:45.783
  I0505 14:01:45.783911 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-459 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0505 14:01:45.826480 21 builder.go:146] stderr: ""
  I0505 14:01:45.826516 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/05/24 14:01:45.826
  I0505 14:01:45.829046 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-459 delete pods e2e-test-httpd-pod'
  I0505 14:01:47.529399 21 builder.go:146] stderr: ""
  I0505 14:01:47.529428 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0505 14:01:47.529501 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-459" for this suite. @ 05/05/24 14:01:47.531
• [1.768 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 05/05/24 14:01:47.535
  I0505 14:01:47.535712 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename endpointslice @ 05/05/24 14:01:47.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:01:47.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:01:47.549
  I0505 14:01:47.553612 21 endpointslice.go:1045] Endpoints addresses: [192.168.58.100] , ports: [6443]
  I0505 14:01:47.553651 21 endpointslice.go:1075] EndpointSlices addresses: [192.168.58.100] , ports: [6443]
  I0505 14:01:47.553702 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6831" for this suite. @ 05/05/24 14:01:47.555
• [0.022 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 05/05/24 14:01:47.558
  I0505 14:01:47.558961 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/05/24 14:01:47.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:01:47.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:01:47.57
  STEP: creating a policy with variables @ 05/05/24 14:01:47.575
  STEP: waiting until the marker is denied @ 05/05/24 14:01:47.583
  STEP: testing a replicated Deployment to be allowed @ 05/05/24 14:01:47.792
  STEP: testing a non-replicated ReplicaSet not to be denied @ 05/05/24 14:01:47.806
  I0505 14:01:47.840776 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-4942" for this suite. @ 05/05/24 14:01:47.844
• [0.289 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 05/05/24 14:01:47.848
  I0505 14:01:47.849800 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename daemonsets @ 05/05/24 14:01:47.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:01:47.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:01:47.862
  I0505 14:01:47.871238 21 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 05/05/24 14:01:47.873
  I0505 14:01:47.874827 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0505 14:01:47.874847 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 05/05/24 14:01:47.874
  I0505 14:01:47.915629 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0505 14:01:47.915821 21 fixtures.go:130] Node worker01 is running 0 daemon pod, expected 1
  I0505 14:01:48.919096 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0505 14:01:48.919157 21 fixtures.go:130] Node worker01 is running 0 daemon pod, expected 1
  I0505 14:01:49.918526 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0505 14:01:49.918704 21 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 05/05/24 14:01:49.922
  I0505 14:01:49.939306 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0505 14:01:49.939389 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  I0505 14:01:50.939358 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0505 14:01:50.939428 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 05/05/24 14:01:50.939
  I0505 14:01:50.956358 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0505 14:01:50.956386 21 fixtures.go:130] Node worker01 is running 0 daemon pod, expected 1
  I0505 14:01:51.952655 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0505 14:01:51.952712 21 fixtures.go:130] Node worker01 is running 0 daemon pod, expected 1
  I0505 14:01:52.950961 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0505 14:01:52.951000 21 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/05/24 14:01:52.954
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6332, will wait for the garbage collector to delete the pods @ 05/05/24 14:01:52.954
  I0505 14:01:53.014761 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.140887ms
  I0505 14:01:53.115844 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.047831ms
  I0505 14:01:55.126375 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0505 14:01:55.126435 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0505 14:01:55.129228 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"8009"},"items":null}

  I0505 14:01:55.132032 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"8009"},"items":null}

  I0505 14:01:55.143389 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6332" for this suite. @ 05/05/24 14:01:55.152
• [7.308 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:469
  STEP: Creating a kubernetes client @ 05/05/24 14:01:55.157
  I0505 14:01:55.157137 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename sched-pred @ 05/05/24 14:01:55.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:01:55.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:01:55.17
  I0505 14:01:55.173628 21 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0505 14:01:55.177419 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I0505 14:01:55.179842 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node worker00 before test
  I0505 14:01:55.188379 21 predicates.go:887] etcd-worker00 from kube-system started at 2024-05-05 13:40:24 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.188408 21 predicates.go:889] 	Container etcd ready: true, restart count 0
  I0505 14:01:55.188421 21 predicates.go:887] gobetween-worker00 from kube-system started at 2024-05-05 13:40:24 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.188435 21 predicates.go:889] 	Container gobetween ready: true, restart count 0
  I0505 14:01:55.188481 21 predicates.go:887] kube-apiserver-worker00 from kube-system started at 2024-05-05 13:40:24 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.188499 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 0
  I0505 14:01:55.188507 21 predicates.go:887] kube-controller-manager-worker00 from kube-system started at 2024-05-05 13:40:24 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.188512 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 0
  I0505 14:01:55.188520 21 predicates.go:887] kube-proxy-worker00 from kube-system started at 2024-05-05 13:40:24 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.188525 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0505 14:01:55.188549 21 predicates.go:887] kube-scheduler-worker00 from kube-system started at 2024-05-05 13:40:24 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.188554 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 0
  I0505 14:01:55.188561 21 predicates.go:887] kubernetes-dashboard-api-dbd5d8954-vgnfp from kube-system started at 2024-05-05 13:46:41 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.188566 21 predicates.go:889] 	Container kubernetes-dashboard-api ready: true, restart count 0
  I0505 14:01:55.188572 21 predicates.go:887] kubernetes-dashboard-auth-585b4bc77c-kktrh from kube-system started at 2024-05-05 13:46:41 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.188579 21 predicates.go:889] 	Container kubernetes-dashboard-auth ready: true, restart count 0
  I0505 14:01:55.188724 21 predicates.go:887] kubernetes-dashboard-kong-58c7df5b9-w2hw4 from kube-system started at 2024-05-05 13:46:41 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.188730 21 predicates.go:889] 	Container proxy ready: true, restart count 0
  I0505 14:01:55.188735 21 predicates.go:887] kubernetes-dashboard-metrics-scraper-6786f55f8b-rs6dg from kube-system started at 2024-05-05 13:46:41 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.188742 21 predicates.go:889] 	Container kubernetes-dashboard-metrics-scraper ready: true, restart count 0
  I0505 14:01:55.188750 21 predicates.go:887] kubernetes-dashboard-web-84b47c879-6vh7n from kube-system started at 2024-05-05 13:46:41 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.188754 21 predicates.go:889] 	Container kubernetes-dashboard-web ready: true, restart count 0
  I0505 14:01:55.188760 21 predicates.go:887] calico-node-nzckb from networking started at 2024-05-05 13:41:30 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.188764 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0505 14:01:55.188772 21 predicates.go:887] metallb-speaker-rt799 from networking started at 2024-05-05 13:42:07 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.188776 21 predicates.go:889] 	Container speaker ready: true, restart count 0
  I0505 14:01:55.188782 21 predicates.go:887] sonobuoy from sonobuoy started at 2024-05-05 13:49:53 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.188787 21 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0505 14:01:55.188792 21 predicates.go:887] sonobuoy-e2e-job-9197e61553eb4047 from sonobuoy started at 2024-05-05 13:50:00 +0000 UTC (2 container statuses recorded)
  I0505 14:01:55.188797 21 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0505 14:01:55.188803 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0505 14:01:55.188808 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-85bf87e40a77455e-sbld9 from sonobuoy started at 2024-05-05 13:50:00 +0000 UTC (2 container statuses recorded)
  I0505 14:01:55.188813 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0505 14:01:55.188818 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0505 14:01:55.188824 21 predicates.go:887] ceph-csi-cephfs-nodeplugin-w9rfl from storage started at 2024-05-05 13:41:30 +0000 UTC (3 container statuses recorded)
  I0505 14:01:55.188830 21 predicates.go:889] 	Container csi-cephfsplugin ready: true, restart count 0
  I0505 14:01:55.188835 21 predicates.go:889] 	Container driver-registrar ready: true, restart count 0
  I0505 14:01:55.188840 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 14:01:55.188867 21 predicates.go:887] ceph-csi-rbd-nodeplugin-rnrwv from storage started at 2024-05-05 13:41:30 +0000 UTC (3 container statuses recorded)
  I0505 14:01:55.188886 21 predicates.go:889] 	Container csi-rbdplugin ready: true, restart count 0
  I0505 14:01:55.188891 21 predicates.go:889] 	Container driver-registrar ready: true, restart count 0
  I0505 14:01:55.188896 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 14:01:55.188903 21 predicates.go:887] ceph-mon-worker00-7ffccc7445-thfnd from storage started at 2024-05-05 13:41:30 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.188909 21 predicates.go:889] 	Container ceph-mon ready: true, restart count 0
  I0505 14:01:55.188914 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node worker01 before test
  I0505 14:01:55.196785 21 predicates.go:887] coredns-5454f94b99-7sspb from kube-system started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.196808 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0505 14:01:55.196817 21 predicates.go:887] coredns-5454f94b99-gfmxs from kube-system started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.196822 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0505 14:01:55.196828 21 predicates.go:887] gobetween-worker01 from kube-system started at 2024-05-05 13:40:33 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.196834 21 predicates.go:889] 	Container gobetween ready: true, restart count 0
  I0505 14:01:55.196841 21 predicates.go:887] kube-proxy-worker01 from kube-system started at 2024-05-05 13:40:33 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.196849 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0505 14:01:55.196855 21 predicates.go:887] calico-kube-controllers-54f5554fcd-n22s4 from networking started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.196861 21 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I0505 14:01:55.196868 21 predicates.go:887] calico-node-t86wj from networking started at 2024-05-05 13:41:23 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.196874 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0505 14:01:55.196879 21 predicates.go:887] calico-typha-9497885f9-hncqt from networking started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.196885 21 predicates.go:889] 	Container calico-typha ready: true, restart count 0
  I0505 14:01:55.196891 21 predicates.go:887] metallb-controller-6d48ffccb-k944q from networking started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.196896 21 predicates.go:889] 	Container controller ready: true, restart count 0
  I0505 14:01:55.196904 21 predicates.go:887] metallb-speaker-rnkpg from networking started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.196909 21 predicates.go:889] 	Container speaker ready: true, restart count 0
  I0505 14:01:55.196915 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-85bf87e40a77455e-g4jkd from sonobuoy started at 2024-05-05 13:50:00 +0000 UTC (2 container statuses recorded)
  I0505 14:01:55.196921 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0505 14:01:55.196927 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0505 14:01:55.196933 21 predicates.go:887] ceph-csi-cephfs-nodeplugin-nq2zf from storage started at 2024-05-05 13:41:23 +0000 UTC (3 container statuses recorded)
  I0505 14:01:55.196938 21 predicates.go:889] 	Container csi-cephfsplugin ready: true, restart count 0
  I0505 14:01:55.196944 21 predicates.go:889] 	Container driver-registrar ready: true, restart count 0
  I0505 14:01:55.196950 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 14:01:55.196972 21 predicates.go:887] ceph-csi-cephfs-provisioner-68989c6cdd-gzwkq from storage started at 2024-05-05 13:41:23 +0000 UTC (5 container statuses recorded)
  I0505 14:01:55.196977 21 predicates.go:889] 	Container csi-cephfsplugin ready: true, restart count 0
  I0505 14:01:55.196986 21 predicates.go:889] 	Container csi-provisioner ready: true, restart count 0
  I0505 14:01:55.196992 21 predicates.go:889] 	Container csi-resizer ready: true, restart count 0
  I0505 14:01:55.196997 21 predicates.go:889] 	Container csi-snapshotter ready: true, restart count 0
  I0505 14:01:55.197002 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 14:01:55.197008 21 predicates.go:887] ceph-csi-cephfs-provisioner-68989c6cdd-jqkfb from storage started at 2024-05-05 13:41:23 +0000 UTC (5 container statuses recorded)
  I0505 14:01:55.197014 21 predicates.go:889] 	Container csi-cephfsplugin ready: true, restart count 0
  I0505 14:01:55.197020 21 predicates.go:889] 	Container csi-provisioner ready: true, restart count 0
  I0505 14:01:55.197034 21 predicates.go:889] 	Container csi-resizer ready: true, restart count 0
  I0505 14:01:55.197040 21 predicates.go:889] 	Container csi-snapshotter ready: true, restart count 0
  I0505 14:01:55.197046 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 14:01:55.197053 21 predicates.go:887] ceph-csi-cephfs-provisioner-68989c6cdd-k5mkr from storage started at 2024-05-05 13:41:23 +0000 UTC (5 container statuses recorded)
  I0505 14:01:55.197058 21 predicates.go:889] 	Container csi-cephfsplugin ready: true, restart count 0
  I0505 14:01:55.197063 21 predicates.go:889] 	Container csi-provisioner ready: true, restart count 0
  I0505 14:01:55.197069 21 predicates.go:889] 	Container csi-resizer ready: true, restart count 0
  I0505 14:01:55.197076 21 predicates.go:889] 	Container csi-snapshotter ready: true, restart count 0
  I0505 14:01:55.197085 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 14:01:55.197090 21 predicates.go:887] ceph-csi-rbd-nodeplugin-wqjcz from storage started at 2024-05-05 13:41:23 +0000 UTC (3 container statuses recorded)
  I0505 14:01:55.197094 21 predicates.go:889] 	Container csi-rbdplugin ready: true, restart count 0
  I0505 14:01:55.197100 21 predicates.go:889] 	Container driver-registrar ready: true, restart count 0
  I0505 14:01:55.197104 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 14:01:55.197109 21 predicates.go:887] ceph-csi-rbd-provisioner-7c49d466f9-29f9z from storage started at 2024-05-05 13:41:24 +0000 UTC (7 container statuses recorded)
  I0505 14:01:55.197114 21 predicates.go:889] 	Container csi-attacher ready: true, restart count 0
  I0505 14:01:55.197118 21 predicates.go:889] 	Container csi-provisioner ready: true, restart count 0
  I0505 14:01:55.197123 21 predicates.go:889] 	Container csi-rbdplugin ready: true, restart count 0
  I0505 14:01:55.197128 21 predicates.go:889] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0505 14:01:55.197180 21 predicates.go:889] 	Container csi-resizer ready: true, restart count 0
  I0505 14:01:55.197186 21 predicates.go:889] 	Container csi-snapshotter ready: true, restart count 0
  I0505 14:01:55.197190 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 14:01:55.197195 21 predicates.go:887] ceph-csi-rbd-provisioner-7c49d466f9-7kxgr from storage started at 2024-05-05 13:41:24 +0000 UTC (7 container statuses recorded)
  I0505 14:01:55.197200 21 predicates.go:889] 	Container csi-attacher ready: true, restart count 0
  I0505 14:01:55.197205 21 predicates.go:889] 	Container csi-provisioner ready: true, restart count 0
  I0505 14:01:55.197209 21 predicates.go:889] 	Container csi-rbdplugin ready: true, restart count 0
  I0505 14:01:55.197216 21 predicates.go:889] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0505 14:01:55.197221 21 predicates.go:889] 	Container csi-resizer ready: true, restart count 0
  I0505 14:01:55.197226 21 predicates.go:889] 	Container csi-snapshotter ready: true, restart count 0
  I0505 14:01:55.197231 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 14:01:55.197236 21 predicates.go:887] ceph-csi-rbd-provisioner-7c49d466f9-vlfxl from storage started at 2024-05-05 13:41:24 +0000 UTC (7 container statuses recorded)
  I0505 14:01:55.197240 21 predicates.go:889] 	Container csi-attacher ready: true, restart count 0
  I0505 14:01:55.197245 21 predicates.go:889] 	Container csi-provisioner ready: true, restart count 0
  I0505 14:01:55.197273 21 predicates.go:889] 	Container csi-rbdplugin ready: true, restart count 0
  I0505 14:01:55.197278 21 predicates.go:889] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0505 14:01:55.197448 21 predicates.go:889] 	Container csi-resizer ready: true, restart count 0
  I0505 14:01:55.197456 21 predicates.go:889] 	Container csi-snapshotter ready: true, restart count 0
  I0505 14:01:55.197461 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 14:01:55.197468 21 predicates.go:887] ceph-mds-worker01-75d7657797-c5c2m from storage started at 2024-05-05 13:41:24 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.197474 21 predicates.go:889] 	Container ceph-mds ready: true, restart count 0
  I0505 14:01:55.197481 21 predicates.go:887] ceph-mgr-worker01-58c6d8747b-m689f from storage started at 2024-05-05 13:41:24 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.197485 21 predicates.go:889] 	Container ceph-mgr ready: true, restart count 1
  I0505 14:01:55.197491 21 predicates.go:887] ceph-osd-worker01-796758b4b5-25p7m from storage started at 2024-05-05 13:41:24 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.197495 21 predicates.go:889] 	Container ceph-osd ready: true, restart count 0
  I0505 14:01:55.197502 21 predicates.go:887] ceph-rgw-worker01-d6dd485ff-7lnjl from storage started at 2024-05-05 13:41:24 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.197506 21 predicates.go:889] 	Container ceph-rgw ready: true, restart count 0
  I0505 14:01:55.197524 21 predicates.go:887] ceph-setup-wmkcq from storage started at 2024-05-05 13:41:23 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.197529 21 predicates.go:889] 	Container ceph ready: false, restart count 0
  I0505 14:01:55.197534 21 predicates.go:887] snapshot-controller-77c9f4c8d6-84v87 from storage started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.197539 21 predicates.go:889] 	Container snapshot-controller ready: true, restart count 0
  I0505 14:01:55.197544 21 predicates.go:887] snapshot-controller-77c9f4c8d6-j7qcs from storage started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.197548 21 predicates.go:889] 	Container snapshot-controller ready: true, restart count 0
  I0505 14:01:55.197554 21 predicates.go:887] snapshot-validation-webhook-865bb6896-dbmxh from storage started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 14:01:55.197559 21 predicates.go:889] 	Container snapshot-validation-webhook ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/05/24 14:01:55.197
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/05/24 14:01:57.211
  STEP: Trying to apply a random label on the found node. @ 05/05/24 14:01:57.223
  STEP: verifying the node has the label kubernetes.io/e2e-20b3fb7a-d9e2-492d-828d-87036132f9e0 42 @ 05/05/24 14:01:57.237
  STEP: Trying to relaunch the pod, now with labels. @ 05/05/24 14:01:57.24
  STEP: removing the label kubernetes.io/e2e-20b3fb7a-d9e2-492d-828d-87036132f9e0 off the node worker00 @ 05/05/24 14:01:59.261
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-20b3fb7a-d9e2-492d-828d-87036132f9e0 @ 05/05/24 14:01:59.29
  I0505 14:01:59.295451 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5357" for this suite. @ 05/05/24 14:01:59.299
• [4.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:342
  STEP: Creating a kubernetes client @ 05/05/24 14:01:59.311
  I0505 14:01:59.311120 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 14:01:59.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:01:59.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:01:59.362
  STEP: creating a replication controller @ 05/05/24 14:01:59.394
  I0505 14:01:59.394819 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-2027 create -f -'
  I0505 14:01:59.566932 21 builder.go:146] stderr: ""
  I0505 14:01:59.567004 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/05/24 14:01:59.567
  I0505 14:01:59.567433 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-2027 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0505 14:01:59.712766 21 builder.go:146] stderr: ""
  I0505 14:01:59.713309 21 builder.go:147] stdout: "update-demo-nautilus-hrghh update-demo-nautilus-jwrl4 "
  I0505 14:01:59.713625 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-2027 get pods update-demo-nautilus-hrghh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0505 14:01:59.792371 21 builder.go:146] stderr: ""
  I0505 14:01:59.792422 21 builder.go:147] stdout: ""
  I0505 14:01:59.792441 21 kubectl.go:2501] update-demo-nautilus-hrghh is created but not running
  I0505 14:02:04.792915 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-2027 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0505 14:02:05.076900 21 builder.go:146] stderr: ""
  I0505 14:02:05.077014 21 builder.go:147] stdout: "update-demo-nautilus-hrghh update-demo-nautilus-jwrl4 "
  I0505 14:02:05.077386 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-2027 get pods update-demo-nautilus-hrghh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0505 14:02:05.275913 21 builder.go:146] stderr: ""
  I0505 14:02:05.276038 21 builder.go:147] stdout: ""
  I0505 14:02:05.276056 21 kubectl.go:2501] update-demo-nautilus-hrghh is created but not running
  I0505 14:02:10.277097 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-2027 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0505 14:02:10.352195 21 builder.go:146] stderr: ""
  I0505 14:02:10.352244 21 builder.go:147] stdout: "update-demo-nautilus-hrghh update-demo-nautilus-jwrl4 "
  I0505 14:02:10.352313 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-2027 get pods update-demo-nautilus-hrghh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0505 14:02:10.436559 21 builder.go:146] stderr: ""
  I0505 14:02:10.436629 21 builder.go:147] stdout: "true"
  I0505 14:02:10.436714 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-2027 get pods update-demo-nautilus-hrghh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0505 14:02:10.529135 21 builder.go:146] stderr: ""
  I0505 14:02:10.529199 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0505 14:02:10.529218 21 kubectl.go:2392] validating pod update-demo-nautilus-hrghh
  I0505 14:02:10.535934 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0505 14:02:10.536021 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0505 14:02:10.536037 21 kubectl.go:2519] update-demo-nautilus-hrghh is verified up and running
  I0505 14:02:10.536118 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-2027 get pods update-demo-nautilus-jwrl4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0505 14:02:10.613463 21 builder.go:146] stderr: ""
  I0505 14:02:10.613540 21 builder.go:147] stdout: ""
  I0505 14:02:10.613558 21 kubectl.go:2501] update-demo-nautilus-jwrl4 is created but not running
  I0505 14:02:15.614502 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-2027 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0505 14:02:15.676340 21 builder.go:146] stderr: ""
  I0505 14:02:15.676369 21 builder.go:147] stdout: "update-demo-nautilus-hrghh update-demo-nautilus-jwrl4 "
  I0505 14:02:15.676402 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-2027 get pods update-demo-nautilus-hrghh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0505 14:02:15.722188 21 builder.go:146] stderr: ""
  I0505 14:02:15.722223 21 builder.go:147] stdout: "true"
  I0505 14:02:15.722272 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-2027 get pods update-demo-nautilus-hrghh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0505 14:02:15.783709 21 builder.go:146] stderr: ""
  I0505 14:02:15.783751 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0505 14:02:15.783767 21 kubectl.go:2392] validating pod update-demo-nautilus-hrghh
  I0505 14:02:15.786712 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0505 14:02:15.786768 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0505 14:02:15.786781 21 kubectl.go:2519] update-demo-nautilus-hrghh is verified up and running
  I0505 14:02:15.786824 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-2027 get pods update-demo-nautilus-jwrl4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0505 14:02:15.858999 21 builder.go:146] stderr: ""
  I0505 14:02:15.859047 21 builder.go:147] stdout: "true"
  I0505 14:02:15.859111 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-2027 get pods update-demo-nautilus-jwrl4 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0505 14:02:15.938349 21 builder.go:146] stderr: ""
  I0505 14:02:15.938395 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0505 14:02:15.938412 21 kubectl.go:2392] validating pod update-demo-nautilus-jwrl4
  I0505 14:02:15.942981 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0505 14:02:15.943049 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0505 14:02:15.943064 21 kubectl.go:2519] update-demo-nautilus-jwrl4 is verified up and running
  STEP: using delete to clean up resources @ 05/05/24 14:02:15.943
  I0505 14:02:15.943134 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-2027 delete --grace-period=0 --force -f -'
  I0505 14:02:16.022539 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0505 14:02:16.022615 21 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0505 14:02:16.022669 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-2027 get rc,svc -l name=update-demo --no-headers'
  I0505 14:02:16.164088 21 builder.go:146] stderr: "No resources found in kubectl-2027 namespace.\n"
  I0505 14:02:16.164162 21 builder.go:147] stdout: ""
  I0505 14:02:16.164256 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-2027 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0505 14:02:16.298715 21 builder.go:146] stderr: ""
  I0505 14:02:16.298771 21 builder.go:147] stdout: ""
  I0505 14:02:16.300094 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2027" for this suite. @ 05/05/24 14:02:16.303
• [17.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 05/05/24 14:02:16.399
  I0505 14:02:16.399242 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 14:02:16.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:02:16.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:02:16.432
  STEP: Creating a pod to test downward api env vars @ 05/05/24 14:02:16.437
  STEP: Saw pod success @ 05/05/24 14:02:20.474
  I0505 14:02:20.478287 21 output.go:196] Trying to get logs from node worker00 pod downward-api-ac5dc28e-f908-43d8-bb6c-ab25bddeb348 container dapi-container: <nil>
  STEP: delete the pod @ 05/05/24 14:02:20.484
  I0505 14:02:20.508312 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1345" for this suite. @ 05/05/24 14:02:20.511
• [4.116 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 05/05/24 14:02:20.514
  I0505 14:02:20.514332 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename endpointslice @ 05/05/24 14:02:20.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:02:20.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:02:20.53
  STEP: referencing a single matching pod @ 05/05/24 14:02:26.6
  STEP: referencing matching pods with named port @ 05/05/24 14:02:26.604
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 05/05/24 14:02:26.607
  STEP: recreating EndpointSlices after they've been deleted @ 05/05/24 14:02:26.61
  I0505 14:02:26.646117 21 endpointslice.go:938] EndpointSlice for Service endpointslice-6368/example-named-port not found
  I0505 14:02:28.654374 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6368" for this suite. @ 05/05/24 14:02:28.659
• [8.153 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 05/05/24 14:02:28.667
  I0505 14:02:28.668450 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 14:02:28.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:02:28.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:02:28.694
  I0505 14:02:28.699151 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-6593 create -f -'
  I0505 14:02:28.855367 21 builder.go:146] stderr: ""
  I0505 14:02:28.855443 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0505 14:02:28.856400 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-6593 create -f -'
  I0505 14:02:28.989716 21 builder.go:146] stderr: ""
  I0505 14:02:28.989765 21 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/05/24 14:02:28.989
  I0505 14:02:29.992023 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0505 14:02:29.992056 21 framework.go:733] Found 1 / 1
  I0505 14:02:29.992076 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0505 14:02:29.993459 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0505 14:02:29.993481 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0505 14:02:29.993522 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-6593 describe pod agnhost-primary-td5sr'
  I0505 14:02:30.058087 21 builder.go:146] stderr: ""
  I0505 14:02:30.058143 21 builder.go:147] stdout: "Name:             agnhost-primary-td5sr\nNamespace:        kubectl-6593\nPriority:         0\nService Account:  default\nNode:             worker00/192.168.58.100\nStart Time:       Sun, 05 May 2024 14:02:28 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 53aef963a535b303ff8b7a25e55907bfcfbf940fc495f1d26bfc806edc183071\n                  cni.projectcalico.org/podIP: 10.200.131.138/32\n                  cni.projectcalico.org/podIPs: 10.200.131.138/32\nStatus:           Running\nIP:               10.200.131.138\nIPs:\n  IP:           10.200.131.138\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://5cba965af27ba7630602e3ff77dd4e2013724900860b0670102172f846683483\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sun, 05 May 2024 14:02:29 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-qbnh2 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-qbnh2:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-6593/agnhost-primary-td5sr to worker00\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0505 14:02:30.058193 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-6593 describe rc agnhost-primary'
  I0505 14:02:30.112318 21 builder.go:146] stderr: ""
  I0505 14:02:30.112356 21 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-6593\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-td5sr\n"
  I0505 14:02:30.112400 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-6593 describe service agnhost-primary'
  I0505 14:02:30.172893 21 builder.go:146] stderr: ""
  I0505 14:02:30.172952 21 builder.go:147] stdout: "Name:              agnhost-primary\nNamespace:         kubectl-6593\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.32.0.250\nIPs:               10.32.0.250\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.200.131.138:6379\nSession Affinity:  None\nEvents:            <none>\n"
  I0505 14:02:30.176606 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-6593 describe node worker00'
  I0505 14:02:30.290609 21 builder.go:146] stderr: ""
  I0505 14:02:30.290755 21 builder.go:147] stdout: "Name:               worker00\nRoles:              controller,worker\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=worker00\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/controller=true\n                    node-role.kubernetes.io/worker=true\nAnnotations:        csi.volume.kubernetes.io/nodeid: {\"cephfs.csi.ceph.com\":\"worker00\",\"rbd.csi.ceph.com\":\"worker00\"}\n                    node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4Address: 192.168.58.100/24\n                    projectcalico.org/IPv4IPIPTunnelAddr: 10.200.131.128\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sun, 05 May 2024 13:41:11 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  worker00\n  AcquireTime:     <unset>\n  RenewTime:       Sun, 05 May 2024 14:02:21 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sun, 05 May 2024 13:45:35 +0000   Sun, 05 May 2024 13:45:35 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sun, 05 May 2024 14:02:26 +0000   Sun, 05 May 2024 13:41:11 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sun, 05 May 2024 14:02:26 +0000   Sun, 05 May 2024 13:41:11 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sun, 05 May 2024 14:02:26 +0000   Sun, 05 May 2024 13:41:11 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sun, 05 May 2024 14:02:26 +0000   Sun, 05 May 2024 13:42:07 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.58.100\n  Hostname:    worker00\nCapacity:\n  cpu:                  4\n  ephemeral-storage:    31811408Ki\n  example.com/fakecpu:  1k\n  hugepages-2Mi:        0\n  memory:               4009416Ki\n  pods:                 110\nAllocatable:\n  cpu:                  4\n  ephemeral-storage:    29317393565\n  example.com/fakecpu:  1k\n  hugepages-2Mi:        0\n  memory:               3907016Ki\n  pods:                 110\nSystem Info:\n  Machine ID:                 acf65f63265e47898a724378fc4e1693\n  System UUID:                909a00ca-990c-cd40-990c-ec59f4946bff\n  Boot ID:                    3c8b7da0-ce47-47dc-93bb-1b009139e5c5\n  Kernel Version:             6.8.0-31-generic\n  OS Image:                   Ubuntu 24.04 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.16\n  Kubelet Version:            v1.30.0\n  Kube-Proxy Version:         v1.30.0\nPodCIDR:                      10.200.0.0/24\nPodCIDRs:                     10.200.0.0/24\nNon-terminated Pods:          (22 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  endpointslice-6368          pod1                                                       0 (0%)        0 (0%)      0 (0%)           0 (0%)         10s\n  endpointslice-6368          pod2                                                       0 (0%)        0 (0%)      0 (0%)           0 (0%)         10s\n  kube-system                 etcd-worker00                                              0 (0%)        0 (0%)      0 (0%)           0 (0%)         20m\n  kube-system                 gobetween-worker00                                         100m (2%)     0 (0%)      0 (0%)           0 (0%)         20m\n  kube-system                 kube-apiserver-worker00                                    250m (6%)     0 (0%)      0 (0%)           0 (0%)         20m\n  kube-system                 kube-controller-manager-worker00                           200m (5%)     0 (0%)      0 (0%)           0 (0%)         20m\n  kube-system                 kube-proxy-worker00                                        200m (5%)     0 (0%)      0 (0%)           0 (0%)         20m\n  kube-system                 kube-scheduler-worker00                                    100m (2%)     0 (0%)      0 (0%)           0 (0%)         20m\n  kube-system                 kubernetes-dashboard-api-dbd5d8954-vgnfp                   100m (2%)     250m (6%)   200Mi (5%)       400Mi (10%)    15m\n  kube-system                 kubernetes-dashboard-auth-585b4bc77c-kktrh                 100m (2%)     250m (6%)   200Mi (5%)       400Mi (10%)    15m\n  kube-system                 kubernetes-dashboard-kong-58c7df5b9-w2hw4                  0 (0%)        0 (0%)      0 (0%)           0 (0%)         15m\n  kube-system                 kubernetes-dashboard-metrics-scraper-6786f55f8b-rs6dg      100m (2%)     250m (6%)   200Mi (5%)       400Mi (10%)    15m\n  kube-system                 kubernetes-dashboard-web-84b47c879-6vh7n                   100m (2%)     250m (6%)   200Mi (5%)       400Mi (10%)    15m\n  kubectl-6593                agnhost-primary-td5sr                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         2s\n  networking                  calico-node-nzckb                                          250m (6%)     0 (0%)      0 (0%)           0 (0%)         21m\n  networking                  metallb-speaker-rt799                                      100m (2%)     100m (2%)   100Mi (2%)       100Mi (2%)     20m\n  sonobuoy                    sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         12m\n  sonobuoy                    sonobuoy-e2e-job-9197e61553eb4047                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         12m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-85bf87e40a77455e-sbld9    0 (0%)        0 (0%)      0 (0%)           0 (0%)         12m\n  storage                     ceph-csi-cephfs-nodeplugin-w9rfl                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         21m\n  storage                     ceph-csi-rbd-nodeplugin-rnrwv                              0 (0%)        0 (0%)      0 (0%)           0 (0%)         21m\n  storage                     ceph-mon-worker00-7ffccc7445-thfnd                         0 (0%)        0 (0%)      0 (0%)           0 (0%)         21m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource             Requests     Limits\n  --------             --------     ------\n  cpu                  1600m (40%)  1100m (27%)\n  memory               900Mi (23%)  1700Mi (44%)\n  ephemeral-storage    0 (0%)       0 (0%)\n  hugepages-2Mi        0 (0%)       0 (0%)\n  example.com/fakecpu  0            0\nEvents:\n  Type     Reason                   Age                From             Message\n  ----     ------                   ----               ----             -------\n  Normal   Starting                 22m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      22m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  22m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  22m (x8 over 22m)  kubelet          Node worker00 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    22m (x7 over 22m)  kubelet          Node worker00 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     22m (x7 over 22m)  kubelet          Node worker00 status is now: NodeHasSufficientPID\n  Normal   RegisteredNode           21m                node-controller  Node worker00 event: Registered Node worker00 in Controller\n"
  I0505 14:02:30.290814 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-6593 describe namespace kubectl-6593'
  I0505 14:02:30.362029 21 builder.go:146] stderr: ""
  I0505 14:02:30.362073 21 builder.go:147] stdout: "Name:         kubectl-6593\nLabels:       e2e-framework=kubectl\n              e2e-run=4ae9ee21-5ccb-4a79-b160-376e7e05a459\n              kubernetes.io/metadata.name=kubectl-6593\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0505 14:02:30.362149 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6593" for this suite. @ 05/05/24 14:02:30.364
• [1.701 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 05/05/24 14:02:30.368
  I0505 14:02:30.368295 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename dns @ 05/05/24 14:02:30.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:02:30.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:02:30.382
  STEP: Creating a test externalName service @ 05/05/24 14:02:30.384
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9500.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9500.svc.cluster.local; sleep 1; done
   @ 05/05/24 14:02:30.387
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9500.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9500.svc.cluster.local; sleep 1; done
   @ 05/05/24 14:02:30.387
  STEP: creating a pod to probe DNS @ 05/05/24 14:02:30.387
  STEP: submitting the pod to kubernetes @ 05/05/24 14:02:30.388
  STEP: retrieving the pod @ 05/05/24 14:02:32.402
  STEP: looking for the results for each expected name from probers @ 05/05/24 14:02:32.407
  I0505 14:02:32.418577 21 dns_common.go:552] DNS probes using dns-test-9816422f-9b07-40e1-92e8-cebbc1af43cc succeeded

  STEP: changing the externalName to bar.example.com @ 05/05/24 14:02:32.418
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9500.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9500.svc.cluster.local; sleep 1; done
   @ 05/05/24 14:02:32.444
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9500.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9500.svc.cluster.local; sleep 1; done
   @ 05/05/24 14:02:32.444
  STEP: creating a second pod to probe DNS @ 05/05/24 14:02:32.444
  STEP: submitting the pod to kubernetes @ 05/05/24 14:02:32.444
  STEP: retrieving the pod @ 05/05/24 14:02:44.502
  STEP: looking for the results for each expected name from probers @ 05/05/24 14:02:44.505
  I0505 14:02:44.515746 21 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-9500.svc.cluster.local from pod  dns-9500/dns-test-0356183a-fd01-4af0-8f52-e68d37e3b71b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0505 14:02:44.519860 21 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-9500.svc.cluster.local from pod  dns-9500/dns-test-0356183a-fd01-4af0-8f52-e68d37e3b71b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0505 14:02:44.519901 21 dns_common.go:489] Lookups using dns-9500/dns-test-0356183a-fd01-4af0-8f52-e68d37e3b71b failed for: [wheezy_udp@dns-test-service-3.dns-9500.svc.cluster.local jessie_udp@dns-test-service-3.dns-9500.svc.cluster.local]

  I0505 14:02:44.527927 21 dns_common.go:495] Pod client logs for webserver: 
  I0505 14:02:44.532050 21 dns_common.go:495] Pod client logs for querier: 
  I0505 14:02:44.535057 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0505 14:02:49.515366 21 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-9500.svc.cluster.local from pod  dns-9500/dns-test-0356183a-fd01-4af0-8f52-e68d37e3b71b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0505 14:02:49.515436 21 dns_common.go:489] Lookups using dns-9500/dns-test-0356183a-fd01-4af0-8f52-e68d37e3b71b failed for: [jessie_udp@dns-test-service-3.dns-9500.svc.cluster.local]

  I0505 14:02:49.521544 21 dns_common.go:495] Pod client logs for webserver: 
  I0505 14:02:49.525931 21 dns_common.go:495] Pod client logs for querier: 
  I0505 14:02:49.531442 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0505 14:02:54.510862 21 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-9500.svc.cluster.local from pod  dns-9500/dns-test-0356183a-fd01-4af0-8f52-e68d37e3b71b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0505 14:02:54.510892 21 dns_common.go:489] Lookups using dns-9500/dns-test-0356183a-fd01-4af0-8f52-e68d37e3b71b failed for: [jessie_udp@dns-test-service-3.dns-9500.svc.cluster.local]

  I0505 14:02:54.513751 21 dns_common.go:495] Pod client logs for webserver: 
  I0505 14:02:54.516142 21 dns_common.go:495] Pod client logs for querier: 
  I0505 14:02:54.519080 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0505 14:02:59.515061 21 dns_common.go:552] DNS probes using dns-test-0356183a-fd01-4af0-8f52-e68d37e3b71b succeeded

  STEP: changing the service to type=ClusterIP @ 05/05/24 14:02:59.515
  W0505 14:02:59.521641      21 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9500.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-9500.svc.cluster.local; sleep 1; done
   @ 05/05/24 14:02:59.521
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9500.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-9500.svc.cluster.local; sleep 1; done
   @ 05/05/24 14:02:59.521
  STEP: creating a third pod to probe DNS @ 05/05/24 14:02:59.521
  STEP: submitting the pod to kubernetes @ 05/05/24 14:02:59.528
  STEP: retrieving the pod @ 05/05/24 14:03:01.543
  STEP: looking for the results for each expected name from probers @ 05/05/24 14:03:01.546
  I0505 14:03:01.552830 21 dns_common.go:552] DNS probes using dns-test-f68149c6-6395-41fe-8353-796e0b4dec5d succeeded

  STEP: deleting the pod @ 05/05/24 14:03:01.553
  STEP: deleting the pod @ 05/05/24 14:03:01.563
  STEP: deleting the pod @ 05/05/24 14:03:01.577
  STEP: deleting the test externalName service @ 05/05/24 14:03:01.603
  I0505 14:03:01.631533 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9500" for this suite. @ 05/05/24 14:03:01.637
• [31.273 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 05/05/24 14:03:01.643
  I0505 14:03:01.643161 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename webhook @ 05/05/24 14:03:01.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:03:01.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:03:01.666
  STEP: Setting up server cert @ 05/05/24 14:03:01.685
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 14:03:01.956
  STEP: Deploying the webhook pod @ 05/05/24 14:03:01.961
  STEP: Wait for the deployment to be ready @ 05/05/24 14:03:01.969
  I0505 14:03:01.973210 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/05/24 14:03:03.978
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 14:03:03.993
  I0505 14:03:04.994792 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 05/05/24 14:03:04.998
  STEP: create a pod that should be updated by the webhook @ 05/05/24 14:03:05.014
  I0505 14:03:05.076362 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9132" for this suite. @ 05/05/24 14:03:05.078
  STEP: Destroying namespace "webhook-markers-3414" for this suite. @ 05/05/24 14:03:05.085
• [3.451 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 05/05/24 14:03:05.094
  I0505 14:03:05.094233 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename kubelet-test @ 05/05/24 14:03:05.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:03:05.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:03:05.126
  I0505 14:03:05.151560 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-344" for this suite. @ 05/05/24 14:03:05.155
• [0.066 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 05/05/24 14:03:05.16
  I0505 14:03:05.160439 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename events @ 05/05/24 14:03:05.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:03:05.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:03:05.18
  STEP: creating a test event @ 05/05/24 14:03:05.183
  STEP: listing events in all namespaces @ 05/05/24 14:03:05.192
  STEP: listing events in test namespace @ 05/05/24 14:03:05.211
  STEP: listing events with field selection filtering on source @ 05/05/24 14:03:05.214
  STEP: listing events with field selection filtering on reportingController @ 05/05/24 14:03:05.216
  STEP: getting the test event @ 05/05/24 14:03:05.22
  STEP: patching the test event @ 05/05/24 14:03:05.224
  STEP: getting the test event @ 05/05/24 14:03:05.232
  STEP: updating the test event @ 05/05/24 14:03:05.236
  STEP: getting the test event @ 05/05/24 14:03:05.245
  STEP: deleting the test event @ 05/05/24 14:03:05.248
  STEP: listing events in all namespaces @ 05/05/24 14:03:05.253
  STEP: listing events in test namespace @ 05/05/24 14:03:05.268
  I0505 14:03:05.271188 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4534" for this suite. @ 05/05/24 14:03:05.276
• [0.124 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 05/05/24 14:03:05.285
  I0505 14:03:05.285272 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename container-probe @ 05/05/24 14:03:05.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:03:05.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:03:05.31
  STEP: Creating pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388 @ 05/05/24 14:03:05.314
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/05/24 14:03:07.34
  I0505 14:03:07.343982 21 container_probe.go:1749] Initial restart count of pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc is 0
  I0505 14:03:07.347154 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:03:09.353663 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:03:11.355958 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:03:13.361361 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:03:15.367932 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:03:17.374201 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:03:19.382828 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:03:21.385531 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:03:23.390841 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:03:25.398443 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:03:27.406659 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:03:27.406740 21 container_probe.go:1763] Restart count of pod container-probe-388/liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc is now 1 (20.062683591s elapsed)
  I0505 14:03:29.412329 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:03:31.417496 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:03:33.423400 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:03:35.429229 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:03:37.432545 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:03:39.438997 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:03:41.444761 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:03:43.451930 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:03:45.458494 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:03:47.464561 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:03:47.465031 21 container_probe.go:1763] Restart count of pod container-probe-388/liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc is now 2 (40.120793071s elapsed)
  I0505 14:03:49.470256 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:03:51.473461 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:03:53.479264 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:03:55.489755 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:03:57.494067 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:03:59.516481 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:01.521048 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:03.524694 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:05.532746 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:07.539049 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:07.539124 21 container_probe.go:1763] Restart count of pod container-probe-388/liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc is now 3 (1m0.195069087s elapsed)
  I0505 14:04:09.542490 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:11.548822 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:13.553301 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:15.557463 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:17.563432 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:19.568875 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:21.570892 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:23.576193 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:25.583726 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:27.592574 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:27.592664 21 container_probe.go:1763] Restart count of pod container-probe-388/liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc is now 4 (1m20.248606932s elapsed)
  I0505 14:04:29.598591 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:31.601692 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:33.607755 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:35.614539 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:37.620023 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:39.623597 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:41.632269 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:43.637263 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:45.642963 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:47.648657 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:49.654060 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:51.660742 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:53.666145 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:55.676081 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:57.679144 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:04:59.683950 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:05:01.690851 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:05:03.698742 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:05:05.704655 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:05:07.712453 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:05:09.714293 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:05:11.720747 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:05:13.726074 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:05:15.728472 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:05:17.733710 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:05:19.740320 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:05:21.745739 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:05:23.751549 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:05:25.757009 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:05:27.763561 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:05:29.769972 21 container_probe.go:1759] Get pod liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc in namespace container-probe-388
  I0505 14:05:29.770088 21 container_probe.go:1763] Restart count of pod container-probe-388/liveness-96d4ca86-eb74-42d5-a81d-0be9c1de88bc is now 5 (2m22.426034722s elapsed)
  STEP: deleting the pod @ 05/05/24 14:05:29.77
  I0505 14:05:29.780364 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-388" for this suite. @ 05/05/24 14:05:29.785
• [144.505 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 05/05/24 14:05:29.79
  I0505 14:05:29.790120 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename limitrange @ 05/05/24 14:05:29.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:05:29.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:05:29.804
  STEP: Creating a LimitRange @ 05/05/24 14:05:29.805
  STEP: Setting up watch @ 05/05/24 14:05:29.805
  STEP: Submitting a LimitRange @ 05/05/24 14:05:29.907
  STEP: Verifying LimitRange creation was observed @ 05/05/24 14:05:29.915
  STEP: Fetching the LimitRange to ensure it has proper values @ 05/05/24 14:05:29.915
  I0505 14:05:29.919605 21 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0505 14:05:29.919679 21 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 05/05/24 14:05:29.919
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 05/05/24 14:05:29.926
  I0505 14:05:29.931684 21 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0505 14:05:29.932656 21 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 05/05/24 14:05:29.932
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 05/05/24 14:05:29.936
  I0505 14:05:29.940957 21 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0505 14:05:29.940982 21 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 05/05/24 14:05:29.94
  STEP: Failing to create a Pod with more than max resources @ 05/05/24 14:05:29.941
  STEP: Updating a LimitRange @ 05/05/24 14:05:29.942
  STEP: Verifying LimitRange updating is effective @ 05/05/24 14:05:29.944
  STEP: Creating a Pod with less than former min resources @ 05/05/24 14:05:31.951
  STEP: Failing to create a Pod with more than max resources @ 05/05/24 14:05:31.957
  STEP: Deleting a LimitRange @ 05/05/24 14:05:31.96
  STEP: Verifying the LimitRange was deleted @ 05/05/24 14:05:31.965
  I0505 14:05:36.969702 21 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 05/05/24 14:05:36.969
  I0505 14:05:36.973377 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4105" for this suite. @ 05/05/24 14:05:36.975
• [7.190 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1079
  STEP: Creating a kubernetes client @ 05/05/24 14:05:36.98
  I0505 14:05:36.980460 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 14:05:36.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:05:36.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:05:36.989
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/05/24 14:05:36.99
  I0505 14:05:36.990696 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-2378 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0505 14:05:37.030999 21 builder.go:146] stderr: ""
  I0505 14:05:37.031028 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 05/05/24 14:05:37.031
  I0505 14:05:37.031096 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-2378 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0505 14:05:37.072263 21 builder.go:146] stderr: ""
  I0505 14:05:37.072294 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/05/24 14:05:37.072
  I0505 14:05:37.073658 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-2378 delete pods e2e-test-httpd-pod'
  I0505 14:05:38.672304 21 builder.go:146] stderr: ""
  I0505 14:05:38.672342 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0505 14:05:38.672400 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2378" for this suite. @ 05/05/24 14:05:38.675
• [1.698 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 05/05/24 14:05:38.678
  I0505 14:05:38.678349 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename runtimeclass @ 05/05/24 14:05:38.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:05:38.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:05:38.686
  I0505 14:05:40.718828 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5784" for this suite. @ 05/05/24 14:05:40.723
• [2.054 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 05/05/24 14:05:40.732
  I0505 14:05:40.732572 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename podtemplate @ 05/05/24 14:05:40.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:05:40.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:05:40.749
  I0505 14:05:40.760137 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3775" for this suite. @ 05/05/24 14:05:40.761
• [0.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 05/05/24 14:05:40.764
  I0505 14:05:40.764037 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename secrets @ 05/05/24 14:05:40.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:05:40.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:05:40.772
  STEP: Creating secret with name secret-test-04ed9d11-1acd-47e8-b248-0ea2797a8bcb @ 05/05/24 14:05:40.774
  STEP: Creating a pod to test consume secrets @ 05/05/24 14:05:40.776
  STEP: Saw pod success @ 05/05/24 14:05:44.8
  I0505 14:05:44.802812 21 output.go:196] Trying to get logs from node worker00 pod pod-secrets-366d4333-9bd2-4d8e-a5a9-0e9590dffa0d container secret-env-test: <nil>
  STEP: delete the pod @ 05/05/24 14:05:44.809
  I0505 14:05:44.817487 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2010" for this suite. @ 05/05/24 14:05:44.819
• [4.058 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 05/05/24 14:05:44.822
  I0505 14:05:44.822932 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 14:05:44.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:05:44.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:05:44.837
  STEP: Creating configMap with name cm-test-opt-del-90d5b59a-5608-4380-9d06-af5fb4d18dd6 @ 05/05/24 14:05:44.841
  STEP: Creating configMap with name cm-test-opt-upd-c6328992-9546-4a72-b8fd-e0750577e9cb @ 05/05/24 14:05:44.844
  STEP: Creating the pod @ 05/05/24 14:05:44.847
  STEP: Deleting configmap cm-test-opt-del-90d5b59a-5608-4380-9d06-af5fb4d18dd6 @ 05/05/24 14:05:46.88
  STEP: Updating configmap cm-test-opt-upd-c6328992-9546-4a72-b8fd-e0750577e9cb @ 05/05/24 14:05:46.882
  STEP: Creating configMap with name cm-test-opt-create-88f9123c-c337-4ad0-a70a-b14cebb456c8 @ 05/05/24 14:05:46.885
  STEP: waiting to observe update in volume @ 05/05/24 14:05:46.888
  I0505 14:06:57.232047 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2391" for this suite. @ 05/05/24 14:06:57.234
• [72.417 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 05/05/24 14:06:57.24
  I0505 14:06:57.240831 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename gc @ 05/05/24 14:06:57.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:06:57.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:06:57.25
  STEP: create the rc @ 05/05/24 14:06:57.252
  W0505 14:06:57.256831      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/05/24 14:07:02.261
  STEP: wait for all pods to be garbage collected @ 05/05/24 14:07:02.264
  STEP: Gathering metrics @ 05/05/24 14:07:07.271
  I0505 14:07:07.311263 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0505 14:07:07.311526 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4793" for this suite. @ 05/05/24 14:07:07.314
• [10.076 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 05/05/24 14:07:07.316
  I0505 14:07:07.316470 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename configmap @ 05/05/24 14:07:07.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:07:07.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:07:07.326
  STEP: Creating configMap with name configmap-test-volume-map-16a0abb9-36ee-4afb-a975-ff7891d01e22 @ 05/05/24 14:07:07.329
  STEP: Creating a pod to test consume configMaps @ 05/05/24 14:07:07.331
  STEP: Saw pod success @ 05/05/24 14:07:09.341
  I0505 14:07:09.344987 21 output.go:196] Trying to get logs from node worker00 pod pod-configmaps-c5371020-f547-4af7-a3d5-18f374289f2e container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 14:07:09.35
  I0505 14:07:09.359190 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5929" for this suite. @ 05/05/24 14:07:09.361
• [2.048 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1537
  STEP: Creating a kubernetes client @ 05/05/24 14:07:09.364
  I0505 14:07:09.364617 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename services @ 05/05/24 14:07:09.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:07:09.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:07:09.375
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-395 @ 05/05/24 14:07:09.377
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/05/24 14:07:09.385
  STEP: creating service externalsvc in namespace services-395 @ 05/05/24 14:07:09.385
  STEP: creating replication controller externalsvc in namespace services-395 @ 05/05/24 14:07:09.398
  I0505 14:07:09.401770      21 runners.go:198] Created replication controller with name: externalsvc, namespace: services-395, replica count: 2
  I0505 14:07:12.453688      21 runners.go:198] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 05/05/24 14:07:12.456
  I0505 14:07:12.465804 21 resource.go:361] Creating new exec pod
  I0505 14:07:14.478634 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-395 exec execpod5rk44 -- /bin/sh -x -c nslookup nodeport-service.services-395.svc.cluster.local'
  I0505 14:07:14.590560 21 builder.go:146] stderr: "+ nslookup nodeport-service.services-395.svc.cluster.local\n"
  I0505 14:07:14.590776 21 builder.go:147] stdout: "Server:\t\t10.32.0.10\nAddress:\t10.32.0.10#53\n\nnodeport-service.services-395.svc.cluster.local\tcanonical name = externalsvc.services-395.svc.cluster.local.\nName:\texternalsvc.services-395.svc.cluster.local\nAddress: 10.32.0.237\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-395, will wait for the garbage collector to delete the pods @ 05/05/24 14:07:14.59
  I0505 14:07:14.653404 21 resources.go:139] Deleting ReplicationController externalsvc took: 9.039372ms
  I0505 14:07:14.780746 21 resources.go:163] Terminating ReplicationController externalsvc pods took: 127.342ms
  I0505 14:07:17.600070 21 service.go:1548] Cleaning up the NodePort to ExternalName test service
  I0505 14:07:17.609077 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-395" for this suite. @ 05/05/24 14:07:17.611
• [8.251 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 05/05/24 14:07:17.615
  I0505 14:07:17.615593 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename field-validation @ 05/05/24 14:07:17.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:07:17.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:07:17.626
  I0505 14:07:17.628382 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:07:20.713261 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8038" for this suite. @ 05/05/24 14:07:20.715
• [3.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 05/05/24 14:07:20.73
  I0505 14:07:20.730397 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename namespaces @ 05/05/24 14:07:20.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:07:20.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:07:20.743
  STEP: Creating a test namespace @ 05/05/24 14:07:20.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:07:20.754
  STEP: Creating a pod in the namespace @ 05/05/24 14:07:20.755
  STEP: Waiting for the pod to have running status @ 05/05/24 14:07:20.759
  STEP: Deleting the namespace @ 05/05/24 14:07:22.763
  STEP: Waiting for the namespace to be removed. @ 05/05/24 14:07:22.77
  STEP: Recreating the namespace @ 05/05/24 14:07:33.776
  STEP: Verifying there are no pods in the namespace @ 05/05/24 14:07:33.798
  I0505 14:07:33.802149 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9834" for this suite. @ 05/05/24 14:07:33.803
  STEP: Destroying namespace "nsdeletetest-9583" for this suite. @ 05/05/24 14:07:33.805
  I0505 14:07:33.807065 21 framework.go:370] Namespace nsdeletetest-9583 was already deleted
  STEP: Destroying namespace "nsdeletetest-4313" for this suite. @ 05/05/24 14:07:33.807
• [13.079 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 05/05/24 14:07:33.81
  I0505 14:07:33.810616 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename pods @ 05/05/24 14:07:33.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:07:33.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:07:33.819
  STEP: creating the pod @ 05/05/24 14:07:33.82
  STEP: submitting the pod to kubernetes @ 05/05/24 14:07:33.82
  STEP: verifying the pod is in kubernetes @ 05/05/24 14:07:35.832
  STEP: updating the pod @ 05/05/24 14:07:35.835
  I0505 14:07:36.361522 21 pod_client.go:141] Successfully updated pod "pod-update-31a06ea5-99a3-4b7b-b4fb-7348980c5e37"
  STEP: verifying the updated pod is in kubernetes @ 05/05/24 14:07:36.366
  I0505 14:07:36.367977 21 pods.go:391] Pod update OK
  I0505 14:07:36.368071 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1787" for this suite. @ 05/05/24 14:07:36.37
• [2.562 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 05/05/24 14:07:36.373
  I0505 14:07:36.373290 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename dns @ 05/05/24 14:07:36.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:07:36.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:07:36.383
  STEP: Creating a test headless service @ 05/05/24 14:07:36.385
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5359.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-5359.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5359.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-5359.svc.cluster.local;sleep 1; done
   @ 05/05/24 14:07:36.387
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5359.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-5359.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5359.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-5359.svc.cluster.local;sleep 1; done
   @ 05/05/24 14:07:36.387
  STEP: creating a pod to probe DNS @ 05/05/24 14:07:36.387
  STEP: submitting the pod to kubernetes @ 05/05/24 14:07:36.387
  STEP: retrieving the pod @ 05/05/24 14:07:38.403
  STEP: looking for the results for each expected name from probers @ 05/05/24 14:07:38.407
  I0505 14:07:38.411252 21 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local from pod dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824: the server could not find the requested resource (get pods dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824)
  I0505 14:07:38.414358 21 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local from pod dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824: the server could not find the requested resource (get pods dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824)
  I0505 14:07:38.416293 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5359.svc.cluster.local from pod dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824: the server could not find the requested resource (get pods dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824)
  I0505 14:07:38.417474 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-5359.svc.cluster.local from pod dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824: the server could not find the requested resource (get pods dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824)
  I0505 14:07:38.419104 21 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local from pod dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824: the server could not find the requested resource (get pods dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824)
  I0505 14:07:38.420569 21 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local from pod dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824: the server could not find the requested resource (get pods dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824)
  I0505 14:07:38.423499 21 dns_common.go:489] Lookups using dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5359.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5359.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local]

  I0505 14:07:38.425698 21 dns_common.go:495] Pod client logs for webserver: 
  I0505 14:07:38.427344 21 dns_common.go:495] Pod client logs for querier: 
  I0505 14:07:38.429174 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0505 14:07:43.416508 21 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local from pod dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824: the server could not find the requested resource (get pods dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824)
  I0505 14:07:43.420396 21 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local from pod dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824: the server could not find the requested resource (get pods dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824)
  I0505 14:07:43.424914 21 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local from pod dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824: the server could not find the requested resource (get pods dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824)
  I0505 14:07:43.426030 21 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local from pod dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824: the server could not find the requested resource (get pods dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824)
  I0505 14:07:43.428614 21 dns_common.go:489] Lookups using dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local]

  I0505 14:07:43.430419 21 dns_common.go:495] Pod client logs for webserver: 
  I0505 14:07:43.432459 21 dns_common.go:495] Pod client logs for querier: 
  I0505 14:07:43.434607 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0505 14:07:48.417165 21 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local from pod dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824: the server could not find the requested resource (get pods dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824)
  I0505 14:07:48.420530 21 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local from pod dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824: the server could not find the requested resource (get pods dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824)
  I0505 14:07:48.425074 21 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local from pod dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824: the server could not find the requested resource (get pods dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824)
  I0505 14:07:48.426624 21 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local from pod dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824: the server could not find the requested resource (get pods dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824)
  I0505 14:07:48.429355 21 dns_common.go:489] Lookups using dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local]

  I0505 14:07:48.431779 21 dns_common.go:495] Pod client logs for webserver: 
  I0505 14:07:48.434233 21 dns_common.go:495] Pod client logs for querier: 
  I0505 14:07:48.436247 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0505 14:07:53.414206 21 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local from pod dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824: the server could not find the requested resource (get pods dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824)
  I0505 14:07:53.417682 21 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local from pod dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824: the server could not find the requested resource (get pods dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824)
  I0505 14:07:53.422417 21 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local from pod dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824: the server could not find the requested resource (get pods dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824)
  I0505 14:07:53.423737 21 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local from pod dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824: the server could not find the requested resource (get pods dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824)
  I0505 14:07:53.425768 21 dns_common.go:489] Lookups using dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local]

  I0505 14:07:53.427930 21 dns_common.go:495] Pod client logs for webserver: 
  I0505 14:07:53.429779 21 dns_common.go:495] Pod client logs for querier: 
  I0505 14:07:53.432149 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0505 14:07:58.414666 21 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local from pod dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824: the server could not find the requested resource (get pods dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824)
  I0505 14:07:58.416940 21 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local from pod dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824: the server could not find the requested resource (get pods dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824)
  I0505 14:07:58.421172 21 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local from pod dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824: the server could not find the requested resource (get pods dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824)
  I0505 14:07:58.422285 21 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local from pod dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824: the server could not find the requested resource (get pods dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824)
  I0505 14:07:58.424273 21 dns_common.go:489] Lookups using dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local]

  I0505 14:07:58.426201 21 dns_common.go:495] Pod client logs for webserver: 
  I0505 14:07:58.428160 21 dns_common.go:495] Pod client logs for querier: 
  I0505 14:07:58.430381 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0505 14:08:03.409337 21 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local from pod dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824: the server could not find the requested resource (get pods dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824)
  I0505 14:08:03.411093 21 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local from pod dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824: the server could not find the requested resource (get pods dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824)
  I0505 14:08:03.414625 21 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local from pod dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824: the server could not find the requested resource (get pods dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824)
  I0505 14:08:03.415829 21 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local from pod dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824: the server could not find the requested resource (get pods dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824)
  I0505 14:08:03.419646 21 dns_common.go:489] Lookups using dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5359.svc.cluster.local]

  I0505 14:08:03.423859 21 dns_common.go:495] Pod client logs for webserver: 
  I0505 14:08:03.426245 21 dns_common.go:495] Pod client logs for querier: 
  I0505 14:08:03.428325 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0505 14:08:08.427590 21 dns_common.go:527] DNS probes using dns-5359/dns-test-2bf93486-5a1f-4fe1-bcbe-d3f941589824 succeeded

  STEP: deleting the pod @ 05/05/24 14:08:08.427
  STEP: deleting the test headless service @ 05/05/24 14:08:08.45
  I0505 14:08:08.464335 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5359" for this suite. @ 05/05/24 14:08:08.467
• [32.101 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 05/05/24 14:08:08.474
  I0505 14:08:08.474243 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename daemonsets @ 05/05/24 14:08:08.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:08:08.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:08:08.486
  STEP: Creating simple DaemonSet "daemon-set" @ 05/05/24 14:08:08.497
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/05/24 14:08:08.499
  I0505 14:08:08.503156 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0505 14:08:08.503181 21 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  I0505 14:08:09.508789 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0505 14:08:09.508905 21 fixtures.go:130] Node worker01 is running 0 daemon pod, expected 1
  I0505 14:08:10.505760 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0505 14:08:10.505831 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 05/05/24 14:08:10.508
  STEP: DeleteCollection of the DaemonSets @ 05/05/24 14:08:10.511
  STEP: Verify that ReplicaSets have been deleted @ 05/05/24 14:08:10.515
  I0505 14:08:10.519757 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"10501"},"items":null}

  I0505 14:08:10.523519 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"10501"},"items":[{"metadata":{"name":"daemon-set-69zhj","generateName":"daemon-set-","namespace":"daemonsets-3260","uid":"8db076ea-0e13-4a54-9499-ff38afa8a915","resourceVersion":"10495","creationTimestamp":"2024-05-05T14:08:08Z","labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"a05a49f03115de8b01fde669111228c0aa7a080b00378bacab42270c76b51ed3","cni.projectcalico.org/podIP":"10.200.131.151/32","cni.projectcalico.org/podIPs":"10.200.131.151/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"be17d95d-61c0-4fa6-b5ab-b801002bb06a","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-05-05T14:08:08Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-05T14:08:08Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"be17d95d-61c0-4fa6-b5ab-b801002bb06a\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-05T14:08:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.131.151\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-wr5nh","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-wr5nh","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker00","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker00"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-05T14:08:09Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-05T14:08:08Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-05T14:08:09Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-05T14:08:09Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-05T14:08:08Z"}],"hostIP":"192.168.58.100","hostIPs":[{"ip":"192.168.58.100"}],"podIP":"10.200.131.151","podIPs":[{"ip":"10.200.131.151"}],"startTime":"2024-05-05T14:08:08Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-05T14:08:09Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://5cf8cd5c86c68633758a54c2be2f99ee9250fa3ca66fca727b3907f14425cb9e","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-dxmw5","generateName":"daemon-set-","namespace":"daemonsets-3260","uid":"9b72fc8a-2843-40f1-9ac2-8b9bc8dce1ee","resourceVersion":"10497","creationTimestamp":"2024-05-05T14:08:08Z","labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"34ce2928d79c3bb4ddb99423e714e77877aac3152f420c3788d9b28f63071e7d","cni.projectcalico.org/podIP":"10.200.5.28/32","cni.projectcalico.org/podIPs":"10.200.5.28/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"be17d95d-61c0-4fa6-b5ab-b801002bb06a","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-05-05T14:08:08Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-05T14:08:08Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"be17d95d-61c0-4fa6-b5ab-b801002bb06a\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-05T14:08:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.5.28\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-qxsj7","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-qxsj7","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker01","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker01"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-05T14:08:09Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-05T14:08:08Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-05T14:08:09Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-05T14:08:09Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-05T14:08:08Z"}],"hostIP":"192.168.58.101","hostIPs":[{"ip":"192.168.58.101"}],"podIP":"10.200.5.28","podIPs":[{"ip":"10.200.5.28"}],"startTime":"2024-05-05T14:08:08Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-05T14:08:08Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://a29915d90f1599385d770cdd1e6c87ca220e94cccf8ec16cc76cc428e84124b6","started":true}],"qosClass":"BestEffort"}}]}

  I0505 14:08:10.532975 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3260" for this suite. @ 05/05/24 14:08:10.534
• [2.063 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 05/05/24 14:08:10.536
  I0505 14:08:10.536903 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename subpath @ 05/05/24 14:08:10.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:08:10.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:08:10.552
  STEP: Setting up data @ 05/05/24 14:08:10.554
  STEP: Creating pod pod-subpath-test-configmap-p428 @ 05/05/24 14:08:10.559
  STEP: Creating a pod to test atomic-volume-subpath @ 05/05/24 14:08:10.559
  STEP: Saw pod success @ 05/05/24 14:08:34.642
  I0505 14:08:34.646655 21 output.go:196] Trying to get logs from node worker00 pod pod-subpath-test-configmap-p428 container test-container-subpath-configmap-p428: <nil>
  STEP: delete the pod @ 05/05/24 14:08:34.652
  STEP: Deleting pod pod-subpath-test-configmap-p428 @ 05/05/24 14:08:34.66
  I0505 14:08:34.660118 21 delete.go:62] Deleting pod "pod-subpath-test-configmap-p428" in namespace "subpath-2771"
  I0505 14:08:34.661329 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2771" for this suite. @ 05/05/24 14:08:34.662
• [24.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 05/05/24 14:08:34.665
  I0505 14:08:34.665948 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename svcaccounts @ 05/05/24 14:08:34.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:08:34.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:08:34.675
  STEP: creating a ServiceAccount @ 05/05/24 14:08:34.677
  STEP: watching for the ServiceAccount to be added @ 05/05/24 14:08:34.68
  STEP: patching the ServiceAccount @ 05/05/24 14:08:34.681
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 05/05/24 14:08:34.684
  STEP: deleting the ServiceAccount @ 05/05/24 14:08:34.687
  I0505 14:08:34.692606 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-981" for this suite. @ 05/05/24 14:08:34.694
• [0.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:601
  STEP: Creating a kubernetes client @ 05/05/24 14:08:34.698
  I0505 14:08:34.698798 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename job @ 05/05/24 14:08:34.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:08:34.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:08:34.711
  STEP: Creating a job @ 05/05/24 14:08:34.712
  STEP: Ensuring job reaches completions @ 05/05/24 14:08:34.715
  I0505 14:08:42.721313 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8080" for this suite. @ 05/05/24 14:08:42.726
• [8.031 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 05/05/24 14:08:42.73
  I0505 14:08:42.731004 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename disruption @ 05/05/24 14:08:42.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:08:42.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:08:42.744
  STEP: Waiting for the pdb to be processed @ 05/05/24 14:08:42.748
  STEP: Updating PodDisruptionBudget status @ 05/05/24 14:08:44.751
  STEP: Waiting for all pods to be running @ 05/05/24 14:08:44.765
  I0505 14:08:44.768775 21 disruption.go:578] running pods: 0 < 1
  STEP: locating a running pod @ 05/05/24 14:08:46.771
  STEP: Waiting for the pdb to be processed @ 05/05/24 14:08:46.792
  STEP: Patching PodDisruptionBudget status @ 05/05/24 14:08:46.797
  STEP: Waiting for the pdb to be processed @ 05/05/24 14:08:46.801
  I0505 14:08:46.802554 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9338" for this suite. @ 05/05/24 14:08:46.804
• [4.076 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 05/05/24 14:08:46.806
  I0505 14:08:46.806649 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename endpointslicemirroring @ 05/05/24 14:08:46.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:08:46.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:08:46.815
  STEP: mirroring a new custom Endpoint @ 05/05/24 14:08:46.819
  I0505 14:08:46.826739 21 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 05/05/24 14:08:48.832
  I0505 14:08:48.841529 21 endpointslicemirroring.go:171] Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 05/05/24 14:08:50.846
  I0505 14:08:50.865805 21 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  I0505 14:08:52.871218 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-8485" for this suite. @ 05/05/24 14:08:52.874
• [6.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 05/05/24 14:08:52.877
  I0505 14:08:52.877909 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename tables @ 05/05/24 14:08:52.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:08:52.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:08:52.887
  I0505 14:08:52.889988 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-9746" for this suite. @ 05/05/24 14:08:52.891
• [0.017 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 05/05/24 14:08:52.895
  I0505 14:08:52.895215 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename kubelet-test @ 05/05/24 14:08:52.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:08:52.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:08:52.904
  I0505 14:08:54.923654 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5317" for this suite. @ 05/05/24 14:08:54.926
• [2.047 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:789
  STEP: Creating a kubernetes client @ 05/05/24 14:08:54.943
  I0505 14:08:54.943787 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename services @ 05/05/24 14:08:54.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:08:54.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:08:54.961
  STEP: creating service endpoint-test2 in namespace services-642 @ 05/05/24 14:08:54.964
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-642 to expose endpoints map[] @ 05/05/24 14:08:54.972
  I0505 14:08:54.976394 21 service.go:4226] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  I0505 14:08:55.986999 21 service.go:4258] successfully validated that service endpoint-test2 in namespace services-642 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-642 @ 05/05/24 14:08:55.987
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-642 to expose endpoints map[pod1:[80]] @ 05/05/24 14:08:58.011
  I0505 14:08:58.016057 21 service.go:4258] successfully validated that service endpoint-test2 in namespace services-642 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 05/05/24 14:08:58.016
  I0505 14:08:58.016108 21 resource.go:361] Creating new exec pod
  I0505 14:09:01.025267 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-642 exec execpodgc2h2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0505 14:09:01.097325 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0505 14:09:01.097365 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0505 14:09:01.097431 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-642 exec execpodgc2h2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.151 80'
  I0505 14:09:01.169821 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.151 80\nConnection to 10.32.0.151 80 port [tcp/http] succeeded!\n"
  I0505 14:09:01.169856 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-642 @ 05/05/24 14:09:01.169
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-642 to expose endpoints map[pod1:[80] pod2:[80]] @ 05/05/24 14:09:03.185
  I0505 14:09:03.192396 21 service.go:4258] successfully validated that service endpoint-test2 in namespace services-642 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 05/05/24 14:09:03.192
  I0505 14:09:04.194179 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-642 exec execpodgc2h2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0505 14:09:04.278229 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0505 14:09:04.278291 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0505 14:09:04.278356 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-642 exec execpodgc2h2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.151 80'
  I0505 14:09:04.345284 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.151 80\nConnection to 10.32.0.151 80 port [tcp/http] succeeded!\n"
  I0505 14:09:04.345316 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-642 @ 05/05/24 14:09:04.345
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-642 to expose endpoints map[pod2:[80]] @ 05/05/24 14:09:04.35
  I0505 14:09:05.375144 21 service.go:4258] successfully validated that service endpoint-test2 in namespace services-642 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 05/05/24 14:09:05.375
  I0505 14:09:06.375588 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-642 exec execpodgc2h2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0505 14:09:06.451992 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0505 14:09:06.452044 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0505 14:09:06.452107 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-642 exec execpodgc2h2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.151 80'
  I0505 14:09:06.516098 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.151 80\nConnection to 10.32.0.151 80 port [tcp/http] succeeded!\n"
  I0505 14:09:06.516130 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-642 @ 05/05/24 14:09:06.516
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-642 to expose endpoints map[] @ 05/05/24 14:09:06.524
  I0505 14:09:07.543399 21 service.go:4258] successfully validated that service endpoint-test2 in namespace services-642 exposes endpoints map[]
  I0505 14:09:07.555196 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-642" for this suite. @ 05/05/24 14:09:07.557
• [12.617 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2240
  STEP: Creating a kubernetes client @ 05/05/24 14:09:07.56
  I0505 14:09:07.560318 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename services @ 05/05/24 14:09:07.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:09:07.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:09:07.575
  STEP: creating service in namespace services-2466 @ 05/05/24 14:09:07.577
  STEP: creating service affinity-nodeport-transition in namespace services-2466 @ 05/05/24 14:09:07.577
  STEP: creating replication controller affinity-nodeport-transition in namespace services-2466 @ 05/05/24 14:09:07.584
  I0505 14:09:07.587557      21 runners.go:198] Created replication controller with name: affinity-nodeport-transition, namespace: services-2466, replica count: 3
  I0505 14:09:10.640030      21 runners.go:198] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0505 14:09:10.646626 21 resource.go:361] Creating new exec pod
  I0505 14:09:13.658998 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-2466 exec execpod-affinityqj5fm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0505 14:09:13.731735 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I0505 14:09:13.731775 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0505 14:09:13.731823 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-2466 exec execpod-affinityqj5fm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.50 80'
  I0505 14:09:13.798533 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.50 80\nConnection to 10.32.0.50 80 port [tcp/http] succeeded!\n"
  I0505 14:09:13.798569 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0505 14:09:13.798628 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-2466 exec execpod-affinityqj5fm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.100 31800'
  I0505 14:09:13.867819 21 builder.go:146] stderr: "+ nc -v -t -w 2 192.168.58.100 31800\n+ echo hostName\nConnection to 192.168.58.100 31800 port [tcp/*] succeeded!\n"
  I0505 14:09:13.868027 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0505 14:09:13.868110 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-2466 exec execpod-affinityqj5fm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.101 31800'
  I0505 14:09:13.938067 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.101 31800\nConnection to 192.168.58.101 31800 port [tcp/*] succeeded!\n"
  I0505 14:09:13.938123 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0505 14:09:13.951762 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-2466 exec execpod-affinityqj5fm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.58.100:31800/ ; done'
  I0505 14:09:14.084030 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n"
  I0505 14:09:14.084069 21 builder.go:147] stdout: "\naffinity-nodeport-transition-kqjjg\naffinity-nodeport-transition-nwqwm\naffinity-nodeport-transition-nwqwm\naffinity-nodeport-transition-9jsch\naffinity-nodeport-transition-kqjjg\naffinity-nodeport-transition-9jsch\naffinity-nodeport-transition-nwqwm\naffinity-nodeport-transition-kqjjg\naffinity-nodeport-transition-9jsch\naffinity-nodeport-transition-kqjjg\naffinity-nodeport-transition-9jsch\naffinity-nodeport-transition-9jsch\naffinity-nodeport-transition-kqjjg\naffinity-nodeport-transition-9jsch\naffinity-nodeport-transition-kqjjg\naffinity-nodeport-transition-nwqwm"
  I0505 14:09:14.084083 21 service.go:242] Received response from host: affinity-nodeport-transition-kqjjg
  I0505 14:09:14.084093 21 service.go:242] Received response from host: affinity-nodeport-transition-nwqwm
  I0505 14:09:14.084102 21 service.go:242] Received response from host: affinity-nodeport-transition-nwqwm
  I0505 14:09:14.084110 21 service.go:242] Received response from host: affinity-nodeport-transition-9jsch
  I0505 14:09:14.084117 21 service.go:242] Received response from host: affinity-nodeport-transition-kqjjg
  I0505 14:09:14.084123 21 service.go:242] Received response from host: affinity-nodeport-transition-9jsch
  I0505 14:09:14.084130 21 service.go:242] Received response from host: affinity-nodeport-transition-nwqwm
  I0505 14:09:14.084136 21 service.go:242] Received response from host: affinity-nodeport-transition-kqjjg
  I0505 14:09:14.084142 21 service.go:242] Received response from host: affinity-nodeport-transition-9jsch
  I0505 14:09:14.084148 21 service.go:242] Received response from host: affinity-nodeport-transition-kqjjg
  I0505 14:09:14.084154 21 service.go:242] Received response from host: affinity-nodeport-transition-9jsch
  I0505 14:09:14.084160 21 service.go:242] Received response from host: affinity-nodeport-transition-9jsch
  I0505 14:09:14.084166 21 service.go:242] Received response from host: affinity-nodeport-transition-kqjjg
  I0505 14:09:14.084173 21 service.go:242] Received response from host: affinity-nodeport-transition-9jsch
  I0505 14:09:14.084181 21 service.go:242] Received response from host: affinity-nodeport-transition-kqjjg
  I0505 14:09:14.084189 21 service.go:242] Received response from host: affinity-nodeport-transition-nwqwm
  I0505 14:09:14.089778 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-2466 exec execpod-affinityqj5fm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.58.100:31800/ ; done'
  I0505 14:09:14.234961 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31800/\n"
  I0505 14:09:14.235084 21 builder.go:147] stdout: "\naffinity-nodeport-transition-nwqwm\naffinity-nodeport-transition-nwqwm\naffinity-nodeport-transition-nwqwm\naffinity-nodeport-transition-nwqwm\naffinity-nodeport-transition-nwqwm\naffinity-nodeport-transition-nwqwm\naffinity-nodeport-transition-nwqwm\naffinity-nodeport-transition-nwqwm\naffinity-nodeport-transition-nwqwm\naffinity-nodeport-transition-nwqwm\naffinity-nodeport-transition-nwqwm\naffinity-nodeport-transition-nwqwm\naffinity-nodeport-transition-nwqwm\naffinity-nodeport-transition-nwqwm\naffinity-nodeport-transition-nwqwm\naffinity-nodeport-transition-nwqwm"
  I0505 14:09:14.235115 21 service.go:242] Received response from host: affinity-nodeport-transition-nwqwm
  I0505 14:09:14.235130 21 service.go:242] Received response from host: affinity-nodeport-transition-nwqwm
  I0505 14:09:14.235148 21 service.go:242] Received response from host: affinity-nodeport-transition-nwqwm
  I0505 14:09:14.235163 21 service.go:242] Received response from host: affinity-nodeport-transition-nwqwm
  I0505 14:09:14.235180 21 service.go:242] Received response from host: affinity-nodeport-transition-nwqwm
  I0505 14:09:14.235193 21 service.go:242] Received response from host: affinity-nodeport-transition-nwqwm
  I0505 14:09:14.235206 21 service.go:242] Received response from host: affinity-nodeport-transition-nwqwm
  I0505 14:09:14.235218 21 service.go:242] Received response from host: affinity-nodeport-transition-nwqwm
  I0505 14:09:14.235234 21 service.go:242] Received response from host: affinity-nodeport-transition-nwqwm
  I0505 14:09:14.235247 21 service.go:242] Received response from host: affinity-nodeport-transition-nwqwm
  I0505 14:09:14.235263 21 service.go:242] Received response from host: affinity-nodeport-transition-nwqwm
  I0505 14:09:14.235276 21 service.go:242] Received response from host: affinity-nodeport-transition-nwqwm
  I0505 14:09:14.235288 21 service.go:242] Received response from host: affinity-nodeport-transition-nwqwm
  I0505 14:09:14.235300 21 service.go:242] Received response from host: affinity-nodeport-transition-nwqwm
  I0505 14:09:14.235315 21 service.go:242] Received response from host: affinity-nodeport-transition-nwqwm
  I0505 14:09:14.235327 21 service.go:242] Received response from host: affinity-nodeport-transition-nwqwm
  I0505 14:09:14.235406 21 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-2466, will wait for the garbage collector to delete the pods @ 05/05/24 14:09:14.245
  I0505 14:09:14.309505 21 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 5.583362ms
  I0505 14:09:14.410428 21 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.918962ms
  I0505 14:09:17.235425 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2466" for this suite. @ 05/05/24 14:09:17.238
• [9.681 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 05/05/24 14:09:17.241
  I0505 14:09:17.241209 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename cronjob @ 05/05/24 14:09:17.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:09:17.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:09:17.25
  STEP: Creating a suspended cronjob @ 05/05/24 14:09:17.251
  STEP: Ensuring no jobs are scheduled @ 05/05/24 14:09:17.254
  STEP: Ensuring no job exists by listing jobs explicitly @ 05/05/24 14:14:17.255
  STEP: Removing cronjob @ 05/05/24 14:14:17.26
  I0505 14:14:17.276116 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5577" for this suite. @ 05/05/24 14:14:17.281
• [300.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 05/05/24 14:14:17.287
  I0505 14:14:17.287607 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 14:14:17.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:14:17.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:14:17.298
  STEP: Creating projection with secret that has name projected-secret-test-map-f7445dc0-6242-4eb2-8fed-6337d349c80c @ 05/05/24 14:14:17.3
  STEP: Creating a pod to test consume secrets @ 05/05/24 14:14:17.302
  STEP: Saw pod success @ 05/05/24 14:14:19.313
  I0505 14:14:19.315451 21 output.go:196] Trying to get logs from node worker00 pod pod-projected-secrets-cc0cb572-d2f8-43da-8f42-c5c0e6231c58 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 14:14:19.32
  I0505 14:14:19.341628 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4240" for this suite. @ 05/05/24 14:14:19.344
• [2.060 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 05/05/24 14:14:19.348
  I0505 14:14:19.348551 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename resourcequota @ 05/05/24 14:14:19.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:14:19.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:14:19.356
  STEP: Counting existing ResourceQuota @ 05/05/24 14:14:19.358
  STEP: Creating a ResourceQuota @ 05/05/24 14:14:24.361
  STEP: Ensuring resource quota status is calculated @ 05/05/24 14:14:24.367
  STEP: Creating a Service @ 05/05/24 14:14:26.375
  STEP: Creating a NodePort Service @ 05/05/24 14:14:26.396
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 05/05/24 14:14:26.41
  STEP: Ensuring resource quota status captures service creation @ 05/05/24 14:14:26.416
  STEP: Deleting Services @ 05/05/24 14:14:28.421
  STEP: Ensuring resource quota status released usage @ 05/05/24 14:14:28.455
  I0505 14:14:30.461715 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8065" for this suite. @ 05/05/24 14:14:30.466
• [11.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 05/05/24 14:14:30.47
  I0505 14:14:30.470434 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename svcaccounts @ 05/05/24 14:14:30.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:14:30.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:14:30.48
  I0505 14:14:30.483220 21 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-26"
  I0505 14:14:30.485537 21 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-26"
  STEP: waiting for a new root ca configmap created @ 05/05/24 14:14:30.986
  I0505 14:14:30.991175 21 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-26"
  I0505 14:14:30.996328 21 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-26"
  STEP: waiting for the root ca configmap reconciled @ 05/05/24 14:14:31.497
  I0505 14:14:31.502919 21 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-26"
  I0505 14:14:31.503142 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-26" for this suite. @ 05/05/24 14:14:31.506
• [1.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 05/05/24 14:14:31.511
  I0505 14:14:31.511209 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename secrets @ 05/05/24 14:14:31.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:14:31.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:14:31.523
  STEP: Creating secret with name secret-test-map-8e804b84-76d3-45e7-9526-3c0969b91b3d @ 05/05/24 14:14:31.524
  STEP: Creating a pod to test consume secrets @ 05/05/24 14:14:31.527
  STEP: Saw pod success @ 05/05/24 14:14:35.541
  I0505 14:14:35.543701 21 output.go:196] Trying to get logs from node worker00 pod pod-secrets-c530101a-fc1e-448b-a8bb-4fcfe89a7287 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 14:14:35.547
  I0505 14:14:35.558973 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6823" for this suite. @ 05/05/24 14:14:35.56
• [4.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 05/05/24 14:14:35.568
  I0505 14:14:35.568729 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename apf @ 05/05/24 14:14:35.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:14:35.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:14:35.577
  STEP: getting /apis @ 05/05/24 14:14:35.578
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/05/24 14:14:35.581
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/05/24 14:14:35.582
  STEP: creating @ 05/05/24 14:14:35.582
  STEP: getting @ 05/05/24 14:14:35.588
  STEP: listing @ 05/05/24 14:14:35.589
  STEP: watching @ 05/05/24 14:14:35.59
  I0505 14:14:35.590583 21 flowcontrol.go:620] starting watch
  STEP: patching @ 05/05/24 14:14:35.591
  STEP: updating @ 05/05/24 14:14:35.593
  I0505 14:14:35.596676 21 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 05/05/24 14:14:35.596
  STEP: patching /status @ 05/05/24 14:14:35.598
  STEP: updating /status @ 05/05/24 14:14:35.6
  STEP: deleting @ 05/05/24 14:14:35.604
  STEP: deleting a collection @ 05/05/24 14:14:35.608
  I0505 14:14:35.614437 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-9953" for this suite. @ 05/05/24 14:14:35.616
• [0.050 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 05/05/24 14:14:35.618
  I0505 14:14:35.618813 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/05/24 14:14:35.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:14:35.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:14:35.628
  STEP: create the container to handle the HTTPGet hook request. @ 05/05/24 14:14:35.631
  STEP: create the pod with lifecycle hook @ 05/05/24 14:14:37.646
  STEP: delete the pod with lifecycle hook @ 05/05/24 14:14:39.658
  STEP: check prestop hook @ 05/05/24 14:14:43.682
  I0505 14:14:43.702549 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2239" for this suite. @ 05/05/24 14:14:43.705
• [8.090 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 05/05/24 14:14:43.709
  I0505 14:14:43.709572 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename volumeattachment @ 05/05/24 14:14:43.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:14:43.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:14:43.718
  STEP: Create VolumeAttachment "va-e2e-76t5p" on node "worker00" @ 05/05/24 14:14:43.721
  STEP: Get VolumeAttachment "va-e2e-76t5p" on node "worker00" @ 05/05/24 14:14:43.723
  STEP: Patch VolumeAttachment "va-e2e-76t5p" on node "worker00" @ 05/05/24 14:14:43.724
  STEP: List VolumeAttachments with "va-e2e-76t5p=patched" label @ 05/05/24 14:14:43.726
  STEP: Delete VolumeAttachment "va-e2e-76t5p" on node "worker00" @ 05/05/24 14:14:43.727
  STEP: Confirm deletion of VolumeAttachment "va-e2e-76t5p" on node "worker00" @ 05/05/24 14:14:43.729
  STEP: Create VolumeAttachment "va-e2e-vhndf" on node "worker01" @ 05/05/24 14:14:43.731
  STEP: Update the VolumeAttachment "va-e2e-vhndf" on node "worker01" with label "va-e2e=updated" @ 05/05/24 14:14:43.733
  STEP: Create VolumeAttachment "va-e2e-rrrp6" on node "worker01" @ 05/05/24 14:14:43.737
  STEP: Update the VolumeAttachment "va-e2e-rrrp6" on node "worker01" with label "va-e2e=updated" @ 05/05/24 14:14:43.739
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 05/05/24 14:14:43.742
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 05/05/24 14:14:43.746
  I0505 14:14:43.747166 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-3601" for this suite. @ 05/05/24 14:14:43.748
• [0.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 05/05/24 14:14:43.753
  I0505 14:14:43.753530 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename taint-multiple-pods @ 05/05/24 14:14:43.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:14:43.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:14:43.764
  I0505 14:14:43.765141 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0505 14:15:43.765827 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I0505 14:15:43.770998 21 taints.go:150] Starting informer...
  STEP: Starting pods... @ 05/05/24 14:15:43.771
  I0505 14:15:43.991254 21 taints.go:469] Pod1 is running on worker00. Tainting Node
  I0505 14:15:46.208116 21 taints.go:477] Pod2 is running on worker00. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/05/24 14:15:46.208
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/05/24 14:15:46.231
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 05/05/24 14:15:46.238
  I0505 14:15:52.476939 21 taints.go:498] Noticed Pod "taint-eviction-b1" gets evicted.
  I0505 14:16:11.845162 21 taints.go:498] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/05/24 14:16:11.857
  I0505 14:16:11.862548 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-7031" for this suite. @ 05/05/24 14:16:11.872
• [88.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 05/05/24 14:16:11.886
  I0505 14:16:11.886406 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename field-validation @ 05/05/24 14:16:11.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:16:11.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:16:11.909
  STEP: apply creating a deployment @ 05/05/24 14:16:11.911
  I0505 14:16:11.921917 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7626" for this suite. @ 05/05/24 14:16:11.927
• [0.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 05/05/24 14:16:11.931
  I0505 14:16:11.931412 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename resourcequota @ 05/05/24 14:16:11.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:16:11.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:16:11.947
  STEP: Counting existing ResourceQuota @ 05/05/24 14:16:11.949
  STEP: Creating a ResourceQuota @ 05/05/24 14:16:16.952
  STEP: Ensuring resource quota status is calculated @ 05/05/24 14:16:16.957
  STEP: Creating a Pod that fits quota @ 05/05/24 14:16:18.961
  STEP: Ensuring ResourceQuota status captures the pod usage @ 05/05/24 14:16:18.968
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 05/05/24 14:16:20.974
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 05/05/24 14:16:20.977
  STEP: Ensuring a pod cannot update its resource requirements @ 05/05/24 14:16:20.978
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 05/05/24 14:16:20.98
  STEP: Deleting the pod @ 05/05/24 14:16:22.987
  STEP: Ensuring resource quota status released the pod usage @ 05/05/24 14:16:23.006
  I0505 14:16:25.008638 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7702" for this suite. @ 05/05/24 14:16:25.01
• [13.092 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 05/05/24 14:16:25.024
  I0505 14:16:25.024194 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename var-expansion @ 05/05/24 14:16:25.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:16:25.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:16:25.035
  STEP: creating the pod with failed condition @ 05/05/24 14:16:25.037
  STEP: updating the pod @ 05/05/24 14:18:25.047
  I0505 14:18:25.557972 21 pod_client.go:141] Successfully updated pod "var-expansion-25fef3bf-7998-4304-a9e2-9bedda0df634"
  STEP: waiting for pod running @ 05/05/24 14:18:25.558
  STEP: deleting the pod gracefully @ 05/05/24 14:18:27.563
  I0505 14:18:27.563771 21 delete.go:62] Deleting pod "var-expansion-25fef3bf-7998-4304-a9e2-9bedda0df634" in namespace "var-expansion-4869"
  I0505 14:18:27.577983 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-25fef3bf-7998-4304-a9e2-9bedda0df634" to be fully deleted
  I0505 14:18:59.660481 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4869" for this suite. @ 05/05/24 14:18:59.664
• [154.655 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 05/05/24 14:18:59.678
  I0505 14:18:59.679024 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename runtimeclass @ 05/05/24 14:18:59.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:18:59.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:18:59.69
  I0505 14:18:59.704203 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1244" for this suite. @ 05/05/24 14:18:59.706
• [0.032 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 05/05/24 14:18:59.711
  I0505 14:18:59.711508 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename ingress @ 05/05/24 14:18:59.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:18:59.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:18:59.722
  STEP: getting /apis @ 05/05/24 14:18:59.724
  STEP: getting /apis/networking.k8s.io @ 05/05/24 14:18:59.726
  STEP: getting /apis/networking.k8s.iov1 @ 05/05/24 14:18:59.728
  STEP: creating @ 05/05/24 14:18:59.731
  STEP: getting @ 05/05/24 14:18:59.739
  STEP: listing @ 05/05/24 14:18:59.74
  STEP: watching @ 05/05/24 14:18:59.741
  I0505 14:18:59.741990 21 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 05/05/24 14:18:59.742
  STEP: cluster-wide watching @ 05/05/24 14:18:59.743
  I0505 14:18:59.743682 21 ingress.go:198] starting watch
  STEP: patching @ 05/05/24 14:18:59.744
  STEP: updating @ 05/05/24 14:18:59.748
  I0505 14:18:59.751798 21 ingress.go:221] waiting for watch events with expected annotations
  I0505 14:18:59.751826 21 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 05/05/24 14:18:59.751
  STEP: updating /status @ 05/05/24 14:18:59.755
  STEP: get /status @ 05/05/24 14:18:59.758
  STEP: deleting @ 05/05/24 14:18:59.76
  STEP: deleting a collection @ 05/05/24 14:18:59.765
  I0505 14:18:59.770036 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-7408" for this suite. @ 05/05/24 14:18:59.771
• [0.063 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 05/05/24 14:18:59.774
  I0505 14:18:59.774784 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename security-context @ 05/05/24 14:18:59.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:18:59.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:18:59.785
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/05/24 14:18:59.786
  STEP: Saw pod success @ 05/05/24 14:19:03.801
  I0505 14:19:03.806812 21 output.go:196] Trying to get logs from node worker00 pod security-context-3962110e-6f01-4f0d-94d1-cb9e4e9ffa0a container test-container: <nil>
  STEP: delete the pod @ 05/05/24 14:19:03.813
  I0505 14:19:03.833700 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-544" for this suite. @ 05/05/24 14:19:03.836
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 05/05/24 14:19:03.843
  I0505 14:19:03.843444 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename sysctl @ 05/05/24 14:19:03.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:19:03.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:19:03.855
  STEP: Creating a pod with one valid and two invalid sysctls @ 05/05/24 14:19:03.857
  I0505 14:19:03.860141 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8471" for this suite. @ 05/05/24 14:19:03.862
• [0.023 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 05/05/24 14:19:03.866
  I0505 14:19:03.866573 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename chunking @ 05/05/24 14:19:03.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:19:03.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:19:03.878
  STEP: creating a large number of resources @ 05/05/24 14:19:03.879
  I0505 14:19:08.051900      21 request.go:697] Waited for 1.027270611s due to client-side throttling, not priority and fairness, request: POST:https://10.32.0.1:443/api/v1/namespaces/chunking-4637/podtemplates
  I0505 14:19:18.129316      21 request.go:697] Waited for 1.004262477s due to client-side throttling, not priority and fairness, request: POST:https://10.32.0.1:443/api/v1/namespaces/chunking-4637/podtemplates
  STEP: retrieving the first page @ 05/05/24 14:19:21.578
  I0505 14:19:21.629851 21 chunking.go:163] Retrieved 40/40 results with rv 14608 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 05/05/24 14:19:21.629
  I0505 14:19:41.639331 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0505 14:20:01.638424 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0505 14:20:21.636764 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0505 14:20:41.637443 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0505 14:21:01.639352 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0505 14:21:21.633252 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0505 14:21:41.639140 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0505 14:22:01.642205 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0505 14:22:21.639863 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0505 14:22:41.632798 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0505 14:23:01.640581 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0505 14:23:21.641591 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0505 14:23:41.634097 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0505 14:24:01.637066 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0505 14:24:21.640261 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0505 14:24:41.637326 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0505 14:25:01.637611 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0505 14:25:21.639261 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0505 14:25:41.637996 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0505 14:26:01.634434 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0505 14:26:21.639465 21 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0505 14:26:21.639509 21 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 05/05/24 14:26:21.639
  STEP: retrieving all remaining pages @ 05/05/24 14:26:21.642
  I0505 14:26:21.647472 21 chunking.go:221] Retrieved 40/40 results with rv 16067 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNjcsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0505 14:26:21.651620 21 chunking.go:221] Retrieved 40/40 results with rv 16067 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNjcsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0505 14:26:21.655084 21 chunking.go:221] Retrieved 40/40 results with rv 16067 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNjcsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0505 14:26:21.657162 21 chunking.go:221] Retrieved 40/40 results with rv 16067 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNjcsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0505 14:26:21.659479 21 chunking.go:221] Retrieved 40/40 results with rv 16067 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNjcsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0505 14:26:21.662114 21 chunking.go:221] Retrieved 40/40 results with rv 16067 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNjcsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0505 14:26:21.667053 21 chunking.go:221] Retrieved 40/40 results with rv 16067 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNjcsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0505 14:26:21.670210 21 chunking.go:221] Retrieved 40/40 results with rv 16067 and continue 
  I0505 14:26:21.670353 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-4637" for this suite. @ 05/05/24 14:26:21.672
• [437.819 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 05/05/24 14:26:21.686
  I0505 14:26:21.686189 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 14:26:21.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:26:21.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:26:21.705
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 14:26:21.715
  STEP: Saw pod success @ 05/05/24 14:26:25.766
  I0505 14:26:25.771532 21 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-45285583-ba0e-42ad-a952-b66142f50730 container client-container: <nil>
  STEP: delete the pod @ 05/05/24 14:26:25.779
  I0505 14:26:25.798849 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8646" for this suite. @ 05/05/24 14:26:25.8
• [4.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 05/05/24 14:26:25.804
  I0505 14:26:25.804660 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 14:26:25.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:26:25.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:26:25.819
  I0505 14:26:25.821082 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-5301 version'
  I0505 14:26:25.858612 21 builder.go:146] stderr: ""
  I0505 14:26:25.858647 21 builder.go:147] stdout: "Client Version: v1.30.0\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.30.0\n"
  I0505 14:26:25.858762 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5301" for this suite. @ 05/05/24 14:26:25.86
• [0.060 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 05/05/24 14:26:25.864
  I0505 14:26:25.864369 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/05/24 14:26:25.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:26:25.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:26:25.877
  STEP: fetching the /apis discovery document @ 05/05/24 14:26:25.879
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 05/05/24 14:26:25.88
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 05/05/24 14:26:25.88
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 05/05/24 14:26:25.88
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 05/05/24 14:26:25.88
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 05/05/24 14:26:25.88
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 05/05/24 14:26:25.881
  I0505 14:26:25.881386 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5676" for this suite. @ 05/05/24 14:26:25.882
• [0.022 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 05/05/24 14:26:25.886
  I0505 14:26:25.886758 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename webhook @ 05/05/24 14:26:25.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:26:25.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:26:25.9
  STEP: Setting up server cert @ 05/05/24 14:26:25.917
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 14:26:26.211
  STEP: Deploying the webhook pod @ 05/05/24 14:26:26.223
  STEP: Wait for the deployment to be ready @ 05/05/24 14:26:26.231
  I0505 14:26:26.243259 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/05/24 14:26:28.252
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 14:26:28.256
  I0505 14:26:29.257089 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/05/24 14:26:29.295
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/05/24 14:26:29.312
  STEP: Deleting the collection of validation webhooks @ 05/05/24 14:26:29.326
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/05/24 14:26:29.346
  I0505 14:26:29.380284 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2088" for this suite. @ 05/05/24 14:26:29.383
  STEP: Destroying namespace "webhook-markers-7481" for this suite. @ 05/05/24 14:26:29.39
• [3.509 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 05/05/24 14:26:29.4
  I0505 14:26:29.400331 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename configmap @ 05/05/24 14:26:29.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:26:29.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:26:29.417
  STEP: Creating configMap configmap-5853/configmap-test-002a36a6-ca9c-4a07-b36b-2de4de2d4328 @ 05/05/24 14:26:29.419
  STEP: Creating a pod to test consume configMaps @ 05/05/24 14:26:29.422
  STEP: Saw pod success @ 05/05/24 14:26:31.433
  I0505 14:26:31.438498 21 output.go:196] Trying to get logs from node worker00 pod pod-configmaps-05e8d6d1-a783-4430-8a18-c076468b5cd9 container env-test: <nil>
  STEP: delete the pod @ 05/05/24 14:26:31.445
  I0505 14:26:31.457774 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5853" for this suite. @ 05/05/24 14:26:31.459
• [2.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 05/05/24 14:26:31.463
  I0505 14:26:31.463196 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/05/24 14:26:31.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:26:31.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:26:31.476
  I0505 14:26:31.479391 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:26:34.518292 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2986" for this suite. @ 05/05/24 14:26:34.522
• [3.064 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 05/05/24 14:26:34.527
  I0505 14:26:34.527405 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename resourcequota @ 05/05/24 14:26:34.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:26:34.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:26:34.544
  STEP: Creating a ResourceQuota @ 05/05/24 14:26:34.545
  STEP: Getting a ResourceQuota @ 05/05/24 14:26:34.55
  STEP: Listing all ResourceQuotas with LabelSelector @ 05/05/24 14:26:34.556
  STEP: Patching the ResourceQuota @ 05/05/24 14:26:34.56
  STEP: Deleting a Collection of ResourceQuotas @ 05/05/24 14:26:34.568
  STEP: Verifying the deleted ResourceQuota @ 05/05/24 14:26:34.578
  I0505 14:26:34.581864 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8865" for this suite. @ 05/05/24 14:26:34.585
• [0.062 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 05/05/24 14:26:34.589
  I0505 14:26:34.589915 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename runtimeclass @ 05/05/24 14:26:34.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:26:34.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:26:34.608
  STEP: getting /apis @ 05/05/24 14:26:34.611
  STEP: getting /apis/node.k8s.io @ 05/05/24 14:26:34.614
  STEP: getting /apis/node.k8s.io/v1 @ 05/05/24 14:26:34.616
  STEP: creating @ 05/05/24 14:26:34.618
  STEP: watching @ 05/05/24 14:26:34.629
  I0505 14:26:34.629315 21 runtimeclass.go:275] starting watch
  STEP: getting @ 05/05/24 14:26:34.634
  STEP: listing @ 05/05/24 14:26:34.637
  STEP: patching @ 05/05/24 14:26:34.64
  STEP: updating @ 05/05/24 14:26:34.644
  I0505 14:26:34.650313 21 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 05/05/24 14:26:34.65
  STEP: deleting a collection @ 05/05/24 14:26:34.66
  I0505 14:26:34.669296 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9480" for this suite. @ 05/05/24 14:26:34.672
• [0.088 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 05/05/24 14:26:34.68
  I0505 14:26:34.680257 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename pv @ 05/05/24 14:26:34.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:26:34.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:26:34.695
  STEP: Creating initial PV and PVC @ 05/05/24 14:26:34.702
  I0505 14:26:34.702743 21 pv.go:390] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5920" @ 05/05/24 14:26:34.713
  STEP: Listing PVCs in namespace "pv-5920" @ 05/05/24 14:26:34.719
  STEP: Reading "pvc-zz7sr" Status @ 05/05/24 14:26:34.723
  STEP: Reading "pv-5920-4ksr7" Status @ 05/05/24 14:26:34.727
  STEP: Patching "pvc-zz7sr" Status @ 05/05/24 14:26:34.73
  STEP: Patching "pv-5920-4ksr7" Status @ 05/05/24 14:26:34.738
  STEP: Updating "pvc-zz7sr" Status @ 05/05/24 14:26:34.764
  STEP: Updating "pv-5920-4ksr7" Status @ 05/05/24 14:26:34.779
  I0505 14:26:34.792740 21 persistent_volumes.go:407] AfterEach: deleting 1 PVCs and 1 PVs...
  I0505 14:26:34.792778 21 pv.go:201] Deleting PersistentVolumeClaim "pvc-zz7sr"
  I0505 14:26:34.799072 21 pv.go:189] Deleting PersistentVolume "pv-5920-4ksr7"
  I0505 14:26:34.807390 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5920" for this suite. @ 05/05/24 14:26:34.816
• [0.150 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 05/05/24 14:26:34.828
  I0505 14:26:34.828817 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/05/24 14:26:34.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:26:34.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:26:34.857
  STEP: Creating two CSIDrivers @ 05/05/24 14:26:34.865
  STEP: Getting "inline-driver-1311f3fe-4425-4daa-be19-fdd5ec1b8146" & "inline-driver-90b4f41f-2508-4366-bd8a-b0eecb9328de" @ 05/05/24 14:26:34.882
  STEP: Patching the CSIDriver "inline-driver-90b4f41f-2508-4366-bd8a-b0eecb9328de" @ 05/05/24 14:26:34.889
  STEP: Updating the CSIDriver "inline-driver-90b4f41f-2508-4366-bd8a-b0eecb9328de" @ 05/05/24 14:26:34.896
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-6357" @ 05/05/24 14:26:34.905
  STEP: Deleting CSIDriver "inline-driver-1311f3fe-4425-4daa-be19-fdd5ec1b8146" @ 05/05/24 14:26:34.909
  STEP: Confirm deletion of CSIDriver "inline-driver-1311f3fe-4425-4daa-be19-fdd5ec1b8146" @ 05/05/24 14:26:34.915
  STEP: Deleting CSIDriver "inline-driver-90b4f41f-2508-4366-bd8a-b0eecb9328de" via DeleteCollection @ 05/05/24 14:26:34.918
  STEP: Confirm deletion of CSIDriver "inline-driver-90b4f41f-2508-4366-bd8a-b0eecb9328de" @ 05/05/24 14:26:34.923
  I0505 14:26:34.925897 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-6357" for this suite. @ 05/05/24 14:26:34.929
• [0.109 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 05/05/24 14:26:34.938
  I0505 14:26:34.938156 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename sched-preemption @ 05/05/24 14:26:34.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:26:34.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:26:34.962
  I0505 14:26:34.981055 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0505 14:27:34.984956 21 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/05/24 14:27:34.986
  I0505 14:27:34.986980 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/05/24 14:27:34.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:27:35.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:27:35.008
  I0505 14:27:35.022373 21 preemption.go:818] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0505 14:27:35.025940 21 preemption.go:824] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I0505 14:27:35.059921 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-627" for this suite. @ 05/05/24 14:27:35.061
  I0505 14:27:35.064230 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9584" for this suite. @ 05/05/24 14:27:35.065
• [60.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 05/05/24 14:27:35.069
  I0505 14:27:35.069014 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 14:27:35.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:27:35.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:27:35.083
  STEP: Creating configMap with name projected-configmap-test-volume-map-b45b9ad3-accc-4124-8715-92d80a4d76de @ 05/05/24 14:27:35.084
  STEP: Creating a pod to test consume configMaps @ 05/05/24 14:27:35.088
  STEP: Saw pod success @ 05/05/24 14:27:39.105
  I0505 14:27:39.108497 21 output.go:196] Trying to get logs from node worker00 pod pod-projected-configmaps-edf1a00a-e7b2-4e76-a8e0-a50780096a5c container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 14:27:39.113
  I0505 14:27:39.128095 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7554" for this suite. @ 05/05/24 14:27:39.131
• [4.068 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 05/05/24 14:27:39.137
  I0505 14:27:39.137299 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename endpointslice @ 05/05/24 14:27:39.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:27:39.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:27:39.161
  I0505 14:27:41.225464 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5606" for this suite. @ 05/05/24 14:27:41.229
• [2.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 05/05/24 14:27:41.244
  I0505 14:27:41.244835 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename pod-network-test @ 05/05/24 14:27:41.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:27:41.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:27:41.256
  STEP: Performing setup for networking test in namespace pod-network-test-805 @ 05/05/24 14:27:41.258
  STEP: creating a selector @ 05/05/24 14:27:41.258
  STEP: Creating the service pods in kubernetes @ 05/05/24 14:27:41.258
  I0505 14:27:41.258734 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/05/24 14:27:53.313
  I0505 14:27:55.333724 21 utils.go:779] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0505 14:27:55.333789 21 utils.go:472] Going to poll 10.200.131.175 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0505 14:27:55.336552 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.200.131.175:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-805 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 14:27:55.336625 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:27:55.338333 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 14:27:55.339021 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-805/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.200.131.175%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0505 14:27:55.388419 21 utils.go:489] Found all 1 expected endpoints: [netserver-0]
  I0505 14:27:55.388478 21 utils.go:472] Going to poll 10.200.5.37 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0505 14:27:55.391844 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.200.5.37:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-805 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 14:27:55.391935 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:27:55.392413 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 14:27:55.392468 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-805/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.200.5.37%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0505 14:27:55.447945 21 utils.go:489] Found all 1 expected endpoints: [netserver-1]
  I0505 14:27:55.448069 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-805" for this suite. @ 05/05/24 14:27:55.451
• [14.221 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 05/05/24 14:27:55.466
  I0505 14:27:55.466158 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename daemonsets @ 05/05/24 14:27:55.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:27:55.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:27:55.486
  STEP: Creating a simple DaemonSet "daemon-set" @ 05/05/24 14:27:55.505
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/05/24 14:27:55.512
  I0505 14:27:55.522851 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0505 14:27:55.522951 21 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  I0505 14:27:56.518215 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0505 14:27:56.518254 21 fixtures.go:130] Node worker01 is running 0 daemon pod, expected 1
  I0505 14:27:57.517241 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0505 14:27:57.517271 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 05/05/24 14:27:57.518
  I0505 14:27:57.537553 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0505 14:27:57.537603 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 05/05/24 14:27:57.537
  STEP: Deleting DaemonSet "daemon-set" @ 05/05/24 14:27:58.542
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4263, will wait for the garbage collector to delete the pods @ 05/05/24 14:27:58.542
  I0505 14:27:58.601743 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 4.92154ms
  I0505 14:27:58.701973 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.226015ms
  I0505 14:28:01.505689 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0505 14:28:01.505746 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0505 14:28:01.510336 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"17325"},"items":null}

  I0505 14:28:01.513165 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"17325"},"items":null}

  I0505 14:28:01.523035 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4263" for this suite. @ 05/05/24 14:28:01.526
• [6.067 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 05/05/24 14:28:01.533
  I0505 14:28:01.533219 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename containers @ 05/05/24 14:28:01.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:28:01.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:28:01.55
  STEP: Creating a pod to test override arguments @ 05/05/24 14:28:01.552
  STEP: Saw pod success @ 05/05/24 14:28:03.569
  I0505 14:28:03.571200 21 output.go:196] Trying to get logs from node worker00 pod client-containers-2ed187eb-7490-4e98-85b5-487a9375b830 container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 14:28:03.575
  I0505 14:28:03.586068 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9521" for this suite. @ 05/05/24 14:28:03.589
• [2.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 05/05/24 14:28:03.595
  I0505 14:28:03.596657 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename ingressclass @ 05/05/24 14:28:03.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:28:03.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:28:03.615
  STEP: getting /apis @ 05/05/24 14:28:03.618
  STEP: getting /apis/networking.k8s.io @ 05/05/24 14:28:03.622
  STEP: getting /apis/networking.k8s.iov1 @ 05/05/24 14:28:03.623
  STEP: creating @ 05/05/24 14:28:03.624
  STEP: getting @ 05/05/24 14:28:03.637
  STEP: listing @ 05/05/24 14:28:03.641
  STEP: watching @ 05/05/24 14:28:03.645
  I0505 14:28:03.645199 21 ingressclass.go:348] starting watch
  STEP: patching @ 05/05/24 14:28:03.647
  STEP: updating @ 05/05/24 14:28:03.651
  I0505 14:28:03.655004 21 ingressclass.go:364] waiting for watch events with expected annotations
  I0505 14:28:03.655043 21 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 05/05/24 14:28:03.655
  STEP: deleting a collection @ 05/05/24 14:28:03.663
  I0505 14:28:03.671350 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-823" for this suite. @ 05/05/24 14:28:03.673
• [0.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1497
  STEP: Creating a kubernetes client @ 05/05/24 14:28:03.678
  I0505 14:28:03.678831 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename services @ 05/05/24 14:28:03.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:28:03.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:28:03.699
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-1051 @ 05/05/24 14:28:03.702
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/05/24 14:28:03.711
  STEP: creating service externalsvc in namespace services-1051 @ 05/05/24 14:28:03.712
  STEP: creating replication controller externalsvc in namespace services-1051 @ 05/05/24 14:28:03.731
  I0505 14:28:03.738373      21 runners.go:198] Created replication controller with name: externalsvc, namespace: services-1051, replica count: 2
  I0505 14:28:06.791324      21 runners.go:198] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 05/05/24 14:28:06.795
  I0505 14:28:06.808216 21 resource.go:361] Creating new exec pod
  I0505 14:28:08.828068 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-1051 exec execpodrhfqd -- /bin/sh -x -c nslookup clusterip-service.services-1051.svc.cluster.local'
  I0505 14:28:09.011061 21 builder.go:146] stderr: "+ nslookup clusterip-service.services-1051.svc.cluster.local\n"
  I0505 14:28:09.011095 21 builder.go:147] stdout: "Server:\t\t10.32.0.10\nAddress:\t10.32.0.10#53\n\nclusterip-service.services-1051.svc.cluster.local\tcanonical name = externalsvc.services-1051.svc.cluster.local.\nName:\texternalsvc.services-1051.svc.cluster.local\nAddress: 10.32.0.27\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-1051, will wait for the garbage collector to delete the pods @ 05/05/24 14:28:09.011
  I0505 14:28:09.070689 21 resources.go:139] Deleting ReplicationController externalsvc took: 6.716245ms
  I0505 14:28:09.172706 21 resources.go:163] Terminating ReplicationController externalsvc pods took: 102.003643ms
  I0505 14:28:11.895205 21 service.go:1506] Cleaning up the ClusterIP to ExternalName test service
  I0505 14:28:11.914056 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1051" for this suite. @ 05/05/24 14:28:11.918
• [8.249 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 05/05/24 14:28:11.927
  I0505 14:28:11.927994 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename secrets @ 05/05/24 14:28:11.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:28:11.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:28:11.947
  STEP: Creating secret with name s-test-opt-del-6bb0b1b8-f75d-46b7-b9fd-b738da5f82f1 @ 05/05/24 14:28:11.958
  STEP: Creating secret with name s-test-opt-upd-e5748a35-1a07-4fc4-a0c6-cfc60f03645a @ 05/05/24 14:28:11.965
  STEP: Creating the pod @ 05/05/24 14:28:11.971
  STEP: Deleting secret s-test-opt-del-6bb0b1b8-f75d-46b7-b9fd-b738da5f82f1 @ 05/05/24 14:28:14.044
  STEP: Updating secret s-test-opt-upd-e5748a35-1a07-4fc4-a0c6-cfc60f03645a @ 05/05/24 14:28:14.05
  STEP: Creating secret with name s-test-opt-create-326db084-da77-486b-a65a-57f0bed1c6e2 @ 05/05/24 14:28:14.054
  STEP: waiting to observe update in volume @ 05/05/24 14:28:14.059
  I0505 14:28:16.076275 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8944" for this suite. @ 05/05/24 14:28:16.077
• [4.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 05/05/24 14:28:16.093
  I0505 14:28:16.093206 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename configmap @ 05/05/24 14:28:16.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:28:16.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:28:16.106
  STEP: Creating configMap configmap-7536/configmap-test-e5fdf21f-8252-4eab-bcad-9272e0b504af @ 05/05/24 14:28:16.109
  STEP: Creating a pod to test consume configMaps @ 05/05/24 14:28:16.111
  STEP: Saw pod success @ 05/05/24 14:28:20.133
  I0505 14:28:20.137148 21 output.go:196] Trying to get logs from node worker00 pod pod-configmaps-2a88c3a4-6fb8-41c8-9f71-35e7373993b9 container env-test: <nil>
  STEP: delete the pod @ 05/05/24 14:28:20.146
  I0505 14:28:20.166378 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7536" for this suite. @ 05/05/24 14:28:20.17
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 05/05/24 14:28:20.177
  I0505 14:28:20.177162 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename events @ 05/05/24 14:28:20.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:28:20.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:28:20.194
  STEP: Create set of events @ 05/05/24 14:28:20.197
  STEP: get a list of Events with a label in the current namespace @ 05/05/24 14:28:20.206
  STEP: delete a list of events @ 05/05/24 14:28:20.209
  I0505 14:28:20.209129 21 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/05/24 14:28:20.217
  I0505 14:28:20.220018 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2690" for this suite. @ 05/05/24 14:28:20.222
• [0.053 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1459
  STEP: Creating a kubernetes client @ 05/05/24 14:28:20.23
  I0505 14:28:20.230580 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename services @ 05/05/24 14:28:20.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:28:20.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:28:20.25
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-6944 @ 05/05/24 14:28:20.253
  STEP: changing the ExternalName service to type=NodePort @ 05/05/24 14:28:20.26
  STEP: creating replication controller externalname-service in namespace services-6944 @ 05/05/24 14:28:20.273
  I0505 14:28:20.290214      21 runners.go:198] Created replication controller with name: externalname-service, namespace: services-6944, replica count: 2
  I0505 14:28:23.342089      21 runners.go:198] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0505 14:28:23.342164 21 resource.go:361] Creating new exec pod
  I0505 14:28:26.369460 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-6944 exec execpodmqr8w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0505 14:28:26.462952 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0505 14:28:26.462991 21 builder.go:147] stdout: ""
  I0505 14:28:27.370223 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-6944 exec execpodmqr8w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0505 14:28:27.441698 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0505 14:28:27.441744 21 builder.go:147] stdout: "externalname-service-fzgbw"
  I0505 14:28:27.441796 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-6944 exec execpodmqr8w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.120 80'
  I0505 14:28:27.503818 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.120 80\nConnection to 10.32.0.120 80 port [tcp/http] succeeded!\n"
  I0505 14:28:27.503881 21 builder.go:147] stdout: ""
  I0505 14:28:28.443038 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-6944 exec execpodmqr8w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.120 80'
  I0505 14:28:28.512875 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.120 80\nConnection to 10.32.0.120 80 port [tcp/http] succeeded!\n"
  I0505 14:28:28.512956 21 builder.go:147] stdout: ""
  I0505 14:28:29.443048 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-6944 exec execpodmqr8w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.120 80'
  I0505 14:28:29.544436 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.120 80\nConnection to 10.32.0.120 80 port [tcp/http] succeeded!\n"
  I0505 14:28:29.544521 21 builder.go:147] stdout: "externalname-service-fzgbw"
  I0505 14:28:29.544771 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-6944 exec execpodmqr8w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.100 31750'
  I0505 14:28:29.678044 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.100 31750\nConnection to 192.168.58.100 31750 port [tcp/*] succeeded!\n"
  I0505 14:28:29.678158 21 builder.go:147] stdout: "externalname-service-fzgbw"
  I0505 14:28:29.678313 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-6944 exec execpodmqr8w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.101 31750'
  I0505 14:28:29.810731 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.101 31750\nConnection to 192.168.58.101 31750 port [tcp/*] succeeded!\n"
  I0505 14:28:29.810768 21 builder.go:147] stdout: "externalname-service-fzgbw"
  I0505 14:28:29.810841 21 service.go:1468] Cleaning up the ExternalName to NodePort test service
  I0505 14:28:29.836143 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6944" for this suite. @ 05/05/24 14:28:29.84
• [9.617 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 05/05/24 14:28:29.847
  I0505 14:28:29.847164 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename statefulset @ 05/05/24 14:28:29.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:28:29.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:28:29.87
  STEP: Creating service test in namespace statefulset-1023 @ 05/05/24 14:28:29.873
  STEP: Creating statefulset ss in namespace statefulset-1023 @ 05/05/24 14:28:29.889
  I0505 14:28:29.897189 21 wait.go:40] Found 0 stateful pods, waiting for 1
  I0505 14:28:39.900738 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 05/05/24 14:28:39.909
  STEP: Getting /status @ 05/05/24 14:28:39.928
  I0505 14:28:39.931416 21 statefulset.go:1067] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 05/05/24 14:28:39.931
  I0505 14:28:39.939577 21 statefulset.go:1087] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 05/05/24 14:28:39.939
  I0505 14:28:39.942134 21 statefulset.go:1115] Observed &StatefulSet event: ADDED
  I0505 14:28:39.942188 21 statefulset.go:1108] Found Statefulset ss in namespace statefulset-1023 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0505 14:28:39.942197 21 statefulset.go:1119] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 05/05/24 14:28:39.942
  I0505 14:28:39.942227 21 statefulset.go:1123] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0505 14:28:39.947116 21 statefulset.go:1127] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 05/05/24 14:28:39.947
  I0505 14:28:39.949206 21 statefulset.go:1152] Observed &StatefulSet event: ADDED
  I0505 14:28:39.949284 21 statefulset.go:135] Deleting all statefulset in ns statefulset-1023
  I0505 14:28:39.952472 21 rest.go:150] Scaling statefulset ss to 0
  I0505 14:28:49.967721 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0505 14:28:49.970760 21 rest.go:88] Deleting statefulset ss
  I0505 14:28:49.989927 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1023" for this suite. @ 05/05/24 14:28:49.993
• [20.152 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 05/05/24 14:28:49.999
  I0505 14:28:49.999337 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/05/24 14:28:50.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:28:50.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:28:50.022
  STEP: set up a multi version CRD @ 05/05/24 14:28:50.026
  I0505 14:28:50.027498 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: rename a version @ 05/05/24 14:28:53.525
  STEP: check the new version name is served @ 05/05/24 14:28:53.531
  STEP: check the old version name is removed @ 05/05/24 14:28:54.235
  STEP: check the other version is not changed @ 05/05/24 14:28:54.866
  I0505 14:28:57.283126 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8125" for this suite. @ 05/05/24 14:28:57.287
• [7.301 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 05/05/24 14:28:57.301
  I0505 14:28:57.301323 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename security-context-test @ 05/05/24 14:28:57.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:28:57.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:28:57.311
  I0505 14:29:03.337481 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1100" for this suite. @ 05/05/24 14:29:03.339
• [6.048 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3161
  STEP: Creating a kubernetes client @ 05/05/24 14:29:03.349
  I0505 14:29:03.349368 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename services @ 05/05/24 14:29:03.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:29:03.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:29:03.359
  STEP: creating an Endpoint @ 05/05/24 14:29:03.362
  STEP: waiting for available Endpoint @ 05/05/24 14:29:03.364
  STEP: listing all Endpoints @ 05/05/24 14:29:03.366
  STEP: updating the Endpoint @ 05/05/24 14:29:03.367
  STEP: fetching the Endpoint @ 05/05/24 14:29:03.371
  STEP: patching the Endpoint @ 05/05/24 14:29:03.373
  STEP: fetching the Endpoint @ 05/05/24 14:29:03.384
  STEP: deleting the Endpoint by Collection @ 05/05/24 14:29:03.408
  STEP: waiting for Endpoint deletion @ 05/05/24 14:29:03.413
  STEP: fetching the Endpoint @ 05/05/24 14:29:03.414
  I0505 14:29:03.416479 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4512" for this suite. @ 05/05/24 14:29:03.417
• [0.071 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 05/05/24 14:29:03.42
  I0505 14:29:03.420399 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 14:29:03.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:29:03.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:29:03.429
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/05/24 14:29:03.431
  STEP: Saw pod success @ 05/05/24 14:29:07.449
  I0505 14:29:07.452574 21 output.go:196] Trying to get logs from node worker00 pod pod-9d46144e-f9a5-4277-8dbb-c7b7799b1829 container test-container: <nil>
  STEP: delete the pod @ 05/05/24 14:29:07.456
  I0505 14:29:07.464639 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1719" for this suite. @ 05/05/24 14:29:07.466
• [4.049 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 05/05/24 14:29:07.469
  I0505 14:29:07.469896 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename dns @ 05/05/24 14:29:07.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:29:07.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:29:07.481
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/05/24 14:29:07.483
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/05/24 14:29:07.483
  STEP: creating a pod to probe DNS @ 05/05/24 14:29:07.483
  STEP: submitting the pod to kubernetes @ 05/05/24 14:29:07.483
  STEP: retrieving the pod @ 05/05/24 14:29:09.495
  STEP: looking for the results for each expected name from probers @ 05/05/24 14:29:09.499
  I0505 14:29:09.508354 21 dns_common.go:527] DNS probes using dns-2944/dns-test-d5212780-7d9c-4753-ad27-10e4274e4312 succeeded

  STEP: deleting the pod @ 05/05/24 14:29:09.508
  I0505 14:29:09.512972 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2944" for this suite. @ 05/05/24 14:29:09.517
• [2.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 05/05/24 14:29:09.525
  I0505 14:29:09.525294 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename webhook @ 05/05/24 14:29:09.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:29:09.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:29:09.538
  STEP: Setting up server cert @ 05/05/24 14:29:09.548
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 14:29:09.79
  STEP: Deploying the webhook pod @ 05/05/24 14:29:09.793
  STEP: Wait for the deployment to be ready @ 05/05/24 14:29:09.799
  I0505 14:29:09.803418 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/05/24 14:29:11.813
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 14:29:11.828
  I0505 14:29:12.829812 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0505 14:29:12.833211 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7708-crds.webhook.example.com via the AdmissionRegistration API @ 05/05/24 14:29:13.344
  STEP: Creating a custom resource while v1 is storage version @ 05/05/24 14:29:13.353
  STEP: Patching Custom Resource Definition to set v2 as storage @ 05/05/24 14:29:15.38
  STEP: Patching the custom resource while v2 is storage version @ 05/05/24 14:29:15.385
  I0505 14:29:15.946999 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8145" for this suite. @ 05/05/24 14:29:15.951
  STEP: Destroying namespace "webhook-markers-6634" for this suite. @ 05/05/24 14:29:15.966
• [6.448 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 05/05/24 14:29:15.973
  I0505 14:29:15.973442 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 14:29:15.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:29:15.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:29:15.986
  STEP: Creating a pod to test downward api env vars @ 05/05/24 14:29:15.987
  STEP: Saw pod success @ 05/05/24 14:29:20.001
  I0505 14:29:20.004577 21 output.go:196] Trying to get logs from node worker00 pod downward-api-4dd29a52-405d-4054-be78-a96f8497d499 container dapi-container: <nil>
  STEP: delete the pod @ 05/05/24 14:29:20.011
  I0505 14:29:20.040354 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3401" for this suite. @ 05/05/24 14:29:20.045
• [4.082 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 05/05/24 14:29:20.055
  I0505 14:29:20.055446 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename configmap @ 05/05/24 14:29:20.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:29:20.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:29:20.078
  STEP: Creating configMap with name configmap-test-upd-99095e16-ba28-4145-8c1e-74f00b4b9c64 @ 05/05/24 14:29:20.086
  STEP: Creating the pod @ 05/05/24 14:29:20.096
  STEP: Waiting for pod with text data @ 05/05/24 14:29:22.12
  STEP: Waiting for pod with binary data @ 05/05/24 14:29:22.126
  I0505 14:29:22.132413 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5724" for this suite. @ 05/05/24 14:29:22.135
• [2.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 05/05/24 14:29:22.15
  I0505 14:29:22.150818 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename kubelet-test @ 05/05/24 14:29:22.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:29:22.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:29:22.169
  STEP: Waiting for pod completion @ 05/05/24 14:29:22.179
  I0505 14:29:24.188480 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5437" for this suite. @ 05/05/24 14:29:24.19
• [2.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 05/05/24 14:29:24.203
  I0505 14:29:24.203302 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename dns @ 05/05/24 14:29:24.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:29:24.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:29:24.222
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 05/05/24 14:29:24.224
  I0505 14:29:24.229294 21 dns.go:419] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-5117  c4971857-f653-4358-8cd5-e0a2a7792e7b 18364 0 2024-05-05 14:29:24 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-05-05 14:29:24 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7hg6s,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7hg6s,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 05/05/24 14:29:26.239
  I0505 14:29:26.240024 21 exec_util.go:55] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-5117 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 14:29:26.240045 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:29:26.240554 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 14:29:26.240623 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/dns-5117/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 05/05/24 14:29:26.288
  I0505 14:29:26.289013 21 exec_util.go:55] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-5117 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 14:29:26.289033 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:29:26.290126 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 14:29:26.290246 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/dns-5117/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0505 14:29:26.341310 21 dns.go:421] Deleting pod test-dns-nameservers...
  I0505 14:29:26.348863 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5117" for this suite. @ 05/05/24 14:29:26.353
• [2.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 05/05/24 14:29:26.36
  I0505 14:29:26.360599 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename webhook @ 05/05/24 14:29:26.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:29:26.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:29:26.377
  STEP: Setting up server cert @ 05/05/24 14:29:26.396
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 14:29:27.017
  STEP: Deploying the webhook pod @ 05/05/24 14:29:27.02
  STEP: Wait for the deployment to be ready @ 05/05/24 14:29:27.026
  I0505 14:29:27.030149 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/05/24 14:29:29.039
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 14:29:29.046
  I0505 14:29:30.046714 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/05/24 14:29:30.053
  STEP: create a pod that should be denied by the webhook @ 05/05/24 14:29:30.066
  STEP: create a pod that causes the webhook to hang @ 05/05/24 14:29:30.077
  STEP: create a configmap that should be denied by the webhook @ 05/05/24 14:29:40.087
  STEP: create a configmap that should be admitted by the webhook @ 05/05/24 14:29:40.112
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/05/24 14:29:40.118
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/05/24 14:29:40.123
  STEP: create a namespace that bypass the webhook @ 05/05/24 14:29:40.126
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 05/05/24 14:29:40.138
  I0505 14:29:40.179372 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3908" for this suite. @ 05/05/24 14:29:40.186
  STEP: Destroying namespace "webhook-markers-3847" for this suite. @ 05/05/24 14:29:40.196
  STEP: Destroying namespace "exempted-namespace-4191" for this suite. @ 05/05/24 14:29:40.207
• [13.852 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3136
  STEP: Creating a kubernetes client @ 05/05/24 14:29:40.213
  I0505 14:29:40.213174 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename services @ 05/05/24 14:29:40.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:29:40.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:29:40.235
  STEP: fetching services @ 05/05/24 14:29:40.238
  I0505 14:29:40.241056 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-630" for this suite. @ 05/05/24 14:29:40.243
• [0.038 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 05/05/24 14:29:40.251
  I0505 14:29:40.251120 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 14:29:40.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:29:40.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:29:40.276
  STEP: Creating configMap with name projected-configmap-test-volume-81346ab0-ed14-4754-af89-f91c0761ba95 @ 05/05/24 14:29:40.28
  STEP: Creating a pod to test consume configMaps @ 05/05/24 14:29:40.288
  STEP: Saw pod success @ 05/05/24 14:29:42.31
  I0505 14:29:42.312519 21 output.go:196] Trying to get logs from node worker00 pod pod-projected-configmaps-9b2bfc9b-4e7b-43d6-85fd-7f83226dabb8 container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 14:29:42.316
  I0505 14:29:42.338548 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8411" for this suite. @ 05/05/24 14:29:42.34
• [2.094 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 05/05/24 14:29:42.344
  I0505 14:29:42.344862 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename deployment @ 05/05/24 14:29:42.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:29:42.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:29:42.36
  I0505 14:29:42.361606 21 deployment.go:1645] Creating simple deployment test-new-deployment
  I0505 14:29:42.369136 21 deployment.go:222] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 05/05/24 14:29:44.382
  STEP: updating a scale subresource @ 05/05/24 14:29:44.385
  STEP: verifying the deployment Spec.Replicas was modified @ 05/05/24 14:29:44.391
  STEP: Patch a scale subresource @ 05/05/24 14:29:44.395
  I0505 14:29:44.411077 21 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1657",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a66cf7e5-8a43-47d2-8555-74d4b1bce41e",
      ResourceVersion: (string) (len=5) "18610",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516182,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516182,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516182,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516182,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516182,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516182,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516182,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-77db57d8df\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0505 14:29:44.436350 21 deployment.go:39] New ReplicaSet "test-new-deployment-77db57d8df" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-77db57d8df",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1657",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3222912a-fd14-45a7-8c0d-8a4af400e359",
      ResourceVersion: (string) (len=5) "18615",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516182,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "a66cf7e5-8a43-47d2-8555-74d4b1bce41e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516182,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516184,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 36 36 63 66 37  65 35 2d 38 61 34 33 2d  |\"a66cf7e5-8a43-|
              00000120  34 37 64 32 2d 38 35 35  35 2d 37 34 64 34 62 31  |47d2-8555-74d4b1|
              00000130  62 63 65 34 31 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |bce41e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0505 14:29:44.449171 21 deployment.go:67] Pod "test-new-deployment-77db57d8df-8jkl4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-8jkl4",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1657",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "91f1c2d4-3161-4bff-8e5e-3d3dbfceaa76",
      ResourceVersion: (string) (len=5) "18602",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516182,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "5ba0e64a98070a3019bf3fbb1e62df0446a70653f7a982dbc2156199b3cc7d1c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.140/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.140/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "3222912a-fd14-45a7-8c0d-8a4af400e359",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516182,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516182,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  32 32 39 31 32 61 2d 66  |d\":\"3222912a-f|
              00000090  64 31 34 2d 34 35 61 37  2d 38 63 30 64 2d 38 61  |d14-45a7-8c0d-8a|
              000000a0  34 61 66 34 30 30 65 33  35 39 5c 22 7d 22 3a 7b  |4af400e359\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516182,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 34 30 5c 22 7d 22  |.200.131.140\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x9jkc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x9jkc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516182,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516182,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516182,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516182,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516182,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.140",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.140"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516182,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850516182,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://150c9a4e6bc01a9d964031c3e1a28375ca2b563c9439c379ff24c43663181e35",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:29:44.454081 21 deployment.go:67] Pod "test-new-deployment-77db57d8df-tbpvl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-tbpvl",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1657",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ea82e276-c8a5-4682-a6db-f66a2cc321d0",
      ResourceVersion: (string) (len=5) "18614",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516184,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "3222912a-fd14-45a7-8c0d-8a4af400e359",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516184,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  32 32 39 31 32 61 2d 66  |d\":\"3222912a-f|
              00000090  64 31 34 2d 34 35 61 37  2d 38 63 30 64 2d 38 61  |d14-45a7-8c0d-8a|
              000000a0  34 61 66 34 30 30 65 33  35 39 5c 22 7d 22 3a 7b  |4af400e359\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gl4z7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gl4z7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516184,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:29:44.459169 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1657" for this suite. @ 05/05/24 14:29:44.476
• [2.147 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 05/05/24 14:29:44.493
  I0505 14:29:44.493164 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename configmap @ 05/05/24 14:29:44.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:29:44.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:29:44.52
  STEP: Creating configMap with name configmap-test-volume-677a4d3a-b04f-4dc2-b250-1a90a4865821 @ 05/05/24 14:29:44.522
  STEP: Creating a pod to test consume configMaps @ 05/05/24 14:29:44.526
  STEP: Saw pod success @ 05/05/24 14:29:48.557
  I0505 14:29:48.561404 21 output.go:196] Trying to get logs from node worker00 pod pod-configmaps-2e1b688a-510a-475e-842d-cee223e3860b container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 14:29:48.569
  I0505 14:29:48.596091 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2694" for this suite. @ 05/05/24 14:29:48.6
• [4.112 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1420
  STEP: Creating a kubernetes client @ 05/05/24 14:29:48.606
  I0505 14:29:48.606565 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename services @ 05/05/24 14:29:48.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:29:48.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:29:48.636
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-926 @ 05/05/24 14:29:48.64
  STEP: changing the ExternalName service to type=ClusterIP @ 05/05/24 14:29:48.647
  STEP: creating replication controller externalname-service in namespace services-926 @ 05/05/24 14:29:48.663
  I0505 14:29:48.676864      21 runners.go:198] Created replication controller with name: externalname-service, namespace: services-926, replica count: 2
  I0505 14:29:51.729436      21 runners.go:198] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0505 14:29:51.729485 21 resource.go:361] Creating new exec pod
  I0505 14:29:54.745692 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-926 exec execpodm7q8d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0505 14:29:54.831124 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0505 14:29:54.831156 21 builder.go:147] stdout: ""
  I0505 14:29:55.746598 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-926 exec execpodm7q8d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0505 14:29:55.816445 21 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0505 14:29:55.816538 21 builder.go:147] stdout: "externalname-service-jnfhz"
  I0505 14:29:55.816742 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-926 exec execpodm7q8d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.237 80'
  I0505 14:29:55.888119 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.237 80\nConnection to 10.32.0.237 80 port [tcp/http] succeeded!\n"
  I0505 14:29:55.888157 21 builder.go:147] stdout: ""
  I0505 14:29:56.817204 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-926 exec execpodm7q8d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.237 80'
  I0505 14:29:56.886469 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.237 80\nConnection to 10.32.0.237 80 port [tcp/http] succeeded!\n"
  I0505 14:29:56.886501 21 builder.go:147] stdout: ""
  I0505 14:29:57.818074 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-926 exec execpodm7q8d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.237 80'
  I0505 14:29:57.883358 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.237 80\nConnection to 10.32.0.237 80 port [tcp/http] succeeded!\n"
  I0505 14:29:57.883425 21 builder.go:147] stdout: ""
  I0505 14:29:58.865099 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-926 exec execpodm7q8d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.237 80'
  I0505 14:29:58.974173 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.237 80\nConnection to 10.32.0.237 80 port [tcp/http] succeeded!\n"
  I0505 14:29:58.974208 21 builder.go:147] stdout: "externalname-service-n69zq"
  I0505 14:29:58.974482 21 service.go:1429] Cleaning up the ExternalName to ClusterIP test service
  I0505 14:29:58.998973 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-926" for this suite. @ 05/05/24 14:29:59
• [10.398 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 05/05/24 14:29:59.003
  I0505 14:29:59.003508 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename deployment @ 05/05/24 14:29:59.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:29:59.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:29:59.018
  I0505 14:29:59.025064 21 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  I0505 14:30:04.031893 21 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/05/24 14:30:04.033
  I0505 14:30:04.033202 21 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 05/05/24 14:30:04.045
  I0505 14:30:04.055539 21 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6762",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9d94fa71-1031-41f5-bc66-c4c517f1ab69",
      ResourceVersion: (string) (len=5) "18883",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516204,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516204,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0505 14:30:04.058506 21 deployment.go:41] New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  I0505 14:30:04.061783 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6762" for this suite. @ 05/05/24 14:30:04.073
• [5.084 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 05/05/24 14:30:04.088
  I0505 14:30:04.088033 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 14:30:04.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:30:04.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:30:04.157
  STEP: Creating configMap with name configmap-projected-all-test-volume-54fe913e-5c3e-4e99-a585-16b19d5c05dc @ 05/05/24 14:30:04.159
  STEP: Creating secret with name secret-projected-all-test-volume-2a02e6c5-b36e-4c6f-8a28-370ca8792e3f @ 05/05/24 14:30:04.163
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 05/05/24 14:30:04.166
  STEP: Saw pod success @ 05/05/24 14:30:10.182
  I0505 14:30:10.185634 21 output.go:196] Trying to get logs from node worker01 pod projected-volume-5782f7d0-9c6d-40f2-9b42-62cdeeb307e1 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 14:30:10.202
  I0505 14:30:10.226782 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7227" for this suite. @ 05/05/24 14:30:10.23
• [6.147 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 05/05/24 14:30:10.235
  I0505 14:30:10.235022 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename container-probe @ 05/05/24 14:30:10.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:30:10.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:30:10.246
  STEP: Creating pod liveness-adae2a8f-3a75-48eb-8f53-befba5775630 in namespace container-probe-8223 @ 05/05/24 14:30:10.248
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/05/24 14:30:12.263
  I0505 14:30:12.266998 21 container_probe.go:1749] Initial restart count of pod liveness-adae2a8f-3a75-48eb-8f53-befba5775630 is 0
  I0505 14:30:12.269865 21 container_probe.go:1759] Get pod liveness-adae2a8f-3a75-48eb-8f53-befba5775630 in namespace container-probe-8223
  I0505 14:30:14.273107 21 container_probe.go:1759] Get pod liveness-adae2a8f-3a75-48eb-8f53-befba5775630 in namespace container-probe-8223
  I0505 14:30:16.280538 21 container_probe.go:1759] Get pod liveness-adae2a8f-3a75-48eb-8f53-befba5775630 in namespace container-probe-8223
  I0505 14:30:18.285838 21 container_probe.go:1759] Get pod liveness-adae2a8f-3a75-48eb-8f53-befba5775630 in namespace container-probe-8223
  I0505 14:30:20.293738 21 container_probe.go:1759] Get pod liveness-adae2a8f-3a75-48eb-8f53-befba5775630 in namespace container-probe-8223
  I0505 14:30:22.298286 21 container_probe.go:1759] Get pod liveness-adae2a8f-3a75-48eb-8f53-befba5775630 in namespace container-probe-8223
  I0505 14:30:24.303314 21 container_probe.go:1759] Get pod liveness-adae2a8f-3a75-48eb-8f53-befba5775630 in namespace container-probe-8223
  I0505 14:30:26.309453 21 container_probe.go:1759] Get pod liveness-adae2a8f-3a75-48eb-8f53-befba5775630 in namespace container-probe-8223
  I0505 14:30:28.316791 21 container_probe.go:1759] Get pod liveness-adae2a8f-3a75-48eb-8f53-befba5775630 in namespace container-probe-8223
  I0505 14:30:30.320861 21 container_probe.go:1759] Get pod liveness-adae2a8f-3a75-48eb-8f53-befba5775630 in namespace container-probe-8223
  I0505 14:30:32.329252 21 container_probe.go:1759] Get pod liveness-adae2a8f-3a75-48eb-8f53-befba5775630 in namespace container-probe-8223
  I0505 14:30:32.329309 21 container_probe.go:1763] Restart count of pod container-probe-8223/liveness-adae2a8f-3a75-48eb-8f53-befba5775630 is now 1 (20.062262136s elapsed)
  STEP: deleting the pod @ 05/05/24 14:30:32.329
  I0505 14:30:32.360741 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8223" for this suite. @ 05/05/24 14:30:32.368
• [22.143 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 05/05/24 14:30:32.38
  I0505 14:30:32.380031 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/05/24 14:30:32.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:30:32.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:30:32.408
  I0505 14:30:32.413464 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:30:38.759287 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-713" for this suite. @ 05/05/24 14:30:38.762
• [6.388 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 05/05/24 14:30:38.768
  I0505 14:30:38.768102 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename configmap @ 05/05/24 14:30:38.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:30:38.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:30:38.792
  STEP: Creating configMap with name configmap-test-volume-f258e449-3be6-4c6a-a737-b9b50a11df16 @ 05/05/24 14:30:38.795
  STEP: Creating a pod to test consume configMaps @ 05/05/24 14:30:38.799
  STEP: Saw pod success @ 05/05/24 14:30:42.817
  I0505 14:30:42.821395 21 output.go:196] Trying to get logs from node worker00 pod pod-configmaps-7a300c2d-1a9a-4ded-82ba-cf1d8608b9e1 container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 14:30:42.827
  I0505 14:30:42.844468 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8639" for this suite. @ 05/05/24 14:30:42.85
• [4.089 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 05/05/24 14:30:42.857
  I0505 14:30:42.857612 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename svcaccounts @ 05/05/24 14:30:42.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:30:42.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:30:42.881
  STEP: reading a file in the container @ 05/05/24 14:30:44.904
  I0505 14:30:44.904932 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6331 pod-service-account-5f5d2f88-1f40-41a3-8819-4933ef4b6f03 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 05/05/24 14:30:45.114
  I0505 14:30:45.114621 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6331 pod-service-account-5f5d2f88-1f40-41a3-8819-4933ef4b6f03 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 05/05/24 14:30:45.401
  I0505 14:30:45.401503 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6331 pod-service-account-5f5d2f88-1f40-41a3-8819-4933ef4b6f03 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0505 14:30:45.645921 21 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-6331"
  I0505 14:30:45.650539 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6331" for this suite. @ 05/05/24 14:30:45.656
• [2.817 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 05/05/24 14:30:45.675
  I0505 14:30:45.675043 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename webhook @ 05/05/24 14:30:45.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:30:45.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:30:45.704
  STEP: Setting up server cert @ 05/05/24 14:30:45.733
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 14:30:46.428
  STEP: Deploying the webhook pod @ 05/05/24 14:30:46.436
  STEP: Wait for the deployment to be ready @ 05/05/24 14:30:46.45
  I0505 14:30:46.466668 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/05/24 14:30:48.478
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 14:30:48.497
  I0505 14:30:49.499230 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 05/05/24 14:30:49.506
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/05/24 14:30:49.522
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 05/05/24 14:30:49.538
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/05/24 14:30:49.555
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 05/05/24 14:30:49.567
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/05/24 14:30:49.578
  I0505 14:30:49.653642 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4787" for this suite. @ 05/05/24 14:30:49.667
  STEP: Destroying namespace "webhook-markers-7876" for this suite. @ 05/05/24 14:30:49.679
• [4.019 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 05/05/24 14:30:49.693
  I0505 14:30:49.693956 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename daemonsets @ 05/05/24 14:30:49.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:30:49.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:30:49.723
  I0505 14:30:49.746913 21 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0505 14:30:49.755182 21 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0505 14:30:49.762817 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0505 14:30:49.762875 21 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  I0505 14:30:50.770604 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0505 14:30:50.770678 21 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  I0505 14:30:51.761094 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0505 14:30:51.761132 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I0505 14:30:51.761149 21 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0505 14:30:51.778167 21 daemon_set.go:102] Updating DaemonSet daemon-set
  I0505 14:30:53.790349 21 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0505 14:30:53.801567 21 daemon_set.go:102] Updating DaemonSet daemon-set
  I0505 14:30:53.801662 21 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0505 14:30:53.807554 21 daemon_set.go:1178] Wrong image for pod: daemon-set-ls8zc. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0505 14:30:53.807608 21 daemon_set.go:1183] Pod daemon-set-ls8zc is not available
  I0505 14:30:55.805543 21 daemon_set.go:1183] Pod daemon-set-cmw6s is not available
  STEP: Deleting DaemonSet "daemon-set" @ 05/05/24 14:30:55.814
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2777, will wait for the garbage collector to delete the pods @ 05/05/24 14:30:55.814
  I0505 14:30:55.874413 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.440921ms
  I0505 14:30:55.980856 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 106.444384ms
  I0505 14:30:57.383295 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0505 14:30:57.383335 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0505 14:30:57.385004 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19507"},"items":null}

  I0505 14:30:57.386655 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19507"},"items":null}

  I0505 14:30:57.391653 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2777" for this suite. @ 05/05/24 14:30:57.393
• [7.704 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 05/05/24 14:30:57.399
  I0505 14:30:57.399117 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 14:30:57.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:30:57.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:30:57.421
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/05/24 14:30:57.425
  STEP: Saw pod success @ 05/05/24 14:31:01.447
  I0505 14:31:01.451333 21 output.go:196] Trying to get logs from node worker00 pod pod-3949c104-3a62-4e93-8b63-4f88e224fef0 container test-container: <nil>
  STEP: delete the pod @ 05/05/24 14:31:01.457
  I0505 14:31:01.470674 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6607" for this suite. @ 05/05/24 14:31:01.473
• [4.080 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 05/05/24 14:31:01.479
  I0505 14:31:01.479387 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename pods @ 05/05/24 14:31:01.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:31:01.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:31:01.49
  STEP: creating pod @ 05/05/24 14:31:01.492
  I0505 14:31:03.515621 21 pods.go:83] Pod pod-hostip-ed786aba-df86-49f5-ba01-1176773a97af has hostIP: 192.168.58.100
  I0505 14:31:03.515699 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4033" for this suite. @ 05/05/24 14:31:03.518
• [2.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 05/05/24 14:31:03.523
  I0505 14:31:03.523084 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename discovery @ 05/05/24 14:31:03.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:31:03.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:31:03.536
  STEP: Setting up server cert @ 05/05/24 14:31:03.539
  STEP: Requesting APIResourceList from "/api/v1" @ 05/05/24 14:31:03.828
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 05/05/24 14:31:03.83
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 05/05/24 14:31:03.831
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 05/05/24 14:31:03.832
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 05/05/24 14:31:03.833
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 05/05/24 14:31:03.835
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 05/05/24 14:31:03.835
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 05/05/24 14:31:03.837
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 05/05/24 14:31:03.838
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 05/05/24 14:31:03.839
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 05/05/24 14:31:03.84
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 05/05/24 14:31:03.841
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 05/05/24 14:31:03.842
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 05/05/24 14:31:03.842
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 05/05/24 14:31:03.843
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 05/05/24 14:31:03.844
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 05/05/24 14:31:03.844
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 05/05/24 14:31:03.845
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 05/05/24 14:31:03.846
  I0505 14:31:03.847563 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-8316" for this suite. @ 05/05/24 14:31:03.849
• [0.332 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 05/05/24 14:31:03.855
  I0505 14:31:03.855403 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename secrets @ 05/05/24 14:31:03.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:31:03.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:31:03.866
  STEP: Creating projection with secret that has name secret-emptykey-test-1a18020f-b3da-470a-b8f4-d898a6373b56 @ 05/05/24 14:31:03.867
  I0505 14:31:03.869300 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-16" for this suite. @ 05/05/24 14:31:03.872
• [0.022 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 05/05/24 14:31:03.877
  I0505 14:31:03.877304 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename statefulset @ 05/05/24 14:31:03.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:31:03.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:31:03.89
  STEP: Creating service test in namespace statefulset-2854 @ 05/05/24 14:31:03.894
  STEP: Creating a new StatefulSet @ 05/05/24 14:31:03.9
  I0505 14:31:03.906745 21 wait.go:40] Found 0 stateful pods, waiting for 3
  I0505 14:31:13.910150 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0505 14:31:13.910228 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0505 14:31:13.910252 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0505 14:31:13.920260 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=statefulset-2854 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0505 14:31:14.029588 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0505 14:31:14.029633 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0505 14:31:14.029651 21 statefulset.go:2184] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/05/24 14:31:24.039
  I0505 14:31:24.061281 21 statefulset.go:2241] Updating stateful set ss2
  STEP: Creating a new revision @ 05/05/24 14:31:24.061
  STEP: Updating Pods in reverse ordinal order @ 05/05/24 14:31:34.069
  I0505 14:31:34.074002 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=statefulset-2854 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0505 14:31:34.203094 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0505 14:31:34.203142 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0505 14:31:34.203167 21 statefulset.go:2208] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0505 14:31:44.214287 21 wait.go:158] Waiting for StatefulSet statefulset-2854/ss2 to complete update
  I0505 14:31:44.214323 21 wait.go:165] Waiting for Pod statefulset-2854/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0505 14:31:44.214332 21 wait.go:165] Waiting for Pod statefulset-2854/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0505 14:31:54.216719 21 wait.go:158] Waiting for StatefulSet statefulset-2854/ss2 to complete update
  I0505 14:31:54.216764 21 wait.go:165] Waiting for Pod statefulset-2854/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Rolling back to a previous revision @ 05/05/24 14:32:04.221
  I0505 14:32:04.221368 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=statefulset-2854 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0505 14:32:04.366699 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0505 14:32:04.366826 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0505 14:32:04.366877 21 statefulset.go:2184] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0505 14:32:14.394212 21 statefulset.go:2241] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 05/05/24 14:32:24.404
  I0505 14:32:24.408709 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=statefulset-2854 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0505 14:32:24.485465 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0505 14:32:24.485501 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0505 14:32:24.485515 21 statefulset.go:2208] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0505 14:32:34.497303 21 statefulset.go:135] Deleting all statefulset in ns statefulset-2854
  I0505 14:32:34.498788 21 rest.go:150] Scaling statefulset ss2 to 0
  I0505 14:32:44.517291 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0505 14:32:44.520134 21 rest.go:88] Deleting statefulset ss2
  I0505 14:32:44.541813 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2854" for this suite. @ 05/05/24 14:32:44.544
• [100.671 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 05/05/24 14:32:44.549
  I0505 14:32:44.550049 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 14:32:44.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:32:44.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:32:44.561
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 14:32:44.563
  STEP: Saw pod success @ 05/05/24 14:32:48.578
  I0505 14:32:48.582420 21 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-42aacdef-6ec1-4efe-b299-1c3fdecbff85 container client-container: <nil>
  STEP: delete the pod @ 05/05/24 14:32:48.589
  I0505 14:32:48.611004 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1286" for this suite. @ 05/05/24 14:32:48.614
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 05/05/24 14:32:48.622
  I0505 14:32:48.622431 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/05/24 14:32:48.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:32:48.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:32:48.639
  STEP: creating @ 05/05/24 14:32:48.641
  STEP: getting @ 05/05/24 14:32:48.656
  STEP: listing in namespace @ 05/05/24 14:32:48.661
  STEP: patching @ 05/05/24 14:32:48.671
  STEP: deleting @ 05/05/24 14:32:48.689
  I0505 14:32:48.702700 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9771" for this suite. @ 05/05/24 14:32:48.711
• [0.097 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 05/05/24 14:32:48.719
  I0505 14:32:48.719335 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/05/24 14:32:48.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:32:48.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:32:48.741
  STEP: Cleaning up the secret @ 05/05/24 14:32:50.78
  STEP: Cleaning up the configmap @ 05/05/24 14:32:50.786
  STEP: Cleaning up the pod @ 05/05/24 14:32:50.79
  I0505 14:32:50.802036 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-164" for this suite. @ 05/05/24 14:32:50.808
• [2.096 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 05/05/24 14:32:50.815
  I0505 14:32:50.815925 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 14:32:50.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:32:50.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:32:50.837
  STEP: Creating projection with secret that has name projected-secret-test-map-bb2f7869-4867-4a2c-8021-d66e9e3dfbd0 @ 05/05/24 14:32:50.84
  STEP: Creating a pod to test consume secrets @ 05/05/24 14:32:50.844
  STEP: Saw pod success @ 05/05/24 14:32:54.86
  I0505 14:32:54.862547 21 output.go:196] Trying to get logs from node worker00 pod pod-projected-secrets-f951737b-8df8-4c2c-b1b5-009af37e06ec container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 14:32:54.865
  I0505 14:32:54.890037 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2852" for this suite. @ 05/05/24 14:32:54.892
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 05/05/24 14:32:54.898
  I0505 14:32:54.898534 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename pods @ 05/05/24 14:32:54.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:32:54.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:32:54.914
  STEP: Saw pod success @ 05/05/24 14:33:00.971
  I0505 14:33:00.974256 21 output.go:196] Trying to get logs from node worker00 pod client-envvars-f8f0978f-4fe2-4890-a074-07e51c3b33ee container env3cont: <nil>
  STEP: delete the pod @ 05/05/24 14:33:00.979
  I0505 14:33:01.002060 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3930" for this suite. @ 05/05/24 14:33:01.003
• [6.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 05/05/24 14:33:01.006
  I0505 14:33:01.006532 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/05/24 14:33:01.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:33:01.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:33:01.016
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 05/05/24 14:33:01.018
  I0505 14:33:01.018761 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:33:02.202772 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:33:07.198469 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8770" for this suite. @ 05/05/24 14:33:07.201
• [6.198 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 05/05/24 14:33:07.204
  I0505 14:33:07.204570 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 14:33:07.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:33:07.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:33:07.217
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 14:33:07.218
  STEP: Saw pod success @ 05/05/24 14:33:11.233
  I0505 14:33:11.235735 21 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-87a2c3dc-af2b-4a49-b515-9704998550c1 container client-container: <nil>
  STEP: delete the pod @ 05/05/24 14:33:11.238
  I0505 14:33:11.257044 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9920" for this suite. @ 05/05/24 14:33:11.258
• [4.056 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1048
  STEP: Creating a kubernetes client @ 05/05/24 14:33:11.26
  I0505 14:33:11.260384 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 14:33:11.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:33:11.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:33:11.271
  STEP: create deployment with httpd image @ 05/05/24 14:33:11.273
  I0505 14:33:11.273164 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3718 create -f -'
  I0505 14:33:11.351524 21 builder.go:146] stderr: ""
  I0505 14:33:11.351553 21 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 05/05/24 14:33:11.351
  I0505 14:33:11.351611 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3718 diff -f -'
  I0505 14:33:11.466138 21 builder.go:135] rc: 1
  I0505 14:33:11.466201 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3718 delete -f -'
  I0505 14:33:11.511699 21 builder.go:146] stderr: ""
  I0505 14:33:11.511736 21 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0505 14:33:11.512719 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3718" for this suite. @ 05/05/24 14:33:11.514
• [0.258 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 05/05/24 14:33:11.518
  I0505 14:33:11.518445 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 14:33:11.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:33:11.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:33:11.532
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 14:33:11.534
  STEP: Saw pod success @ 05/05/24 14:33:15.555
  I0505 14:33:15.559286 21 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-cf0fbca7-ba50-4dac-9a42-4cfb427dcaff container client-container: <nil>
  STEP: delete the pod @ 05/05/24 14:33:15.564
  I0505 14:33:15.590553 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-601" for this suite. @ 05/05/24 14:33:15.592
• [4.077 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 05/05/24 14:33:15.595
  I0505 14:33:15.595745 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename endpointslice @ 05/05/24 14:33:15.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:33:15.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:33:15.606
  STEP: getting /apis @ 05/05/24 14:33:15.607
  STEP: getting /apis/discovery.k8s.io @ 05/05/24 14:33:15.61
  STEP: getting /apis/discovery.k8s.iov1 @ 05/05/24 14:33:15.61
  STEP: creating @ 05/05/24 14:33:15.611
  STEP: getting @ 05/05/24 14:33:15.618
  STEP: listing @ 05/05/24 14:33:15.62
  STEP: watching @ 05/05/24 14:33:15.621
  I0505 14:33:15.621793 21 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 05/05/24 14:33:15.622
  STEP: cluster-wide watching @ 05/05/24 14:33:15.623
  I0505 14:33:15.623833 21 endpointslice.go:459] starting watch
  STEP: patching @ 05/05/24 14:33:15.624
  STEP: updating @ 05/05/24 14:33:15.627
  I0505 14:33:15.631958 21 endpointslice.go:482] waiting for watch events with expected annotations
  I0505 14:33:15.631983 21 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 05/05/24 14:33:15.632
  STEP: deleting a collection @ 05/05/24 14:33:15.638
  I0505 14:33:15.643621 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4864" for this suite. @ 05/05/24 14:33:15.645
• [0.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 05/05/24 14:33:15.648
  I0505 14:33:15.648798 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename webhook @ 05/05/24 14:33:15.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:33:15.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:33:15.661
  STEP: Setting up server cert @ 05/05/24 14:33:15.671
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 14:33:16.088
  STEP: Deploying the webhook pod @ 05/05/24 14:33:16.104
  STEP: Wait for the deployment to be ready @ 05/05/24 14:33:16.113
  I0505 14:33:16.121538 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/05/24 14:33:18.131
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 14:33:18.136
  I0505 14:33:19.136461 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 05/05/24 14:33:19.143
  STEP: create a configmap that should be updated by the webhook @ 05/05/24 14:33:19.16
  I0505 14:33:19.198220 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6561" for this suite. @ 05/05/24 14:33:19.204
  STEP: Destroying namespace "webhook-markers-5775" for this suite. @ 05/05/24 14:33:19.207
• [3.563 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 05/05/24 14:33:19.212
  I0505 14:33:19.212279 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename security-context-test @ 05/05/24 14:33:19.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:33:19.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:33:19.227
  I0505 14:33:23.248686 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7163" for this suite. @ 05/05/24 14:33:23.251
• [4.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 05/05/24 14:33:23.258
  I0505 14:33:23.258606 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename replication-controller @ 05/05/24 14:33:23.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:33:23.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:33:23.276
  STEP: creating a ReplicationController @ 05/05/24 14:33:23.283
  STEP: waiting for RC to be added @ 05/05/24 14:33:23.286
  STEP: waiting for available Replicas @ 05/05/24 14:33:23.287
  STEP: patching ReplicationController @ 05/05/24 14:33:24.03
  STEP: waiting for RC to be modified @ 05/05/24 14:33:24.039
  STEP: patching ReplicationController status @ 05/05/24 14:33:24.039
  STEP: waiting for RC to be modified @ 05/05/24 14:33:24.044
  STEP: waiting for available Replicas @ 05/05/24 14:33:24.044
  STEP: fetching ReplicationController status @ 05/05/24 14:33:24.049
  STEP: patching ReplicationController scale @ 05/05/24 14:33:24.051
  STEP: waiting for RC to be modified @ 05/05/24 14:33:24.054
  STEP: waiting for ReplicationController's scale to be the max amount @ 05/05/24 14:33:24.055
  STEP: fetching ReplicationController; ensuring that it's patched @ 05/05/24 14:33:25.029
  STEP: updating ReplicationController status @ 05/05/24 14:33:25.031
  STEP: waiting for RC to be modified @ 05/05/24 14:33:25.036
  STEP: listing all ReplicationControllers @ 05/05/24 14:33:25.036
  STEP: checking that ReplicationController has expected values @ 05/05/24 14:33:25.039
  STEP: deleting ReplicationControllers by collection @ 05/05/24 14:33:25.039
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 05/05/24 14:33:25.044
  I0505 14:33:25.072901 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0505 14:33:25.072943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-7770" for this suite. @ 05/05/24 14:33:25.074
• [1.819 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 05/05/24 14:33:25.077
  I0505 14:33:25.077192 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename daemonsets @ 05/05/24 14:33:25.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:33:25.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:33:25.088
  I0505 14:33:25.095749 21 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/05/24 14:33:25.099
  I0505 14:33:25.104158 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0505 14:33:25.104200 21 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  E0505 14:33:26.073412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:33:26.112549 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0505 14:33:26.112587 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 05/05/24 14:33:26.128
  STEP: Check that daemon pods images are updated. @ 05/05/24 14:33:26.145
  I0505 14:33:26.148999 21 daemon_set.go:1178] Wrong image for pod: daemon-set-mcskj. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0505 14:33:26.149085 21 daemon_set.go:1178] Wrong image for pod: daemon-set-vmv22. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0505 14:33:27.074445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:33:27.151140 21 daemon_set.go:1178] Wrong image for pod: daemon-set-mcskj. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0505 14:33:28.074761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:33:28.148153 21 daemon_set.go:1178] Wrong image for pod: daemon-set-mcskj. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0505 14:33:29.076028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:33:30.075980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Check that daemon pods are still running on every node of the cluster. @ 05/05/24 14:33:30.158
  I0505 14:33:30.165384 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0505 14:33:30.165425 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/05/24 14:33:30.214
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6473, will wait for the garbage collector to delete the pods @ 05/05/24 14:33:30.214
  I0505 14:33:30.294624 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 16.944023ms
  I0505 14:33:30.397640 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 103.015144ms
  E0505 14:33:31.076734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:33:32.079012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:33:33.078856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:33:33.099176 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0505 14:33:33.099201 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0505 14:33:33.100692 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"21255"},"items":null}

  I0505 14:33:33.103997 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"21255"},"items":null}

  I0505 14:33:33.107573 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6473" for this suite. @ 05/05/24 14:33:33.109
• [8.035 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 05/05/24 14:33:33.112
  I0505 14:33:33.112726 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename webhook @ 05/05/24 14:33:33.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:33:33.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:33:33.123
  STEP: Setting up server cert @ 05/05/24 14:33:33.133
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 14:33:33.532
  STEP: Deploying the webhook pod @ 05/05/24 14:33:33.545
  STEP: Wait for the deployment to be ready @ 05/05/24 14:33:33.553
  I0505 14:33:33.556413 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0505 14:33:34.079260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:33:35.079426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/05/24 14:33:35.564
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 14:33:35.581
  E0505 14:33:36.080828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:33:36.581602 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/05/24 14:33:36.586
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/05/24 14:33:36.599
  STEP: Creating a dummy validating-webhook-configuration object @ 05/05/24 14:33:36.608
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 05/05/24 14:33:36.612
  STEP: Creating a dummy mutating-webhook-configuration object @ 05/05/24 14:33:36.615
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 05/05/24 14:33:36.619
  I0505 14:33:36.650843 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8889" for this suite. @ 05/05/24 14:33:36.655
  STEP: Destroying namespace "webhook-markers-5652" for this suite. @ 05/05/24 14:33:36.666
• [3.557 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 05/05/24 14:33:36.669
  I0505 14:33:36.669852 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename lease-test @ 05/05/24 14:33:36.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:33:36.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:33:36.681
  I0505 14:33:36.699821 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-6044" for this suite. @ 05/05/24 14:33:36.702
• [0.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 05/05/24 14:33:36.706
  I0505 14:33:36.706891 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename watch @ 05/05/24 14:33:36.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:33:36.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:33:36.717
  STEP: creating a watch on configmaps @ 05/05/24 14:33:36.719
  STEP: creating a new configmap @ 05/05/24 14:33:36.72
  STEP: modifying the configmap once @ 05/05/24 14:33:36.722
  STEP: closing the watch once it receives two notifications @ 05/05/24 14:33:36.726
  I0505 14:33:36.726330 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3034  85a95006-5f32-4758-99f8-5f4736f48174 21341 0 2024-05-05 14:33:36 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-05 14:33:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0505 14:33:36.726526 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3034  85a95006-5f32-4758-99f8-5f4736f48174 21342 0 2024-05-05 14:33:36 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-05 14:33:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 05/05/24 14:33:36.726
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 05/05/24 14:33:36.73
  STEP: deleting the configmap @ 05/05/24 14:33:36.73
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 05/05/24 14:33:36.734
  I0505 14:33:36.734222 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3034  85a95006-5f32-4758-99f8-5f4736f48174 21343 0 2024-05-05 14:33:36 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-05 14:33:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0505 14:33:36.734281 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3034  85a95006-5f32-4758-99f8-5f4736f48174 21344 0 2024-05-05 14:33:36 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-05 14:33:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0505 14:33:36.734332 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3034" for this suite. @ 05/05/24 14:33:36.736
• [0.033 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 05/05/24 14:33:36.741
  I0505 14:33:36.741302 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename dns @ 05/05/24 14:33:36.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:33:36.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:33:36.754
  STEP: Creating a test headless service @ 05/05/24 14:33:36.756
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9606.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-9606.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 05/05/24 14:33:36.76
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9606.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-9606.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 05/05/24 14:33:36.761
  STEP: creating a pod to probe DNS @ 05/05/24 14:33:36.761
  STEP: submitting the pod to kubernetes @ 05/05/24 14:33:36.761
  E0505 14:33:37.081906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:33:38.082090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/05/24 14:33:38.773
  STEP: looking for the results for each expected name from probers @ 05/05/24 14:33:38.776
  I0505 14:33:38.783176 21 dns_common.go:527] DNS probes using dns-9606/dns-test-94f00271-6cee-45f1-ba1e-48570caf9593 succeeded

  STEP: deleting the pod @ 05/05/24 14:33:38.783
  STEP: deleting the test headless service @ 05/05/24 14:33:38.791
  I0505 14:33:38.805818 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9606" for this suite. @ 05/05/24 14:33:38.809
• [2.072 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 05/05/24 14:33:38.813
  I0505 14:33:38.813113 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename dns @ 05/05/24 14:33:38.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:33:38.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:33:38.821
  STEP: Creating a test headless service @ 05/05/24 14:33:38.822
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-896 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-896;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-896 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-896;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-896.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-896.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-896.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-896.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-896.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-896.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-896.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-896.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-896.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-896.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-896.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-896.svc;check="$$(dig +notcp +noall +answer +search 198.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.198_udp@PTR;check="$$(dig +tcp +noall +answer +search 198.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.198_tcp@PTR;sleep 1; done
   @ 05/05/24 14:33:38.829
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-896 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-896;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-896 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-896;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-896.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-896.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-896.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-896.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-896.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-896.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-896.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-896.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-896.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-896.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-896.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-896.svc;check="$$(dig +notcp +noall +answer +search 198.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.198_udp@PTR;check="$$(dig +tcp +noall +answer +search 198.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.198_tcp@PTR;sleep 1; done
   @ 05/05/24 14:33:38.829
  STEP: creating a pod to probe DNS @ 05/05/24 14:33:38.83
  STEP: submitting the pod to kubernetes @ 05/05/24 14:33:38.83
  E0505 14:33:39.082511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:33:40.083257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/05/24 14:33:40.849
  STEP: looking for the results for each expected name from probers @ 05/05/24 14:33:40.851
  I0505 14:33:40.853386 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:40.855258 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:40.856861 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-896 from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:40.858460 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-896 from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:40.860210 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-896.svc from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:40.862086 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-896.svc from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:40.863361 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-896.svc from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:40.864613 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-896.svc from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:40.865728 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.test-service-2.dns-896.svc from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:40.866631 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.test-service-2.dns-896.svc from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:40.867673 21 dns_common.go:478] Unable to read 10.32.0.198_udp@PTR from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:40.868991 21 dns_common.go:478] Unable to read 10.32.0.198_tcp@PTR from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:40.870787 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:40.872656 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:40.874613 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-896 from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:40.876476 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-896 from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:40.877733 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-896.svc from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:40.881803 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-896.svc from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:40.883443 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-896.svc from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:40.885407 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-896.svc from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:40.887291 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.test-service-2.dns-896.svc from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:40.891355 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.test-service-2.dns-896.svc from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:40.894121 21 dns_common.go:478] Unable to read 10.32.0.198_udp@PTR from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:40.895905 21 dns_common.go:478] Unable to read 10.32.0.198_tcp@PTR from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:40.895928 21 dns_common.go:489] Lookups using dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-896 wheezy_tcp@dns-test-service.dns-896 wheezy_udp@dns-test-service.dns-896.svc wheezy_tcp@dns-test-service.dns-896.svc wheezy_udp@_http._tcp.dns-test-service.dns-896.svc wheezy_tcp@_http._tcp.dns-test-service.dns-896.svc wheezy_udp@_http._tcp.test-service-2.dns-896.svc wheezy_tcp@_http._tcp.test-service-2.dns-896.svc 10.32.0.198_udp@PTR 10.32.0.198_tcp@PTR jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-896 jessie_tcp@dns-test-service.dns-896 jessie_udp@dns-test-service.dns-896.svc jessie_tcp@dns-test-service.dns-896.svc jessie_udp@_http._tcp.dns-test-service.dns-896.svc jessie_tcp@_http._tcp.dns-test-service.dns-896.svc jessie_udp@_http._tcp.test-service-2.dns-896.svc jessie_tcp@_http._tcp.test-service-2.dns-896.svc 10.32.0.198_udp@PTR 10.32.0.198_tcp@PTR]

  I0505 14:33:40.899318 21 dns_common.go:495] Pod client logs for webserver: 
  I0505 14:33:40.902938 21 dns_common.go:495] Pod client logs for querier: 
  I0505 14:33:40.906170 21 dns_common.go:495] Pod client logs for jessie-querier: 
  E0505 14:33:41.083742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:33:42.084862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:33:43.085137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:33:44.085764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:33:45.087462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:33:45.857502 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:45.861406 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:45.864018 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-896 from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:45.876756 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:45.878451 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:45.883399 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-896.svc from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:45.884436 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-896.svc from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:45.885704 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-896.svc from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:45.886845 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.test-service-2.dns-896.svc from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:45.888557 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.test-service-2.dns-896.svc from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:45.891196 21 dns_common.go:489] Lookups using dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-896 jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_tcp@dns-test-service.dns-896.svc jessie_udp@_http._tcp.dns-test-service.dns-896.svc jessie_tcp@_http._tcp.dns-test-service.dns-896.svc jessie_udp@_http._tcp.test-service-2.dns-896.svc jessie_tcp@_http._tcp.test-service-2.dns-896.svc]

  I0505 14:33:45.893362 21 dns_common.go:495] Pod client logs for webserver: 
  I0505 14:33:45.895325 21 dns_common.go:495] Pod client logs for querier: 
  I0505 14:33:45.898029 21 dns_common.go:495] Pod client logs for jessie-querier: 
  E0505 14:33:46.088026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:33:47.088147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:33:48.092730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:33:49.093974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:33:50.094237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:33:50.854973 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:50.864488 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-896 from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:50.880906 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:50.882352 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:50.886685 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-896.svc from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:50.893611 21 dns_common.go:489] Lookups using dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c failed for: [wheezy_udp@dns-test-service wheezy_udp@dns-test-service.dns-896 jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_tcp@dns-test-service.dns-896.svc]

  I0505 14:33:50.895834 21 dns_common.go:495] Pod client logs for webserver: 
  I0505 14:33:50.897939 21 dns_common.go:495] Pod client logs for querier: 
  I0505 14:33:50.899982 21 dns_common.go:495] Pod client logs for jessie-querier: 
  E0505 14:33:51.094392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:33:52.097148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:33:53.099203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:33:54.099615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:33:55.099574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:33:55.883250 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:55.884326 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:55.888552 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-896.svc from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:33:55.898112 21 dns_common.go:489] Lookups using dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c failed for: [jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_tcp@dns-test-service.dns-896.svc]

  I0505 14:33:55.901443 21 dns_common.go:495] Pod client logs for webserver: 
  I0505 14:33:55.903962 21 dns_common.go:495] Pod client logs for querier: 
  I0505 14:33:55.907029 21 dns_common.go:495] Pod client logs for jessie-querier: 
  E0505 14:33:56.101083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:33:57.101482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:33:58.104665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:33:59.105149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:00.108184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:34:00.879558 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:34:00.880975 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:34:00.885346 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-896.svc from pod dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c: the server could not find the requested resource (get pods dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c)
  I0505 14:34:00.891581 21 dns_common.go:489] Lookups using dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c failed for: [jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_tcp@dns-test-service.dns-896.svc]

  I0505 14:34:00.893830 21 dns_common.go:495] Pod client logs for webserver: 
  I0505 14:34:00.896184 21 dns_common.go:495] Pod client logs for querier: 
  I0505 14:34:00.898635 21 dns_common.go:495] Pod client logs for jessie-querier: 
  E0505 14:34:01.109666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:02.110821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:03.111543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:04.111896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:05.112610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:34:05.886751 21 dns_common.go:527] DNS probes using dns-896/dns-test-fa15a4f7-aa64-46a8-8027-be9d5c8a8c0c succeeded

  STEP: deleting the pod @ 05/05/24 14:34:05.886
  STEP: deleting the test service @ 05/05/24 14:34:05.919
  STEP: deleting the test headless service @ 05/05/24 14:34:05.944
  I0505 14:34:05.957790 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-896" for this suite. @ 05/05/24 14:34:05.962
• [27.153 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 05/05/24 14:34:05.966
  I0505 14:34:05.966213 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename container-runtime @ 05/05/24 14:34:05.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:34:05.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:34:05.977
  STEP: create the container @ 05/05/24 14:34:05.979
  W0505 14:34:05.983882      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/05/24 14:34:05.984
  E0505 14:34:06.113509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:07.114060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:08.114176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 05/05/24 14:34:08.998
  STEP: the container should be terminated @ 05/05/24 14:34:09
  STEP: the termination message should be set @ 05/05/24 14:34:09
  I0505 14:34:09.000923 21 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 05/05/24 14:34:09
  I0505 14:34:09.011134 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1153" for this suite. @ 05/05/24 14:34:09.012
• [3.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 05/05/24 14:34:09.018
  I0505 14:34:09.018808 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename daemonsets @ 05/05/24 14:34:09.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:34:09.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:34:09.03
  STEP: Creating simple DaemonSet "daemon-set" @ 05/05/24 14:34:09.041
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/05/24 14:34:09.045
  I0505 14:34:09.048153 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0505 14:34:09.048263 21 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  E0505 14:34:09.115580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:34:10.053591 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0505 14:34:10.053692 21 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  E0505 14:34:10.116726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:34:11.050529 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0505 14:34:11.050571 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 05/05/24 14:34:11.052
  I0505 14:34:11.054955 21 daemon_set.go:912] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 05/05/24 14:34:11.055
  I0505 14:34:11.062027 21 daemon_set.go:932] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 05/05/24 14:34:11.062
  I0505 14:34:11.063343 21 daemon_set.go:957] Observed &DaemonSet event: ADDED
  I0505 14:34:11.063409 21 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0505 14:34:11.063463 21 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0505 14:34:11.063765 21 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0505 14:34:11.063978 21 daemon_set.go:950] Found daemon set daemon-set in namespace daemonsets-118 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0505 14:34:11.064005 21 daemon_set.go:961] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 05/05/24 14:34:11.064
  STEP: watching for the daemon set status to be patched @ 05/05/24 14:34:11.07
  I0505 14:34:11.071664 21 daemon_set.go:1001] Observed &DaemonSet event: ADDED
  I0505 14:34:11.072012 21 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0505 14:34:11.072062 21 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0505 14:34:11.072304 21 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0505 14:34:11.072327 21 daemon_set.go:997] Observed daemon set daemon-set in namespace daemonsets-118 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0505 14:34:11.073110 21 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0505 14:34:11.073308 21 daemon_set.go:994] Found daemon set daemon-set in namespace daemonsets-118 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0505 14:34:11.073319 21 daemon_set.go:1005] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 05/05/24 14:34:11.077
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-118, will wait for the garbage collector to delete the pods @ 05/05/24 14:34:11.077
  E0505 14:34:11.117119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:34:11.132924 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 2.424273ms
  I0505 14:34:11.234299 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.365942ms
  E0505 14:34:12.118464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:13.121780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:34:13.336466 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0505 14:34:13.336505 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0505 14:34:13.338616 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"21730"},"items":null}

  I0505 14:34:13.341483 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"21730"},"items":null}

  I0505 14:34:13.347067 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-118" for this suite. @ 05/05/24 14:34:13.349
• [4.335 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 05/05/24 14:34:13.353
  I0505 14:34:13.353767 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename webhook @ 05/05/24 14:34:13.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:34:13.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:34:13.368
  STEP: Setting up server cert @ 05/05/24 14:34:13.386
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 14:34:13.863
  STEP: Deploying the webhook pod @ 05/05/24 14:34:13.88
  STEP: Wait for the deployment to be ready @ 05/05/24 14:34:13.889
  I0505 14:34:13.898566 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0505 14:34:14.123240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:15.123737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/05/24 14:34:15.912
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 14:34:15.932
  E0505 14:34:16.124994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:34:16.933355 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 05/05/24 14:34:16.943
  STEP: create a namespace for the webhook @ 05/05/24 14:34:16.968
  STEP: create a configmap should be unconditionally rejected by the webhook @ 05/05/24 14:34:16.979
  I0505 14:34:17.030617 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4969" for this suite. @ 05/05/24 14:34:17.037
  STEP: Destroying namespace "webhook-markers-4390" for this suite. @ 05/05/24 14:34:17.049
  STEP: Destroying namespace "fail-closed-namespace-3394" for this suite. @ 05/05/24 14:34:17.057
• [3.714 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 05/05/24 14:34:17.07
  I0505 14:34:17.070462 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename webhook @ 05/05/24 14:34:17.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:34:17.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:34:17.089
  STEP: Setting up server cert @ 05/05/24 14:34:17.113
  E0505 14:34:17.127804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 14:34:17.344
  STEP: Deploying the webhook pod @ 05/05/24 14:34:17.357
  STEP: Wait for the deployment to be ready @ 05/05/24 14:34:17.372
  I0505 14:34:17.382163 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0505 14:34:18.128638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:19.128766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/05/24 14:34:19.391
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 14:34:19.397
  E0505 14:34:20.129549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:34:20.397442 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0505 14:34:20.406558 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5446-crds.webhook.example.com via the AdmissionRegistration API @ 05/05/24 14:34:20.918
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/05/24 14:34:20.943
  E0505 14:34:21.130078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:22.130115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:23.130839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:34:23.529416 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1559" for this suite. @ 05/05/24 14:34:23.533
  STEP: Destroying namespace "webhook-markers-2210" for this suite. @ 05/05/24 14:34:23.537
• [6.469 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 05/05/24 14:34:23.539
  I0505 14:34:23.539479 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename container-runtime @ 05/05/24 14:34:23.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:34:23.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:34:23.55
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 05/05/24 14:34:23.555
  E0505 14:34:24.133320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:25.133967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:26.134291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:27.134859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:28.136554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:29.137710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:30.138515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:31.139182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:32.140304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:33.140810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:34.143822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:35.143980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:36.144171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:37.145584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:38.146077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:39.146220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:40.146826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:41.147536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 05/05/24 14:34:41.643
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 05/05/24 14:34:41.646
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 05/05/24 14:34:41.652
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 05/05/24 14:34:41.652
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 05/05/24 14:34:41.676
  E0505 14:34:42.148900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:43.149451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 05/05/24 14:34:43.714
  E0505 14:34:44.149759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 05/05/24 14:34:44.72
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 05/05/24 14:34:44.723
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 05/05/24 14:34:44.723
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 05/05/24 14:34:44.743
  E0505 14:34:45.150523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 05/05/24 14:34:45.752
  E0505 14:34:46.151475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 05/05/24 14:34:46.76
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 05/05/24 14:34:46.765
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 05/05/24 14:34:46.765
  I0505 14:34:46.784136 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3718" for this suite. @ 05/05/24 14:34:46.786
• [23.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 05/05/24 14:34:46.789
  I0505 14:34:46.789950 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename server-version @ 05/05/24 14:34:46.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:34:46.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:34:46.807
  STEP: Request ServerVersion @ 05/05/24 14:34:46.809
  STEP: Confirm major version @ 05/05/24 14:34:46.81
  I0505 14:34:46.810231 21 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 05/05/24 14:34:46.81
  I0505 14:34:46.810274 21 server_version.go:58] cleanMinorVersion: 30
  I0505 14:34:46.810285 21 server_version.go:62] Minor version: 30
  I0505 14:34:46.810361 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-5561" for this suite. @ 05/05/24 14:34:46.812
• [0.028 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 05/05/24 14:34:46.818
  I0505 14:34:46.818664 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename svc-latency @ 05/05/24 14:34:46.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:34:46.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:34:46.834
  I0505 14:34:46.836164 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-7557 @ 05/05/24 14:34:46.837
  I0505 14:34:46.841360      21 runners.go:198] Created replication controller with name: svc-latency-rc, namespace: svc-latency-7557, replica count: 1
  E0505 14:34:47.152018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:34:47.892272      21 runners.go:198] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0505 14:34:48.010271 21 service_latency.go:356] Created: latency-svc-glg97
  I0505 14:34:48.023747 21 service_latency.go:363] Got endpoints: latency-svc-glg97 [31.04752ms]
  I0505 14:34:48.042356 21 service_latency.go:356] Created: latency-svc-9wgdg
  I0505 14:34:48.048089 21 service_latency.go:363] Got endpoints: latency-svc-9wgdg [24.116742ms]
  I0505 14:34:48.049489 21 service_latency.go:356] Created: latency-svc-kqkzf
  I0505 14:34:48.053502 21 service_latency.go:363] Got endpoints: latency-svc-kqkzf [29.158276ms]
  I0505 14:34:48.061199 21 service_latency.go:356] Created: latency-svc-xlr9h
  I0505 14:34:48.068855 21 service_latency.go:363] Got endpoints: latency-svc-xlr9h [44.705936ms]
  I0505 14:34:48.072159 21 service_latency.go:356] Created: latency-svc-2kxzh
  I0505 14:34:48.081534 21 service_latency.go:363] Got endpoints: latency-svc-2kxzh [56.933444ms]
  I0505 14:34:48.089697 21 service_latency.go:356] Created: latency-svc-45qw5
  I0505 14:34:48.089732 21 service_latency.go:363] Got endpoints: latency-svc-45qw5 [65.191882ms]
  I0505 14:34:48.100114 21 service_latency.go:356] Created: latency-svc-96h2p
  I0505 14:34:48.100262 21 service_latency.go:363] Got endpoints: latency-svc-96h2p [75.748838ms]
  I0505 14:34:48.106867 21 service_latency.go:356] Created: latency-svc-t47lm
  I0505 14:34:48.112841 21 service_latency.go:363] Got endpoints: latency-svc-t47lm [88.081117ms]
  I0505 14:34:48.122625 21 service_latency.go:356] Created: latency-svc-65kvg
  I0505 14:34:48.122722 21 service_latency.go:356] Created: latency-svc-64x6p
  I0505 14:34:48.128142 21 service_latency.go:363] Got endpoints: latency-svc-65kvg [103.307877ms]
  I0505 14:34:48.134293 21 service_latency.go:363] Got endpoints: latency-svc-64x6p [109.292915ms]
  I0505 14:34:48.134777 21 service_latency.go:356] Created: latency-svc-w5g6z
  I0505 14:34:48.140780 21 service_latency.go:363] Got endpoints: latency-svc-w5g6z [115.720646ms]
  I0505 14:34:48.145221 21 service_latency.go:356] Created: latency-svc-j4nk4
  I0505 14:34:48.153306 21 service_latency.go:363] Got endpoints: latency-svc-j4nk4 [128.130194ms]
  E0505 14:34:48.153785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:34:48.153962 21 service_latency.go:356] Created: latency-svc-r7wdp
  I0505 14:34:48.164093 21 service_latency.go:356] Created: latency-svc-tlfcm
  I0505 14:34:48.164294 21 service_latency.go:363] Got endpoints: latency-svc-r7wdp [139.608072ms]
  I0505 14:34:48.173699 21 service_latency.go:363] Got endpoints: latency-svc-tlfcm [148.765332ms]
  I0505 14:34:48.176672 21 service_latency.go:356] Created: latency-svc-l8lc7
  I0505 14:34:48.188392 21 service_latency.go:363] Got endpoints: latency-svc-l8lc7 [163.303027ms]
  I0505 14:34:48.188444 21 service_latency.go:356] Created: latency-svc-54brl
  I0505 14:34:48.196108 21 service_latency.go:356] Created: latency-svc-kgtwg
  I0505 14:34:48.197271 21 service_latency.go:363] Got endpoints: latency-svc-54brl [172.854219ms]
  I0505 14:34:48.207073 21 service_latency.go:356] Created: latency-svc-nk2f2
  I0505 14:34:48.215043 21 service_latency.go:363] Got endpoints: latency-svc-kgtwg [166.918558ms]
  I0505 14:34:48.214981 21 service_latency.go:363] Got endpoints: latency-svc-nk2f2 [161.43284ms]
  I0505 14:34:48.219536 21 service_latency.go:356] Created: latency-svc-d2dvw
  I0505 14:34:48.229738 21 service_latency.go:363] Got endpoints: latency-svc-d2dvw [160.789445ms]
  I0505 14:34:48.230932 21 service_latency.go:356] Created: latency-svc-dr7kq
  I0505 14:34:48.236500 21 service_latency.go:356] Created: latency-svc-n4shd
  I0505 14:34:48.241560 21 service_latency.go:363] Got endpoints: latency-svc-n4shd [151.809885ms]
  I0505 14:34:48.241858 21 service_latency.go:363] Got endpoints: latency-svc-dr7kq [160.248564ms]
  I0505 14:34:48.252480 21 service_latency.go:356] Created: latency-svc-rxk4b
  I0505 14:34:48.257909 21 service_latency.go:356] Created: latency-svc-mbz9v
  I0505 14:34:48.261275 21 service_latency.go:363] Got endpoints: latency-svc-rxk4b [160.981858ms]
  I0505 14:34:48.266354 21 service_latency.go:363] Got endpoints: latency-svc-mbz9v [153.385809ms]
  I0505 14:34:48.273605 21 service_latency.go:356] Created: latency-svc-f56m8
  I0505 14:34:48.277126 21 service_latency.go:363] Got endpoints: latency-svc-f56m8 [148.92876ms]
  I0505 14:34:48.285157 21 service_latency.go:356] Created: latency-svc-tvjsn
  I0505 14:34:48.295103 21 service_latency.go:356] Created: latency-svc-kpsq5
  I0505 14:34:48.295522 21 service_latency.go:363] Got endpoints: latency-svc-tvjsn [161.101296ms]
  I0505 14:34:48.304538 21 service_latency.go:356] Created: latency-svc-bsmqs
  I0505 14:34:48.307577 21 service_latency.go:363] Got endpoints: latency-svc-kpsq5 [166.722681ms]
  I0505 14:34:48.312082 21 service_latency.go:363] Got endpoints: latency-svc-bsmqs [158.727467ms]
  I0505 14:34:48.314015 21 service_latency.go:356] Created: latency-svc-pnhk4
  I0505 14:34:48.324220 21 service_latency.go:356] Created: latency-svc-h8b9s
  I0505 14:34:48.331972 21 service_latency.go:363] Got endpoints: latency-svc-pnhk4 [167.648107ms]
  I0505 14:34:48.335300 21 service_latency.go:363] Got endpoints: latency-svc-h8b9s [161.542758ms]
  I0505 14:34:48.340901 21 service_latency.go:356] Created: latency-svc-kjlls
  I0505 14:34:48.351874 21 service_latency.go:356] Created: latency-svc-wt4l7
  I0505 14:34:48.351994 21 service_latency.go:363] Got endpoints: latency-svc-kjlls [163.426995ms]
  I0505 14:34:48.355106 21 service_latency.go:363] Got endpoints: latency-svc-wt4l7 [156.283152ms]
  I0505 14:34:48.367753 21 service_latency.go:356] Created: latency-svc-zn6j9
  I0505 14:34:48.373675 21 service_latency.go:363] Got endpoints: latency-svc-zn6j9 [158.574824ms]
  I0505 14:34:48.373870 21 service_latency.go:356] Created: latency-svc-z6mpn
  I0505 14:34:48.381612 21 service_latency.go:363] Got endpoints: latency-svc-z6mpn [165.829657ms]
  I0505 14:34:48.387034 21 service_latency.go:356] Created: latency-svc-xr5zb
  I0505 14:34:48.390838 21 service_latency.go:363] Got endpoints: latency-svc-xr5zb [160.987827ms]
  I0505 14:34:48.396680 21 service_latency.go:356] Created: latency-svc-ckwqf
  I0505 14:34:48.402081 21 service_latency.go:363] Got endpoints: latency-svc-ckwqf [160.135521ms]
  I0505 14:34:48.408383 21 service_latency.go:356] Created: latency-svc-2fgbm
  I0505 14:34:48.420654 21 service_latency.go:356] Created: latency-svc-m4dcs
  I0505 14:34:48.425086 21 service_latency.go:363] Got endpoints: latency-svc-2fgbm [183.475594ms]
  I0505 14:34:48.433411 21 service_latency.go:363] Got endpoints: latency-svc-m4dcs [172.052079ms]
  I0505 14:34:48.442242 21 service_latency.go:356] Created: latency-svc-q82xw
  I0505 14:34:48.443827 21 service_latency.go:363] Got endpoints: latency-svc-q82xw [177.305462ms]
  I0505 14:34:48.455128 21 service_latency.go:356] Created: latency-svc-n76h2
  I0505 14:34:48.468187 21 service_latency.go:356] Created: latency-svc-rdxgm
  I0505 14:34:48.474790 21 service_latency.go:363] Got endpoints: latency-svc-n76h2 [197.592398ms]
  I0505 14:34:48.476066 21 service_latency.go:356] Created: latency-svc-hnkfr
  I0505 14:34:48.484601 21 service_latency.go:356] Created: latency-svc-q9qgs
  I0505 14:34:48.489948 21 service_latency.go:356] Created: latency-svc-hfb67
  I0505 14:34:48.496532 21 service_latency.go:356] Created: latency-svc-h4lgb
  I0505 14:34:48.502696 21 service_latency.go:356] Created: latency-svc-bjc92
  I0505 14:34:48.508550 21 service_latency.go:356] Created: latency-svc-tj8cc
  I0505 14:34:48.514154 21 service_latency.go:356] Created: latency-svc-z2v58
  I0505 14:34:48.521677 21 service_latency.go:363] Got endpoints: latency-svc-rdxgm [226.099895ms]
  I0505 14:34:48.524844 21 service_latency.go:356] Created: latency-svc-ltclm
  I0505 14:34:48.533214 21 service_latency.go:356] Created: latency-svc-pn26b
  I0505 14:34:48.538740 21 service_latency.go:356] Created: latency-svc-t6prf
  I0505 14:34:48.545449 21 service_latency.go:356] Created: latency-svc-p465x
  I0505 14:34:48.551422 21 service_latency.go:356] Created: latency-svc-zl62c
  I0505 14:34:48.558025 21 service_latency.go:356] Created: latency-svc-sw5k9
  I0505 14:34:48.565371 21 service_latency.go:356] Created: latency-svc-8rdxb
  I0505 14:34:48.570151 21 service_latency.go:356] Created: latency-svc-2qj9s
  I0505 14:34:48.573005 21 service_latency.go:363] Got endpoints: latency-svc-hnkfr [265.371173ms]
  I0505 14:34:48.582342 21 service_latency.go:356] Created: latency-svc-tm6vt
  I0505 14:34:48.616097 21 service_latency.go:363] Got endpoints: latency-svc-q9qgs [301.507268ms]
  I0505 14:34:48.621017 21 service_latency.go:356] Created: latency-svc-c46zl
  I0505 14:34:48.669619 21 service_latency.go:363] Got endpoints: latency-svc-hfb67 [337.54148ms]
  I0505 14:34:48.675878 21 service_latency.go:356] Created: latency-svc-2dptn
  I0505 14:34:48.718593 21 service_latency.go:363] Got endpoints: latency-svc-h4lgb [383.236974ms]
  I0505 14:34:48.728108 21 service_latency.go:356] Created: latency-svc-wlkkb
  I0505 14:34:48.766440 21 service_latency.go:363] Got endpoints: latency-svc-bjc92 [414.360098ms]
  I0505 14:34:48.778951 21 service_latency.go:356] Created: latency-svc-nslnh
  I0505 14:34:48.816393 21 service_latency.go:363] Got endpoints: latency-svc-tj8cc [461.166621ms]
  I0505 14:34:48.823506 21 service_latency.go:356] Created: latency-svc-46h7k
  I0505 14:34:48.867896 21 service_latency.go:363] Got endpoints: latency-svc-z2v58 [494.16065ms]
  I0505 14:34:48.876377 21 service_latency.go:356] Created: latency-svc-t8v49
  I0505 14:34:48.915980 21 service_latency.go:363] Got endpoints: latency-svc-ltclm [534.256744ms]
  I0505 14:34:48.924262 21 service_latency.go:356] Created: latency-svc-gc2dn
  I0505 14:34:48.971803 21 service_latency.go:363] Got endpoints: latency-svc-pn26b [580.704362ms]
  I0505 14:34:48.977795 21 service_latency.go:356] Created: latency-svc-gbjrj
  I0505 14:34:49.017711 21 service_latency.go:363] Got endpoints: latency-svc-t6prf [615.543566ms]
  I0505 14:34:49.024763 21 service_latency.go:356] Created: latency-svc-vtkw9
  I0505 14:34:49.068151 21 service_latency.go:363] Got endpoints: latency-svc-p465x [642.198162ms]
  I0505 14:34:49.074019 21 service_latency.go:356] Created: latency-svc-rbd5b
  I0505 14:34:49.115057 21 service_latency.go:363] Got endpoints: latency-svc-zl62c [681.554526ms]
  I0505 14:34:49.119798 21 service_latency.go:356] Created: latency-svc-l56nh
  E0505 14:34:49.153787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:34:49.166120 21 service_latency.go:363] Got endpoints: latency-svc-sw5k9 [722.213748ms]
  I0505 14:34:49.176642 21 service_latency.go:356] Created: latency-svc-npccl
  I0505 14:34:49.219708 21 service_latency.go:363] Got endpoints: latency-svc-8rdxb [744.799062ms]
  I0505 14:34:49.228201 21 service_latency.go:356] Created: latency-svc-j8wgz
  I0505 14:34:49.267537 21 service_latency.go:363] Got endpoints: latency-svc-2qj9s [745.541603ms]
  I0505 14:34:49.274790 21 service_latency.go:356] Created: latency-svc-pr9t4
  I0505 14:34:49.317418 21 service_latency.go:363] Got endpoints: latency-svc-tm6vt [744.337249ms]
  I0505 14:34:49.324117 21 service_latency.go:356] Created: latency-svc-ntdd2
  I0505 14:34:49.367997 21 service_latency.go:363] Got endpoints: latency-svc-c46zl [751.848562ms]
  I0505 14:34:49.378226 21 service_latency.go:356] Created: latency-svc-z2xfr
  I0505 14:34:49.415579 21 service_latency.go:363] Got endpoints: latency-svc-2dptn [745.900416ms]
  I0505 14:34:49.421649 21 service_latency.go:356] Created: latency-svc-2kr5z
  I0505 14:34:49.466081 21 service_latency.go:363] Got endpoints: latency-svc-wlkkb [746.766824ms]
  I0505 14:34:49.477035 21 service_latency.go:356] Created: latency-svc-h92q6
  I0505 14:34:49.520143 21 service_latency.go:363] Got endpoints: latency-svc-nslnh [753.168418ms]
  I0505 14:34:49.526297 21 service_latency.go:356] Created: latency-svc-j8zdj
  I0505 14:34:49.565291 21 service_latency.go:363] Got endpoints: latency-svc-46h7k [748.843537ms]
  I0505 14:34:49.572982 21 service_latency.go:356] Created: latency-svc-vmjq2
  I0505 14:34:49.616713 21 service_latency.go:363] Got endpoints: latency-svc-t8v49 [748.640348ms]
  I0505 14:34:49.624589 21 service_latency.go:356] Created: latency-svc-r2kdj
  I0505 14:34:49.669331 21 service_latency.go:363] Got endpoints: latency-svc-gc2dn [753.249053ms]
  I0505 14:34:49.678246 21 service_latency.go:356] Created: latency-svc-ljgj2
  I0505 14:34:49.719373 21 service_latency.go:363] Got endpoints: latency-svc-gbjrj [747.491241ms]
  I0505 14:34:49.724282 21 service_latency.go:356] Created: latency-svc-dx9tz
  I0505 14:34:49.769459 21 service_latency.go:363] Got endpoints: latency-svc-vtkw9 [751.696283ms]
  I0505 14:34:49.780103 21 service_latency.go:356] Created: latency-svc-w8sct
  I0505 14:34:49.818642 21 service_latency.go:363] Got endpoints: latency-svc-rbd5b [750.431056ms]
  I0505 14:34:49.825328 21 service_latency.go:356] Created: latency-svc-ldxb9
  I0505 14:34:49.866318 21 service_latency.go:363] Got endpoints: latency-svc-l56nh [750.740308ms]
  I0505 14:34:49.873900 21 service_latency.go:356] Created: latency-svc-j6hnz
  I0505 14:34:49.919504 21 service_latency.go:363] Got endpoints: latency-svc-npccl [753.277721ms]
  I0505 14:34:49.929834 21 service_latency.go:356] Created: latency-svc-7smhb
  I0505 14:34:49.968390 21 service_latency.go:363] Got endpoints: latency-svc-j8wgz [748.592523ms]
  I0505 14:34:49.979073 21 service_latency.go:356] Created: latency-svc-gc46b
  I0505 14:34:50.016467 21 service_latency.go:363] Got endpoints: latency-svc-pr9t4 [748.844778ms]
  I0505 14:34:50.026754 21 service_latency.go:356] Created: latency-svc-z8kwn
  I0505 14:34:50.072728 21 service_latency.go:363] Got endpoints: latency-svc-ntdd2 [755.163509ms]
  I0505 14:34:50.079704 21 service_latency.go:356] Created: latency-svc-d2g2d
  I0505 14:34:50.115379 21 service_latency.go:363] Got endpoints: latency-svc-z2xfr [747.269036ms]
  I0505 14:34:50.122182 21 service_latency.go:356] Created: latency-svc-6tlrf
  E0505 14:34:50.153807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:34:50.166303 21 service_latency.go:363] Got endpoints: latency-svc-2kr5z [750.679937ms]
  I0505 14:34:50.175755 21 service_latency.go:356] Created: latency-svc-vqnm7
  I0505 14:34:50.217459 21 service_latency.go:363] Got endpoints: latency-svc-h92q6 [751.298543ms]
  I0505 14:34:50.225660 21 service_latency.go:356] Created: latency-svc-vvzqf
  I0505 14:34:50.266987 21 service_latency.go:363] Got endpoints: latency-svc-j8zdj [746.676266ms]
  I0505 14:34:50.275812 21 service_latency.go:356] Created: latency-svc-c2qd8
  I0505 14:34:50.314063 21 service_latency.go:363] Got endpoints: latency-svc-vmjq2 [748.721049ms]
  I0505 14:34:50.322845 21 service_latency.go:356] Created: latency-svc-fpsxb
  I0505 14:34:50.368002 21 service_latency.go:363] Got endpoints: latency-svc-r2kdj [751.241245ms]
  I0505 14:34:50.374720 21 service_latency.go:356] Created: latency-svc-8xzjl
  I0505 14:34:50.415132 21 service_latency.go:363] Got endpoints: latency-svc-ljgj2 [745.707908ms]
  I0505 14:34:50.420541 21 service_latency.go:356] Created: latency-svc-k7zvq
  I0505 14:34:50.468270 21 service_latency.go:363] Got endpoints: latency-svc-dx9tz [748.830661ms]
  I0505 14:34:50.478323 21 service_latency.go:356] Created: latency-svc-xkmzr
  I0505 14:34:50.515446 21 service_latency.go:363] Got endpoints: latency-svc-w8sct [745.903637ms]
  I0505 14:34:50.521466 21 service_latency.go:356] Created: latency-svc-hrzgl
  I0505 14:34:50.565730 21 service_latency.go:363] Got endpoints: latency-svc-ldxb9 [746.958783ms]
  I0505 14:34:50.572655 21 service_latency.go:356] Created: latency-svc-lrrqb
  I0505 14:34:50.614471 21 service_latency.go:363] Got endpoints: latency-svc-j6hnz [748.094868ms]
  I0505 14:34:50.619474 21 service_latency.go:356] Created: latency-svc-rdrhr
  I0505 14:34:50.665949 21 service_latency.go:363] Got endpoints: latency-svc-7smhb [745.913343ms]
  I0505 14:34:50.672780 21 service_latency.go:356] Created: latency-svc-qtxd6
  I0505 14:34:50.724489 21 service_latency.go:363] Got endpoints: latency-svc-gc46b [753.215649ms]
  I0505 14:34:50.734328 21 service_latency.go:356] Created: latency-svc-fddzk
  I0505 14:34:50.769525 21 service_latency.go:363] Got endpoints: latency-svc-z8kwn [752.998851ms]
  I0505 14:34:50.781407 21 service_latency.go:356] Created: latency-svc-4sfv7
  I0505 14:34:50.814667 21 service_latency.go:363] Got endpoints: latency-svc-d2g2d [741.846299ms]
  I0505 14:34:50.821347 21 service_latency.go:356] Created: latency-svc-t7gl9
  I0505 14:34:50.867536 21 service_latency.go:363] Got endpoints: latency-svc-6tlrf [752.097186ms]
  I0505 14:34:50.880556 21 service_latency.go:356] Created: latency-svc-kb6cf
  I0505 14:34:50.917496 21 service_latency.go:363] Got endpoints: latency-svc-vqnm7 [751.112216ms]
  I0505 14:34:50.925629 21 service_latency.go:356] Created: latency-svc-9jz5p
  I0505 14:34:50.972111 21 service_latency.go:363] Got endpoints: latency-svc-vvzqf [754.517405ms]
  I0505 14:34:50.983476 21 service_latency.go:356] Created: latency-svc-6plrp
  I0505 14:34:51.013958 21 service_latency.go:363] Got endpoints: latency-svc-c2qd8 [746.885653ms]
  I0505 14:34:51.021876 21 service_latency.go:356] Created: latency-svc-4zk85
  I0505 14:34:51.064692 21 service_latency.go:363] Got endpoints: latency-svc-fpsxb [750.57522ms]
  I0505 14:34:51.073263 21 service_latency.go:356] Created: latency-svc-2z2d4
  I0505 14:34:51.118515 21 service_latency.go:363] Got endpoints: latency-svc-8xzjl [750.441264ms]
  I0505 14:34:51.127579 21 service_latency.go:356] Created: latency-svc-qhzr6
  E0505 14:34:51.156586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:34:51.166312 21 service_latency.go:363] Got endpoints: latency-svc-k7zvq [751.140959ms]
  I0505 14:34:51.178702 21 service_latency.go:356] Created: latency-svc-6kkt5
  I0505 14:34:51.216039 21 service_latency.go:363] Got endpoints: latency-svc-xkmzr [747.691837ms]
  I0505 14:34:51.224653 21 service_latency.go:356] Created: latency-svc-mqgnb
  I0505 14:34:51.267351 21 service_latency.go:363] Got endpoints: latency-svc-hrzgl [751.867675ms]
  I0505 14:34:51.276626 21 service_latency.go:356] Created: latency-svc-z4cjb
  I0505 14:34:51.317728 21 service_latency.go:363] Got endpoints: latency-svc-lrrqb [751.937586ms]
  I0505 14:34:51.338866 21 service_latency.go:356] Created: latency-svc-9dztw
  I0505 14:34:51.366810 21 service_latency.go:363] Got endpoints: latency-svc-rdrhr [752.30345ms]
  I0505 14:34:51.373318 21 service_latency.go:356] Created: latency-svc-zqlr5
  I0505 14:34:51.417141 21 service_latency.go:363] Got endpoints: latency-svc-qtxd6 [751.140934ms]
  I0505 14:34:51.422839 21 service_latency.go:356] Created: latency-svc-wg5ws
  I0505 14:34:51.470124 21 service_latency.go:363] Got endpoints: latency-svc-fddzk [744.871277ms]
  I0505 14:34:51.478638 21 service_latency.go:356] Created: latency-svc-rdzx2
  I0505 14:34:51.517301 21 service_latency.go:363] Got endpoints: latency-svc-4sfv7 [747.720667ms]
  I0505 14:34:51.527981 21 service_latency.go:356] Created: latency-svc-7r7xn
  I0505 14:34:51.569575 21 service_latency.go:363] Got endpoints: latency-svc-t7gl9 [754.863108ms]
  I0505 14:34:51.576602 21 service_latency.go:356] Created: latency-svc-nxglh
  I0505 14:34:51.614283 21 service_latency.go:363] Got endpoints: latency-svc-kb6cf [746.669915ms]
  I0505 14:34:51.619569 21 service_latency.go:356] Created: latency-svc-86w5c
  I0505 14:34:51.670184 21 service_latency.go:363] Got endpoints: latency-svc-9jz5p [752.570628ms]
  I0505 14:34:51.676883 21 service_latency.go:356] Created: latency-svc-vxd7p
  I0505 14:34:51.719369 21 service_latency.go:363] Got endpoints: latency-svc-6plrp [747.202556ms]
  I0505 14:34:51.733996 21 service_latency.go:356] Created: latency-svc-s7v76
  I0505 14:34:51.768108 21 service_latency.go:363] Got endpoints: latency-svc-4zk85 [753.990938ms]
  I0505 14:34:51.779445 21 service_latency.go:356] Created: latency-svc-bsngk
  I0505 14:34:51.821211 21 service_latency.go:363] Got endpoints: latency-svc-2z2d4 [756.364197ms]
  I0505 14:34:51.838632 21 service_latency.go:356] Created: latency-svc-msmqf
  I0505 14:34:51.869247 21 service_latency.go:363] Got endpoints: latency-svc-qhzr6 [750.654579ms]
  I0505 14:34:51.884256 21 service_latency.go:356] Created: latency-svc-p9288
  I0505 14:34:51.917743 21 service_latency.go:363] Got endpoints: latency-svc-6kkt5 [751.379287ms]
  I0505 14:34:51.935351 21 service_latency.go:356] Created: latency-svc-9twr9
  I0505 14:34:51.971398 21 service_latency.go:363] Got endpoints: latency-svc-mqgnb [754.625851ms]
  I0505 14:34:51.986222 21 service_latency.go:356] Created: latency-svc-244w6
  I0505 14:34:52.023364 21 service_latency.go:363] Got endpoints: latency-svc-z4cjb [755.957166ms]
  I0505 14:34:52.038705 21 service_latency.go:356] Created: latency-svc-wgxs2
  I0505 14:34:52.072017 21 service_latency.go:363] Got endpoints: latency-svc-9dztw [754.238475ms]
  I0505 14:34:52.093502 21 service_latency.go:356] Created: latency-svc-qnps6
  I0505 14:34:52.122992 21 service_latency.go:363] Got endpoints: latency-svc-zqlr5 [756.130786ms]
  I0505 14:34:52.140621 21 service_latency.go:356] Created: latency-svc-xqqwp
  E0505 14:34:52.159058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:34:52.176776 21 service_latency.go:363] Got endpoints: latency-svc-wg5ws [759.574165ms]
  I0505 14:34:52.198555 21 service_latency.go:356] Created: latency-svc-m6m76
  I0505 14:34:52.227522 21 service_latency.go:363] Got endpoints: latency-svc-rdzx2 [757.30351ms]
  I0505 14:34:52.247086 21 service_latency.go:356] Created: latency-svc-v6xxt
  I0505 14:34:52.268546 21 service_latency.go:363] Got endpoints: latency-svc-7r7xn [751.17139ms]
  I0505 14:34:52.280487 21 service_latency.go:356] Created: latency-svc-7pbwm
  I0505 14:34:52.320814 21 service_latency.go:363] Got endpoints: latency-svc-nxglh [751.181735ms]
  I0505 14:34:52.334422 21 service_latency.go:356] Created: latency-svc-j2hzv
  I0505 14:34:52.368407 21 service_latency.go:363] Got endpoints: latency-svc-86w5c [754.08267ms]
  I0505 14:34:52.377124 21 service_latency.go:356] Created: latency-svc-nk8cw
  I0505 14:34:52.415304 21 service_latency.go:363] Got endpoints: latency-svc-vxd7p [744.971084ms]
  I0505 14:34:52.422183 21 service_latency.go:356] Created: latency-svc-rh92t
  I0505 14:34:52.465486 21 service_latency.go:363] Got endpoints: latency-svc-s7v76 [746.041968ms]
  I0505 14:34:52.480545 21 service_latency.go:356] Created: latency-svc-fw4b9
  I0505 14:34:52.520139 21 service_latency.go:363] Got endpoints: latency-svc-bsngk [750.88108ms]
  I0505 14:34:52.530670 21 service_latency.go:356] Created: latency-svc-44gtd
  I0505 14:34:52.569696 21 service_latency.go:363] Got endpoints: latency-svc-msmqf [748.304901ms]
  I0505 14:34:52.582656 21 service_latency.go:356] Created: latency-svc-pwtsh
  I0505 14:34:52.619462 21 service_latency.go:363] Got endpoints: latency-svc-p9288 [750.11228ms]
  I0505 14:34:52.633561 21 service_latency.go:356] Created: latency-svc-vpt2n
  I0505 14:34:52.670539 21 service_latency.go:363] Got endpoints: latency-svc-9twr9 [752.737421ms]
  I0505 14:34:52.684524 21 service_latency.go:356] Created: latency-svc-26b4r
  I0505 14:34:52.716835 21 service_latency.go:363] Got endpoints: latency-svc-244w6 [745.323462ms]
  I0505 14:34:52.728426 21 service_latency.go:356] Created: latency-svc-nmwjk
  I0505 14:34:52.769393 21 service_latency.go:363] Got endpoints: latency-svc-wgxs2 [745.966279ms]
  I0505 14:34:52.786149 21 service_latency.go:356] Created: latency-svc-t6phb
  I0505 14:34:52.818905 21 service_latency.go:363] Got endpoints: latency-svc-qnps6 [746.800116ms]
  I0505 14:34:52.831647 21 service_latency.go:356] Created: latency-svc-hgnbk
  I0505 14:34:52.866438 21 service_latency.go:363] Got endpoints: latency-svc-xqqwp [743.355607ms]
  I0505 14:34:52.880984 21 service_latency.go:356] Created: latency-svc-92bmd
  I0505 14:34:52.917938 21 service_latency.go:363] Got endpoints: latency-svc-m6m76 [740.983234ms]
  I0505 14:34:52.931171 21 service_latency.go:356] Created: latency-svc-zplnr
  I0505 14:34:52.970346 21 service_latency.go:363] Got endpoints: latency-svc-v6xxt [741.143061ms]
  I0505 14:34:52.984899 21 service_latency.go:356] Created: latency-svc-qhp48
  I0505 14:34:53.018437 21 service_latency.go:363] Got endpoints: latency-svc-7pbwm [749.835418ms]
  I0505 14:34:53.033955 21 service_latency.go:356] Created: latency-svc-56pmb
  I0505 14:34:53.067077 21 service_latency.go:363] Got endpoints: latency-svc-j2hzv [746.108412ms]
  I0505 14:34:53.075523 21 service_latency.go:356] Created: latency-svc-5qt6j
  I0505 14:34:53.122115 21 service_latency.go:363] Got endpoints: latency-svc-nk8cw [753.664674ms]
  I0505 14:34:53.130568 21 service_latency.go:356] Created: latency-svc-rx59s
  E0505 14:34:53.159808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:34:53.164075 21 service_latency.go:363] Got endpoints: latency-svc-rh92t [748.382847ms]
  I0505 14:34:53.170045 21 service_latency.go:356] Created: latency-svc-dszl5
  I0505 14:34:53.215512 21 service_latency.go:363] Got endpoints: latency-svc-fw4b9 [749.912064ms]
  I0505 14:34:53.221214 21 service_latency.go:356] Created: latency-svc-m72mg
  I0505 14:34:53.263779 21 service_latency.go:363] Got endpoints: latency-svc-44gtd [743.502767ms]
  I0505 14:34:53.270185 21 service_latency.go:356] Created: latency-svc-6p9h2
  I0505 14:34:53.314242 21 service_latency.go:363] Got endpoints: latency-svc-pwtsh [744.475803ms]
  I0505 14:34:53.319477 21 service_latency.go:356] Created: latency-svc-fdd5v
  I0505 14:34:53.365051 21 service_latency.go:363] Got endpoints: latency-svc-vpt2n [745.462358ms]
  I0505 14:34:53.371422 21 service_latency.go:356] Created: latency-svc-4hmfv
  I0505 14:34:53.415091 21 service_latency.go:363] Got endpoints: latency-svc-26b4r [744.3914ms]
  I0505 14:34:53.422374 21 service_latency.go:356] Created: latency-svc-dxkn6
  I0505 14:34:53.466310 21 service_latency.go:363] Got endpoints: latency-svc-nmwjk [749.349987ms]
  I0505 14:34:53.472941 21 service_latency.go:356] Created: latency-svc-pw4bd
  I0505 14:34:53.518675 21 service_latency.go:363] Got endpoints: latency-svc-t6phb [749.214257ms]
  I0505 14:34:53.524243 21 service_latency.go:356] Created: latency-svc-lrqzf
  I0505 14:34:53.567531 21 service_latency.go:363] Got endpoints: latency-svc-hgnbk [748.549355ms]
  I0505 14:34:53.575701 21 service_latency.go:356] Created: latency-svc-tsblk
  I0505 14:34:53.618681 21 service_latency.go:363] Got endpoints: latency-svc-92bmd [752.182649ms]
  I0505 14:34:53.626291 21 service_latency.go:356] Created: latency-svc-ljggv
  I0505 14:34:53.672107 21 service_latency.go:363] Got endpoints: latency-svc-zplnr [753.750048ms]
  I0505 14:34:53.680135 21 service_latency.go:356] Created: latency-svc-fh2qc
  I0505 14:34:53.718208 21 service_latency.go:363] Got endpoints: latency-svc-qhp48 [747.639249ms]
  I0505 14:34:53.724816 21 service_latency.go:356] Created: latency-svc-9p4kr
  I0505 14:34:53.770726 21 service_latency.go:363] Got endpoints: latency-svc-56pmb [752.231535ms]
  I0505 14:34:53.778810 21 service_latency.go:356] Created: latency-svc-ljn4s
  I0505 14:34:53.817875 21 service_latency.go:363] Got endpoints: latency-svc-5qt6j [750.725976ms]
  I0505 14:34:53.825972 21 service_latency.go:356] Created: latency-svc-wsbvk
  I0505 14:34:53.868824 21 service_latency.go:363] Got endpoints: latency-svc-rx59s [746.578386ms]
  I0505 14:34:53.876480 21 service_latency.go:356] Created: latency-svc-g84jt
  I0505 14:34:53.920692 21 service_latency.go:363] Got endpoints: latency-svc-dszl5 [756.437972ms]
  I0505 14:34:53.926797 21 service_latency.go:356] Created: latency-svc-nghh4
  I0505 14:34:53.965761 21 service_latency.go:363] Got endpoints: latency-svc-m72mg [750.147641ms]
  I0505 14:34:53.971597 21 service_latency.go:356] Created: latency-svc-n2wvb
  I0505 14:34:54.019386 21 service_latency.go:363] Got endpoints: latency-svc-6p9h2 [755.556516ms]
  I0505 14:34:54.035235 21 service_latency.go:356] Created: latency-svc-cgwvk
  I0505 14:34:54.064954 21 service_latency.go:363] Got endpoints: latency-svc-fdd5v [750.537298ms]
  I0505 14:34:54.069862 21 service_latency.go:356] Created: latency-svc-tmgw8
  I0505 14:34:54.118929 21 service_latency.go:363] Got endpoints: latency-svc-4hmfv [753.841256ms]
  I0505 14:34:54.125482 21 service_latency.go:356] Created: latency-svc-cghjk
  E0505 14:34:54.160011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:34:54.165711 21 service_latency.go:363] Got endpoints: latency-svc-dxkn6 [750.578223ms]
  I0505 14:34:54.172963 21 service_latency.go:356] Created: latency-svc-b7rq4
  I0505 14:34:54.219362 21 service_latency.go:363] Got endpoints: latency-svc-pw4bd [753.016323ms]
  I0505 14:34:54.229753 21 service_latency.go:356] Created: latency-svc-b8n49
  I0505 14:34:54.269158 21 service_latency.go:363] Got endpoints: latency-svc-lrqzf [750.406553ms]
  I0505 14:34:54.275000 21 service_latency.go:356] Created: latency-svc-bw2vp
  I0505 14:34:54.314234 21 service_latency.go:363] Got endpoints: latency-svc-tsblk [746.640841ms]
  I0505 14:34:54.320651 21 service_latency.go:356] Created: latency-svc-n4z84
  I0505 14:34:54.368680 21 service_latency.go:363] Got endpoints: latency-svc-ljggv [749.441925ms]
  I0505 14:34:54.375835 21 service_latency.go:356] Created: latency-svc-7j8jm
  I0505 14:34:54.414633 21 service_latency.go:363] Got endpoints: latency-svc-fh2qc [742.45321ms]
  I0505 14:34:54.423433 21 service_latency.go:356] Created: latency-svc-wlnrb
  I0505 14:34:54.464786 21 service_latency.go:363] Got endpoints: latency-svc-9p4kr [746.283088ms]
  I0505 14:34:54.469408 21 service_latency.go:356] Created: latency-svc-9vmrd
  I0505 14:34:54.520739 21 service_latency.go:363] Got endpoints: latency-svc-ljn4s [749.848915ms]
  I0505 14:34:54.527800 21 service_latency.go:356] Created: latency-svc-dpsl6
  I0505 14:34:54.569662 21 service_latency.go:363] Got endpoints: latency-svc-wsbvk [751.690153ms]
  I0505 14:34:54.575451 21 service_latency.go:356] Created: latency-svc-f6gzh
  I0505 14:34:54.615404 21 service_latency.go:363] Got endpoints: latency-svc-g84jt [746.516852ms]
  I0505 14:34:54.622479 21 service_latency.go:356] Created: latency-svc-trqff
  I0505 14:34:54.667763 21 service_latency.go:363] Got endpoints: latency-svc-nghh4 [746.99673ms]
  I0505 14:34:54.679456 21 service_latency.go:356] Created: latency-svc-z8n7p
  I0505 14:34:54.718109 21 service_latency.go:363] Got endpoints: latency-svc-n2wvb [752.169061ms]
  I0505 14:34:54.726216 21 service_latency.go:356] Created: latency-svc-svjxt
  I0505 14:34:54.765154 21 service_latency.go:363] Got endpoints: latency-svc-cgwvk [745.435658ms]
  I0505 14:34:54.806383 21 service_latency.go:356] Created: latency-svc-ml4wp
  I0505 14:34:54.814774 21 service_latency.go:363] Got endpoints: latency-svc-tmgw8 [749.791816ms]
  I0505 14:34:54.821361 21 service_latency.go:356] Created: latency-svc-4bqwm
  I0505 14:34:54.863588 21 service_latency.go:363] Got endpoints: latency-svc-cghjk [744.590613ms]
  I0505 14:34:54.870765 21 service_latency.go:356] Created: latency-svc-lv7s2
  I0505 14:34:54.916537 21 service_latency.go:363] Got endpoints: latency-svc-b7rq4 [750.778817ms]
  I0505 14:34:54.926099 21 service_latency.go:356] Created: latency-svc-dqf75
  I0505 14:34:54.965065 21 service_latency.go:363] Got endpoints: latency-svc-b8n49 [744.912262ms]
  I0505 14:34:54.971804 21 service_latency.go:356] Created: latency-svc-s4nls
  I0505 14:34:55.013788 21 service_latency.go:363] Got endpoints: latency-svc-bw2vp [744.562515ms]
  I0505 14:34:55.021199 21 service_latency.go:356] Created: latency-svc-qn5rj
  I0505 14:34:55.065564 21 service_latency.go:363] Got endpoints: latency-svc-n4z84 [751.295095ms]
  I0505 14:34:55.070209 21 service_latency.go:356] Created: latency-svc-6ksnv
  I0505 14:34:55.114849 21 service_latency.go:363] Got endpoints: latency-svc-7j8jm [746.081137ms]
  I0505 14:34:55.119099 21 service_latency.go:356] Created: latency-svc-dpsnv
  E0505 14:34:55.160152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:34:55.168797 21 service_latency.go:363] Got endpoints: latency-svc-wlnrb [754.118851ms]
  I0505 14:34:55.174587 21 service_latency.go:356] Created: latency-svc-hr8x7
  I0505 14:34:55.217494 21 service_latency.go:363] Got endpoints: latency-svc-9vmrd [752.624578ms]
  I0505 14:34:55.223660 21 service_latency.go:356] Created: latency-svc-ckz9n
  I0505 14:34:55.270608 21 service_latency.go:363] Got endpoints: latency-svc-dpsl6 [749.625391ms]
  I0505 14:34:55.277119 21 service_latency.go:356] Created: latency-svc-4vd2v
  I0505 14:34:55.322167 21 service_latency.go:363] Got endpoints: latency-svc-f6gzh [752.33729ms]
  I0505 14:34:55.328660 21 service_latency.go:356] Created: latency-svc-d87cs
  I0505 14:34:55.364603 21 service_latency.go:363] Got endpoints: latency-svc-trqff [748.989863ms]
  I0505 14:34:55.369327 21 service_latency.go:356] Created: latency-svc-vm742
  I0505 14:34:55.415979 21 service_latency.go:363] Got endpoints: latency-svc-z8n7p [748.150496ms]
  I0505 14:34:55.425580 21 service_latency.go:356] Created: latency-svc-8vdv6
  I0505 14:34:55.473451 21 service_latency.go:363] Got endpoints: latency-svc-svjxt [755.176963ms]
  I0505 14:34:55.479339 21 service_latency.go:356] Created: latency-svc-k4htx
  I0505 14:34:55.519637 21 service_latency.go:363] Got endpoints: latency-svc-ml4wp [754.434418ms]
  I0505 14:34:55.527805 21 service_latency.go:356] Created: latency-svc-m4kk4
  I0505 14:34:55.567216 21 service_latency.go:363] Got endpoints: latency-svc-4bqwm [752.402053ms]
  I0505 14:34:55.575423 21 service_latency.go:356] Created: latency-svc-p2gtt
  I0505 14:34:55.615389 21 service_latency.go:363] Got endpoints: latency-svc-lv7s2 [751.53746ms]
  I0505 14:34:55.622820 21 service_latency.go:356] Created: latency-svc-dgsxp
  I0505 14:34:55.668196 21 service_latency.go:363] Got endpoints: latency-svc-dqf75 [751.587736ms]
  I0505 14:34:55.674896 21 service_latency.go:356] Created: latency-svc-8ck7s
  I0505 14:34:55.716727 21 service_latency.go:363] Got endpoints: latency-svc-s4nls [751.53368ms]
  I0505 14:34:55.724811 21 service_latency.go:356] Created: latency-svc-2lxcl
  I0505 14:34:55.772967 21 service_latency.go:363] Got endpoints: latency-svc-qn5rj [759.112914ms]
  I0505 14:34:55.783564 21 service_latency.go:356] Created: latency-svc-c22l8
  I0505 14:34:55.817164 21 service_latency.go:363] Got endpoints: latency-svc-6ksnv [751.458175ms]
  I0505 14:34:55.823899 21 service_latency.go:356] Created: latency-svc-9jsc2
  I0505 14:34:55.870155 21 service_latency.go:363] Got endpoints: latency-svc-dpsnv [755.105519ms]
  I0505 14:34:55.921121 21 service_latency.go:363] Got endpoints: latency-svc-hr8x7 [752.22328ms]
  I0505 14:34:55.966324 21 service_latency.go:363] Got endpoints: latency-svc-ckz9n [748.76862ms]
  I0505 14:34:56.020354 21 service_latency.go:363] Got endpoints: latency-svc-4vd2v [749.666328ms]
  I0505 14:34:56.063676 21 service_latency.go:363] Got endpoints: latency-svc-d87cs [741.318637ms]
  I0505 14:34:56.115969 21 service_latency.go:363] Got endpoints: latency-svc-vm742 [751.334282ms]
  E0505 14:34:56.161978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:34:56.169932 21 service_latency.go:363] Got endpoints: latency-svc-8vdv6 [753.595908ms]
  I0505 14:34:56.219652 21 service_latency.go:363] Got endpoints: latency-svc-k4htx [746.125424ms]
  I0505 14:34:56.271511 21 service_latency.go:363] Got endpoints: latency-svc-m4kk4 [751.034431ms]
  I0505 14:34:56.319199 21 service_latency.go:363] Got endpoints: latency-svc-p2gtt [751.892346ms]
  I0505 14:34:56.365295 21 service_latency.go:363] Got endpoints: latency-svc-dgsxp [749.859095ms]
  I0505 14:34:56.415008 21 service_latency.go:363] Got endpoints: latency-svc-8ck7s [746.673345ms]
  I0505 14:34:56.471015 21 service_latency.go:363] Got endpoints: latency-svc-2lxcl [754.229765ms]
  I0505 14:34:56.520514 21 service_latency.go:363] Got endpoints: latency-svc-c22l8 [747.455204ms]
  I0505 14:34:56.567747 21 service_latency.go:363] Got endpoints: latency-svc-9jsc2 [749.894202ms]
  I0505 14:34:56.567912 21 service_latency.go:114] Latencies: [24.116742ms 29.158276ms 44.705936ms 56.933444ms 65.191882ms 75.748838ms 88.081117ms 103.307877ms 109.292915ms 115.720646ms 128.130194ms 139.608072ms 148.765332ms 148.92876ms 151.809885ms 153.385809ms 156.283152ms 158.574824ms 158.727467ms 160.135521ms 160.248564ms 160.789445ms 160.981858ms 160.987827ms 161.101296ms 161.43284ms 161.542758ms 163.303027ms 163.426995ms 165.829657ms 166.722681ms 166.918558ms 167.648107ms 172.052079ms 172.854219ms 177.305462ms 183.475594ms 197.592398ms 226.099895ms 265.371173ms 301.507268ms 337.54148ms 383.236974ms 414.360098ms 461.166621ms 494.16065ms 534.256744ms 580.704362ms 615.543566ms 642.198162ms 681.554526ms 722.213748ms 740.983234ms 741.143061ms 741.318637ms 741.846299ms 742.45321ms 743.355607ms 743.502767ms 744.337249ms 744.3914ms 744.475803ms 744.562515ms 744.590613ms 744.799062ms 744.871277ms 744.912262ms 744.971084ms 745.323462ms 745.435658ms 745.462358ms 745.541603ms 745.707908ms 745.900416ms 745.903637ms 745.913343ms 745.966279ms 746.041968ms 746.081137ms 746.108412ms 746.125424ms 746.283088ms 746.516852ms 746.578386ms 746.640841ms 746.669915ms 746.673345ms 746.676266ms 746.766824ms 746.800116ms 746.885653ms 746.958783ms 746.99673ms 747.202556ms 747.269036ms 747.455204ms 747.491241ms 747.639249ms 747.691837ms 747.720667ms 748.094868ms 748.150496ms 748.304901ms 748.382847ms 748.549355ms 748.592523ms 748.640348ms 748.721049ms 748.76862ms 748.830661ms 748.843537ms 748.844778ms 748.989863ms 749.214257ms 749.349987ms 749.441925ms 749.625391ms 749.666328ms 749.791816ms 749.835418ms 749.848915ms 749.859095ms 749.894202ms 749.912064ms 750.11228ms 750.147641ms 750.406553ms 750.431056ms 750.441264ms 750.537298ms 750.57522ms 750.578223ms 750.654579ms 750.679937ms 750.725976ms 750.740308ms 750.778817ms 750.88108ms 751.034431ms 751.112216ms 751.140934ms 751.140959ms 751.17139ms 751.181735ms 751.241245ms 751.295095ms 751.298543ms 751.334282ms 751.379287ms 751.458175ms 751.53368ms 751.53746ms 751.587736ms 751.690153ms 751.696283ms 751.848562ms 751.867675ms 751.892346ms 751.937586ms 752.097186ms 752.169061ms 752.182649ms 752.22328ms 752.231535ms 752.30345ms 752.33729ms 752.402053ms 752.570628ms 752.624578ms 752.737421ms 752.998851ms 753.016323ms 753.168418ms 753.215649ms 753.249053ms 753.277721ms 753.595908ms 753.664674ms 753.750048ms 753.841256ms 753.990938ms 754.08267ms 754.118851ms 754.229765ms 754.238475ms 754.434418ms 754.517405ms 754.625851ms 754.863108ms 755.105519ms 755.163509ms 755.176963ms 755.556516ms 755.957166ms 756.130786ms 756.364197ms 756.437972ms 757.30351ms 759.112914ms 759.574165ms]
  I0505 14:34:56.567938 21 service_latency.go:118] 50 %ile: 748.094868ms
  I0505 14:34:56.567954 21 service_latency.go:119] 90 %ile: 753.990938ms
  I0505 14:34:56.567972 21 service_latency.go:120] 99 %ile: 759.112914ms
  I0505 14:34:56.567987 21 service_latency.go:121] Total sample count: 200
  I0505 14:34:56.568089 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-7557" for this suite. @ 05/05/24 14:34:56.574
• [9.760 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 05/05/24 14:34:56.578
  I0505 14:34:56.578600 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename replicaset @ 05/05/24 14:34:56.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:34:56.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:34:56.591
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 05/05/24 14:34:56.592
  I0505 14:34:56.598217 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0505 14:34:57.162736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:58.163685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:34:59.164742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:00.165501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:01.166152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:35:01.600551 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/05/24 14:35:01.6
  STEP: getting scale subresource @ 05/05/24 14:35:01.6
  STEP: updating a scale subresource @ 05/05/24 14:35:01.602
  STEP: verifying the replicaset Spec.Replicas was modified @ 05/05/24 14:35:01.607
  STEP: Patch a scale subresource @ 05/05/24 14:35:01.613
  I0505 14:35:01.623767 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4143" for this suite. @ 05/05/24 14:35:01.637
• [5.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 05/05/24 14:35:01.651
  I0505 14:35:01.651440 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/05/24 14:35:01.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:35:01.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:35:01.686
  STEP: creating a target pod @ 05/05/24 14:35:01.69
  E0505 14:35:02.166922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:03.167173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 05/05/24 14:35:03.743
  E0505 14:35:04.167357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:05.167899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 05/05/24 14:35:05.777
  I0505 14:35:05.777090 21 exec_util.go:55] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-47 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 14:35:05.777115 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:35:05.777716 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 14:35:05.777779 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/ephemeral-containers-test-47/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0505 14:35:05.833821 21 exec_util.go:106] Exec stderr: ""
  I0505 14:35:05.843128 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-47" for this suite. @ 05/05/24 14:35:05.846
• [4.202 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 05/05/24 14:35:05.854
  I0505 14:35:05.854098 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename crd-webhook @ 05/05/24 14:35:05.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:35:05.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:35:05.886
  STEP: Setting up server cert @ 05/05/24 14:35:05.889
  E0505 14:35:06.169014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/05/24 14:35:06.332
  STEP: Deploying the custom resource conversion webhook pod @ 05/05/24 14:35:06.349
  STEP: Wait for the deployment to be ready @ 05/05/24 14:35:06.361
  I0505 14:35:06.370086 21 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0505 14:35:07.170691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:08.171632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/05/24 14:35:08.398
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 14:35:08.409
  E0505 14:35:09.173135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:35:09.409701 21 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0505 14:35:09.413029 21 util.go:430] Unexpected error trying to get Endpoints for e2e-test-crd-conversion-webhook : endpoints "e2e-test-crd-conversion-webhook" not found
  E0505 14:35:10.173458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:35:10.409966 21 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0505 14:35:10.414563 21 util.go:430] Unexpected error trying to get Endpoints for e2e-test-crd-conversion-webhook : endpoints "e2e-test-crd-conversion-webhook" not found
  E0505 14:35:11.173894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:35:11.410223 21 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0505 14:35:11.414818 21 util.go:430] Unexpected error trying to get Endpoints for e2e-test-crd-conversion-webhook : endpoints "e2e-test-crd-conversion-webhook" not found
  E0505 14:35:12.174708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:35:12.410294 21 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0505 14:35:12.415788 21 util.go:430] Unexpected error trying to get Endpoints for e2e-test-crd-conversion-webhook : endpoints "e2e-test-crd-conversion-webhook" not found
  E0505 14:35:13.175047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:35:13.410448 21 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0505 14:35:13.418180 21 util.go:430] Unexpected error trying to get Endpoints for e2e-test-crd-conversion-webhook : endpoints "e2e-test-crd-conversion-webhook" not found
  E0505 14:35:14.175992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:35:14.410752 21 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0505 14:35:14.414039 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  E0505 14:35:15.176653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:16.177301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 05/05/24 14:35:16.968
  STEP: v2 custom resource should be converted @ 05/05/24 14:35:16.974
  E0505 14:35:17.178322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:35:17.560074 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-149" for this suite. @ 05/05/24 14:35:17.565
• [11.722 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 05/05/24 14:35:17.575
  I0505 14:35:17.575483 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/05/24 14:35:17.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:35:17.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:35:17.617
  I0505 14:35:17.624096 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  E0505 14:35:18.179224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/05/24 14:35:18.93
  I0505 14:35:18.930064 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-6440 --namespace=crd-publish-openapi-6440 create -f -'
  I0505 14:35:19.021055 21 builder.go:146] stderr: ""
  I0505 14:35:19.021167 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5535-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0505 14:35:19.021374 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-6440 --namespace=crd-publish-openapi-6440 delete e2e-test-crd-publish-openapi-5535-crds test-cr'
  I0505 14:35:19.101082 21 builder.go:146] stderr: ""
  I0505 14:35:19.101216 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5535-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0505 14:35:19.101534 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-6440 --namespace=crd-publish-openapi-6440 apply -f -'
  E0505 14:35:19.179911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:35:19.201376 21 builder.go:146] stderr: ""
  I0505 14:35:19.201437 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5535-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0505 14:35:19.201499 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-6440 --namespace=crd-publish-openapi-6440 delete e2e-test-crd-publish-openapi-5535-crds test-cr'
  I0505 14:35:19.290590 21 builder.go:146] stderr: ""
  I0505 14:35:19.290664 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5535-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 05/05/24 14:35:19.29
  I0505 14:35:19.290835 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-6440 explain e2e-test-crd-publish-openapi-5535-crds'
  I0505 14:35:19.375931 21 builder.go:146] stderr: ""
  I0505 14:35:19.375993 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-5535-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0505 14:35:20.181151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:35:20.665009 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6440" for this suite. @ 05/05/24 14:35:20.668
• [3.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 05/05/24 14:35:20.682
  I0505 14:35:20.682196 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename pods @ 05/05/24 14:35:20.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:35:20.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:35:20.693
  STEP: creating the pod @ 05/05/24 14:35:20.695
  STEP: setting up watch @ 05/05/24 14:35:20.695
  STEP: submitting the pod to kubernetes @ 05/05/24 14:35:20.797
  STEP: verifying the pod is in kubernetes @ 05/05/24 14:35:20.806
  STEP: verifying pod creation was observed @ 05/05/24 14:35:20.811
  E0505 14:35:21.183217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:22.184075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 05/05/24 14:35:22.827
  STEP: verifying pod deletion was observed @ 05/05/24 14:35:22.834
  E0505 14:35:23.185137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:24.185229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:25.186570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:35:25.586450 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9594" for this suite. @ 05/05/24 14:35:25.593
• [4.921 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 05/05/24 14:35:25.604
  I0505 14:35:25.604384 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 14:35:25.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:35:25.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:35:25.629
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/05/24 14:35:25.633
  E0505 14:35:26.186712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:27.187963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:28.188630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:29.188831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 14:35:29.65
  I0505 14:35:29.652976 21 output.go:196] Trying to get logs from node worker00 pod pod-dd40a756-12c4-4633-887f-51c0433cc511 container test-container: <nil>
  STEP: delete the pod @ 05/05/24 14:35:29.656
  I0505 14:35:29.662577 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-176" for this suite. @ 05/05/24 14:35:29.664
• [4.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 05/05/24 14:35:29.667
  I0505 14:35:29.667547 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename deployment @ 05/05/24 14:35:29.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:35:29.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:35:29.678
  STEP: creating a Deployment @ 05/05/24 14:35:29.681
  STEP: waiting for Deployment to be created @ 05/05/24 14:35:29.684
  STEP: waiting for all Replicas to be Ready @ 05/05/24 14:35:29.686
  I0505 14:35:29.686853 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0505 14:35:29.686875 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0505 14:35:29.691559 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0505 14:35:29.691582 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0505 14:35:29.704591 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0505 14:35:29.704616 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0505 14:35:29.716874 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0505 14:35:29.716925 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0505 14:35:30.188857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:35:30.569112 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0505 14:35:30.569155 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0505 14:35:30.572572 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 05/05/24 14:35:30.572
  I0505 14:35:30.576144 21 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 05/05/24 14:35:30.576
  I0505 14:35:30.576789 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 0
  I0505 14:35:30.576812 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 0
  I0505 14:35:30.576818 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 0
  I0505 14:35:30.576824 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 0
  I0505 14:35:30.576943 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 0
  I0505 14:35:30.576988 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 0
  I0505 14:35:30.577001 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 0
  I0505 14:35:30.577008 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 0
  I0505 14:35:30.577103 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 1
  I0505 14:35:30.577110 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 1
  I0505 14:35:30.577225 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 2
  I0505 14:35:30.577231 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 2
  I0505 14:35:30.577237 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 2
  I0505 14:35:30.577243 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 2
  I0505 14:35:30.584724 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 2
  I0505 14:35:30.584749 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 2
  I0505 14:35:30.597120 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 2
  I0505 14:35:30.597201 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 2
  I0505 14:35:30.607237 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 1
  I0505 14:35:30.607262 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 1
  I0505 14:35:30.613234 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 1
  I0505 14:35:30.613294 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 1
  E0505 14:35:31.190458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:35:31.595718 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 2
  I0505 14:35:31.595755 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 2
  I0505 14:35:31.606588 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 1
  STEP: listing Deployments @ 05/05/24 14:35:31.606
  I0505 14:35:31.608726 21 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 05/05/24 14:35:31.608
  I0505 14:35:31.614836 21 deployment.go:360] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 05/05/24 14:35:31.614
  I0505 14:35:31.618646 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0505 14:35:31.624853 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0505 14:35:31.639010 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0505 14:35:31.645460 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0505 14:35:31.652270 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0505 14:35:32.190413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:35:32.569277 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0505 14:35:32.592667 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0505 14:35:32.616166 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0505 14:35:32.628737 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0505 14:35:33.192620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:35:33.612493 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 05/05/24 14:35:33.622
  STEP: fetching the DeploymentStatus @ 05/05/24 14:35:33.629
  I0505 14:35:33.633594 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 1
  I0505 14:35:33.633636 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 1
  I0505 14:35:33.633645 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 1
  I0505 14:35:33.633703 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 1
  I0505 14:35:33.633710 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 1
  I0505 14:35:33.633718 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 2
  I0505 14:35:33.633764 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 3
  I0505 14:35:33.633797 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 2
  I0505 14:35:33.633824 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 2
  I0505 14:35:33.634212 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8928 with ReadyReplicas 3
  STEP: deleting the Deployment @ 05/05/24 14:35:33.635
  I0505 14:35:33.641860 21 deployment.go:475] observed event type MODIFIED
  I0505 14:35:33.642694 21 deployment.go:475] observed event type MODIFIED
  I0505 14:35:33.642715 21 deployment.go:475] observed event type MODIFIED
  I0505 14:35:33.642891 21 deployment.go:475] observed event type MODIFIED
  I0505 14:35:33.642915 21 deployment.go:475] observed event type MODIFIED
  I0505 14:35:33.642961 21 deployment.go:475] observed event type MODIFIED
  I0505 14:35:33.643094 21 deployment.go:475] observed event type MODIFIED
  I0505 14:35:33.643314 21 deployment.go:475] observed event type MODIFIED
  I0505 14:35:33.643326 21 deployment.go:475] observed event type MODIFIED
  I0505 14:35:33.644116 21 deployment.go:475] observed event type MODIFIED
  I0505 14:35:33.644138 21 deployment.go:475] observed event type MODIFIED
  I0505 14:35:33.644497 21 deployment.go:475] observed event type MODIFIED
  I0505 14:35:33.644583 21 deployment.go:475] observed event type MODIFIED
  I0505 14:35:33.651310 21 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0505 14:35:33.655112 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8928" for this suite. @ 05/05/24 14:35:33.658
• [4.000 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 05/05/24 14:35:33.667
  I0505 14:35:33.667705 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 14:35:33.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:35:33.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:35:33.679
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/05/24 14:35:33.68
  E0505 14:35:34.193170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:35.193980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:36.194820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:37.195576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 14:35:37.696
  I0505 14:35:37.698805 21 output.go:196] Trying to get logs from node worker00 pod pod-d9b79853-a810-4593-93f2-4876e3ff18b2 container test-container: <nil>
  STEP: delete the pod @ 05/05/24 14:35:37.701
  I0505 14:35:37.707790 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-312" for this suite. @ 05/05/24 14:35:37.712
• [4.049 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 05/05/24 14:35:37.717
  I0505 14:35:37.717080 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename secrets @ 05/05/24 14:35:37.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:35:37.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:35:37.726
  I0505 14:35:37.741121 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8562" for this suite. @ 05/05/24 14:35:37.742
• [0.028 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 05/05/24 14:35:37.744
  I0505 14:35:37.744859 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename configmap @ 05/05/24 14:35:37.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:35:37.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:35:37.752
  STEP: Creating configMap with name cm-test-opt-del-38112c13-d126-448a-8550-a409cf7d8bb6 @ 05/05/24 14:35:37.756
  STEP: Creating configMap with name cm-test-opt-upd-34909633-749d-4315-aadc-1b8519165af7 @ 05/05/24 14:35:37.757
  STEP: Creating the pod @ 05/05/24 14:35:37.76
  E0505 14:35:38.195632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:39.195889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-38112c13-d126-448a-8550-a409cf7d8bb6 @ 05/05/24 14:35:39.784
  STEP: Updating configmap cm-test-opt-upd-34909633-749d-4315-aadc-1b8519165af7 @ 05/05/24 14:35:39.787
  STEP: Creating configMap with name cm-test-opt-create-3ce98598-9f72-4e71-828e-e7aea7b4ec52 @ 05/05/24 14:35:39.79
  STEP: waiting to observe update in volume @ 05/05/24 14:35:39.793
  E0505 14:35:40.197269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:41.198604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:35:41.817427 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4176" for this suite. @ 05/05/24 14:35:41.821
• [4.091 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 05/05/24 14:35:41.837
  I0505 14:35:41.837188 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename secrets @ 05/05/24 14:35:41.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:35:41.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:35:41.849
  STEP: Creating secret with name secret-test-b36ceb1c-41da-48a4-ac4e-fac9e3ed71f6 @ 05/05/24 14:35:41.851
  STEP: Creating a pod to test consume secrets @ 05/05/24 14:35:41.854
  E0505 14:35:42.198574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:43.199764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:44.200279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:45.200732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 14:35:45.873
  I0505 14:35:45.877987 21 output.go:196] Trying to get logs from node worker00 pod pod-secrets-265aa68e-2459-4348-8dab-0be670093282 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 14:35:45.884
  I0505 14:35:45.911582 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5361" for this suite. @ 05/05/24 14:35:45.916
• [4.087 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 05/05/24 14:35:45.924
  I0505 14:35:45.924817 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename cronjob @ 05/05/24 14:35:45.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:35:45.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:35:45.957
  STEP: Creating a cronjob @ 05/05/24 14:35:45.964
  STEP: creating @ 05/05/24 14:35:45.964
  STEP: getting @ 05/05/24 14:35:45.975
  STEP: listing @ 05/05/24 14:35:45.978
  STEP: watching @ 05/05/24 14:35:45.982
  I0505 14:35:45.982137 21 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 05/05/24 14:35:45.983
  STEP: cluster-wide watching @ 05/05/24 14:35:45.988
  I0505 14:35:45.988950 21 cronjob.go:382] starting watch
  STEP: patching @ 05/05/24 14:35:45.991
  STEP: updating @ 05/05/24 14:35:45.999
  I0505 14:35:46.012820 21 cronjob.go:406] waiting for watch events with expected annotations
  I0505 14:35:46.013091 21 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 05/05/24 14:35:46.013
  STEP: updating /status @ 05/05/24 14:35:46.023
  STEP: get /status @ 05/05/24 14:35:46.032
  STEP: deleting @ 05/05/24 14:35:46.037
  STEP: deleting a collection @ 05/05/24 14:35:46.053
  I0505 14:35:46.063004 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1281" for this suite. @ 05/05/24 14:35:46.067
• [0.149 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 05/05/24 14:35:46.074
  I0505 14:35:46.074883 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 14:35:46.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:35:46.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:35:46.096
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 14:35:46.1
  E0505 14:35:46.202100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:47.203539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:48.204877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:49.205230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 14:35:50.133
  I0505 14:35:50.138029 21 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-9d896eac-ec51-4353-ba8d-a27da7c7210a container client-container: <nil>
  STEP: delete the pod @ 05/05/24 14:35:50.145
  I0505 14:35:50.167897 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-575" for this suite. @ 05/05/24 14:35:50.17
• [4.099 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 05/05/24 14:35:50.174
  I0505 14:35:50.174736 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename field-validation @ 05/05/24 14:35:50.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:35:50.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:35:50.191
  STEP: apply creating a deployment @ 05/05/24 14:35:50.194
  I0505 14:35:50.203970 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0505 14:35:50.206124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "field-validation-1292" for this suite. @ 05/05/24 14:35:50.208
• [0.040 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 05/05/24 14:35:50.214
  I0505 14:35:50.214621 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename webhook @ 05/05/24 14:35:50.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:35:50.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:35:50.234
  STEP: Setting up server cert @ 05/05/24 14:35:50.254
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 14:35:50.432
  STEP: Deploying the webhook pod @ 05/05/24 14:35:50.448
  STEP: Wait for the deployment to be ready @ 05/05/24 14:35:50.457
  I0505 14:35:50.465295 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0505 14:35:51.206165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:52.206675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/05/24 14:35:52.477
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 14:35:52.498
  E0505 14:35:53.207659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:35:53.498623 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0505 14:35:53.506282 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9829-crds.webhook.example.com via the AdmissionRegistration API @ 05/05/24 14:35:54.032
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/05/24 14:35:54.064
  E0505 14:35:54.208314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:55.209275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:56.210416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:35:56.676416 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5441" for this suite. @ 05/05/24 14:35:56.682
  STEP: Destroying namespace "webhook-markers-9442" for this suite. @ 05/05/24 14:35:56.709
• [6.508 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 05/05/24 14:35:56.723
  I0505 14:35:56.723232 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename security-context-test @ 05/05/24 14:35:56.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:35:56.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:35:56.744
  E0505 14:35:57.210587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:58.210860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:35:59.212251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:00.213144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:36:00.770456 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9873" for this suite. @ 05/05/24 14:36:00.775
• [4.067 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 05/05/24 14:36:00.79
  I0505 14:36:00.790902 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 14:36:00.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:36:00.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:36:00.814
  STEP: creating Agnhost RC @ 05/05/24 14:36:00.818
  I0505 14:36:00.818409 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-7671 create -f -'
  I0505 14:36:00.977580 21 builder.go:146] stderr: ""
  I0505 14:36:00.977634 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/05/24 14:36:00.977
  E0505 14:36:01.215071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:36:01.988164 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0505 14:36:01.988212 21 framework.go:733] Found 0 / 1
  E0505 14:36:02.215803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:36:02.985743 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0505 14:36:02.985808 21 framework.go:733] Found 1 / 1
  I0505 14:36:02.985848 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 05/05/24 14:36:02.985
  I0505 14:36:02.990540 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0505 14:36:02.990599 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0505 14:36:02.990688 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-7671 patch pod agnhost-primary-zsmmp -p {"metadata":{"annotations":{"x":"y"}}}'
  I0505 14:36:03.114482 21 builder.go:146] stderr: ""
  I0505 14:36:03.114562 21 builder.go:147] stdout: "pod/agnhost-primary-zsmmp patched\n"
  STEP: checking annotations @ 05/05/24 14:36:03.114
  I0505 14:36:03.120596 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0505 14:36:03.120647 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0505 14:36:03.120742 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7671" for this suite. @ 05/05/24 14:36:03.125
• [2.342 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 05/05/24 14:36:03.133
  I0505 14:36:03.133394 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename pods @ 05/05/24 14:36:03.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:36:03.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:36:03.161
  I0505 14:36:03.166185 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: creating the pod @ 05/05/24 14:36:03.169
  STEP: submitting the pod to kubernetes @ 05/05/24 14:36:03.169
  E0505 14:36:03.217300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:04.217724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:05.218086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:36:05.394482 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5374" for this suite. @ 05/05/24 14:36:05.401
• [2.283 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 05/05/24 14:36:05.417
  I0505 14:36:05.417425 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename deployment @ 05/05/24 14:36:05.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:36:05.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:36:05.463
  I0505 14:36:05.473794 21 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0505 14:36:05.491807 21 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0505 14:36:05.520632 21 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  E0505 14:36:06.218206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:07.218626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:36:07.530780 21 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0505 14:36:07.536162 21 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0505 14:36:07.558116 21 deployment.go:313] Updating deployment test-recreate-deployment
  I0505 14:36:07.558209 21 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0505 14:36:07.680959 21 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6769",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1dd65de4-0544-4b8c-b48a-466189bb2e04",
      ResourceVersion: (string) (len=5) "25026",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516565,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516567,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516567,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516567,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516567,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516567,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516565,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-66b65d9f8f\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0505 14:36:07.703717 21 deployment.go:39] New ReplicaSet "test-recreate-deployment-66b65d9f8f" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-66b65d9f8f",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6769",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3a2fa160-2feb-44cf-9349-27b1e9987fbc",
      ResourceVersion: (string) (len=5) "25024",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516567,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "1dd65de4-0544-4b8c-b48a-466189bb2e04",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516567,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 64 64 36 35 64  65 34 2d 30 35 34 34 2d  |\"1dd65de4-0544-|
              00000120  34 62 38 63 2d 62 34 38  61 2d 34 36 36 31 38 39  |4b8c-b48a-466189|
              00000130  62 62 32 65 30 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |bb2e04\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516567,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0505 14:36:07.708795 21 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0505 14:36:07.709378 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-6b6d9cd7b6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6769",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "22dedb4a-cdbe-4a35-97dc-371fef634337",
      ResourceVersion: (string) (len=5) "25014",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516565,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "1dd65de4-0544-4b8c-b48a-466189bb2e04",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516567,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 64 64 36 35 64  65 34 2d 30 35 34 34 2d  |\"1dd65de4-0544-|
              00000120  34 62 38 63 2d 62 34 38  61 2d 34 36 36 31 38 39  |4b8c-b48a-466189|
              00000130  62 62 32 65 30 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |bb2e04\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516567,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0505 14:36:07.742446 21 deployment.go:67] Pod "test-recreate-deployment-66b65d9f8f-c6tqc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-66b65d9f8f-c6tqc",
      GenerateName: (string) (len=36) "test-recreate-deployment-66b65d9f8f-",
      Namespace: (string) (len=15) "deployment-6769",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fc8149e7-20bc-4079-8e43-317288362143",
      ResourceVersion: (string) (len=5) "25023",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516567,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-66b65d9f8f",
          UID: (types.UID) (len=36) "3a2fa160-2feb-44cf-9349-27b1e9987fbc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516567,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  32 66 61 31 36 30 2d 32  |d\":\"3a2fa160-2|
              00000090  66 65 62 2d 34 34 63 66  2d 39 33 34 39 2d 32 37  |feb-44cf-9349-27|
              000000a0  62 31 65 39 39 38 37 66  62 63 5c 22 7d 22 3a 7b  |b1e9987fbc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516567,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-npdjv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-npdjv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516567,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516567,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516567,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516567,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516567,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516567,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:36:07.749711 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6769" for this suite. @ 05/05/24 14:36:07.756
• [2.358 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 05/05/24 14:36:07.777
  I0505 14:36:07.777527 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 14:36:07.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:36:07.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:36:07.825
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 14:36:07.83
  E0505 14:36:08.219534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:09.220836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:10.224514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:11.224826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 14:36:11.859
  I0505 14:36:11.862116 21 output.go:196] Trying to get logs from node worker01 pod downwardapi-volume-ae8bb86a-7f88-423b-a517-4ff052097304 container client-container: <nil>
  STEP: delete the pod @ 05/05/24 14:36:11.867
  I0505 14:36:11.878845 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-101" for this suite. @ 05/05/24 14:36:11.88
• [4.107 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 05/05/24 14:36:11.884
  I0505 14:36:11.884732 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename subjectreview @ 05/05/24 14:36:11.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:36:11.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:36:11.894
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-1975" @ 05/05/24 14:36:11.896
  I0505 14:36:11.898180 21 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-1975:e2e"
  I0505 14:36:11.898203 21 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-1975"}
  I0505 14:36:11.898210 21 subjectreviews.go:71] saUID: "9af308e7-29af-448a-b6c5-663f326642c5"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-1975:e2e" @ 05/05/24 14:36:11.898
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-1975:e2e" @ 05/05/24 14:36:11.899
  I0505 14:36:11.900863 21 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-1975:e2e" api 'list' configmaps in "subjectreview-1975" namespace @ 05/05/24 14:36:11.9
  I0505 14:36:11.901787 21 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-1975:e2e" @ 05/05/24 14:36:11.901
  I0505 14:36:11.903260 21 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0505 14:36:11.903287 21 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0505 14:36:11.903356 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-1975" for this suite. @ 05/05/24 14:36:11.905
• [0.024 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 05/05/24 14:36:11.909
  I0505 14:36:11.909359 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename watch @ 05/05/24 14:36:11.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:36:11.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:36:11.919
  STEP: getting a starting resourceVersion @ 05/05/24 14:36:11.921
  STEP: starting a background goroutine to produce watch events @ 05/05/24 14:36:11.922
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 05/05/24 14:36:11.922
  E0505 14:36:12.225207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:13.225804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:14.226810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:36:14.717650 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6445" for this suite. @ 05/05/24 14:36:14.763
• [2.910 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 05/05/24 14:36:14.818
  I0505 14:36:14.818985 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename var-expansion @ 05/05/24 14:36:14.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:36:14.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:36:14.836
  STEP: creating the pod @ 05/05/24 14:36:14.845
  STEP: waiting for pod running @ 05/05/24 14:36:14.859
  E0505 14:36:15.227990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:16.228682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 05/05/24 14:36:16.872
  I0505 14:36:16.874238 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-3784 PodName:var-expansion-1b6f7e6f-815a-4866-96ae-60ebb5257024 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 14:36:16.874273 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:36:16.874580 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 14:36:16.874611 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/var-expansion-3784/pods/var-expansion-1b6f7e6f-815a-4866-96ae-60ebb5257024/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 05/05/24 14:36:16.919
  I0505 14:36:16.922563 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-3784 PodName:var-expansion-1b6f7e6f-815a-4866-96ae-60ebb5257024 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 14:36:16.922588 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:36:16.924001 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 14:36:16.924049 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/var-expansion-3784/pods/var-expansion-1b6f7e6f-815a-4866-96ae-60ebb5257024/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 05/05/24 14:36:16.997
  E0505 14:36:17.229294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:36:17.509853 21 pod_client.go:141] Successfully updated pod "var-expansion-1b6f7e6f-815a-4866-96ae-60ebb5257024"
  STEP: waiting for annotated pod running @ 05/05/24 14:36:17.509
  STEP: deleting the pod gracefully @ 05/05/24 14:36:17.514
  I0505 14:36:17.514861 21 delete.go:62] Deleting pod "var-expansion-1b6f7e6f-815a-4866-96ae-60ebb5257024" in namespace "var-expansion-3784"
  I0505 14:36:17.522208 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-1b6f7e6f-815a-4866-96ae-60ebb5257024" to be fully deleted
  E0505 14:36:18.229868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:19.230348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:20.230556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:21.230726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:22.231050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:23.232072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:24.233084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:25.233115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:26.233488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:27.233725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:28.233996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:29.234343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:30.235411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:31.236012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:32.237128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:33.238396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:34.239047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:35.240129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:36.240512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:37.240577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:38.240951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:39.241478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:40.242669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:41.243397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:42.244215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:43.244775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:44.244834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:45.245764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:46.246512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:47.248491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:48.248694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:49.249075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:50.249212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:51.250122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:36:51.611952 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3784" for this suite. @ 05/05/24 14:36:51.616
• [36.815 seconds]
------------------------------
SSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 05/05/24 14:36:51.634
  I0505 14:36:51.634657 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename certificates @ 05/05/24 14:36:51.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:36:51.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:36:51.66
  STEP: getting /apis @ 05/05/24 14:36:52.18
  STEP: getting /apis/certificates.k8s.io @ 05/05/24 14:36:52.187
  STEP: getting /apis/certificates.k8s.io/v1 @ 05/05/24 14:36:52.188
  STEP: creating @ 05/05/24 14:36:52.19
  STEP: getting @ 05/05/24 14:36:52.211
  STEP: listing @ 05/05/24 14:36:52.217
  STEP: watching @ 05/05/24 14:36:52.223
  I0505 14:36:52.223698 21 certificates.go:316] starting watch
  STEP: patching @ 05/05/24 14:36:52.226
  STEP: updating @ 05/05/24 14:36:52.234
  I0505 14:36:52.243529 21 certificates.go:332] waiting for watch events with expected annotations
  I0505 14:36:52.243605 21 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 05/05/24 14:36:52.243
  STEP: patching /approval @ 05/05/24 14:36:52.247
  E0505 14:36:52.251245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating /approval @ 05/05/24 14:36:52.259
  STEP: getting /status @ 05/05/24 14:36:52.266
  STEP: patching /status @ 05/05/24 14:36:52.27
  STEP: updating /status @ 05/05/24 14:36:52.279
  STEP: deleting @ 05/05/24 14:36:52.289
  STEP: deleting a collection @ 05/05/24 14:36:52.302
  I0505 14:36:52.318646 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-1122" for this suite. @ 05/05/24 14:36:52.323
• [0.703 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 05/05/24 14:36:52.344
  I0505 14:36:52.345003 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename deployment @ 05/05/24 14:36:52.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:36:52.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:36:52.374
  I0505 14:36:52.379775 21 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0505 14:36:52.393818 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0505 14:36:53.274202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:54.274008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:55.274245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:56.274523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:57.274595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:36:57.395486 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/05/24 14:36:57.395
  I0505 14:36:57.395567 21 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0505 14:36:57.399344 21 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0505 14:36:57.403821 21 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0505 14:36:58.275118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:36:59.278677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:36:59.411033 21 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0505 14:36:59.413896 21 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0505 14:36:59.418406 21 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4991",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5320750f-1839-4719-ade5-cc06a92c4f3c",
      ResourceVersion: (string) (len=5) "25533",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516617,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516617,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516618,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516617,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516617,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516618,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516617,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6f4b778cd6\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0505 14:36:59.430657 21 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-6f4b778cd6" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6f4b778cd6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4991",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c8e96699-ef0a-482b-8de8-4607cee4122b",
      ResourceVersion: (string) (len=5) "25523",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516617,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "5320750f-1839-4719-ade5-cc06a92c4f3c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516617,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 33 32 30 37 35  30 66 2d 31 38 33 39 2d  |\"5320750f-1839-|
              00000120  34 37 31 39 2d 61 64 65  35 2d 63 63 30 36 61 39  |4719-ade5-cc06a9|
              00000130  32 63 34 66 33 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |2c4f3c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516618,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0505 14:36:59.435174 21 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0505 14:36:59.435365 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4991",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e87b07a3-659f-40f5-ad66-6d056669e926",
      ResourceVersion: (string) (len=5) "25532",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516612,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "5320750f-1839-4719-ade5-cc06a92c4f3c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516618,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 35 33 32 30 37 35 30  |"uid\":\"5320750|
              000000b0  66 2d 31 38 33 39 2d 34  37 31 39 2d 61 64 65 35  |f-1839-4719-ade5|
              000000c0  2d 63 63 30 36 61 39 32  63 34 66 33 63 5c 22 7d  |-cc06a92c4f3c\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516618,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0505 14:36:59.446297 21 deployment.go:67] Pod "test-rolling-update-deployment-6f4b778cd6-4fjr5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6f4b778cd6-4fjr5",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6f4b778cd6-",
      Namespace: (string) (len=15) "deployment-4991",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "91f9dc17-9254-40d4-8b17-1292364e110c",
      ResourceVersion: (string) (len=5) "25522",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516617,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.140/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.140/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "69f4c6fe9f886746039eb4cd529e2f97c9e89bc64bec4404054bb3b5aef6dd73"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6f4b778cd6",
          UID: (types.UID) (len=36) "c8e96699-ef0a-482b-8de8-4607cee4122b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516617,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516617,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  65 39 36 36 39 39 2d 65  |d\":\"c8e96699-e|
              00000090  66 30 61 2d 34 38 32 62  2d 38 64 65 38 2d 34 36  |f0a-482b-8de8-46|
              000000a0  30 37 63 65 65 34 31 32  32 62 5c 22 7d 22 3a 7b  |07cee4122b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516618,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 34 30 5c 22 7d 22  |.200.131.140\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q4tst",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q4tst",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516618,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516617,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516618,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516618,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516617,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.140",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.140"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516617,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850516617,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://a05f1814a0cd45798918e0c83d9b857f34615aca4c86adfb7bcaf11468ee73c2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:36:59.452359 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4991" for this suite. @ 05/05/24 14:36:59.455
• [7.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 05/05/24 14:36:59.462
  I0505 14:36:59.462686 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 14:36:59.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:36:59.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:36:59.48
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/05/24 14:36:59.483
  E0505 14:37:00.278983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:01.280263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:02.280089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:03.281102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 14:37:03.511
  I0505 14:37:03.514789 21 output.go:196] Trying to get logs from node worker00 pod pod-bae5a459-3095-4707-8c59-42659e960a17 container test-container: <nil>
  STEP: delete the pod @ 05/05/24 14:37:03.52
  I0505 14:37:03.531169 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8193" for this suite. @ 05/05/24 14:37:03.534
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 05/05/24 14:37:03.538
  I0505 14:37:03.538802 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/05/24 14:37:03.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:37:03.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:37:03.551
  I0505 14:37:03.554878 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2613" for this suite. @ 05/05/24 14:37:03.558
• [0.024 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 05/05/24 14:37:03.565
  I0505 14:37:03.565257 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename replication-controller @ 05/05/24 14:37:03.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:37:03.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:37:03.581
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 05/05/24 14:37:03.584
  E0505 14:37:04.280949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:05.281459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 05/05/24 14:37:05.6
  STEP: Then the orphan pod is adopted @ 05/05/24 14:37:05.608
  E0505 14:37:06.283293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:37:06.619712 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9558" for this suite. @ 05/05/24 14:37:06.623
• [3.076 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 05/05/24 14:37:06.641
  I0505 14:37:06.641070 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 14:37:06.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:37:06.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:37:06.659
  STEP: creating Agnhost RC @ 05/05/24 14:37:06.661
  I0505 14:37:06.661573 21 kubectl.go:1540] namespace kubectl-3335
  I0505 14:37:06.661609 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3335 create -f -'
  I0505 14:37:06.747071 21 builder.go:146] stderr: ""
  I0505 14:37:06.747111 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/05/24 14:37:06.747
  E0505 14:37:07.284228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:37:07.749776 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0505 14:37:07.749814 21 framework.go:733] Found 0 / 1
  E0505 14:37:08.284798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:37:08.752076 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0505 14:37:08.752127 21 framework.go:733] Found 1 / 1
  I0505 14:37:08.752158 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0505 14:37:08.756345 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0505 14:37:08.756435 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0505 14:37:08.756533 21 kubectl.go:1547] wait on agnhost-primary startup in kubectl-3335 
  I0505 14:37:08.756646 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3335 logs agnhost-primary-9zhn2 agnhost-primary'
  I0505 14:37:08.802738 21 builder.go:146] stderr: ""
  I0505 14:37:08.802770 21 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 05/05/24 14:37:08.802
  I0505 14:37:08.802823 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3335 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0505 14:37:08.864968 21 builder.go:146] stderr: ""
  I0505 14:37:08.865000 21 builder.go:147] stdout: "service/rm2 exposed\n"
  I0505 14:37:08.868532 21 utils.go:1179] Service rm2 in namespace kubectl-3335 found.
  E0505 14:37:09.285896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:10.287819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 05/05/24 14:37:10.878
  I0505 14:37:10.878249 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3335 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0505 14:37:10.938190 21 builder.go:146] stderr: ""
  I0505 14:37:10.938422 21 builder.go:147] stdout: "service/rm3 exposed\n"
  I0505 14:37:10.940719 21 utils.go:1179] Service rm3 in namespace kubectl-3335 found.
  E0505 14:37:11.288822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:12.289112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:37:12.950401 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3335" for this suite. @ 05/05/24 14:37:12.953
• [6.330 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 05/05/24 14:37:12.971
  I0505 14:37:12.971394 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 14:37:12.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:37:12.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:37:12.989
  STEP: Creating Pod @ 05/05/24 14:37:12.99
  E0505 14:37:13.290192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:14.290970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 05/05/24 14:37:15.004
  I0505 14:37:15.004259 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-9142 PodName:pod-sharedvolume-ce2c1054-4f74-47d0-90a4-f554dd5eabf1 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 14:37:15.004278 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:37:15.004702 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 14:37:15.004752 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/emptydir-9142/pods/pod-sharedvolume-ce2c1054-4f74-47d0-90a4-f554dd5eabf1/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I0505 14:37:15.056061 21 exec_util.go:106] Exec stderr: ""
  I0505 14:37:15.056153 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9142" for this suite. @ 05/05/24 14:37:15.059
• [2.093 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 05/05/24 14:37:15.064
  I0505 14:37:15.064816 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename csistoragecapacity @ 05/05/24 14:37:15.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:37:15.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:37:15.089
  STEP: getting /apis @ 05/05/24 14:37:15.095
  STEP: getting /apis/storage.k8s.io @ 05/05/24 14:37:15.104
  STEP: getting /apis/storage.k8s.io/v1 @ 05/05/24 14:37:15.105
  STEP: creating @ 05/05/24 14:37:15.107
  STEP: watching @ 05/05/24 14:37:15.121
  I0505 14:37:15.121760 21 csistoragecapacity.go:143] starting watch
  STEP: getting @ 05/05/24 14:37:15.131
  STEP: listing in namespace @ 05/05/24 14:37:15.135
  STEP: listing across namespaces @ 05/05/24 14:37:15.139
  STEP: patching @ 05/05/24 14:37:15.142
  STEP: updating @ 05/05/24 14:37:15.148
  I0505 14:37:15.154733 21 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0505 14:37:15.154845 21 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 05/05/24 14:37:15.154
  STEP: deleting a collection @ 05/05/24 14:37:15.166
  I0505 14:37:15.179580 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-5413" for this suite. @ 05/05/24 14:37:15.183
• [0.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 05/05/24 14:37:15.195
  I0505 14:37:15.195569 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/05/24 14:37:15.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:37:15.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:37:15.222
  I0505 14:37:15.226403 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  E0505 14:37:15.291488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:16.292534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:17.292625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:37:18.275250 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-9491" for this suite. @ 05/05/24 14:37:18.277
• [3.091 seconds]
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 05/05/24 14:37:18.286
  I0505 14:37:18.286106 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 14:37:18.287
  E0505 14:37:18.293160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:37:18.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:37:18.304
  STEP: Creating the pod @ 05/05/24 14:37:18.306
  E0505 14:37:19.295011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:20.295029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:37:20.839571 21 pod_client.go:141] Successfully updated pod "annotationupdate19b1e67f-1f0d-4e76-b790-4f5e0dd84a48"
  E0505 14:37:21.296136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:22.296338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:37:22.856049 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9767" for this suite. @ 05/05/24 14:37:22.86
• [4.592 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 05/05/24 14:37:22.879
  I0505 14:37:22.879146 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/05/24 14:37:22.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:37:22.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:37:22.893
  STEP: creating the policy @ 05/05/24 14:37:22.9
  STEP: waiting until the marker is denied @ 05/05/24 14:37:22.909
  E0505 14:37:23.297146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 05/05/24 14:37:23.715
  STEP: testing a non-replicated ReplicaSet not to be denied @ 05/05/24 14:37:23.723
  I0505 14:37:23.767455 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6897" for this suite. @ 05/05/24 14:37:23.773
• [0.898 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 05/05/24 14:37:23.777
  I0505 14:37:23.777436 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename controllerrevisions @ 05/05/24 14:37:23.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:37:23.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:37:23.792
  STEP: Creating DaemonSet "e2e-k7847-daemon-set" @ 05/05/24 14:37:23.803
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/05/24 14:37:23.808
  I0505 14:37:23.813882 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-k7847-daemon-set: 0
  I0505 14:37:23.814017 21 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  E0505 14:37:24.297571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:37:24.814985 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-k7847-daemon-set: 0
  I0505 14:37:24.815017 21 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  E0505 14:37:25.303908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:37:25.813291 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-k7847-daemon-set: 2
  I0505 14:37:25.813328 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-k7847-daemon-set
  STEP: Confirm DaemonSet "e2e-k7847-daemon-set" successfully created with "daemonset-name=e2e-k7847-daemon-set" label @ 05/05/24 14:37:25.814
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-k7847-daemon-set" @ 05/05/24 14:37:25.817
  I0505 14:37:25.819270 21 controller_revision.go:162] Located ControllerRevision: "e2e-k7847-daemon-set-86455c95b8"
  STEP: Patching ControllerRevision "e2e-k7847-daemon-set-86455c95b8" @ 05/05/24 14:37:25.821
  I0505 14:37:25.837738 21 controller_revision.go:173] e2e-k7847-daemon-set-86455c95b8 has been patched
  STEP: Create a new ControllerRevision @ 05/05/24 14:37:25.837
  I0505 14:37:25.842150 21 controller_revision.go:191] Created ControllerRevision: e2e-k7847-daemon-set-6b54dc9d6d
  STEP: Confirm that there are two ControllerRevisions @ 05/05/24 14:37:25.842
  I0505 14:37:25.842232 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0505 14:37:25.844508 21 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-k7847-daemon-set-86455c95b8" @ 05/05/24 14:37:25.844
  STEP: Confirm that there is only one ControllerRevision @ 05/05/24 14:37:25.848
  I0505 14:37:25.848306 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0505 14:37:25.850262 21 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-k7847-daemon-set-6b54dc9d6d" @ 05/05/24 14:37:25.852
  I0505 14:37:25.858966 21 controller_revision.go:220] e2e-k7847-daemon-set-6b54dc9d6d has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 05/05/24 14:37:25.859
  W0505 14:37:25.862349      21 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 05/05/24 14:37:25.862
  I0505 14:37:25.862602 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  E0505 14:37:26.304715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:37:26.863688 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0505 14:37:26.869508 21 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-k7847-daemon-set-6b54dc9d6d=updated" @ 05/05/24 14:37:26.869
  STEP: Confirm that there is only one ControllerRevision @ 05/05/24 14:37:26.885
  I0505 14:37:26.885695 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0505 14:37:26.887989 21 controller_revision.go:265] Found 1 ControllerRevisions
  I0505 14:37:26.889901 21 controller_revision.go:246] ControllerRevision "e2e-k7847-daemon-set-6f9f766fb9" has revision 3
  STEP: Deleting DaemonSet "e2e-k7847-daemon-set" @ 05/05/24 14:37:26.893
  STEP: deleting DaemonSet.extensions e2e-k7847-daemon-set in namespace controllerrevisions-3521, will wait for the garbage collector to delete the pods @ 05/05/24 14:37:26.893
  I0505 14:37:26.950928 21 resources.go:139] Deleting DaemonSet.extensions e2e-k7847-daemon-set took: 4.074866ms
  I0505 14:37:27.051868 21 resources.go:163] Terminating DaemonSet.extensions e2e-k7847-daemon-set pods took: 100.941052ms
  E0505 14:37:27.305087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:37:28.255968 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-k7847-daemon-set: 0
  I0505 14:37:28.256027 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-k7847-daemon-set
  I0505 14:37:28.259441 21 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26134"},"items":null}

  I0505 14:37:28.262075 21 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26134"},"items":null}

  I0505 14:37:28.266416 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-3521" for this suite. @ 05/05/24 14:37:28.268
• [4.496 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 05/05/24 14:37:28.273
  I0505 14:37:28.273637 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename secrets @ 05/05/24 14:37:28.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:37:28.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:37:28.286
  STEP: Creating secret with name secret-test-5fad1ccd-c349-41cd-af52-19f7fd7c0b9a @ 05/05/24 14:37:28.288
  STEP: Creating a pod to test consume secrets @ 05/05/24 14:37:28.293
  E0505 14:37:28.306165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:29.309418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:30.309527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:31.310651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:32.312639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 14:37:32.323
  I0505 14:37:32.327637 21 output.go:196] Trying to get logs from node worker00 pod pod-secrets-b11723e9-dc08-48bb-b3cd-07ebb5e6254b container secret-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 14:37:32.334
  I0505 14:37:32.349237 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-735" for this suite. @ 05/05/24 14:37:32.352
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 05/05/24 14:37:32.358
  I0505 14:37:32.358183 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename csi-storageclass @ 05/05/24 14:37:32.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:37:32.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:37:32.374
  STEP: Creating a StorageClass @ 05/05/24 14:37:32.376
  STEP: Get StorageClass "e2e-4288c" @ 05/05/24 14:37:32.378
  STEP: Patching the StorageClass "e2e-4288c" @ 05/05/24 14:37:32.38
  STEP: Delete StorageClass "e2e-4288c" @ 05/05/24 14:37:32.383
  STEP: Confirm deletion of StorageClass "e2e-4288c" @ 05/05/24 14:37:32.385
  STEP: Create a replacement StorageClass @ 05/05/24 14:37:32.388
  STEP: Updating StorageClass "e2e-v2-gjtq8" @ 05/05/24 14:37:32.391
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-gjtq8=updated" @ 05/05/24 14:37:32.396
  STEP: Deleting StorageClass "e2e-v2-gjtq8" via DeleteCollection @ 05/05/24 14:37:32.398
  STEP: Confirm deletion of StorageClass "e2e-v2-gjtq8" @ 05/05/24 14:37:32.403
  I0505 14:37:32.405315 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-2235" for this suite. @ 05/05/24 14:37:32.407
• [0.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 05/05/24 14:37:32.41
  I0505 14:37:32.410568 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename pod-network-test @ 05/05/24 14:37:32.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:37:32.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:37:32.422
  STEP: Performing setup for networking test in namespace pod-network-test-8697 @ 05/05/24 14:37:32.425
  STEP: creating a selector @ 05/05/24 14:37:32.425
  STEP: Creating the service pods in kubernetes @ 05/05/24 14:37:32.425
  I0505 14:37:32.425440 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0505 14:37:33.313380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:34.315593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:35.316657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:36.318736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:37.318974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:38.318949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:39.319263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:40.319582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:41.320152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:42.320436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:43.321236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:44.322127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/05/24 14:37:44.475
  E0505 14:37:45.322636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:46.326425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:37:46.490607 21 utils.go:779] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0505 14:37:46.490659 21 networking.go:42] Breadth first check of 10.200.131.146 on host 192.168.58.100...
  I0505 14:37:46.495278 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.131.150:9080/dial?request=hostname&protocol=udp&host=10.200.131.146&port=8081&tries=1'] Namespace:pod-network-test-8697 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 14:37:46.495323 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:37:46.496299 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 14:37:46.496535 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-8697/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.131.150%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.200.131.146%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0505 14:37:46.536882 21 utils.go:331] Waiting for responses: map[]
  I0505 14:37:46.536911 21 utils.go:335] reached 10.200.131.146 after 0/1 tries
  I0505 14:37:46.536925 21 networking.go:42] Breadth first check of 10.200.5.58 on host 192.168.58.101...
  I0505 14:37:46.538771 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.131.150:9080/dial?request=hostname&protocol=udp&host=10.200.5.58&port=8081&tries=1'] Namespace:pod-network-test-8697 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 14:37:46.538792 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:37:46.539321 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 14:37:46.539798 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-8697/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.131.150%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.200.5.58%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0505 14:37:46.587573 21 utils.go:331] Waiting for responses: map[]
  I0505 14:37:46.587627 21 utils.go:335] reached 10.200.5.58 after 0/1 tries
  I0505 14:37:46.587636 21 networking.go:53] Going to retry 0 out of 2 pods....
  I0505 14:37:46.587687 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8697" for this suite. @ 05/05/24 14:37:46.59
• [14.193 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 05/05/24 14:37:46.603
  I0505 14:37:46.603654 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename dns @ 05/05/24 14:37:46.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:37:46.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:37:46.624
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9169.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-9169.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 05/05/24 14:37:46.627
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9169.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-9169.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 05/05/24 14:37:46.627
  STEP: creating a pod to probe /etc/hosts @ 05/05/24 14:37:46.627
  STEP: submitting the pod to kubernetes @ 05/05/24 14:37:46.627
  E0505 14:37:47.326813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:48.327407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/05/24 14:37:48.642
  STEP: looking for the results for each expected name from probers @ 05/05/24 14:37:48.648
  I0505 14:37:48.667341 21 dns_common.go:527] DNS probes using dns-9169/dns-test-bde92f0f-dd1b-4d82-bf6e-9595cc9a88c4 succeeded

  STEP: deleting the pod @ 05/05/24 14:37:48.667
  I0505 14:37:48.690791 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9169" for this suite. @ 05/05/24 14:37:48.694
• [2.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 05/05/24 14:37:48.702
  I0505 14:37:48.702888 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename runtimeclass @ 05/05/24 14:37:48.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:37:48.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:37:48.719
  STEP: Deleting RuntimeClass runtimeclass-787-delete-me @ 05/05/24 14:37:48.725
  STEP: Waiting for the RuntimeClass to disappear @ 05/05/24 14:37:48.73
  I0505 14:37:48.734675 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-787" for this suite. @ 05/05/24 14:37:48.737
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 05/05/24 14:37:48.743
  I0505 14:37:48.743342 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename container-probe @ 05/05/24 14:37:48.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:37:48.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:37:48.756
  E0505 14:37:49.328380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:50.329069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:51.334583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:52.335121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:53.335423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:54.336381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:55.336651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:56.337416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:57.337565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:58.340040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:37:59.340209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:00.340799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:01.343013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:02.344040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:03.348441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:04.349261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:05.349712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:06.350061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:07.350195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:08.350688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:09.351079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:10.352077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:11.351958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:12.352540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:13.354055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:14.354918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:15.359395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:16.360933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:17.361276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:18.362361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:19.362928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:20.363347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:21.364259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:22.365483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:23.365777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:24.366595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:25.367360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:26.368027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:27.369250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:28.370416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:29.371014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:30.374800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:31.375760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:32.376425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:33.378654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:34.379390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:35.379603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:36.380303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:37.381464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:38.385160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:39.385497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:40.385897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:41.386261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:42.387065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:43.388409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:44.390104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:45.390277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:46.402702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:47.403171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:48.404085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:38:48.770395 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4340" for this suite. @ 05/05/24 14:38:48.775
• [60.041 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3572
  STEP: Creating a kubernetes client @ 05/05/24 14:38:48.785
  I0505 14:38:48.785603 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename services @ 05/05/24 14:38:48.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:38:48.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:38:48.809
  STEP: creating a collection of services @ 05/05/24 14:38:48.812
  I0505 14:38:48.812918 21 service.go:3608] Creating e2e-svc-a-nw7n7
  I0505 14:38:48.819360 21 service.go:3608] Creating e2e-svc-b-h4npq
  I0505 14:38:48.829743 21 service.go:3608] Creating e2e-svc-c-h2rk2
  STEP: deleting service collection @ 05/05/24 14:38:48.839
  I0505 14:38:48.866259 21 service.go:3643] Collection of services has been deleted
  I0505 14:38:48.866374 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7353" for this suite. @ 05/05/24 14:38:48.869
• [0.088 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 05/05/24 14:38:48.873
  I0505 14:38:48.873843 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename init-container @ 05/05/24 14:38:48.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:38:48.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:38:48.893
  STEP: creating the pod @ 05/05/24 14:38:48.896
  I0505 14:38:48.896718 21 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0505 14:38:49.405066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:50.406581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:51.408556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:52.409405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:53.411759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:54.412622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:55.413381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:56.414502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:57.415063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:58.415196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:38:59.416041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:00.416776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:01.417711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:02.417818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:03.418683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:04.420564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:05.420897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:06.422044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:07.422460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:08.424464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:09.424531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:10.425725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:11.427159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:12.426934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:13.427042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:14.427772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:15.430355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:16.431257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:17.432524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:18.433037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:19.434011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:20.435702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:21.436274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:22.436773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:23.437581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:24.438590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:25.439062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:26.448300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:27.448800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:28.449596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:29.450189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:30.451234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:31.451313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:32.452761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:39:32.682607 21 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-99b37dbb-3371-4689-8ae9-6a204ed019a4", GenerateName:"", Namespace:"init-container-3927", SelfLink:"", UID:"713118f0-dabc-4b2d-9668-3f8e20965733", ResourceVersion:"26898", Generation:0, CreationTimestamp:time.Date(2024, time.May, 5, 14, 38, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"896708106"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"8a29dbb2a3e02b738d888df47460dd91e3b31c74e7f5a59b0552ccacdf951ca6", "cni.projectcalico.org/podIP":"10.200.131.152/32", "cni.projectcalico.org/podIPs":"10.200.131.152/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 5, 14, 38, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003978438), Subresource:""}, v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 5, 14, 38, 49, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003978480), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 5, 14, 39, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039784b0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-tzx8b", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc005794340), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-tzx8b", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-tzx8b", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-tzx8b", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc007978c28), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"worker00", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc004092a00), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc007978cb0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc007978cd0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc007978cd8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc007978cdc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc004f1e2d0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 5, 14, 38, 50, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 5, 14, 38, 48, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 5, 14, 38, 48, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 5, 14, 38, 48, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 5, 14, 38, 48, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.58.100", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.58.100"}}, PodIP:"10.200.131.152", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.200.131.152"}}, StartTime:time.Date(2024, time.May, 5, 14, 38, 48, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc006e92150)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc006e921c0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://9df834c3c48f1a647f2a4bef11c3d2255c2bfa3ba0e093674840a06a65145b20", Started:(*bool)(0xc007978d7f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0057943e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc007978d85), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0057943c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc007978d54), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0505 14:39:32.682822 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3927" for this suite. @ 05/05/24 14:39:32.689
• [43.821 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 05/05/24 14:39:32.695
  I0505 14:39:32.695017 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename podtemplate @ 05/05/24 14:39:32.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:39:32.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:39:32.712
  STEP: Create a pod template @ 05/05/24 14:39:32.717
  STEP: Replace a pod template @ 05/05/24 14:39:32.722
  I0505 14:39:32.729664 21 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0505 14:39:32.729845 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9779" for this suite. @ 05/05/24 14:39:32.732
• [0.041 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 05/05/24 14:39:32.736
  I0505 14:39:32.736025 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename pods @ 05/05/24 14:39:32.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:39:32.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:39:32.756
  STEP: Create set of pods @ 05/05/24 14:39:32.758
  I0505 14:39:32.767265 21 pods.go:871] created test-pod-1
  I0505 14:39:32.777679 21 pods.go:871] created test-pod-2
  I0505 14:39:32.788165 21 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 05/05/24 14:39:32.788
  E0505 14:39:33.453332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:34.453595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 05/05/24 14:39:34.821
  I0505 14:39:34.824185 21 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E0505 14:39:35.453996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:39:35.826820 21 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E0505 14:39:36.454621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:39:36.823472 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5291" for this suite. @ 05/05/24 14:39:36.825
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 05/05/24 14:39:36.827
  I0505 14:39:36.827963 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename namespaces @ 05/05/24 14:39:36.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:39:36.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:39:36.839
  STEP: creating a Namespace @ 05/05/24 14:39:36.841
  STEP: patching the Namespace @ 05/05/24 14:39:36.847
  STEP: get the Namespace and ensuring it has the label @ 05/05/24 14:39:36.85
  I0505 14:39:36.852961 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1917" for this suite. @ 05/05/24 14:39:36.854
  STEP: Destroying namespace "nspatchtest-0c6de25a-b45e-403f-92f7-4ad1d555df26-7705" for this suite. @ 05/05/24 14:39:36.857
• [0.033 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2203
  STEP: Creating a kubernetes client @ 05/05/24 14:39:36.86
  I0505 14:39:36.860740 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename services @ 05/05/24 14:39:36.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:39:36.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:39:36.872
  STEP: creating service in namespace services-3109 @ 05/05/24 14:39:36.875
  STEP: creating service affinity-clusterip-transition in namespace services-3109 @ 05/05/24 14:39:36.875
  STEP: creating replication controller affinity-clusterip-transition in namespace services-3109 @ 05/05/24 14:39:36.881
  I0505 14:39:36.895241      21 runners.go:198] Created replication controller with name: affinity-clusterip-transition, namespace: services-3109, replica count: 3
  E0505 14:39:37.455008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:38.457853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:39.458659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:39:39.947022      21 runners.go:198] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0505 14:39:39.951093 21 resource.go:361] Creating new exec pod
  E0505 14:39:40.459049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:41.459352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:42.464349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:39:42.969069 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-3109 exec execpod-affinitybbg9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0505 14:39:43.060097 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I0505 14:39:43.060131 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0505 14:39:43.060182 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-3109 exec execpod-affinitybbg9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.181 80'
  I0505 14:39:43.128084 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.181 80\nConnection to 10.32.0.181 80 port [tcp/http] succeeded!\n"
  I0505 14:39:43.128132 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0505 14:39:43.132447 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-3109 exec execpod-affinitybbg9m -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.32.0.181:80/ ; done'
  I0505 14:39:43.256333 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n"
  I0505 14:39:43.256366 21 builder.go:147] stdout: "\naffinity-clusterip-transition-7dz5k\naffinity-clusterip-transition-8jc9z\naffinity-clusterip-transition-4ks2r\naffinity-clusterip-transition-4ks2r\naffinity-clusterip-transition-7dz5k\naffinity-clusterip-transition-8jc9z\naffinity-clusterip-transition-7dz5k\naffinity-clusterip-transition-8jc9z\naffinity-clusterip-transition-4ks2r\naffinity-clusterip-transition-7dz5k\naffinity-clusterip-transition-8jc9z\naffinity-clusterip-transition-8jc9z\naffinity-clusterip-transition-4ks2r\naffinity-clusterip-transition-4ks2r\naffinity-clusterip-transition-7dz5k\naffinity-clusterip-transition-4ks2r"
  I0505 14:39:43.256377 21 service.go:242] Received response from host: affinity-clusterip-transition-7dz5k
  I0505 14:39:43.256385 21 service.go:242] Received response from host: affinity-clusterip-transition-8jc9z
  I0505 14:39:43.256392 21 service.go:242] Received response from host: affinity-clusterip-transition-4ks2r
  I0505 14:39:43.256398 21 service.go:242] Received response from host: affinity-clusterip-transition-4ks2r
  I0505 14:39:43.256405 21 service.go:242] Received response from host: affinity-clusterip-transition-7dz5k
  I0505 14:39:43.256411 21 service.go:242] Received response from host: affinity-clusterip-transition-8jc9z
  I0505 14:39:43.256417 21 service.go:242] Received response from host: affinity-clusterip-transition-7dz5k
  I0505 14:39:43.256423 21 service.go:242] Received response from host: affinity-clusterip-transition-8jc9z
  I0505 14:39:43.256429 21 service.go:242] Received response from host: affinity-clusterip-transition-4ks2r
  I0505 14:39:43.256436 21 service.go:242] Received response from host: affinity-clusterip-transition-7dz5k
  I0505 14:39:43.256441 21 service.go:242] Received response from host: affinity-clusterip-transition-8jc9z
  I0505 14:39:43.256455 21 service.go:242] Received response from host: affinity-clusterip-transition-8jc9z
  I0505 14:39:43.256461 21 service.go:242] Received response from host: affinity-clusterip-transition-4ks2r
  I0505 14:39:43.256467 21 service.go:242] Received response from host: affinity-clusterip-transition-4ks2r
  I0505 14:39:43.256493 21 service.go:242] Received response from host: affinity-clusterip-transition-7dz5k
  I0505 14:39:43.256499 21 service.go:242] Received response from host: affinity-clusterip-transition-4ks2r
  I0505 14:39:43.262658 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-3109 exec execpod-affinitybbg9m -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.32.0.181:80/ ; done'
  I0505 14:39:43.397586 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.181:80/\n"
  I0505 14:39:43.397623 21 builder.go:147] stdout: "\naffinity-clusterip-transition-4ks2r\naffinity-clusterip-transition-4ks2r\naffinity-clusterip-transition-4ks2r\naffinity-clusterip-transition-4ks2r\naffinity-clusterip-transition-4ks2r\naffinity-clusterip-transition-4ks2r\naffinity-clusterip-transition-4ks2r\naffinity-clusterip-transition-4ks2r\naffinity-clusterip-transition-4ks2r\naffinity-clusterip-transition-4ks2r\naffinity-clusterip-transition-4ks2r\naffinity-clusterip-transition-4ks2r\naffinity-clusterip-transition-4ks2r\naffinity-clusterip-transition-4ks2r\naffinity-clusterip-transition-4ks2r\naffinity-clusterip-transition-4ks2r"
  I0505 14:39:43.397639 21 service.go:242] Received response from host: affinity-clusterip-transition-4ks2r
  I0505 14:39:43.397655 21 service.go:242] Received response from host: affinity-clusterip-transition-4ks2r
  I0505 14:39:43.397666 21 service.go:242] Received response from host: affinity-clusterip-transition-4ks2r
  I0505 14:39:43.397672 21 service.go:242] Received response from host: affinity-clusterip-transition-4ks2r
  I0505 14:39:43.397679 21 service.go:242] Received response from host: affinity-clusterip-transition-4ks2r
  I0505 14:39:43.397685 21 service.go:242] Received response from host: affinity-clusterip-transition-4ks2r
  I0505 14:39:43.397692 21 service.go:242] Received response from host: affinity-clusterip-transition-4ks2r
  I0505 14:39:43.397698 21 service.go:242] Received response from host: affinity-clusterip-transition-4ks2r
  I0505 14:39:43.397704 21 service.go:242] Received response from host: affinity-clusterip-transition-4ks2r
  I0505 14:39:43.397710 21 service.go:242] Received response from host: affinity-clusterip-transition-4ks2r
  I0505 14:39:43.397716 21 service.go:242] Received response from host: affinity-clusterip-transition-4ks2r
  I0505 14:39:43.397722 21 service.go:242] Received response from host: affinity-clusterip-transition-4ks2r
  I0505 14:39:43.397728 21 service.go:242] Received response from host: affinity-clusterip-transition-4ks2r
  I0505 14:39:43.397736 21 service.go:242] Received response from host: affinity-clusterip-transition-4ks2r
  I0505 14:39:43.397743 21 service.go:242] Received response from host: affinity-clusterip-transition-4ks2r
  I0505 14:39:43.397749 21 service.go:242] Received response from host: affinity-clusterip-transition-4ks2r
  I0505 14:39:43.397822 21 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-3109, will wait for the garbage collector to delete the pods @ 05/05/24 14:39:43.416
  E0505 14:39:43.463654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:39:43.474183 21 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 3.359688ms
  I0505 14:39:43.575463 21 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 101.2646ms
  E0505 14:39:44.466510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:45.467418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:39:46.194288 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3109" for this suite. @ 05/05/24 14:39:46.197
• [9.340 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 05/05/24 14:39:46.2
  I0505 14:39:46.200372 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 14:39:46.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:39:46.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:39:46.208
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 14:39:46.21
  E0505 14:39:46.466776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:47.467709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:48.469351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:49.470414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 14:39:50.236
  I0505 14:39:50.239711 21 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-f00d500f-9bff-4d63-9f8c-526badc87f30 container client-container: <nil>
  STEP: delete the pod @ 05/05/24 14:39:50.248
  I0505 14:39:50.259609 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-330" for this suite. @ 05/05/24 14:39:50.261
• [4.065 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 05/05/24 14:39:50.266
  I0505 14:39:50.266256 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 05/05/24 14:39:50.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:39:50.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:39:50.274
  STEP: Setting up the test @ 05/05/24 14:39:50.275
  STEP: Creating hostNetwork=false pod @ 05/05/24 14:39:50.275
  E0505 14:39:50.470482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:51.470780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 05/05/24 14:39:52.283
  E0505 14:39:52.471507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:53.473056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 05/05/24 14:39:54.296
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 05/05/24 14:39:54.296
  I0505 14:39:54.296525 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2462 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 14:39:54.296551 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:39:54.297845 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 14:39:54.297977 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2462/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0505 14:39:54.333807 21 exec_util.go:106] Exec stderr: ""
  I0505 14:39:54.333860 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2462 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 14:39:54.333945 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:39:54.334662 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 14:39:54.334761 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2462/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0505 14:39:54.365131 21 exec_util.go:106] Exec stderr: ""
  I0505 14:39:54.365169 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2462 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 14:39:54.365176 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:39:54.365597 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 14:39:54.365883 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2462/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0505 14:39:54.398021 21 exec_util.go:106] Exec stderr: ""
  I0505 14:39:54.398071 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2462 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 14:39:54.398084 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:39:54.398442 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 14:39:54.398607 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2462/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0505 14:39:54.432192 21 exec_util.go:106] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 05/05/24 14:39:54.432
  I0505 14:39:54.432248 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2462 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 14:39:54.432263 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:39:54.433233 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 14:39:54.433289 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2462/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  E0505 14:39:54.473159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:39:54.477581 21 exec_util.go:106] Exec stderr: ""
  I0505 14:39:54.477615 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2462 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 14:39:54.477622 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:39:54.478417 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 14:39:54.478480 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2462/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0505 14:39:54.507530 21 exec_util.go:106] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 05/05/24 14:39:54.507
  I0505 14:39:54.507604 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2462 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 14:39:54.507621 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:39:54.508545 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 14:39:54.508633 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2462/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0505 14:39:54.558102 21 exec_util.go:106] Exec stderr: ""
  I0505 14:39:54.558183 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2462 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 14:39:54.558196 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:39:54.558967 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 14:39:54.559328 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2462/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0505 14:39:54.593208 21 exec_util.go:106] Exec stderr: ""
  I0505 14:39:54.593258 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2462 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 14:39:54.593272 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:39:54.594068 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 14:39:54.594126 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2462/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0505 14:39:54.637853 21 exec_util.go:106] Exec stderr: ""
  I0505 14:39:54.637995 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2462 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 14:39:54.638054 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:39:54.638762 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 14:39:54.638825 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2462/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0505 14:39:54.689295 21 exec_util.go:106] Exec stderr: ""
  I0505 14:39:54.689403 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-2462" for this suite. @ 05/05/24 14:39:54.692
• [4.432 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 05/05/24 14:39:54.698
  I0505 14:39:54.698172 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename deployment @ 05/05/24 14:39:54.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:39:54.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:39:54.707
  STEP: creating a Deployment @ 05/05/24 14:39:54.71
  I0505 14:39:54.710421 21 deployment.go:507] Creating simple deployment test-deployment-9vvb8
  I0505 14:39:54.716274 21 deployment.go:222] deployment "test-deployment-9vvb8" doesn't have the required revision set
  E0505 14:39:55.474459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:56.474741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 05/05/24 14:39:56.725
  I0505 14:39:56.726900 21 deployment.go:532] Deployment test-deployment-9vvb8 has Conditions: [{Available True 2024-05-05 14:39:55 +0000 UTC 2024-05-05 14:39:55 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-05-05 14:39:55 +0000 UTC 2024-05-05 14:39:54 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9vvb8-c8586b885" has successfully progressed.}]
  STEP: updating Deployment Status @ 05/05/24 14:39:56.726
  I0505 14:39:56.731206 21 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 14, 39, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 14, 39, 55, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 14, 39, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 14, 39, 54, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-9vvb8-c8586b885\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 05/05/24 14:39:56.731
  I0505 14:39:56.732318 21 deployment.go:579] Observed &Deployment event: ADDED
  I0505 14:39:56.732346 21 deployment.go:575] Observed Deployment test-deployment-9vvb8 in namespace deployment-1540 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-05 14:39:54 +0000 UTC 2024-05-05 14:39:54 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-9vvb8-c8586b885"}
  I0505 14:39:56.732392 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0505 14:39:56.732403 21 deployment.go:575] Observed Deployment test-deployment-9vvb8 in namespace deployment-1540 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-05 14:39:54 +0000 UTC 2024-05-05 14:39:54 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-9vvb8-c8586b885"}
  I0505 14:39:56.732411 21 deployment.go:575] Observed Deployment test-deployment-9vvb8 in namespace deployment-1540 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-05 14:39:54 +0000 UTC 2024-05-05 14:39:54 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0505 14:39:56.732460 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0505 14:39:56.732548 21 deployment.go:575] Observed Deployment test-deployment-9vvb8 in namespace deployment-1540 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-05 14:39:54 +0000 UTC 2024-05-05 14:39:54 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0505 14:39:56.732569 21 deployment.go:575] Observed Deployment test-deployment-9vvb8 in namespace deployment-1540 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-05 14:39:54 +0000 UTC 2024-05-05 14:39:54 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-9vvb8-c8586b885" is progressing.}
  I0505 14:39:56.732641 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0505 14:39:56.732655 21 deployment.go:575] Observed Deployment test-deployment-9vvb8 in namespace deployment-1540 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-05 14:39:55 +0000 UTC 2024-05-05 14:39:55 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0505 14:39:56.732692 21 deployment.go:575] Observed Deployment test-deployment-9vvb8 in namespace deployment-1540 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-05 14:39:55 +0000 UTC 2024-05-05 14:39:54 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9vvb8-c8586b885" has successfully progressed.}
  I0505 14:39:56.732900 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0505 14:39:56.732928 21 deployment.go:575] Observed Deployment test-deployment-9vvb8 in namespace deployment-1540 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-05 14:39:55 +0000 UTC 2024-05-05 14:39:55 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0505 14:39:56.732936 21 deployment.go:575] Observed Deployment test-deployment-9vvb8 in namespace deployment-1540 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-05 14:39:55 +0000 UTC 2024-05-05 14:39:54 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9vvb8-c8586b885" has successfully progressed.}
  I0505 14:39:56.732955 21 deployment.go:572] Found Deployment test-deployment-9vvb8 in namespace deployment-1540 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0505 14:39:56.732962 21 deployment.go:583] Deployment test-deployment-9vvb8 has an updated status
  STEP: patching the Statefulset Status @ 05/05/24 14:39:56.732
  I0505 14:39:56.732983 21 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0505 14:39:56.737454 21 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 05/05/24 14:39:56.737
  I0505 14:39:56.738991 21 deployment.go:616] Observed &Deployment event: ADDED
  I0505 14:39:56.739013 21 deployment.go:612] Observed deployment test-deployment-9vvb8 in namespace deployment-1540 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-05 14:39:54 +0000 UTC 2024-05-05 14:39:54 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-9vvb8-c8586b885"}
  I0505 14:39:56.739127 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0505 14:39:56.739164 21 deployment.go:612] Observed deployment test-deployment-9vvb8 in namespace deployment-1540 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-05 14:39:54 +0000 UTC 2024-05-05 14:39:54 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-9vvb8-c8586b885"}
  I0505 14:39:56.739173 21 deployment.go:612] Observed deployment test-deployment-9vvb8 in namespace deployment-1540 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-05 14:39:54 +0000 UTC 2024-05-05 14:39:54 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0505 14:39:56.739250 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0505 14:39:56.739261 21 deployment.go:612] Observed deployment test-deployment-9vvb8 in namespace deployment-1540 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-05 14:39:54 +0000 UTC 2024-05-05 14:39:54 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0505 14:39:56.739269 21 deployment.go:612] Observed deployment test-deployment-9vvb8 in namespace deployment-1540 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-05 14:39:54 +0000 UTC 2024-05-05 14:39:54 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-9vvb8-c8586b885" is progressing.}
  I0505 14:39:56.739305 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0505 14:39:56.739783 21 deployment.go:612] Observed deployment test-deployment-9vvb8 in namespace deployment-1540 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-05 14:39:55 +0000 UTC 2024-05-05 14:39:55 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0505 14:39:56.740098 21 deployment.go:612] Observed deployment test-deployment-9vvb8 in namespace deployment-1540 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-05 14:39:55 +0000 UTC 2024-05-05 14:39:54 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9vvb8-c8586b885" has successfully progressed.}
  I0505 14:39:56.740173 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0505 14:39:56.740188 21 deployment.go:612] Observed deployment test-deployment-9vvb8 in namespace deployment-1540 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-05 14:39:55 +0000 UTC 2024-05-05 14:39:55 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0505 14:39:56.740196 21 deployment.go:612] Observed deployment test-deployment-9vvb8 in namespace deployment-1540 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-05 14:39:55 +0000 UTC 2024-05-05 14:39:54 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9vvb8-c8586b885" has successfully progressed.}
  I0505 14:39:56.740203 21 deployment.go:612] Observed deployment test-deployment-9vvb8 in namespace deployment-1540 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0505 14:39:56.740251 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0505 14:39:56.740263 21 deployment.go:609] Found deployment test-deployment-9vvb8 in namespace deployment-1540 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0505 14:39:56.740270 21 deployment.go:620] Deployment test-deployment-9vvb8 has a patched status
  I0505 14:39:56.743381 21 deployment.go:633] Deployment "test-deployment-9vvb8":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-9vvb8",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1540",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bc9aa514-92a8-4694-9275-e8a6436d7b1c",
      ResourceVersion: (string) (len=5) "27357",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516794,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516794,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-9vvb8-c8586b885\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0505 14:39:56.749761 21 deployment.go:39] New ReplicaSet "test-deployment-9vvb8-c8586b885" of Deployment "test-deployment-9vvb8":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-9vvb8-c8586b885",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1540",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8468e278-5bd5-4706-b696-f3bd3df4fa37",
      ResourceVersion: (string) (len=5) "27352",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516794,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-9vvb8",
          UID: (types.UID) (len=36) "bc9aa514-92a8-4694-9275-e8a6436d7b1c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516794,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 62 63 39  |k:{\"uid\":\"bc9|
              00000120  61 61 35 31 34 2d 39 32  61 38 2d 34 36 39 34 2d  |aa514-92a8-4694-|
              00000130  39 32 37 35 2d 65 38 61  36 34 33 36 64 37 62 31  |9275-e8a6436d7b1|
              00000140  63 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |c\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0505 14:39:56.754603 21 deployment.go:67] Pod "test-deployment-9vvb8-c8586b885-445nt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-9vvb8-c8586b885-445nt",
      GenerateName: (string) (len=32) "test-deployment-9vvb8-c8586b885-",
      Namespace: (string) (len=15) "deployment-1540",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "48280040-0bed-483a-b92f-3750192a105c",
      ResourceVersion: (string) (len=5) "27351",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516794,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.163/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.163/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "703c5b996bed9deb029d495627bdd017e9e813ac60d3e31fb223103563327766"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-9vvb8-c8586b885",
          UID: (types.UID) (len=36) "8468e278-5bd5-4706-b696-f3bd3df4fa37",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516794,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 38 34 36 38 65 32 37  38 2d 35 62 64 35 2d 34  |"8468e278-5bd5-4|
              000000a0  37 30 36 2d 62 36 39 36  2d 66 33 62 64 33 64 66  |706-b696-f3bd3df|
              000000b0  34 66 61 33 37 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |4fa37\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 36 33 5c 22 7d 22  |.200.131.163\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wc9kk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wc9kk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516794,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516794,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.163",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.163"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516794,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850516795,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c41d9952feebaa839b8a8d7e4759ab8b2ce17152e3ccb881b2e099cb5ef75edb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:39:56.756957 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1540" for this suite. @ 05/05/24 14:39:56.762
• [2.071 seconds]
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 05/05/24 14:39:56.77
  I0505 14:39:56.770796 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 14:39:56.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:39:56.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:39:56.788
  STEP: Creating a pod to test emptydir volume type on node default medium @ 05/05/24 14:39:56.789
  E0505 14:39:57.475611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:58.475966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:39:59.475891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:00.476021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 14:40:00.807
  I0505 14:40:00.810831 21 output.go:196] Trying to get logs from node worker01 pod pod-f95a29ba-3823-4a31-ac86-a2ca43b2fc3d container test-container: <nil>
  STEP: delete the pod @ 05/05/24 14:40:00.821
  I0505 14:40:00.843504 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1441" for this suite. @ 05/05/24 14:40:00.847
• [4.085 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 05/05/24 14:40:00.854
  I0505 14:40:00.854899 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename resourcequota @ 05/05/24 14:40:00.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:40:00.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:40:00.867
  STEP: Creating a ResourceQuota with best effort scope @ 05/05/24 14:40:00.868
  STEP: Ensuring ResourceQuota status is calculated @ 05/05/24 14:40:00.87
  E0505 14:40:01.476641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:02.478550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 05/05/24 14:40:02.876
  STEP: Ensuring ResourceQuota status is calculated @ 05/05/24 14:40:02.879
  E0505 14:40:03.481736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:04.481936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 05/05/24 14:40:04.885
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 05/05/24 14:40:04.906
  E0505 14:40:05.483203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:06.483449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 05/05/24 14:40:06.909
  E0505 14:40:07.485163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:08.485150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/05/24 14:40:08.915
  STEP: Ensuring resource quota status released the pod usage @ 05/05/24 14:40:08.94
  E0505 14:40:09.486318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:10.487093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 05/05/24 14:40:10.946
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 05/05/24 14:40:10.97
  E0505 14:40:11.487749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:12.488076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 05/05/24 14:40:12.974
  E0505 14:40:13.489559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:14.490143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/05/24 14:40:14.977
  STEP: Ensuring resource quota status released the pod usage @ 05/05/24 14:40:14.994
  E0505 14:40:15.490304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:16.490642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:40:16.999509 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2540" for this suite. @ 05/05/24 14:40:17.003
• [16.163 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 05/05/24 14:40:17.017
  I0505 14:40:17.018184 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename container-runtime @ 05/05/24 14:40:17.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:40:17.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:40:17.032
  STEP: create the container @ 05/05/24 14:40:17.033
  W0505 14:40:17.036973      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 05/05/24 14:40:17.037
  E0505 14:40:17.491341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:18.491661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 05/05/24 14:40:19.045
  STEP: the container should be terminated @ 05/05/24 14:40:19.047
  STEP: the termination message should be set @ 05/05/24 14:40:19.047
  I0505 14:40:19.047091 21 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/05/24 14:40:19.047
  I0505 14:40:19.057252 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3542" for this suite. @ 05/05/24 14:40:19.06
• [2.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 05/05/24 14:40:19.064
  I0505 14:40:19.064470 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/05/24 14:40:19.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:40:19.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:40:19.076
  I0505 14:40:19.079032 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  E0505 14:40:19.491715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/05/24 14:40:20.272
  I0505 14:40:20.273011 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-526 --namespace=crd-publish-openapi-526 create -f -'
  E0505 14:40:20.492626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:21.494346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:40:22.336451 21 builder.go:146] stderr: ""
  I0505 14:40:22.336543 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-389-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0505 14:40:22.336794 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-526 --namespace=crd-publish-openapi-526 delete e2e-test-crd-publish-openapi-389-crds test-cr'
  I0505 14:40:22.385209 21 builder.go:146] stderr: ""
  I0505 14:40:22.385246 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-389-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0505 14:40:22.385282 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-526 --namespace=crd-publish-openapi-526 apply -f -'
  I0505 14:40:22.432160 21 builder.go:146] stderr: ""
  I0505 14:40:22.432192 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-389-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0505 14:40:22.432242 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-526 --namespace=crd-publish-openapi-526 delete e2e-test-crd-publish-openapi-389-crds test-cr'
  I0505 14:40:22.471502 21 builder.go:146] stderr: ""
  I0505 14:40:22.471531 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-389-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/05/24 14:40:22.471
  I0505 14:40:22.471591 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-526 explain e2e-test-crd-publish-openapi-389-crds'
  E0505 14:40:22.495004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:40:22.508230 21 builder.go:146] stderr: ""
  I0505 14:40:22.508275 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-389-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0505 14:40:23.496051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:40:23.723092 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-526" for this suite. @ 05/05/24 14:40:23.728
• [4.676 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 05/05/24 14:40:23.74
  I0505 14:40:23.740901 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename watch @ 05/05/24 14:40:23.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:40:23.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:40:23.756
  STEP: creating a new configmap @ 05/05/24 14:40:23.758
  STEP: modifying the configmap once @ 05/05/24 14:40:23.76
  STEP: modifying the configmap a second time @ 05/05/24 14:40:23.764
  STEP: deleting the configmap @ 05/05/24 14:40:23.767
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 05/05/24 14:40:23.769
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 05/05/24 14:40:23.77
  I0505 14:40:23.771180 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-8472  16643c23-bfe8-4dd2-be95-1cfd7de0fd69 27613 0 2024-05-05 14:40:23 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-05-05 14:40:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0505 14:40:23.771277 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-8472  16643c23-bfe8-4dd2-be95-1cfd7de0fd69 27614 0 2024-05-05 14:40:23 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-05-05 14:40:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0505 14:40:23.771329 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8472" for this suite. @ 05/05/24 14:40:23.773
• [0.034 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 05/05/24 14:40:23.775
  I0505 14:40:23.775174 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename kubelet-test @ 05/05/24 14:40:23.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:40:23.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:40:23.784
  E0505 14:40:24.496740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:25.497176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:40:25.801642 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5332" for this suite. @ 05/05/24 14:40:25.804
• [2.043 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 05/05/24 14:40:25.817
  I0505 14:40:25.817940 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename configmap @ 05/05/24 14:40:25.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:40:25.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:40:25.835
  I0505 14:40:25.854439 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1272" for this suite. @ 05/05/24 14:40:25.856
• [0.042 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 05/05/24 14:40:25.859
  I0505 14:40:25.859664 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename gc @ 05/05/24 14:40:25.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:40:25.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:40:25.875
  STEP: create the rc @ 05/05/24 14:40:25.878
  W0505 14:40:25.881760      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0505 14:40:26.498816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:27.500216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:28.503019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:29.523145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 05/05/24 14:40:29.903
  STEP: wait for the rc to be deleted @ 05/05/24 14:40:29.924
  E0505 14:40:30.523218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:40:30.969151 21 garbage_collector.go:670] 80 pods remaining
  I0505 14:40:30.969192 21 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0505 14:40:30.969202 21 garbage_collector.go:678] 
  E0505 14:40:31.524293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:40:31.975905 21 garbage_collector.go:670] 71 pods remaining
  I0505 14:40:31.975964 21 garbage_collector.go:677] 71 pods has nil DeletionTimestamp
  I0505 14:40:31.975973 21 garbage_collector.go:678] 
  E0505 14:40:32.524480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:40:32.960449 21 garbage_collector.go:670] 59 pods remaining
  I0505 14:40:32.960493 21 garbage_collector.go:677] 59 pods has nil DeletionTimestamp
  I0505 14:40:32.960504 21 garbage_collector.go:678] 
  E0505 14:40:33.552294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:40:33.955647 21 garbage_collector.go:670] 40 pods remaining
  I0505 14:40:33.955686 21 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0505 14:40:33.955696 21 garbage_collector.go:678] 
  E0505 14:40:34.553527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:40:34.969816 21 garbage_collector.go:670] 31 pods remaining
  I0505 14:40:34.970765 21 garbage_collector.go:677] 31 pods has nil DeletionTimestamp
  I0505 14:40:34.970784 21 garbage_collector.go:678] 
  E0505 14:40:35.553586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:40:35.956087 21 garbage_collector.go:670] 19 pods remaining
  I0505 14:40:35.956119 21 garbage_collector.go:677] 19 pods has nil DeletionTimestamp
  I0505 14:40:35.956129 21 garbage_collector.go:678] 
  E0505 14:40:36.556316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:40:36.982497 21 garbage_collector.go:670] 0 pods remaining
  I0505 14:40:36.982545 21 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0505 14:40:36.982554 21 garbage_collector.go:678] 
  E0505 14:40:37.558338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/05/24 14:40:37.93
  I0505 14:40:38.081264 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0505 14:40:38.081747 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8828" for this suite. @ 05/05/24 14:40:38.093
• [12.247 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 05/05/24 14:40:38.106
  I0505 14:40:38.106639 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename deployment @ 05/05/24 14:40:38.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:40:38.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:40:38.126
  I0505 14:40:38.129466 21 deployment.go:1196] Creating deployment "webserver-deployment"
  I0505 14:40:38.134281 21 deployment.go:1200] Waiting for observed generation 1
  E0505 14:40:38.559374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:39.559553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:40:40.150330 21 deployment.go:1205] Waiting for all required pods to come up
  I0505 14:40:40.156297 21 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 05/05/24 14:40:40.156
  E0505 14:40:40.560568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:41.560696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:42.560930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:43.562212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:40:44.180273 21 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0505 14:40:44.186174 21 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0505 14:40:44.196208 21 deployment.go:313] Updating deployment webserver-deployment
  I0505 14:40:44.196252 21 deployment.go:1224] Waiting for observed generation 2
  E0505 14:40:44.562492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:45.564084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:40:46.205499 21 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0505 14:40:46.208405 21 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0505 14:40:46.211712 21 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0505 14:40:46.218507 21 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0505 14:40:46.218546 21 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0505 14:40:46.221265 21 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0505 14:40:46.226828 21 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0505 14:40:46.226884 21 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0505 14:40:46.237057 21 deployment.go:313] Updating deployment webserver-deployment
  I0505 14:40:46.237273 21 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0505 14:40:46.245135 21 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0505 14:40:46.249236 21 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0505 14:40:46.287377 21 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "322535dd-cb8c-4586-a036-4772aaa9e079",
      ResourceVersion: (string) (len=5) "29984",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-67c89d485c\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0505 14:40:46.341200 21 deployment.go:39] New ReplicaSet "webserver-deployment-67c89d485c" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-67c89d485c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b2edf6ab-16b3-42d0-a4e9-c9c763f999cb",
      ResourceVersion: (string) (len=5) "29978",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "322535dd-cb8c-4586-a036-4772aaa9e079",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 32 32 35 33 35  64 64 2d 63 62 38 63 2d  |\"322535dd-cb8c-|
              00000120  34 35 38 36 2d 61 30 33  36 2d 34 37 37 32 61 61  |4586-a036-4772aa|
              00000130  61 39 65 30 37 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a9e079\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0505 14:40:46.343978 21 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I0505 14:40:46.346296 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-77db57d8df",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "96943855-139e-41c3-9af1-d0f976ccacf5",
      ResourceVersion: (string) (len=5) "29975",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "322535dd-cb8c-4586-a036-4772aaa9e079",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 32 32 35 33 35  64 64 2d 63 62 38 63 2d  |\"322535dd-cb8c-|
              00000120  34 35 38 36 2d 61 30 33  36 2d 34 37 37 32 61 61  |4586-a036-4772aa|
              00000130  61 39 65 30 37 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a9e079\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0505 14:40:46.375990 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-7n5bk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-7n5bk",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8c1be06f-e9f5-4aff-b2b1-f103fac6aadd",
      ResourceVersion: (string) (len=5) "30022",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516846,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "b2edf6ab-16b3-42d0-a4e9-c9c763f999cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 32  65 64 66 36 61 62 2d 31  |d\":\"b2edf6ab-1|
              00000090  36 62 33 2d 34 32 64 30  2d 61 34 65 39 2d 63 39  |6b3-42d0-a4e9-c9|
              000000a0  63 37 36 33 66 39 39 39  63 62 5c 22 7d 22 3a 7b  |c763f999cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-whhx8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-whhx8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:46.379896 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-8xdsv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-8xdsv",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "183572ce-a56b-42e6-90d2-bdd93d5c1960",
      ResourceVersion: (string) (len=5) "30025",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516846,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "b2edf6ab-16b3-42d0-a4e9-c9c763f999cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 32  65 64 66 36 61 62 2d 31  |d\":\"b2edf6ab-1|
              00000090  36 62 33 2d 34 32 64 30  2d 61 34 65 39 2d 63 39  |6b3-42d0-a4e9-c9|
              000000a0  63 37 36 33 66 39 39 39  63 62 5c 22 7d 22 3a 7b  |c763f999cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4qx8w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4qx8w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:46.387619 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-9mdc7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-9mdc7",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c01b895-cdf5-42c1-8f66-3daf81e01536",
      ResourceVersion: (string) (len=5) "29960",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "14a76974bcdd0f09984426ffa4382df883bfb55801ebef9a12af668de2a6ad2c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.153/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.153/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "b2edf6ab-16b3-42d0-a4e9-c9c763f999cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 32  65 64 66 36 61 62 2d 31  |d\":\"b2edf6ab-1|
              00000090  36 62 33 2d 34 32 64 30  2d 61 34 65 39 2d 63 39  |6b3-42d0-a4e9-c9|
              000000a0  63 37 36 33 66 39 39 39  63 62 5c 22 7d 22 3a 7b  |c763f999cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-996zk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-996zk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:46.394584 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-bgvs8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-bgvs8",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "db2998a6-bd93-454f-b3c3-9556d722e60f",
      ResourceVersion: (string) (len=5) "30023",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516846,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "b2edf6ab-16b3-42d0-a4e9-c9c763f999cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 32  65 64 66 36 61 62 2d 31  |d\":\"b2edf6ab-1|
              00000090  36 62 33 2d 34 32 64 30  2d 61 34 65 39 2d 63 39  |6b3-42d0-a4e9-c9|
              000000a0  63 37 36 33 66 39 39 39  63 62 5c 22 7d 22 3a 7b  |c763f999cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gzqq6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gzqq6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:46.401584 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-gp82g" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-gp82g",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "92424379-fb3f-4b06-9b85-0d3fbdeb6181",
      ResourceVersion: (string) (len=5) "30028",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516846,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "b2edf6ab-16b3-42d0-a4e9-c9c763f999cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 32  65 64 66 36 61 62 2d 31  |d\":\"b2edf6ab-1|
              00000090  36 62 33 2d 34 32 64 30  2d 61 34 65 39 2d 63 39  |6b3-42d0-a4e9-c9|
              000000a0  63 37 36 33 66 39 39 39  63 62 5c 22 7d 22 3a 7b  |c763f999cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qm5b9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qm5b9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:46.408634 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-j6tfm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-j6tfm",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "71cc14a3-cbfa-4080-a0b7-25a2a0f44ed2",
      ResourceVersion: (string) (len=5) "30033",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516846,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "b2edf6ab-16b3-42d0-a4e9-c9c763f999cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 32  65 64 66 36 61 62 2d 31  |d\":\"b2edf6ab-1|
              00000090  36 62 33 2d 34 32 64 30  2d 61 34 65 39 2d 63 39  |6b3-42d0-a4e9-c9|
              000000a0  63 37 36 33 66 39 39 39  63 62 5c 22 7d 22 3a 7b  |c763f999cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jmwmd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jmwmd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:46.423272 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-nzv9h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-nzv9h",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f9aaa0ef-5eaa-4d61-bda1-0eae55b2accb",
      ResourceVersion: (string) (len=5) "29949",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.158/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.158/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "81013645e833fd857e4a333eeeaa1266da97f593280754e8a31ac652e4cbd8ae"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "b2edf6ab-16b3-42d0-a4e9-c9c763f999cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 32  65 64 66 36 61 62 2d 31  |d\":\"b2edf6ab-1|
              00000090  36 62 33 2d 34 32 64 30  2d 61 34 65 39 2d 63 39  |6b3-42d0-a4e9-c9|
              000000a0  63 37 36 33 66 39 39 39  63 62 5c 22 7d 22 3a 7b  |c763f999cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h5xbk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h5xbk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:46.452328 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-p7csw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-p7csw",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "864ccb4a-906c-4414-a5fd-d84468ca16eb",
      ResourceVersion: (string) (len=5) "29947",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.21/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.21/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9ac9ac811f0ece8e153e23a27e19c52e8d0417ad0c9bf96f59ec0576a2a661b7"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "b2edf6ab-16b3-42d0-a4e9-c9c763f999cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 32  65 64 66 36 61 62 2d 31  |d\":\"b2edf6ab-1|
              00000090  36 62 33 2d 34 32 64 30  2d 61 34 65 39 2d 63 39  |6b3-42d0-a4e9-c9|
              000000a0  63 37 36 33 66 39 39 39  63 62 5c 22 7d 22 3a 7b  |c763f999cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qf4ck",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qf4ck",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:46.499729 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-r4sr7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-r4sr7",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cd813fd4-c3a8-475c-a29f-a7a4209441e3",
      ResourceVersion: (string) (len=5) "29956",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "84eeba96282b0fe64548ccf4e96197447d9b71c06fae8c34dbda3de4afbaf9fc",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.24/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.24/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "b2edf6ab-16b3-42d0-a4e9-c9c763f999cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 32  65 64 66 36 61 62 2d 31  |d\":\"b2edf6ab-1|
              00000090  36 62 33 2d 34 32 64 30  2d 61 34 65 39 2d 63 39  |6b3-42d0-a4e9-c9|
              000000a0  63 37 36 33 66 39 39 39  63 62 5c 22 7d 22 3a 7b  |c763f999cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2vmps",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2vmps",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:46.532392 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-tv29m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-tv29m",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8fdb0ebc-f820-4ac7-957c-4f171af6bed4",
      ResourceVersion: (string) (len=5) "30013",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516846,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "b2edf6ab-16b3-42d0-a4e9-c9c763f999cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 32  65 64 66 36 61 62 2d 31  |d\":\"b2edf6ab-1|
              00000090  36 62 33 2d 34 32 64 30  2d 61 34 65 39 2d 63 39  |6b3-42d0-a4e9-c9|
              000000a0  63 37 36 33 66 39 39 39  63 62 5c 22 7d 22 3a 7b  |c763f999cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-msr67",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-msr67",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:46.561344 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-v52m2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-v52m2",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "41c5c419-0478-424b-a874-55ea0a9752c0",
      ResourceVersion: (string) (len=5) "29964",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0136213bb903e23d866e2ac6820415b56fb60a7cd61b7dc5d5e8eafb000a4780",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.44/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.44/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "b2edf6ab-16b3-42d0-a4e9-c9c763f999cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 32  65 64 66 36 61 62 2d 31  |d\":\"b2edf6ab-1|
              00000090  36 62 33 2d 34 32 64 30  2d 61 34 65 39 2d 63 39  |6b3-42d0-a4e9-c9|
              000000a0  63 37 36 33 66 39 39 39  63 62 5c 22 7d 22 3a 7b  |c763f999cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mm6xb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mm6xb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  E0505 14:40:46.566075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:40:46.570076 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-zht7j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-zht7j",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9d67c9c1-aa71-41cf-86a8-12620d3d6627",
      ResourceVersion: (string) (len=5) "30011",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516846,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "b2edf6ab-16b3-42d0-a4e9-c9c763f999cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 32  65 64 66 36 61 62 2d 31  |d\":\"b2edf6ab-1|
              00000090  36 62 33 2d 34 32 64 30  2d 61 34 65 39 2d 63 39  |6b3-42d0-a4e9-c9|
              000000a0  63 37 36 33 66 39 39 39  63 62 5c 22 7d 22 3a 7b  |c763f999cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t5cjl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t5cjl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:46.595413 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-zpp4j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-zpp4j",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "94406828-ad00-4310-bf80-de37dc241522",
      ResourceVersion: (string) (len=5) "29995",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516846,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "b2edf6ab-16b3-42d0-a4e9-c9c763f999cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 32  65 64 66 36 61 62 2d 31  |d\":\"b2edf6ab-1|
              00000090  36 62 33 2d 34 32 64 30  2d 61 34 65 39 2d 63 39  |6b3-42d0-a4e9-c9|
              000000a0  63 37 36 33 66 39 39 39  63 62 5c 22 7d 22 3a 7b  |c763f999cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-682sn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-682sn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:46.608825 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-5dw44" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-5dw44",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e8fcb208-88b0-4730-826f-b0d5c5d66a96",
      ResourceVersion: (string) (len=5) "30026",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516846,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "96943855-139e-41c3-9af1-d0f976ccacf5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 36  39 34 33 38 35 35 2d 31  |d\":\"96943855-1|
              00000090  33 39 65 2d 34 31 63 33  2d 39 61 66 31 2d 64 30  |39e-41c3-9af1-d0|
              000000a0  66 39 37 36 63 63 61 63  66 35 5c 22 7d 22 3a 7b  |f976ccacf5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7c2gm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7c2gm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:46.661671 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-68j95" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-68j95",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "42b5a432-0ec0-4bd8-995f-54801baf870e",
      ResourceVersion: (string) (len=5) "29999",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516846,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "96943855-139e-41c3-9af1-d0f976ccacf5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 36  39 34 33 38 35 35 2d 31  |d\":\"96943855-1|
              00000090  33 39 65 2d 34 31 63 33  2d 39 61 66 31 2d 64 30  |39e-41c3-9af1-d0|
              000000a0  66 39 37 36 63 63 61 63  66 35 5c 22 7d 22 3a 7b  |f976ccacf5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7h6l6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7h6l6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516846,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:46.689294 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-7rtgd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-7rtgd",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1bbc81da-5ef7-4393-8426-0314a7bd2fc8",
      ResourceVersion: (string) (len=5) "30021",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516846,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "96943855-139e-41c3-9af1-d0f976ccacf5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 36  39 34 33 38 35 35 2d 31  |d\":\"96943855-1|
              00000090  33 39 65 2d 34 31 63 33  2d 39 61 66 31 2d 64 30  |39e-41c3-9af1-d0|
              000000a0  66 39 37 36 63 63 61 63  66 35 5c 22 7d 22 3a 7b  |f976ccacf5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wk6rf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wk6rf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:46.709603 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-b49fp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-b49fp",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bf9b561a-7a6c-42c5-a9bf-beb26722b7c8",
      ResourceVersion: (string) (len=5) "29498",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.38/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "91912d6c8d7da163fbc235d55c6678bcddab0da07ac6d4d57c5b3b904bd4ef4b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.38/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "96943855-139e-41c3-9af1-d0f976ccacf5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 36  39 34 33 38 35 35 2d 31  |d\":\"96943855-1|
              00000090  33 39 65 2d 34 31 63 33  2d 39 61 66 31 2d 64 30  |39e-41c3-9af1-d0|
              000000a0  66 39 37 36 63 63 61 63  66 35 5c 22 7d 22 3a 7b  |f976ccacf5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 33  38 5c 22 7d 22 3a 7b 22  |.200.5.38\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dwhhr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dwhhr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.38",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.38"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516837,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850516841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4a6ec097af427d314cbeeea4eb5ce3e47a910b87dc541efc968d16150d4973f9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:46.742505 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-fgfrx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-fgfrx",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "47429826-0736-4e37-b845-feb57716ef6e",
      ResourceVersion: (string) (len=5) "30020",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516846,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "96943855-139e-41c3-9af1-d0f976ccacf5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 36  39 34 33 38 35 35 2d 31  |d\":\"96943855-1|
              00000090  33 39 65 2d 34 31 63 33  2d 39 61 66 31 2d 64 30  |39e-41c3-9af1-d0|
              000000a0  66 39 37 36 63 63 61 63  66 35 5c 22 7d 22 3a 7b  |f976ccacf5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pj5z2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pj5z2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516845,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:46.760597 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-jcmr8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-jcmr8",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c0577c07-cd40-4878-adbd-6acee050f776",
      ResourceVersion: (string) (len=5) "30008",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516846,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "96943855-139e-41c3-9af1-d0f976ccacf5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 36  39 34 33 38 35 35 2d 31  |d\":\"96943855-1|
              00000090  33 39 65 2d 34 31 63 33  2d 39 61 66 31 2d 64 30  |39e-41c3-9af1-d0|
              000000a0  66 39 37 36 63 63 61 63  66 35 5c 22 7d 22 3a 7b  |f976ccacf5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bjx8x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bjx8x",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:46.779593 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-k7c8c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-k7c8c",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4d0504ac-9cbe-4e23-bfd0-919cb8d0b050",
      ResourceVersion: (string) (len=5) "30002",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516846,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "96943855-139e-41c3-9af1-d0f976ccacf5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 36  39 34 33 38 35 35 2d 31  |d\":\"96943855-1|
              00000090  33 39 65 2d 34 31 63 33  2d 39 61 66 31 2d 64 30  |39e-41c3-9af1-d0|
              000000a0  66 39 37 36 63 63 61 63  66 35 5c 22 7d 22 3a 7b  |f976ccacf5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-744kq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-744kq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:46.813614 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-kn6qf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-kn6qf",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9b9a7afc-5029-4f6c-b568-9fb9172b52f1",
      ResourceVersion: (string) (len=5) "30030",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516846,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "96943855-139e-41c3-9af1-d0f976ccacf5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 36  39 34 33 38 35 35 2d 31  |d\":\"96943855-1|
              00000090  33 39 65 2d 34 31 63 33  2d 39 61 66 31 2d 64 30  |39e-41c3-9af1-d0|
              000000a0  66 39 37 36 63 63 61 63  66 35 5c 22 7d 22 3a 7b  |f976ccacf5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9ccz9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9ccz9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516846,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:46.880532 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-kvh5z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-kvh5z",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3e981e82-3e81-4c37-81d0-c58ddac6c136",
      ResourceVersion: (string) (len=5) "30014",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516846,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "96943855-139e-41c3-9af1-d0f976ccacf5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 36  39 34 33 38 35 35 2d 31  |d\":\"96943855-1|
              00000090  33 39 65 2d 34 31 63 33  2d 39 61 66 31 2d 64 30  |39e-41c3-9af1-d0|
              000000a0  66 39 37 36 63 63 61 63  66 35 5c 22 7d 22 3a 7b  |f976ccacf5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tdct4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tdct4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:46.906381 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-kz2df" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-kz2df",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1f562aaf-604d-4db9-ac1b-67e062cea5a5",
      ResourceVersion: (string) (len=5) "30017",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516846,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "96943855-139e-41c3-9af1-d0f976ccacf5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 36  39 34 33 38 35 35 2d 31  |d\":\"96943855-1|
              00000090  33 39 65 2d 34 31 63 33  2d 39 61 66 31 2d 64 30  |39e-41c3-9af1-d0|
              000000a0  66 39 37 36 63 63 61 63  66 35 5c 22 7d 22 3a 7b  |f976ccacf5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-94r95",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-94r95",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:46.939078 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-m42t9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-m42t9",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "10d745d3-e8fe-446f-ae81-fa3a3ba3ca58",
      ResourceVersion: (string) (len=5) "29452",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "85cf7213795ccc888747e1235e3c763946fff3b919b6e95b30a5833c383a6759",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.151/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.151/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "96943855-139e-41c3-9af1-d0f976ccacf5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 36  39 34 33 38 35 35 2d 31  |d\":\"96943855-1|
              00000090  33 39 65 2d 34 31 63 33  2d 39 61 66 31 2d 64 30  |39e-41c3-9af1-d0|
              000000a0  66 39 37 36 63 63 61 63  66 35 5c 22 7d 22 3a 7b  |f976ccacf5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 35 31 5c 22 7d 22  |.200.131.151\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mmnz6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mmnz6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.151",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.151"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850516841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://29dbe8fb5a1f0eb3cfefc957b096c56fca545c86495eb9990280984dea3e866f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:46.954176 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-mqtr2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-mqtr2",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a7610a3f-ea86-4bd6-a67e-a255c3f6a399",
      ResourceVersion: (string) (len=5) "29489",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.152/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "291574666fa4388d0a6690ac1582c471b62e79d133ad04af6fe5b24d8acd1699",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.152/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "96943855-139e-41c3-9af1-d0f976ccacf5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 36  39 34 33 38 35 35 2d 31  |d\":\"96943855-1|
              00000090  33 39 65 2d 34 31 63 33  2d 39 61 66 31 2d 64 30  |39e-41c3-9af1-d0|
              000000a0  66 39 37 36 63 63 61 63  66 35 5c 22 7d 22 3a 7b  |f976ccacf5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 35 32 5c 22 7d 22  |.200.131.152\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zmvhs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zmvhs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.152",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.152"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850516842,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9305a56b0644bd5314943dc6567cffdec6cf322cf52ec4b575e0feaf2a068173",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:46.975656 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-mztc2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-mztc2",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "55992486-1ad8-4e83-87e1-4e9f1e8851f0",
      ResourceVersion: (string) (len=5) "30024",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516846,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "96943855-139e-41c3-9af1-d0f976ccacf5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 36  39 34 33 38 35 35 2d 31  |d\":\"96943855-1|
              00000090  33 39 65 2d 34 31 63 33  2d 39 61 66 31 2d 64 30  |39e-41c3-9af1-d0|
              000000a0  66 39 37 36 63 63 61 63  66 35 5c 22 7d 22 3a 7b  |f976ccacf5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v8nr9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v8nr9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:46.985498 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-n8dz8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-n8dz8",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "827bbd81-345e-4cbb-b709-d3e981a4ff6a",
      ResourceVersion: (string) (len=5) "29998",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516846,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "96943855-139e-41c3-9af1-d0f976ccacf5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 36  39 34 33 38 35 35 2d 31  |d\":\"96943855-1|
              00000090  33 39 65 2d 34 31 63 33  2d 39 61 66 31 2d 64 30  |39e-41c3-9af1-d0|
              000000a0  66 39 37 36 63 63 61 63  66 35 5c 22 7d 22 3a 7b  |f976ccacf5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zvctp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zvctp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:46.991398 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-prckx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-prckx",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4e058a42-91f4-4073-ab92-de6152c55c8a",
      ResourceVersion: (string) (len=5) "30027",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516846,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "96943855-139e-41c3-9af1-d0f976ccacf5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 36  39 34 33 38 35 35 2d 31  |d\":\"96943855-1|
              00000090  33 39 65 2d 34 31 63 33  2d 39 61 66 31 2d 64 30  |39e-41c3-9af1-d0|
              000000a0  66 39 37 36 63 63 61 63  66 35 5c 22 7d 22 3a 7b  |f976ccacf5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m4tg7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m4tg7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:46.997169 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-qp5bf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-qp5bf",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ec009c36-ae78-47fb-81b0-b2874e98642d",
      ResourceVersion: (string) (len=5) "29492",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "aea55945e52e711c935b910d326ec7643135fc66c42657cd388263fe07e085af",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.10/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.10/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "96943855-139e-41c3-9af1-d0f976ccacf5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 36  39 34 33 38 35 35 2d 31  |d\":\"96943855-1|
              00000090  33 39 65 2d 34 31 63 33  2d 39 61 66 31 2d 64 30  |39e-41c3-9af1-d0|
              000000a0  66 39 37 36 63 63 61 63  66 35 5c 22 7d 22 3a 7b  |f976ccacf5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 31  30 5c 22 7d 22 3a 7b 22  |.200.5.10\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v4f26",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v4f26",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.10",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.10"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516837,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850516841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://de4dcf700d5f9ed0d9d867950dc98157ab3f203c3d2f5ba7aa2e8419084d4c62",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:47.009032 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-r7h69" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-r7h69",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "76d0491d-0deb-4826-8e16-2cf36cbaf467",
      ResourceVersion: (string) (len=5) "29485",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f3723390e7f99c04e8f605bbcccff12d88b4da0f5f8412d176192751ecbc65fb",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.154/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.154/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "96943855-139e-41c3-9af1-d0f976ccacf5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 36  39 34 33 38 35 35 2d 31  |d\":\"96943855-1|
              00000090  33 39 65 2d 34 31 63 33  2d 39 61 66 31 2d 64 30  |39e-41c3-9af1-d0|
              000000a0  66 39 37 36 63 63 61 63  66 35 5c 22 7d 22 3a 7b  |f976ccacf5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 35 34 5c 22 7d 22  |.200.131.154\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vntxl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vntxl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.154",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.154"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850516841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3cadda3dd8fe76d53e4fa179b01c494804a256a8e475bfc7294912fd3f181600",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:47.029328 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-rxs9l" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-rxs9l",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0b97113f-3aa2-475b-b013-dcf66f7778c3",
      ResourceVersion: (string) (len=5) "29495",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d9355d8e51963dd68f2251ddd36fbe052b51c6fba2305b339ffda906a90b04de",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.41/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.41/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "96943855-139e-41c3-9af1-d0f976ccacf5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 36  39 34 33 38 35 35 2d 31  |d\":\"96943855-1|
              00000090  33 39 65 2d 34 31 63 33  2d 39 61 66 31 2d 64 30  |39e-41c3-9af1-d0|
              000000a0  66 39 37 36 63 63 61 63  66 35 5c 22 7d 22 3a 7b  |f976ccacf5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 34  31 5c 22 7d 22 3a 7b 22  |.200.5.41\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hbbkq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hbbkq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.41",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.41"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516837,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850516841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d8ed404ff40e80f0b8ac449526c3c21ffadb8937063261624b51da9c01fb859d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:47.040580 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-s2ncd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-s2ncd",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8c874f88-0a33-4652-931a-2112b0f1899a",
      ResourceVersion: (string) (len=5) "29453",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c3674d43caf77462346bf386f23959789a7d54f27cbbccbb29ee45ed68e9272a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.29/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.29/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "96943855-139e-41c3-9af1-d0f976ccacf5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 36  39 34 33 38 35 35 2d 31  |d\":\"96943855-1|
              00000090  33 39 65 2d 34 31 63 33  2d 39 61 66 31 2d 64 30  |39e-41c3-9af1-d0|
              000000a0  66 39 37 36 63 63 61 63  66 35 5c 22 7d 22 3a 7b  |f976ccacf5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 32  39 5c 22 7d 22 3a 7b 22  |.200.5.29\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jgx4n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jgx4n",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.29",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.29"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516837,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850516841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b17c0521f7ee69d3f86f6f358076c6116d31dc73041e9dc59f97b34e5e14bd3b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:47.060492 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-x768q" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-x768q",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-9723",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8edf58e4-616f-4b73-8855-e9b789b98340",
      ResourceVersion: (string) (len=5) "29462",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "bdf34f22cf677c49f2c73d783f5ba104557152e28fdd045c3633d14288a0a45f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.49/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.49/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "96943855-139e-41c3-9af1-d0f976ccacf5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 36  39 34 33 38 35 35 2d 31  |d\":\"96943855-1|
              00000090  33 39 65 2d 34 31 63 33  2d 39 61 66 31 2d 64 30  |39e-41c3-9af1-d0|
              000000a0  66 39 37 36 63 63 61 63  66 35 5c 22 7d 22 3a 7b  |f976ccacf5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 34  39 5c 22 7d 22 3a 7b 22  |.200.5.49\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xptkl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xptkl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850516838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.49",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.49"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850516837,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850516841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2b6a21b08aa68e76ab2647d15416379b1ba176d8567de663736a335ee5a1608d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:40:47.068366 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9723" for this suite. @ 05/05/24 14:40:47.078
• [8.987 seconds]
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 05/05/24 14:40:47.097
  I0505 14:40:47.097389 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename proxy @ 05/05/24 14:40:47.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:40:47.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:40:47.158
  I0505 14:40:47.171882 21 proxy.go:293] Creating pod...
  E0505 14:40:47.566096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:48.571185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:49.568484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:50.571137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:40:51.295322 21 proxy.go:317] Creating service...
  I0505 14:40:51.331174 21 proxy.go:354] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1104/pods/agnhost/proxy/some/path/with/DELETE
  I0505 14:40:51.371174 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0505 14:40:51.371243 21 proxy.go:354] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1104/pods/agnhost/proxy/some/path/with/GET
  I0505 14:40:51.394580 21 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0505 14:40:51.394640 21 proxy.go:354] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1104/pods/agnhost/proxy/some/path/with/HEAD
  I0505 14:40:51.401662 21 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0505 14:40:51.401771 21 proxy.go:354] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1104/pods/agnhost/proxy/some/path/with/OPTIONS
  I0505 14:40:51.408536 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0505 14:40:51.408597 21 proxy.go:354] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1104/pods/agnhost/proxy/some/path/with/PATCH
  I0505 14:40:51.413350 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0505 14:40:51.413401 21 proxy.go:354] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1104/pods/agnhost/proxy/some/path/with/POST
  I0505 14:40:51.419852 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0505 14:40:51.419979 21 proxy.go:354] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1104/pods/agnhost/proxy/some/path/with/PUT
  I0505 14:40:51.425845 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0505 14:40:51.425940 21 proxy.go:365] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1104/services/test-service/proxy/some/path/with/DELETE
  I0505 14:40:51.437437 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0505 14:40:51.437505 21 proxy.go:365] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1104/services/test-service/proxy/some/path/with/GET
  I0505 14:40:51.449743 21 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0505 14:40:51.449802 21 proxy.go:365] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1104/services/test-service/proxy/some/path/with/HEAD
  I0505 14:40:51.459134 21 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0505 14:40:51.459288 21 proxy.go:365] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1104/services/test-service/proxy/some/path/with/OPTIONS
  I0505 14:40:51.466178 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0505 14:40:51.466255 21 proxy.go:365] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1104/services/test-service/proxy/some/path/with/PATCH
  I0505 14:40:51.473114 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0505 14:40:51.473169 21 proxy.go:365] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1104/services/test-service/proxy/some/path/with/POST
  I0505 14:40:51.480371 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0505 14:40:51.480441 21 proxy.go:365] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1104/services/test-service/proxy/some/path/with/PUT
  I0505 14:40:51.487358 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0505 14:40:51.487547 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1104" for this suite. @ 05/05/24 14:40:51.494
• [4.408 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 05/05/24 14:40:51.509
  I0505 14:40:51.509460 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename pods @ 05/05/24 14:40:51.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:40:51.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:40:51.534
  STEP: Create a pod @ 05/05/24 14:40:51.537
  E0505 14:40:51.571485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:52.595091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 05/05/24 14:40:53.565
  E0505 14:40:53.578909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:40:53.593932 21 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0505 14:40:53.594087 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1618" for this suite. @ 05/05/24 14:40:53.614
• [2.147 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 05/05/24 14:40:53.657
  I0505 14:40:53.658883 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename proxy @ 05/05/24 14:40:53.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:40:53.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:40:53.744
  I0505 14:40:53.760092 21 proxy.go:387] Creating pod...
  E0505 14:40:54.585727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:55.587108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:56.587788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:57.586725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:40:57.857488 21 proxy.go:411] Creating service...
  I0505 14:40:57.866835 21 proxy.go:448] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1391/pods/agnhost/proxy?method=DELETE
  I0505 14:40:57.879443 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0505 14:40:57.879547 21 proxy.go:448] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1391/pods/agnhost/proxy?method=OPTIONS
  I0505 14:40:57.883264 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0505 14:40:57.883300 21 proxy.go:448] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1391/pods/agnhost/proxy?method=PATCH
  I0505 14:40:57.887642 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0505 14:40:57.887688 21 proxy.go:448] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1391/pods/agnhost/proxy?method=POST
  I0505 14:40:57.890826 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0505 14:40:57.890862 21 proxy.go:448] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1391/pods/agnhost/proxy?method=PUT
  I0505 14:40:57.893444 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0505 14:40:57.893477 21 proxy.go:459] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1391/services/e2e-proxy-test-service/proxy?method=DELETE
  I0505 14:40:57.895815 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0505 14:40:57.895848 21 proxy.go:459] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1391/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0505 14:40:57.898213 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0505 14:40:57.898250 21 proxy.go:459] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1391/services/e2e-proxy-test-service/proxy?method=PATCH
  I0505 14:40:57.901768 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0505 14:40:57.901805 21 proxy.go:459] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1391/services/e2e-proxy-test-service/proxy?method=POST
  I0505 14:40:57.907477 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0505 14:40:57.907519 21 proxy.go:459] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1391/services/e2e-proxy-test-service/proxy?method=PUT
  I0505 14:40:57.909835 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0505 14:40:57.909968 21 proxy.go:479] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1391/pods/agnhost/proxy?method=GET
  I0505 14:40:57.912072 21 proxy.go:487] http.Client request:GET StatusCode:301
  I0505 14:40:57.912129 21 proxy.go:479] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1391/services/e2e-proxy-test-service/proxy?method=GET
  I0505 14:40:57.914286 21 proxy.go:487] http.Client request:GET StatusCode:301
  I0505 14:40:57.914316 21 proxy.go:479] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1391/pods/agnhost/proxy?method=HEAD
  I0505 14:40:57.915555 21 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0505 14:40:57.915646 21 proxy.go:479] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-1391/services/e2e-proxy-test-service/proxy?method=HEAD
  I0505 14:40:57.917774 21 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0505 14:40:57.917928 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1391" for this suite. @ 05/05/24 14:40:57.92
• [4.269 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 05/05/24 14:40:57.925
  I0505 14:40:57.925521 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 14:40:57.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:40:57.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:40:57.941
  STEP: Creating configMap with name projected-configmap-test-volume-ca87d9d0-5509-43d8-a6d7-9a2b69fcb572 @ 05/05/24 14:40:57.944
  STEP: Creating a pod to test consume configMaps @ 05/05/24 14:40:57.947
  E0505 14:40:58.587143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:40:59.588508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:00.589253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:01.590361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 14:41:01.976
  I0505 14:41:01.987276 21 output.go:196] Trying to get logs from node worker00 pod pod-projected-configmaps-25c9aa36-a936-4df7-bba1-89697a933e75 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 14:41:01.997
  I0505 14:41:02.020686 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8342" for this suite. @ 05/05/24 14:41:02.025
• [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 05/05/24 14:41:02.037
  I0505 14:41:02.037477 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename events @ 05/05/24 14:41:02.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:41:02.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:41:02.068
  STEP: creating a test event @ 05/05/24 14:41:02.074
  STEP: listing all events in all namespaces @ 05/05/24 14:41:02.083
  STEP: patching the test event @ 05/05/24 14:41:02.202
  STEP: fetching the test event @ 05/05/24 14:41:02.217
  STEP: updating the test event @ 05/05/24 14:41:02.226
  STEP: getting the test event @ 05/05/24 14:41:02.245
  STEP: deleting the test event @ 05/05/24 14:41:02.254
  STEP: listing all events in all namespaces @ 05/05/24 14:41:02.264
  I0505 14:41:02.285554 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6262" for this suite. @ 05/05/24 14:41:02.291
• [0.263 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 05/05/24 14:41:02.3
  I0505 14:41:02.300714 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename resourcequota @ 05/05/24 14:41:02.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:41:02.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:41:02.323
  STEP: Counting existing ResourceQuota @ 05/05/24 14:41:02.328
  E0505 14:41:02.591081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:03.591478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:04.592544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:05.593177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:06.593541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/05/24 14:41:07.329
  STEP: Ensuring resource quota status is calculated @ 05/05/24 14:41:07.332
  E0505 14:41:07.594346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:08.595558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:41:09.339502 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6652" for this suite. @ 05/05/24 14:41:09.343
• [7.046 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 05/05/24 14:41:09.347
  I0505 14:41:09.347125 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename security-context @ 05/05/24 14:41:09.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:41:09.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:41:09.359
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/05/24 14:41:09.36
  E0505 14:41:09.596556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:10.596718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:11.596785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:12.597391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 14:41:13.383
  I0505 14:41:13.387729 21 output.go:196] Trying to get logs from node worker00 pod security-context-b3cdbd0c-76cd-47ca-ad4a-f58026864109 container test-container: <nil>
  STEP: delete the pod @ 05/05/24 14:41:13.393
  I0505 14:41:13.412962 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8267" for this suite. @ 05/05/24 14:41:13.414
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 05/05/24 14:41:13.419
  I0505 14:41:13.419521 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/05/24 14:41:13.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:41:13.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:41:13.432
  I0505 14:41:13.437249 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-58" for this suite. @ 05/05/24 14:41:13.439
• [0.023 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 05/05/24 14:41:13.442
  I0505 14:41:13.442125 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename replicaset @ 05/05/24 14:41:13.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:41:13.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:41:13.458
  I0505 14:41:13.460564 21 replica_set.go:191] Creating ReplicaSet my-hostname-basic-fdbf4b65-895b-4517-a8d0-2b014d57847a
  I0505 14:41:13.466353 21 resource.go:87] Pod name my-hostname-basic-fdbf4b65-895b-4517-a8d0-2b014d57847a: Found 0 pods out of 1
  E0505 14:41:13.598706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:14.602415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:15.603982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:16.604866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:17.605049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:41:18.470237 21 resource.go:87] Pod name my-hostname-basic-fdbf4b65-895b-4517-a8d0-2b014d57847a: Found 1 pods out of 1
  I0505 14:41:18.470714 21 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-fdbf4b65-895b-4517-a8d0-2b014d57847a" is running
  I0505 14:41:18.473761 21 replica_set.go:220] Pod "my-hostname-basic-fdbf4b65-895b-4517-a8d0-2b014d57847a-znblf" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-05 14:41:14 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-05 14:41:13 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-05 14:41:14 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-05 14:41:14 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-05 14:41:13 +0000 UTC Reason: Message:}])
  I0505 14:41:18.473787 21 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/05/24 14:41:18.473
  I0505 14:41:18.479343 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5748" for this suite. @ 05/05/24 14:41:18.481
• [5.043 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 05/05/24 14:41:18.497
  I0505 14:41:18.497398 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename secrets @ 05/05/24 14:41:18.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:41:18.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:41:18.515
  STEP: creating secret secrets-4427/secret-test-d032c6a0-94f2-46b0-886a-f9986911d7b7 @ 05/05/24 14:41:18.518
  STEP: Creating a pod to test consume secrets @ 05/05/24 14:41:18.523
  E0505 14:41:18.606046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:19.607033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 14:41:20.575
  I0505 14:41:20.580500 21 output.go:196] Trying to get logs from node worker00 pod pod-configmaps-18c64075-2a00-432d-a62b-c4dde0647867 container env-test: <nil>
  STEP: delete the pod @ 05/05/24 14:41:20.586
  I0505 14:41:20.599899 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4427" for this suite. @ 05/05/24 14:41:20.602
  E0505 14:41:20.607079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
• [2.110 seconds]
------------------------------
S
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2181
  STEP: Creating a kubernetes client @ 05/05/24 14:41:20.607
  I0505 14:41:20.607297 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename services @ 05/05/24 14:41:20.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:41:20.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:41:20.621
  STEP: creating service in namespace services-3060 @ 05/05/24 14:41:20.623
  STEP: creating service affinity-clusterip in namespace services-3060 @ 05/05/24 14:41:20.623
  STEP: creating replication controller affinity-clusterip in namespace services-3060 @ 05/05/24 14:41:20.63
  I0505 14:41:20.636511      21 runners.go:198] Created replication controller with name: affinity-clusterip, namespace: services-3060, replica count: 3
  E0505 14:41:21.608229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:22.608833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:23.609071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:41:23.687598      21 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0505 14:41:23.691495 21 resource.go:361] Creating new exec pod
  E0505 14:41:24.609618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:25.610128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:26.610530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:41:26.701745 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-3060 exec execpod-affinityx7llj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0505 14:41:26.791621 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I0505 14:41:26.791703 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0505 14:41:26.791859 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-3060 exec execpod-affinityx7llj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.79 80'
  I0505 14:41:26.868986 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.79 80\nConnection to 10.32.0.79 80 port [tcp/http] succeeded!\n"
  I0505 14:41:26.869019 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0505 14:41:26.869069 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-3060 exec execpod-affinityx7llj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.32.0.79:80/ ; done'
  I0505 14:41:26.997086 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.79:80/\n"
  I0505 14:41:26.997119 21 builder.go:147] stdout: "\naffinity-clusterip-v7cdv\naffinity-clusterip-v7cdv\naffinity-clusterip-v7cdv\naffinity-clusterip-v7cdv\naffinity-clusterip-v7cdv\naffinity-clusterip-v7cdv\naffinity-clusterip-v7cdv\naffinity-clusterip-v7cdv\naffinity-clusterip-v7cdv\naffinity-clusterip-v7cdv\naffinity-clusterip-v7cdv\naffinity-clusterip-v7cdv\naffinity-clusterip-v7cdv\naffinity-clusterip-v7cdv\naffinity-clusterip-v7cdv\naffinity-clusterip-v7cdv"
  I0505 14:41:26.997136 21 service.go:242] Received response from host: affinity-clusterip-v7cdv
  I0505 14:41:26.997166 21 service.go:242] Received response from host: affinity-clusterip-v7cdv
  I0505 14:41:26.997175 21 service.go:242] Received response from host: affinity-clusterip-v7cdv
  I0505 14:41:26.997183 21 service.go:242] Received response from host: affinity-clusterip-v7cdv
  I0505 14:41:26.997189 21 service.go:242] Received response from host: affinity-clusterip-v7cdv
  I0505 14:41:26.997195 21 service.go:242] Received response from host: affinity-clusterip-v7cdv
  I0505 14:41:26.997202 21 service.go:242] Received response from host: affinity-clusterip-v7cdv
  I0505 14:41:26.997207 21 service.go:242] Received response from host: affinity-clusterip-v7cdv
  I0505 14:41:26.997213 21 service.go:242] Received response from host: affinity-clusterip-v7cdv
  I0505 14:41:26.997754 21 service.go:242] Received response from host: affinity-clusterip-v7cdv
  I0505 14:41:26.997766 21 service.go:242] Received response from host: affinity-clusterip-v7cdv
  I0505 14:41:26.997820 21 service.go:242] Received response from host: affinity-clusterip-v7cdv
  I0505 14:41:26.997827 21 service.go:242] Received response from host: affinity-clusterip-v7cdv
  I0505 14:41:26.997832 21 service.go:242] Received response from host: affinity-clusterip-v7cdv
  I0505 14:41:26.997838 21 service.go:242] Received response from host: affinity-clusterip-v7cdv
  I0505 14:41:26.997843 21 service.go:242] Received response from host: affinity-clusterip-v7cdv
  I0505 14:41:26.998420 21 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-3060, will wait for the garbage collector to delete the pods @ 05/05/24 14:41:27.01
  I0505 14:41:27.069085 21 resources.go:139] Deleting ReplicationController affinity-clusterip took: 4.375573ms
  I0505 14:41:27.169340 21 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.243345ms
  E0505 14:41:27.610698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:28.611029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:29.611628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:41:29.793323 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3060" for this suite. @ 05/05/24 14:41:29.796
• [9.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 05/05/24 14:41:29.801
  I0505 14:41:29.801055 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename init-container @ 05/05/24 14:41:29.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:41:29.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:41:29.814
  STEP: creating the pod @ 05/05/24 14:41:29.815
  I0505 14:41:29.815994 21 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0505 14:41:30.612239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:31.613301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:41:32.555599 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8760" for this suite. @ 05/05/24 14:41:32.562
• [2.767 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3345
  STEP: Creating a kubernetes client @ 05/05/24 14:41:32.569
  I0505 14:41:32.569655 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename services @ 05/05/24 14:41:32.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:41:32.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:41:32.582
  STEP: creating a Service @ 05/05/24 14:41:32.587
  STEP: watching for the Service to be added @ 05/05/24 14:41:32.596
  I0505 14:41:32.599123 21 service.go:3397] Found Service test-service-fqc9x in namespace services-7170 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31912}]
  I0505 14:41:32.599149 21 service.go:3404] Service test-service-fqc9x created
  STEP: Getting /status @ 05/05/24 14:41:32.599
  I0505 14:41:32.601900 21 service.go:3415] Service test-service-fqc9x has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 05/05/24 14:41:32.602
  STEP: watching for the Service to be patched @ 05/05/24 14:41:32.61
  E0505 14:41:32.612621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:41:32.613977 21 service.go:3438] observed Service test-service-fqc9x in namespace services-7170 with annotations: map[] & LoadBalancer: {[]}
  I0505 14:41:32.614028 21 service.go:3441] Found Service test-service-fqc9x in namespace services-7170 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc000d66670 []}]}
  I0505 14:41:32.614041 21 service.go:3448] Service test-service-fqc9x has service status patched
  STEP: updating the ServiceStatus @ 05/05/24 14:41:32.614
  I0505 14:41:32.619454 21 service.go:3468] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 05/05/24 14:41:32.619
  I0505 14:41:32.621980 21 service.go:3479] Observed Service test-service-fqc9x in namespace services-7170 with annotations: map[] & Conditions: {[]}
  I0505 14:41:32.622231 21 service.go:3494] Observed event: &Service{ObjectMeta:{test-service-fqc9x  services-7170  d111fdba-c1d5-4922-872b-12b9d58c636b 31059 0 2024-05-05 14:41:32 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-05-05 14:41:32 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-05-05 14:41:32 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:31912,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.32.0.248,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.32.0.248],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,TrafficDistribution:nil,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:*VIP,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  I0505 14:41:32.622279 21 service.go:3486] Found Service test-service-fqc9x in namespace services-7170 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0505 14:41:32.622312 21 service.go:3498] Service test-service-fqc9x has service status updated
  STEP: patching the service @ 05/05/24 14:41:32.622
  STEP: watching for the Service to be patched @ 05/05/24 14:41:32.636
  I0505 14:41:32.637619 21 service.go:3521] observed Service test-service-fqc9x in namespace services-7170 with labels: map[test-service-static:true]
  I0505 14:41:32.637720 21 service.go:3521] observed Service test-service-fqc9x in namespace services-7170 with labels: map[test-service-static:true]
  I0505 14:41:32.637778 21 service.go:3521] observed Service test-service-fqc9x in namespace services-7170 with labels: map[test-service-static:true]
  I0505 14:41:32.637819 21 service.go:3524] Found Service test-service-fqc9x in namespace services-7170 with labels: map[test-service:patched test-service-static:true]
  I0505 14:41:32.637853 21 service.go:3531] Service test-service-fqc9x patched
  STEP: deleting the service @ 05/05/24 14:41:32.637
  STEP: watching for the Service to be deleted @ 05/05/24 14:41:32.647
  I0505 14:41:32.649622 21 service.go:3555] Observed event: ADDED
  I0505 14:41:32.649648 21 service.go:3555] Observed event: MODIFIED
  I0505 14:41:32.649658 21 service.go:3555] Observed event: MODIFIED
  I0505 14:41:32.649717 21 service.go:3555] Observed event: MODIFIED
  I0505 14:41:32.649736 21 service.go:3551] Found Service test-service-fqc9x in namespace services-7170 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0505 14:41:32.649744 21 service.go:3560] Service test-service-fqc9x deleted
  I0505 14:41:32.650141 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7170" for this suite. @ 05/05/24 14:41:32.652
• [0.087 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 05/05/24 14:41:32.654
  I0505 14:41:32.654742 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename replicaset @ 05/05/24 14:41:32.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:41:32.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:41:32.666
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 05/05/24 14:41:32.668
  E0505 14:41:33.613092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:34.615243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 05/05/24 14:41:34.688
  STEP: Then the orphan pod is adopted @ 05/05/24 14:41:34.705
  E0505 14:41:35.616427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 05/05/24 14:41:35.712
  I0505 14:41:35.715467 21 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/05/24 14:41:35.723
  E0505 14:41:36.616980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:41:36.731472 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6576" for this suite. @ 05/05/24 14:41:36.737
• [4.096 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 05/05/24 14:41:36.75
  I0505 14:41:36.750766 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/05/24 14:41:36.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:41:36.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:41:36.76
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 05/05/24 14:41:36.762
  I0505 14:41:36.762998 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  E0505 14:41:37.617535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:41:37.964501 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  E0505 14:41:38.618424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:39.618761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:40.619511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:41.619568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:42.620551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:41:42.839401 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9166" for this suite. @ 05/05/24 14:41:42.842
• [6.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 05/05/24 14:41:42.855
  I0505 14:41:42.855430 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename field-validation @ 05/05/24 14:41:42.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:41:42.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:41:42.866
  I0505 14:41:42.867986 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  E0505 14:41:43.620769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:44.621175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0505 14:41:45.431549      21 warnings.go:70] unknown field "alpha"
  W0505 14:41:45.431606      21 warnings.go:70] unknown field "beta"
  W0505 14:41:45.431626      21 warnings.go:70] unknown field "delta"
  W0505 14:41:45.431646      21 warnings.go:70] unknown field "epsilon"
  W0505 14:41:45.431665      21 warnings.go:70] unknown field "gamma"
  E0505 14:41:45.621298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:41:45.966347 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9062" for this suite. @ 05/05/24 14:41:45.968
• [3.116 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 05/05/24 14:41:45.971
  I0505 14:41:45.971533 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename field-validation @ 05/05/24 14:41:45.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:41:45.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:41:45.988
  I0505 14:41:45.989838 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  E0505 14:41:46.622535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:47.623320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0505 14:41:48.522600      21 warnings.go:70] unknown field "alpha"
  W0505 14:41:48.522643      21 warnings.go:70] unknown field "beta"
  W0505 14:41:48.522658      21 warnings.go:70] unknown field "delta"
  W0505 14:41:48.522671      21 warnings.go:70] unknown field "epsilon"
  W0505 14:41:48.522711      21 warnings.go:70] unknown field "gamma"
  E0505 14:41:48.625004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:41:49.052043 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7012" for this suite. @ 05/05/24 14:41:49.054
• [3.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 05/05/24 14:41:49.058
  I0505 14:41:49.058874 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename proxy @ 05/05/24 14:41:49.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:41:49.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:41:49.068
  STEP: starting an echo server on multiple ports @ 05/05/24 14:41:49.073
  STEP: creating replication controller proxy-service-j2cwv in namespace proxy-2694 @ 05/05/24 14:41:49.073
  I0505 14:41:49.082620      21 runners.go:198] Created replication controller with name: proxy-service-j2cwv, namespace: proxy-2694, replica count: 1
  E0505 14:41:49.625358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:41:50.133843      21 runners.go:198] proxy-service-j2cwv Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0505 14:41:50.625532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:41:51.134286      21 runners.go:198] proxy-service-j2cwv Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0505 14:41:51.139364 21 proxy.go:230] setup took 2.069071937s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 05/05/24 14:41:51.139
  I0505 14:41:51.148556 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">test<... (200; 8.924998ms)
  I0505 14:41:51.148641 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 8.914782ms)
  I0505 14:41:51.148675 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 8.99503ms)
  I0505 14:41:51.152644 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 13.097241ms)
  I0505 14:41:51.153605 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">... (200; 14.04525ms)
  I0505 14:41:51.152674 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/rewriteme">test</a> (200; 12.975803ms)
  I0505 14:41:51.155177 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname2/proxy/: bar (200; 15.465759ms)
  I0505 14:41:51.155831 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname2/proxy/: bar (200; 16.155307ms)
  I0505 14:41:51.156077 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname1/proxy/: foo (200; 16.415099ms)
  I0505 14:41:51.156400 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 16.792169ms)
  I0505 14:41:51.156667 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname1/proxy/: foo (200; 16.976972ms)
  I0505 14:41:51.161175 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/tlsrewritem... (200; 21.48792ms)
  I0505 14:41:51.161840 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:462/proxy/: tls qux (200; 22.366889ms)
  I0505 14:41:51.162102 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname2/proxy/: tls qux (200; 22.48935ms)
  I0505 14:41:51.162140 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:460/proxy/: tls baz (200; 22.490787ms)
  I0505 14:41:51.162269 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname1/proxy/: tls baz (200; 22.669457ms)
  I0505 14:41:51.168697 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/tlsrewritem... (200; 6.055357ms)
  I0505 14:41:51.168788 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/rewriteme">test</a> (200; 5.82221ms)
  I0505 14:41:51.168808 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:462/proxy/: tls qux (200; 5.880614ms)
  I0505 14:41:51.168830 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">... (200; 6.117979ms)
  I0505 14:41:51.168852 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 6.496278ms)
  I0505 14:41:51.168902 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 6.513271ms)
  I0505 14:41:51.168927 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">test<... (200; 6.341297ms)
  I0505 14:41:51.168946 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 6.32645ms)
  I0505 14:41:51.168966 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 6.270319ms)
  I0505 14:41:51.168985 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:460/proxy/: tls baz (200; 6.063016ms)
  I0505 14:41:51.169004 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname1/proxy/: foo (200; 6.354778ms)
  I0505 14:41:51.169301 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname1/proxy/: foo (200; 6.646488ms)
  I0505 14:41:51.169335 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname1/proxy/: tls baz (200; 6.869111ms)
  I0505 14:41:51.169467 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname2/proxy/: bar (200; 6.519207ms)
  I0505 14:41:51.171760 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname2/proxy/: tls qux (200; 9.193968ms)
  I0505 14:41:51.171800 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname2/proxy/: bar (200; 9.135553ms)
  I0505 14:41:51.177671 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 5.522034ms)
  I0505 14:41:51.177818 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:460/proxy/: tls baz (200; 5.861721ms)
  I0505 14:41:51.177866 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">test<... (200; 5.828408ms)
  I0505 14:41:51.177928 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/tlsrewritem... (200; 5.764748ms)
  I0505 14:41:51.177949 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 5.682025ms)
  I0505 14:41:51.177955 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">... (200; 6.089416ms)
  I0505 14:41:51.177970 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/rewriteme">test</a> (200; 5.652027ms)
  I0505 14:41:51.177995 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:462/proxy/: tls qux (200; 5.711261ms)
  I0505 14:41:51.177998 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 6.12667ms)
  I0505 14:41:51.178012 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname1/proxy/: tls baz (200; 6.03296ms)
  I0505 14:41:51.178019 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 6.089359ms)
  I0505 14:41:51.180445 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname2/proxy/: bar (200; 8.199243ms)
  I0505 14:41:51.180466 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname2/proxy/: tls qux (200; 8.458085ms)
  I0505 14:41:51.180475 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname1/proxy/: foo (200; 8.3597ms)
  I0505 14:41:51.180505 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname1/proxy/: foo (200; 8.280485ms)
  I0505 14:41:51.180617 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname2/proxy/: bar (200; 8.314806ms)
  I0505 14:41:51.183243 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">... (200; 2.539295ms)
  I0505 14:41:51.183403 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 2.687387ms)
  I0505 14:41:51.185732 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/tlsrewritem... (200; 5.087988ms)
  I0505 14:41:51.185795 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:460/proxy/: tls baz (200; 5.076648ms)
  I0505 14:41:51.185993 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 5.269573ms)
  I0505 14:41:51.187267 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:462/proxy/: tls qux (200; 6.529421ms)
  I0505 14:41:51.187298 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 6.569946ms)
  I0505 14:41:51.188416 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/rewriteme">test</a> (200; 7.675659ms)
  I0505 14:41:51.188999 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname1/proxy/: foo (200; 8.27405ms)
  I0505 14:41:51.189019 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 8.280089ms)
  I0505 14:41:51.189075 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname1/proxy/: foo (200; 8.353606ms)
  I0505 14:41:51.189091 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname2/proxy/: bar (200; 8.355581ms)
  I0505 14:41:51.189091 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname2/proxy/: bar (200; 8.365952ms)
  I0505 14:41:51.189586 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">test<... (200; 8.826995ms)
  I0505 14:41:51.189498 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname1/proxy/: tls baz (200; 8.746648ms)
  I0505 14:41:51.189756 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname2/proxy/: tls qux (200; 9.007795ms)
  I0505 14:41:51.193530 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:460/proxy/: tls baz (200; 2.905636ms)
  I0505 14:41:51.193530 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">test<... (200; 3.505436ms)
  I0505 14:41:51.193554 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 3.736787ms)
  I0505 14:41:51.194862 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/rewriteme">test</a> (200; 4.948575ms)
  I0505 14:41:51.194909 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:462/proxy/: tls qux (200; 4.199087ms)
  I0505 14:41:51.194930 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">... (200; 4.894017ms)
  I0505 14:41:51.194910 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 4.23774ms)
  I0505 14:41:51.195334 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 5.281648ms)
  I0505 14:41:51.195451 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/tlsrewritem... (200; 4.762375ms)
  I0505 14:41:51.195686 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname2/proxy/: bar (200; 5.026418ms)
  I0505 14:41:51.196170 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname2/proxy/: bar (200; 5.44509ms)
  I0505 14:41:51.197535 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname1/proxy/: foo (200; 6.808227ms)
  I0505 14:41:51.199343 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname1/proxy/: foo (200; 8.642607ms)
  I0505 14:41:51.199357 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname1/proxy/: tls baz (200; 8.883465ms)
  I0505 14:41:51.199387 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 8.676226ms)
  I0505 14:41:51.199394 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname2/proxy/: tls qux (200; 8.70403ms)
  I0505 14:41:51.203622 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:462/proxy/: tls qux (200; 4.06682ms)
  I0505 14:41:51.203622 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/tlsrewritem... (200; 3.97851ms)
  I0505 14:41:51.203638 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 4.096728ms)
  I0505 14:41:51.203645 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">... (200; 4.110076ms)
  I0505 14:41:51.203668 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:460/proxy/: tls baz (200; 4.047344ms)
  I0505 14:41:51.203682 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/rewriteme">test</a> (200; 4.152642ms)
  I0505 14:41:51.203727 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 4.129083ms)
  I0505 14:41:51.203745 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 4.114408ms)
  I0505 14:41:51.203762 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname2/proxy/: bar (200; 4.175369ms)
  I0505 14:41:51.203914 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname1/proxy/: foo (200; 4.446995ms)
  I0505 14:41:51.204024 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 4.327262ms)
  I0505 14:41:51.203794 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname2/proxy/: tls qux (200; 4.310552ms)
  I0505 14:41:51.203750 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname2/proxy/: bar (200; 4.186041ms)
  I0505 14:41:51.203852 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">test<... (200; 4.330983ms)
  I0505 14:41:51.203955 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname1/proxy/: foo (200; 4.347707ms)
  I0505 14:41:51.203967 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname1/proxy/: tls baz (200; 4.502148ms)
  I0505 14:41:51.207771 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:460/proxy/: tls baz (200; 3.247046ms)
  I0505 14:41:51.207821 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname1/proxy/: foo (200; 3.025557ms)
  I0505 14:41:51.207829 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 3.040035ms)
  I0505 14:41:51.207836 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">test<... (200; 3.065555ms)
  I0505 14:41:51.207847 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/rewriteme">test</a> (200; 2.701444ms)
  I0505 14:41:51.207868 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 3.253357ms)
  I0505 14:41:51.207883 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname1/proxy/: tls baz (200; 3.138453ms)
  I0505 14:41:51.207911 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 2.643843ms)
  I0505 14:41:51.207914 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/tlsrewritem... (200; 2.889523ms)
  I0505 14:41:51.207912 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname2/proxy/: bar (200; 2.718929ms)
  I0505 14:41:51.208692 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname2/proxy/: tls qux (200; 3.929458ms)
  I0505 14:41:51.208692 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:462/proxy/: tls qux (200; 4.34335ms)
  I0505 14:41:51.210824 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname1/proxy/: foo (200; 5.579617ms)
  I0505 14:41:51.210734 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 5.547491ms)
  I0505 14:41:51.210934 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">... (200; 6.153285ms)
  I0505 14:41:51.211044 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname2/proxy/: bar (200; 5.787132ms)
  I0505 14:41:51.215080 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 3.642522ms)
  I0505 14:41:51.215149 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname1/proxy/: foo (200; 4.047629ms)
  I0505 14:41:51.215161 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/tlsrewritem... (200; 3.792238ms)
  I0505 14:41:51.215292 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:462/proxy/: tls qux (200; 4.090618ms)
  I0505 14:41:51.215317 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 3.988789ms)
  I0505 14:41:51.215358 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">test<... (200; 3.912347ms)
  I0505 14:41:51.215413 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname2/proxy/: bar (200; 4.305251ms)
  I0505 14:41:51.216864 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:460/proxy/: tls baz (200; 5.35862ms)
  I0505 14:41:51.217948 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname1/proxy/: foo (200; 6.669232ms)
  I0505 14:41:51.218281 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 6.797784ms)
  I0505 14:41:51.218819 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/rewriteme">test</a> (200; 7.434065ms)
  I0505 14:41:51.218907 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname2/proxy/: bar (200; 7.450437ms)
  I0505 14:41:51.219514 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">... (200; 8.019711ms)
  I0505 14:41:51.219532 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 8.315927ms)
  I0505 14:41:51.219611 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname1/proxy/: tls baz (200; 8.436032ms)
  I0505 14:41:51.220595 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname2/proxy/: tls qux (200; 9.123385ms)
  I0505 14:41:51.222192 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 1.551479ms)
  I0505 14:41:51.226656 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 5.666396ms)
  I0505 14:41:51.226768 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 5.648911ms)
  I0505 14:41:51.227140 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">test<... (200; 6.196623ms)
  I0505 14:41:51.227296 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">... (200; 6.331272ms)
  I0505 14:41:51.228013 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname2/proxy/: bar (200; 5.531338ms)
  I0505 14:41:51.228024 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname2/proxy/: bar (200; 6.953617ms)
  I0505 14:41:51.228047 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname1/proxy/: foo (200; 7.021628ms)
  I0505 14:41:51.228041 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname2/proxy/: tls qux (200; 7.156514ms)
  I0505 14:41:51.228058 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 5.632076ms)
  I0505 14:41:51.228069 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/rewriteme">test</a> (200; 6.088319ms)
  I0505 14:41:51.228080 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname1/proxy/: foo (200; 7.353402ms)
  I0505 14:41:51.228082 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:462/proxy/: tls qux (200; 7.30599ms)
  I0505 14:41:51.228094 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:460/proxy/: tls baz (200; 7.090759ms)
  I0505 14:41:51.228111 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/tlsrewritem... (200; 7.063225ms)
  I0505 14:41:51.228128 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname1/proxy/: tls baz (200; 7.277684ms)
  I0505 14:41:51.231501 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 3.352244ms)
  I0505 14:41:51.231548 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 2.402639ms)
  I0505 14:41:51.233901 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">... (200; 4.514822ms)
  I0505 14:41:51.233927 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/rewriteme">test</a> (200; 4.391046ms)
  I0505 14:41:51.233950 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">test<... (200; 4.625586ms)
  I0505 14:41:51.233960 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 4.565809ms)
  I0505 14:41:51.233969 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 4.579478ms)
  I0505 14:41:51.233979 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/tlsrewritem... (200; 4.57129ms)
  I0505 14:41:51.233990 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:462/proxy/: tls qux (200; 4.801199ms)
  I0505 14:41:51.235389 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname2/proxy/: tls qux (200; 6.195927ms)
  I0505 14:41:51.235678 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname2/proxy/: bar (200; 6.230868ms)
  I0505 14:41:51.235694 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname1/proxy/: tls baz (200; 6.787524ms)
  I0505 14:41:51.235707 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:460/proxy/: tls baz (200; 6.303049ms)
  I0505 14:41:51.235721 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname2/proxy/: bar (200; 6.195387ms)
  I0505 14:41:51.235906 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname1/proxy/: foo (200; 6.535885ms)
  I0505 14:41:51.236320 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname1/proxy/: foo (200; 6.892278ms)
  I0505 14:41:51.240772 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">... (200; 3.37545ms)
  I0505 14:41:51.240805 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/rewriteme">test</a> (200; 3.48023ms)
  I0505 14:41:51.240825 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 3.46149ms)
  I0505 14:41:51.240838 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/tlsrewritem... (200; 3.59334ms)
  I0505 14:41:51.240912 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 3.680338ms)
  I0505 14:41:51.240932 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 3.511081ms)
  I0505 14:41:51.240991 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 3.674718ms)
  I0505 14:41:51.241003 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:460/proxy/: tls baz (200; 3.630279ms)
  I0505 14:41:51.241014 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">test<... (200; 3.611761ms)
  I0505 14:41:51.242589 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname1/proxy/: tls baz (200; 5.201397ms)
  I0505 14:41:51.243021 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname2/proxy/: bar (200; 5.602292ms)
  I0505 14:41:51.243240 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname1/proxy/: foo (200; 5.82867ms)
  I0505 14:41:51.243255 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname2/proxy/: tls qux (200; 5.899587ms)
  I0505 14:41:51.243262 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname1/proxy/: foo (200; 5.976657ms)
  I0505 14:41:51.243270 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname2/proxy/: bar (200; 5.96793ms)
  I0505 14:41:51.243638 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:462/proxy/: tls qux (200; 6.457423ms)
  I0505 14:41:51.248266 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:462/proxy/: tls qux (200; 3.305411ms)
  I0505 14:41:51.249415 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/tlsrewritem... (200; 2.83821ms)
  I0505 14:41:51.249462 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">test<... (200; 3.419883ms)
  I0505 14:41:51.249591 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/rewriteme">test</a> (200; 2.9848ms)
  I0505 14:41:51.249953 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">... (200; 4.099505ms)
  I0505 14:41:51.250202 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 3.654239ms)
  I0505 14:41:51.250273 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 3.599924ms)
  I0505 14:41:51.250991 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 5.108448ms)
  I0505 14:41:51.251572 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname2/proxy/: bar (200; 5.361726ms)
  I0505 14:41:51.252463 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 6.380691ms)
  I0505 14:41:51.252472 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname2/proxy/: bar (200; 5.962738ms)
  I0505 14:41:51.252483 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname2/proxy/: tls qux (200; 6.490265ms)
  I0505 14:41:51.252490 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname1/proxy/: foo (200; 5.82432ms)
  I0505 14:41:51.253659 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname1/proxy/: tls baz (200; 7.68455ms)
  I0505 14:41:51.253681 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:460/proxy/: tls baz (200; 6.904389ms)
  I0505 14:41:51.253848 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname1/proxy/: foo (200; 7.627275ms)
  I0505 14:41:51.257368 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">... (200; 2.835194ms)
  I0505 14:41:51.257391 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/rewriteme">test</a> (200; 3.184794ms)
  I0505 14:41:51.257409 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:462/proxy/: tls qux (200; 2.984594ms)
  I0505 14:41:51.257292 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:460/proxy/: tls baz (200; 3.117171ms)
  I0505 14:41:51.257608 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 3.273772ms)
  I0505 14:41:51.257618 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 3.020007ms)
  I0505 14:41:51.257795 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 3.499635ms)
  I0505 14:41:51.257805 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/tlsrewritem... (200; 3.717836ms)
  I0505 14:41:51.257819 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 3.415955ms)
  I0505 14:41:51.259218 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">test<... (200; 4.658364ms)
  I0505 14:41:51.259293 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname2/proxy/: bar (200; 5.10105ms)
  I0505 14:41:51.259466 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname2/proxy/: tls qux (200; 5.08249ms)
  I0505 14:41:51.259787 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname1/proxy/: foo (200; 5.426179ms)
  I0505 14:41:51.259760 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname2/proxy/: bar (200; 5.696515ms)
  I0505 14:41:51.259840 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname1/proxy/: foo (200; 5.263039ms)
  I0505 14:41:51.260331 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname1/proxy/: tls baz (200; 5.826274ms)
  I0505 14:41:51.263917 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 3.293432ms)
  I0505 14:41:51.264894 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 3.809745ms)
  I0505 14:41:51.264919 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:460/proxy/: tls baz (200; 3.924958ms)
  I0505 14:41:51.264934 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">... (200; 3.813579ms)
  I0505 14:41:51.264930 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:462/proxy/: tls qux (200; 3.793896ms)
  I0505 14:41:51.264953 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 3.828255ms)
  I0505 14:41:51.264968 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/rewriteme">test</a> (200; 3.852791ms)
  I0505 14:41:51.264960 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 4.114645ms)
  I0505 14:41:51.264991 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">test<... (200; 3.977964ms)
  I0505 14:41:51.266029 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname2/proxy/: bar (200; 5.31671ms)
  I0505 14:41:51.266186 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname2/proxy/: bar (200; 5.651934ms)
  I0505 14:41:51.266195 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/tlsrewritem... (200; 5.330632ms)
  I0505 14:41:51.266219 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname1/proxy/: foo (200; 5.170418ms)
  I0505 14:41:51.266228 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname1/proxy/: foo (200; 5.870096ms)
  I0505 14:41:51.266240 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname2/proxy/: tls qux (200; 5.173122ms)
  I0505 14:41:51.266495 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname1/proxy/: tls baz (200; 5.742963ms)
  I0505 14:41:51.269997 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 3.142999ms)
  I0505 14:41:51.270019 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:462/proxy/: tls qux (200; 3.129738ms)
  I0505 14:41:51.270037 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/rewriteme">test</a> (200; 2.955251ms)
  I0505 14:41:51.270050 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 3.018558ms)
  I0505 14:41:51.270071 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/tlsrewritem... (200; 3.028335ms)
  I0505 14:41:51.270080 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">test<... (200; 2.978103ms)
  I0505 14:41:51.270090 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 2.970202ms)
  I0505 14:41:51.270099 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:460/proxy/: tls baz (200; 2.962978ms)
  I0505 14:41:51.270107 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 3.186911ms)
  I0505 14:41:51.270119 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname1/proxy/: tls baz (200; 3.547408ms)
  I0505 14:41:51.270678 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname1/proxy/: foo (200; 3.696474ms)
  I0505 14:41:51.270765 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname2/proxy/: tls qux (200; 3.770964ms)
  I0505 14:41:51.270987 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname2/proxy/: bar (200; 3.970057ms)
  I0505 14:41:51.271577 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname2/proxy/: bar (200; 4.61994ms)
  I0505 14:41:51.271595 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">... (200; 4.432546ms)
  I0505 14:41:51.272016 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname1/proxy/: foo (200; 4.938988ms)
  I0505 14:41:51.274661 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:462/proxy/: tls qux (200; 2.476671ms)
  I0505 14:41:51.274879 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 2.721073ms)
  I0505 14:41:51.275270 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/rewriteme">test</a> (200; 3.130145ms)
  I0505 14:41:51.276131 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/tlsrewritem... (200; 4.000077ms)
  I0505 14:41:51.278424 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 5.880526ms)
  I0505 14:41:51.278432 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:460/proxy/: tls baz (200; 5.962439ms)
  I0505 14:41:51.278451 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 5.882533ms)
  I0505 14:41:51.278459 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">... (200; 5.928754ms)
  I0505 14:41:51.278464 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">test<... (200; 5.945312ms)
  I0505 14:41:51.278473 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname2/proxy/: bar (200; 6.372442ms)
  I0505 14:41:51.278483 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname1/proxy/: foo (200; 5.922614ms)
  I0505 14:41:51.278484 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname1/proxy/: foo (200; 5.933589ms)
  I0505 14:41:51.278499 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname2/proxy/: bar (200; 5.921762ms)
  I0505 14:41:51.278502 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 5.91395ms)
  I0505 14:41:51.277845 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname1/proxy/: tls baz (200; 5.344374ms)
  I0505 14:41:51.279102 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname2/proxy/: tls qux (200; 6.59141ms)
  I0505 14:41:51.282367 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/tlsrewritem... (200; 2.881472ms)
  I0505 14:41:51.283697 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 4.327898ms)
  I0505 14:41:51.283718 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">test<... (200; 3.756161ms)
  I0505 14:41:51.283787 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:462/proxy/: tls qux (200; 4.20445ms)
  I0505 14:41:51.283798 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname2/proxy/: tls qux (200; 4.610238ms)
  I0505 14:41:51.283807 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/rewriteme">test</a> (200; 3.878833ms)
  I0505 14:41:51.283818 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">... (200; 3.833438ms)
  I0505 14:41:51.283869 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 4.306192ms)
  I0505 14:41:51.283883 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:460/proxy/: tls baz (200; 3.848227ms)
  I0505 14:41:51.284328 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 4.940183ms)
  I0505 14:41:51.285930 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname1/proxy/: foo (200; 6.420936ms)
  I0505 14:41:51.285936 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname1/proxy/: tls baz (200; 5.87527ms)
  I0505 14:41:51.286236 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 6.2271ms)
  I0505 14:41:51.286577 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname2/proxy/: bar (200; 7.132067ms)
  I0505 14:41:51.286357 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname2/proxy/: bar (200; 6.818534ms)
  I0505 14:41:51.287068 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname1/proxy/: foo (200; 7.771954ms)
  I0505 14:41:51.290641 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:462/proxy/: tls qux (200; 3.346205ms)
  I0505 14:41:51.293777 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname2/proxy/: bar (200; 6.38961ms)
  I0505 14:41:51.294013 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">test<... (200; 5.9538ms)
  I0505 14:41:51.294035 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">... (200; 6.506919ms)
  I0505 14:41:51.294057 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname2/proxy/: bar (200; 6.618536ms)
  I0505 14:41:51.294069 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname1/proxy/: foo (200; 5.998799ms)
  I0505 14:41:51.294070 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname1/proxy/: foo (200; 6.6138ms)
  I0505 14:41:51.294091 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/rewriteme">test</a> (200; 6.686672ms)
  I0505 14:41:51.294106 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 6.641098ms)
  I0505 14:41:51.294131 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname2/proxy/: tls qux (200; 6.687065ms)
  I0505 14:41:51.294150 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:460/proxy/: tls baz (200; 6.660891ms)
  I0505 14:41:51.294165 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname1/proxy/: tls baz (200; 6.126022ms)
  I0505 14:41:51.294179 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 6.701653ms)
  I0505 14:41:51.294193 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 6.778785ms)
  I0505 14:41:51.294213 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/tlsrewritem... (200; 6.850653ms)
  I0505 14:41:51.294082 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 6.804437ms)
  I0505 14:41:51.298600 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/rewriteme">test</a> (200; 4.298757ms)
  I0505 14:41:51.302698 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 7.021026ms)
  I0505 14:41:51.302725 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname1/proxy/: tls baz (200; 7.432874ms)
  I0505 14:41:51.302740 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:460/proxy/: tls baz (200; 7.053661ms)
  I0505 14:41:51.302755 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname1/proxy/: foo (200; 7.261566ms)
  I0505 14:41:51.302762 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 7.37934ms)
  I0505 14:41:51.303151 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname2/proxy/: bar (200; 7.949639ms)
  I0505 14:41:51.303912 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">... (200; 8.625294ms)
  I0505 14:41:51.303936 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">test<... (200; 8.757545ms)
  I0505 14:41:51.303986 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:462/proxy/: tls qux (200; 8.751614ms)
  I0505 14:41:51.304011 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname2/proxy/: bar (200; 8.504364ms)
  I0505 14:41:51.303921 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 8.775711ms)
  I0505 14:41:51.304029 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname1/proxy/: foo (200; 8.808886ms)
  I0505 14:41:51.304050 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/tlsrewritem... (200; 8.831528ms)
  I0505 14:41:51.304048 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname2/proxy/: tls qux (200; 8.572114ms)
  I0505 14:41:51.304064 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 8.950353ms)
  I0505 14:41:51.310430 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:460/proxy/: tls baz (200; 6.345036ms)
  I0505 14:41:51.310511 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">test<... (200; 5.88251ms)
  I0505 14:41:51.310539 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 5.940332ms)
  I0505 14:41:51.311024 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:160/proxy/: foo (200; 6.811343ms)
  I0505 14:41:51.311078 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw/proxy/rewriteme">test</a> (200; 6.915327ms)
  I0505 14:41:51.311121 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2694/pods/proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 6.481446ms)
  I0505 14:41:51.311063 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:162/proxy/: bar (200; 6.609789ms)
  I0505 14:41:51.312145 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname1/proxy/: foo (200; 7.947929ms)
  I0505 14:41:51.312634 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/http:proxy-service-j2cwv-w7lfw:1080/proxy/rewriteme">... (200; 8.005595ms)
  I0505 14:41:51.311150 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname2/proxy/: bar (200; 6.707763ms)
  I0505 14:41:51.312953 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname1/proxy/: tls baz (200; 8.333635ms)
  I0505 14:41:51.312978 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2694/services/proxy-service-j2cwv:portname1/proxy/: foo (200; 8.553473ms)
  I0505 14:41:51.312989 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2694/services/http:proxy-service-j2cwv:portname2/proxy/: bar (200; 8.517043ms)
  I0505 14:41:51.313010 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2694/services/https:proxy-service-j2cwv:tlsportname2/proxy/: tls qux (200; 8.42413ms)
  I0505 14:41:51.313337 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:462/proxy/: tls qux (200; 8.725623ms)
  I0505 14:41:51.313467 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/: <a href="/api/v1/namespaces/proxy-2694/pods/https:proxy-service-j2cwv-w7lfw:443/proxy/tlsrewritem... (200; 8.993538ms)
  STEP: deleting ReplicationController proxy-service-j2cwv in namespace proxy-2694, will wait for the garbage collector to delete the pods @ 05/05/24 14:41:51.313
  I0505 14:41:51.378710 21 resources.go:139] Deleting ReplicationController proxy-service-j2cwv took: 12.355121ms
  I0505 14:41:51.479588 21 resources.go:163] Terminating ReplicationController proxy-service-j2cwv pods took: 100.864163ms
  E0505 14:41:51.626631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:52.628841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:41:53.580179 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2694" for this suite. @ 05/05/24 14:41:53.582
• [4.526 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 05/05/24 14:41:53.585
  I0505 14:41:53.585190 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename var-expansion @ 05/05/24 14:41:53.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:41:53.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:41:53.597
  STEP: Creating a pod to test substitution in container's args @ 05/05/24 14:41:53.599
  E0505 14:41:53.627782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:54.630802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:55.631076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:56.631173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 14:41:57.612
  I0505 14:41:57.613733 21 output.go:196] Trying to get logs from node worker00 pod var-expansion-5d882b03-42b1-4887-be32-9d89cb2227bc container dapi-container: <nil>
  STEP: delete the pod @ 05/05/24 14:41:57.616
  I0505 14:41:57.623837 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8657" for this suite. @ 05/05/24 14:41:57.625
• [4.045 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1284
  STEP: Creating a kubernetes client @ 05/05/24 14:41:57.63
  I0505 14:41:57.630260 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename services @ 05/05/24 14:41:57.63
  E0505 14:41:57.631063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:41:57.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:41:57.641
  STEP: creating service nodeport-test with type=NodePort in namespace services-7371 @ 05/05/24 14:41:57.642
  STEP: creating replication controller nodeport-test in namespace services-7371 @ 05/05/24 14:41:57.653
  I0505 14:41:57.658235      21 runners.go:198] Created replication controller with name: nodeport-test, namespace: services-7371, replica count: 2
  E0505 14:41:58.632039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:41:59.633363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:00.633763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:42:00.710226      21 runners.go:198] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0505 14:42:00.710278 21 resource.go:361] Creating new exec pod
  E0505 14:42:01.634811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:02.636109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:03.637005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:42:03.724603 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-7371 exec execpod8mc5n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0505 14:42:03.805360 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0505 14:42:03.805389 21 builder.go:147] stdout: ""
  E0505 14:42:04.638025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:42:04.725483 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-7371 exec execpod8mc5n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0505 14:42:04.821427 21 builder.go:146] stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0505 14:42:04.821471 21 builder.go:147] stdout: "nodeport-test-tpqlg"
  I0505 14:42:04.821530 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-7371 exec execpod8mc5n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.229 80'
  I0505 14:42:04.943647 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.229 80\nConnection to 10.32.0.229 80 port [tcp/http] succeeded!\n"
  I0505 14:42:04.943682 21 builder.go:147] stdout: "nodeport-test-swq58"
  I0505 14:42:04.943744 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-7371 exec execpod8mc5n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.100 31217'
  I0505 14:42:05.057819 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.100 31217\nConnection to 192.168.58.100 31217 port [tcp/*] succeeded!\n"
  I0505 14:42:05.057853 21 builder.go:147] stdout: "nodeport-test-swq58"
  I0505 14:42:05.057910 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-7371 exec execpod8mc5n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.101 31217'
  I0505 14:42:05.140105 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.101 31217\nConnection to 192.168.58.101 31217 port [tcp/*] succeeded!\n"
  I0505 14:42:05.140138 21 builder.go:147] stdout: ""
  E0505 14:42:05.638904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:42:06.058259 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-7371 exec execpod8mc5n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.101 31217'
  I0505 14:42:06.175556 21 builder.go:146] stderr: "+ + nc -v -t -w 2 192.168.58.101 31217\necho hostName\nConnection to 192.168.58.101 31217 port [tcp/*] succeeded!\n"
  I0505 14:42:06.175633 21 builder.go:147] stdout: "nodeport-test-tpqlg"
  I0505 14:42:06.175798 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7371" for this suite. @ 05/05/24 14:42:06.18
• [8.556 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:420
  STEP: Creating a kubernetes client @ 05/05/24 14:42:06.186
  I0505 14:42:06.186954 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename job @ 05/05/24 14:42:06.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:42:06.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:42:06.208
  STEP: Creating Indexed job @ 05/05/24 14:42:06.211
  STEP: Ensuring job reaches completions @ 05/05/24 14:42:06.219
  E0505 14:42:06.640014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:07.639967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:08.643053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:09.643719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:10.645492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:11.646270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:12.647139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:13.647189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 05/05/24 14:42:14.224
  I0505 14:42:14.232088 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4013" for this suite. @ 05/05/24 14:42:14.234
• [8.052 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 05/05/24 14:42:14.239
  I0505 14:42:14.239729 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename taint-single-pod @ 05/05/24 14:42:14.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:42:14.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:42:14.251
  I0505 14:42:14.254086 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0505 14:42:14.647314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:15.647821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:16.648027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:17.648345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:18.648629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:19.649654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:20.650964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:21.651368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:22.652611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:23.652810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:24.652958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:25.653047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:26.654003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:27.654728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:28.655249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:29.656507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:30.657042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:31.660298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:32.660593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:33.661695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:34.662018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:35.662482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:36.662793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:37.663259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:38.663675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:39.663976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:40.665270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:41.666463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:42.668023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:43.672346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:44.674334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:45.674379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:46.675506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:47.676263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:48.676263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:49.676460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:50.677569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:51.679371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:52.679620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:53.679725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:54.683526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:55.684355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:56.685452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:57.686149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:58.686204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:42:59.687038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:00.687789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:01.688432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:02.688887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:03.689107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:04.689761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:05.691603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:06.692274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:07.692389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:08.693244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:09.694438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:10.694792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:11.695070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:12.696092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:13.696548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:43:14.257350 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I0505 14:43:14.263815 21 taints.go:150] Starting informer...
  STEP: Starting pod... @ 05/05/24 14:43:14.263
  I0505 14:43:14.491545 21 taints.go:300] Pod is running on worker00. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/05/24 14:43:14.491
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/05/24 14:43:14.507
  STEP: Waiting short time to make sure Pod is queued for deletion @ 05/05/24 14:43:14.516
  I0505 14:43:14.516611 21 taints.go:319] Pod wasn't evicted. Proceeding
  I0505 14:43:14.516627 21 taints.go:326] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/05/24 14:43:14.54
  STEP: Waiting some time to make sure that toleration time passed. @ 05/05/24 14:43:14.554
  E0505 14:43:14.696957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:15.697231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:16.698331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:17.699187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:18.700360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:19.700665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:20.702971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:21.703777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:22.704100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:23.707413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:24.708682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:25.709071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:26.709236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:27.713347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:28.714155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:29.714382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:30.716398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:31.716345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:32.719264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:33.719407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:34.719509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:35.719616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:36.719843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:37.720710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:38.721077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:39.723731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:40.724111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:41.724778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:42.726009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:43.726262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:44.727004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:45.727378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:46.727573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:47.731585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:48.732930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:49.732990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:50.736995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:51.737461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:52.737793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:53.737863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:54.739033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:55.739110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:56.739433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:57.740174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:58.741241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:43:59.743218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:00.743528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:01.744856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:02.745210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:03.746465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:04.747073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:05.747367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:06.747676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:07.748343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:08.748628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:09.749492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:10.750068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:11.750159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:12.750765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:13.752017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:14.753293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:15.755237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:16.756462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:17.756609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:18.756842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:19.757131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:20.757785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:21.758201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:22.758297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:23.759146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:24.759266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:25.759572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:26.759671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:27.764258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:28.764353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:44:29.555419 21 taints.go:335] Pod wasn't evicted. Test successful
  I0505 14:44:29.555521 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-5406" for this suite. @ 05/05/24 14:44:29.557
• [135.321 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 05/05/24 14:44:29.561
  I0505 14:44:29.561076 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 14:44:29.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:44:29.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:44:29.574
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/05/24 14:44:29.575
  E0505 14:44:29.765746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:30.766661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:31.771802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:32.778944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 14:44:33.589
  I0505 14:44:33.591014 21 output.go:196] Trying to get logs from node worker00 pod pod-36f75bcf-552f-49ee-b575-1c53dd0746d2 container test-container: <nil>
  STEP: delete the pod @ 05/05/24 14:44:33.593
  I0505 14:44:33.603075 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8315" for this suite. @ 05/05/24 14:44:33.604
• [4.047 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 05/05/24 14:44:33.608
  I0505 14:44:33.608121 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename crd-webhook @ 05/05/24 14:44:33.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:44:33.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:44:33.62
  STEP: Setting up server cert @ 05/05/24 14:44:33.622
  E0505 14:44:33.779702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/05/24 14:44:34.052
  STEP: Deploying the custom resource conversion webhook pod @ 05/05/24 14:44:34.066
  STEP: Wait for the deployment to be ready @ 05/05/24 14:44:34.071
  I0505 14:44:34.077147 21 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0505 14:44:34.780167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:35.780146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/05/24 14:44:36.089
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 14:44:36.096
  E0505 14:44:36.781350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:44:37.098506 21 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0505 14:44:37.103571 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  E0505 14:44:37.783302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:38.786898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 05/05/24 14:44:39.657
  STEP: Create a v2 custom resource @ 05/05/24 14:44:39.666
  STEP: List CRs in v1 @ 05/05/24 14:44:39.688
  STEP: List CRs in v2 @ 05/05/24 14:44:39.691
  E0505 14:44:39.783523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:44:40.243493 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-8846" for this suite. @ 05/05/24 14:44:40.247
• [6.644 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 05/05/24 14:44:40.253
  I0505 14:44:40.253554 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/05/24 14:44:40.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:44:40.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:44:40.277
  I0505 14:44:40.280063 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  E0505 14:44:40.834626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/05/24 14:44:41.578
  I0505 14:44:41.578758 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-3302 --namespace=crd-publish-openapi-3302 create -f -'
  E0505 14:44:41.834444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:42.835021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:44:43.661491 21 builder.go:146] stderr: ""
  I0505 14:44:43.661533 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4232-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0505 14:44:43.661588 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-3302 --namespace=crd-publish-openapi-3302 delete e2e-test-crd-publish-openapi-4232-crds test-cr'
  I0505 14:44:43.703754 21 builder.go:146] stderr: ""
  I0505 14:44:43.703853 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4232-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0505 14:44:43.703939 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-3302 --namespace=crd-publish-openapi-3302 apply -f -'
  I0505 14:44:43.755561 21 builder.go:146] stderr: ""
  I0505 14:44:43.755609 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4232-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0505 14:44:43.755662 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-3302 --namespace=crd-publish-openapi-3302 delete e2e-test-crd-publish-openapi-4232-crds test-cr'
  I0505 14:44:43.804985 21 builder.go:146] stderr: ""
  I0505 14:44:43.805016 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4232-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/05/24 14:44:43.805
  I0505 14:44:43.805070 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-3302 explain e2e-test-crd-publish-openapi-4232-crds'
  E0505 14:44:43.835473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:44:43.851868 21 builder.go:146] stderr: ""
  I0505 14:44:43.851920 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-4232-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0505 14:44:44.835952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:44:45.083790 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3302" for this suite. @ 05/05/24 14:44:45.087
• [4.846 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 05/05/24 14:44:45.099
  I0505 14:44:45.099541 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 14:44:45.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:44:45.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:44:45.109
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/05/24 14:44:45.11
  E0505 14:44:45.836593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:46.836385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:47.836946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:48.837686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 14:44:49.122
  I0505 14:44:49.124379 21 output.go:196] Trying to get logs from node worker00 pod pod-6137bc51-bcb3-4e69-9a72-d76fcf97c59b container test-container: <nil>
  STEP: delete the pod @ 05/05/24 14:44:49.127
  I0505 14:44:49.145178 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4613" for this suite. @ 05/05/24 14:44:49.147
• [4.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 05/05/24 14:44:49.15
  I0505 14:44:49.150567 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename svcaccounts @ 05/05/24 14:44:49.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:44:49.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:44:49.163
  I0505 14:44:49.172377 21 service_accounts.go:618] created pod
  E0505 14:44:49.838146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:50.839255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:51.839455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:52.840531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:53.840862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:54.841035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:55.841959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:56.849182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 14:44:57.199
  E0505 14:44:57.849512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:58.849798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:44:59.850303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:00.852528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:01.853300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:02.853695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:03.856988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:04.859224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:05.860097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:06.860225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:07.860210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:08.861044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:09.861083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:10.863338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:11.864101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:12.865240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:13.866096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:14.866360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:15.866866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:16.867132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:17.867689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:18.868088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:19.868388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:20.871204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:21.871301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:22.871524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:23.872746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:24.873676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:25.874499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:26.875388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:45:27.200262 21 service_accounts.go:624] polling logs
  I0505 14:45:27.223671 21 service_accounts.go:634] Pod logs: 
  I0505 14:44:49.694010       1 log.go:245] OK: Got token
  I0505 14:44:49.694059       1 log.go:245] validating with in-cluster discovery
  I0505 14:44:49.694228       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0505 14:44:49.694249       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-6935:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0002b5ac0), NotBefore:(*jwt.NumericDate)(0xc0002b5bb0), IssuedAt:(*jwt.NumericDate)(0xc0002b5ad0), ID:"9d55d639-5a55-494c-8772-a0dc8390e80c"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6935", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"018685e5-97d0-4703-9fbd-31efc2b04da8"}}}
  I0505 14:44:54.706406       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0505 14:44:54.711150       1 log.go:245] OK: Validated signature on JWT
  I0505 14:44:54.711252       1 log.go:245] OK: Got valid claims from token!
  I0505 14:44:54.711278       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-6935:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000136bc0), NotBefore:(*jwt.NumericDate)(0xc000136be8), IssuedAt:(*jwt.NumericDate)(0xc000136bc8), ID:"9d55d639-5a55-494c-8772-a0dc8390e80c"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6935", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"018685e5-97d0-4703-9fbd-31efc2b04da8"}}}

  I0505 14:45:27.223727 21 service_accounts.go:638] completed pod
  I0505 14:45:27.227070 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6935" for this suite. @ 05/05/24 14:45:27.228
• [38.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 05/05/24 14:45:27.233
  I0505 14:45:27.233500 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename discovery @ 05/05/24 14:45:27.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:45:27.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:45:27.243
  STEP: Setting up server cert @ 05/05/24 14:45:27.246
  I0505 14:45:27.432686 21 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0505 14:45:27.433291 21 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0505 14:45:27.433311 21 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0505 14:45:27.433320 21 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0505 14:45:27.433326 21 discovery.go:139] Checking APIGroup: apps
  I0505 14:45:27.434064 21 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0505 14:45:27.434189 21 discovery.go:148] Versions found [{apps/v1 v1}]
  I0505 14:45:27.434233 21 discovery.go:154] apps/v1 matches apps/v1
  I0505 14:45:27.434240 21 discovery.go:139] Checking APIGroup: events.k8s.io
  I0505 14:45:27.435232 21 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0505 14:45:27.435293 21 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0505 14:45:27.435300 21 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0505 14:45:27.435306 21 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0505 14:45:27.435825 21 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0505 14:45:27.435841 21 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1} {authentication.k8s.io/v1beta1 v1beta1} {authentication.k8s.io/v1alpha1 v1alpha1}]
  I0505 14:45:27.435847 21 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0505 14:45:27.435853 21 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0505 14:45:27.436753 21 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0505 14:45:27.436769 21 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0505 14:45:27.436775 21 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0505 14:45:27.436781 21 discovery.go:139] Checking APIGroup: autoscaling
  I0505 14:45:27.437918 21 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0505 14:45:27.437934 21 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0505 14:45:27.437940 21 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0505 14:45:27.437947 21 discovery.go:139] Checking APIGroup: batch
  I0505 14:45:27.438559 21 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0505 14:45:27.438574 21 discovery.go:148] Versions found [{batch/v1 v1}]
  I0505 14:45:27.438580 21 discovery.go:154] batch/v1 matches batch/v1
  I0505 14:45:27.438587 21 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0505 14:45:27.439339 21 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0505 14:45:27.439359 21 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0505 14:45:27.439365 21 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0505 14:45:27.439372 21 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0505 14:45:27.440006 21 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0505 14:45:27.440024 21 discovery.go:148] Versions found [{networking.k8s.io/v1 v1} {networking.k8s.io/v1alpha1 v1alpha1}]
  I0505 14:45:27.440035 21 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0505 14:45:27.440041 21 discovery.go:139] Checking APIGroup: policy
  I0505 14:45:27.440495 21 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0505 14:45:27.440518 21 discovery.go:148] Versions found [{policy/v1 v1}]
  I0505 14:45:27.440525 21 discovery.go:154] policy/v1 matches policy/v1
  I0505 14:45:27.440531 21 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0505 14:45:27.441067 21 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0505 14:45:27.441086 21 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0505 14:45:27.441093 21 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0505 14:45:27.441099 21 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0505 14:45:27.441444 21 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0505 14:45:27.441462 21 discovery.go:148] Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1alpha1 v1alpha1}]
  I0505 14:45:27.441468 21 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0505 14:45:27.441478 21 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0505 14:45:27.442059 21 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0505 14:45:27.442077 21 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1} {admissionregistration.k8s.io/v1beta1 v1beta1} {admissionregistration.k8s.io/v1alpha1 v1alpha1}]
  I0505 14:45:27.442088 21 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0505 14:45:27.442094 21 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0505 14:45:27.442409 21 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0505 14:45:27.442422 21 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0505 14:45:27.442427 21 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0505 14:45:27.442438 21 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0505 14:45:27.442740 21 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0505 14:45:27.442752 21 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0505 14:45:27.442757 21 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0505 14:45:27.442767 21 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0505 14:45:27.443548 21 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0505 14:45:27.443564 21 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0505 14:45:27.443569 21 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0505 14:45:27.443575 21 discovery.go:139] Checking APIGroup: node.k8s.io
  I0505 14:45:27.443956 21 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0505 14:45:27.443971 21 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0505 14:45:27.443977 21 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0505 14:45:27.443983 21 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0505 14:45:27.444474 21 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0505 14:45:27.444526 21 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0505 14:45:27.444532 21 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0505 14:45:27.444537 21 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0505 14:45:27.445243 21 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0505 14:45:27.445272 21 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I0505 14:45:27.445279 21 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0505 14:45:27.445285 21 discovery.go:139] Checking APIGroup: internal.apiserver.k8s.io
  I0505 14:45:27.445958 21 discovery.go:147] PreferredVersion.GroupVersion: internal.apiserver.k8s.io/v1alpha1
  I0505 14:45:27.445977 21 discovery.go:148] Versions found [{internal.apiserver.k8s.io/v1alpha1 v1alpha1}]
  I0505 14:45:27.445982 21 discovery.go:154] internal.apiserver.k8s.io/v1alpha1 matches internal.apiserver.k8s.io/v1alpha1
  I0505 14:45:27.445990 21 discovery.go:139] Checking APIGroup: resource.k8s.io
  I0505 14:45:27.447821 21 discovery.go:147] PreferredVersion.GroupVersion: resource.k8s.io/v1alpha2
  I0505 14:45:27.447921 21 discovery.go:148] Versions found [{resource.k8s.io/v1alpha2 v1alpha2}]
  I0505 14:45:27.447938 21 discovery.go:154] resource.k8s.io/v1alpha2 matches resource.k8s.io/v1alpha2
  I0505 14:45:27.447991 21 discovery.go:139] Checking APIGroup: crd.projectcalico.org
  I0505 14:45:27.449969 21 discovery.go:147] PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  I0505 14:45:27.449997 21 discovery.go:148] Versions found [{crd.projectcalico.org/v1 v1}]
  I0505 14:45:27.450008 21 discovery.go:154] crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  I0505 14:45:27.450017 21 discovery.go:139] Checking APIGroup: snapshot.storage.k8s.io
  I0505 14:45:27.450793 21 discovery.go:147] PreferredVersion.GroupVersion: snapshot.storage.k8s.io/v1
  I0505 14:45:27.450864 21 discovery.go:148] Versions found [{snapshot.storage.k8s.io/v1 v1}]
  I0505 14:45:27.450876 21 discovery.go:154] snapshot.storage.k8s.io/v1 matches snapshot.storage.k8s.io/v1
  I0505 14:45:27.451269 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5778" for this suite. @ 05/05/24 14:45:27.452
• [0.225 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 05/05/24 14:45:27.457
  I0505 14:45:27.457839 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename containers @ 05/05/24 14:45:27.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:45:27.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:45:27.465
  STEP: Creating a pod to test override command @ 05/05/24 14:45:27.466
  E0505 14:45:27.876016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:28.876885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:29.877449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:30.880274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 14:45:31.476
  I0505 14:45:31.477619 21 output.go:196] Trying to get logs from node worker00 pod client-containers-a8f37474-bbf0-42ea-8937-0994d1722f32 container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 14:45:31.48
  I0505 14:45:31.488489 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-699" for this suite. @ 05/05/24 14:45:31.49
• [4.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 05/05/24 14:45:31.492
  I0505 14:45:31.492344 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename watch @ 05/05/24 14:45:31.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:45:31.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:45:31.5
  STEP: creating a watch on configmaps with a certain label @ 05/05/24 14:45:31.502
  STEP: creating a new configmap @ 05/05/24 14:45:31.502
  STEP: modifying the configmap once @ 05/05/24 14:45:31.504
  STEP: changing the label value of the configmap @ 05/05/24 14:45:31.507
  STEP: Expecting to observe a delete notification for the watched object @ 05/05/24 14:45:31.51
  I0505 14:45:31.510420 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6491  c78341b7-e5e7-413d-a3c1-10cd75ad1639 32757 0 2024-05-05 14:45:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-05 14:45:31 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0505 14:45:31.510578 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6491  c78341b7-e5e7-413d-a3c1-10cd75ad1639 32758 0 2024-05-05 14:45:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-05 14:45:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0505 14:45:31.510690 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6491  c78341b7-e5e7-413d-a3c1-10cd75ad1639 32759 0 2024-05-05 14:45:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-05 14:45:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 05/05/24 14:45:31.51
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 05/05/24 14:45:31.513
  E0505 14:45:31.880916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:32.881013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:33.881361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:34.881611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:35.882127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:36.882583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:37.883251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:38.883519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:39.884301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:40.884990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 05/05/24 14:45:41.514
  STEP: modifying the configmap a third time @ 05/05/24 14:45:41.522
  STEP: deleting the configmap @ 05/05/24 14:45:41.527
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 05/05/24 14:45:41.529
  I0505 14:45:41.529844 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6491  c78341b7-e5e7-413d-a3c1-10cd75ad1639 32818 0 2024-05-05 14:45:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-05 14:45:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0505 14:45:41.529928 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6491  c78341b7-e5e7-413d-a3c1-10cd75ad1639 32819 0 2024-05-05 14:45:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-05 14:45:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0505 14:45:41.529967 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6491  c78341b7-e5e7-413d-a3c1-10cd75ad1639 32820 0 2024-05-05 14:45:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-05 14:45:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0505 14:45:41.530004 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6491" for this suite. @ 05/05/24 14:45:41.532
• [10.046 seconds]
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 05/05/24 14:45:41.538
  I0505 14:45:41.538903 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename apf @ 05/05/24 14:45:41.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:45:41.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:45:41.551
  STEP: getting /apis @ 05/05/24 14:45:41.552
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/05/24 14:45:41.555
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/05/24 14:45:41.556
  STEP: creating @ 05/05/24 14:45:41.557
  STEP: getting @ 05/05/24 14:45:41.563
  STEP: listing @ 05/05/24 14:45:41.565
  STEP: watching @ 05/05/24 14:45:41.567
  I0505 14:45:41.567184 21 flowcontrol.go:394] starting watch
  STEP: patching @ 05/05/24 14:45:41.569
  STEP: updating @ 05/05/24 14:45:41.572
  I0505 14:45:41.575895 21 flowcontrol.go:422] waiting for watch events with expected annotations
  I0505 14:45:41.575926 21 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 05/05/24 14:45:41.576
  STEP: patching /status @ 05/05/24 14:45:41.577
  STEP: updating /status @ 05/05/24 14:45:41.579
  STEP: deleting @ 05/05/24 14:45:41.599
  STEP: deleting a collection @ 05/05/24 14:45:41.605
  I0505 14:45:41.611964 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-3864" for this suite. @ 05/05/24 14:45:41.613
• [0.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 05/05/24 14:45:41.615
  I0505 14:45:41.615955 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/05/24 14:45:41.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:45:41.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:45:41.624
  STEP: create the container to handle the HTTPGet hook request. @ 05/05/24 14:45:41.626
  E0505 14:45:41.886146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:42.887765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/05/24 14:45:43.641
  E0505 14:45:43.889002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:44.889238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 05/05/24 14:45:45.664
  STEP: delete the pod with lifecycle hook @ 05/05/24 14:45:45.675
  E0505 14:45:45.891259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:46.891613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:45:47.684187 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9623" for this suite. @ 05/05/24 14:45:47.688
• [6.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 05/05/24 14:45:47.703
  I0505 14:45:47.703506 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename svcaccounts @ 05/05/24 14:45:47.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:45:47.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:45:47.717
  STEP: Creating a pod to test service account token:  @ 05/05/24 14:45:47.718
  E0505 14:45:47.892403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:48.892660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 14:45:49.729
  I0505 14:45:49.731283 21 output.go:196] Trying to get logs from node worker00 pod test-pod-69562d26-056a-43ed-9eeb-c289902bbcb4 container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 14:45:49.735
  I0505 14:45:49.746187 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5095" for this suite. @ 05/05/24 14:45:49.748
• [2.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 05/05/24 14:45:49.752
  I0505 14:45:49.752731 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 14:45:49.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:45:49.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:45:49.767
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 14:45:49.769
  E0505 14:45:49.894055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:50.894492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 14:45:51.785
  I0505 14:45:51.789559 21 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-baf0a7f4-d46e-4c4d-bac2-a4c541c33ebe container client-container: <nil>
  STEP: delete the pod @ 05/05/24 14:45:51.795
  I0505 14:45:51.805339 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5543" for this suite. @ 05/05/24 14:45:51.807
• [2.058 seconds]
------------------------------
SSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 05/05/24 14:45:51.81
  I0505 14:45:51.810035 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename containers @ 05/05/24 14:45:51.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:45:51.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:45:51.819
  E0505 14:45:51.895248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:52.896251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:45:53.841683 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-314" for this suite. @ 05/05/24 14:45:53.845
• [2.039 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 05/05/24 14:45:53.848
  I0505 14:45:53.848737 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename statefulset @ 05/05/24 14:45:53.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:45:53.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:45:53.862
  STEP: Creating service test in namespace statefulset-1163 @ 05/05/24 14:45:53.863
  I0505 14:45:53.873666 21 wait.go:40] Found 0 stateful pods, waiting for 1
  E0505 14:45:53.897293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:54.898080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:55.898780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:56.898862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:57.899074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:58.900063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:45:59.900397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:00.900562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:01.901599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:02.902235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:46:03.875719 21 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 05/05/24 14:46:03.878
  W0505 14:46:03.881311      21 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  I0505 14:46:03.885240 21 wait.go:40] Found 1 stateful pods, waiting for 2
  E0505 14:46:03.903042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:04.903168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:05.903467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:06.904136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:07.904734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:08.905298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:09.906236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:10.906223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:11.907296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:12.909011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:46:13.887785 21 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0505 14:46:13.887825 21 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 05/05/24 14:46:13.892
  STEP: Delete all of the StatefulSets @ 05/05/24 14:46:13.893
  STEP: Verify that StatefulSets have been deleted @ 05/05/24 14:46:13.897
  I0505 14:46:13.899428 21 statefulset.go:135] Deleting all statefulset in ns statefulset-1163
  E0505 14:46:13.911627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:46:13.937580 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1163" for this suite. @ 05/05/24 14:46:13.941
• [20.106 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 05/05/24 14:46:13.955
  I0505 14:46:13.955151 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 14:46:13.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:46:13.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:46:13.973
  STEP: Creating configMap with name projected-configmap-test-volume-6e3989f2-7db3-4b0c-8951-8129e0f23162 @ 05/05/24 14:46:13.976
  STEP: Creating a pod to test consume configMaps @ 05/05/24 14:46:13.98
  E0505 14:46:14.912162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:15.913360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 14:46:16.006
  I0505 14:46:16.010157 21 output.go:196] Trying to get logs from node worker00 pod pod-projected-configmaps-0fa051a7-fa6d-461f-bf9f-0ac7ccf2a223 container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 14:46:16.014
  I0505 14:46:16.034014 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2444" for this suite. @ 05/05/24 14:46:16.035
• [2.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 05/05/24 14:46:16.039
  I0505 14:46:16.039611 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 14:46:16.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:46:16.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:46:16.048
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 14:46:16.05
  E0505 14:46:16.913695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:17.914147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 14:46:18.061
  I0505 14:46:18.064836 21 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-f1670b7c-a652-463d-8389-1b046ea19e06 container client-container: <nil>
  STEP: delete the pod @ 05/05/24 14:46:18.07
  I0505 14:46:18.091878 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-262" for this suite. @ 05/05/24 14:46:18.094
• [2.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 05/05/24 14:46:18.099
  I0505 14:46:18.099730 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename sched-preemption @ 05/05/24 14:46:18.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:46:18.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:46:18.114
  I0505 14:46:18.126380 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0505 14:46:18.914391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:19.914759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:20.915476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:21.916853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:22.917201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:23.917981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:24.919190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:25.920170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:26.924053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:27.924799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:28.925002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:29.925336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:30.928332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:31.928838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:32.930005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:33.930593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:34.931346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:35.933634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:36.934187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:37.934217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:38.935428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:39.935751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:40.936516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:41.937110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:42.938327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:43.939239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:44.940238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:45.940771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:46.941728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:47.942137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:48.942749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:49.943060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:50.943378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:51.943565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:52.943743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:53.945451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:54.945423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:55.946166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:56.947180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:57.947308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:58.953189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:46:59.954094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:00.955136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:01.955742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:02.957514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:03.958076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:04.958908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:05.959330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:06.962835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:07.963367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:08.964006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:09.963970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:10.964132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:11.964848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:12.965400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:13.966486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:14.966570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:15.966719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:16.969525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:17.970192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:47:18.130398 21 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/05/24 14:47:18.133
  I0505 14:47:18.156553 21 preemption.go:269] Created pod: pod0-0-sched-preemption-low-priority
  I0505 14:47:18.160783 21 preemption.go:269] Created pod: pod0-1-sched-preemption-medium-priority
  I0505 14:47:18.175894 21 preemption.go:269] Created pod: pod1-0-sched-preemption-medium-priority
  I0505 14:47:18.182633 21 preemption.go:269] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/05/24 14:47:18.182
  E0505 14:47:18.971386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:19.971883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 05/05/24 14:47:20.201
  E0505 14:47:20.973601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:21.972774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:22.973201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:23.973989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:47:24.260489 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2434" for this suite. @ 05/05/24 14:47:24.262
• [66.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 05/05/24 14:47:24.267
  I0505 14:47:24.267494 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename secrets @ 05/05/24 14:47:24.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:47:24.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:47:24.279
  STEP: creating a secret @ 05/05/24 14:47:24.28
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 05/05/24 14:47:24.282
  STEP: patching the secret @ 05/05/24 14:47:24.283
  STEP: deleting the secret using a LabelSelector @ 05/05/24 14:47:24.287
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 05/05/24 14:47:24.289
  I0505 14:47:24.291432 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2112" for this suite. @ 05/05/24 14:47:24.292
• [0.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 05/05/24 14:47:24.297
  I0505 14:47:24.298410 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename statefulset @ 05/05/24 14:47:24.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:47:24.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:47:24.308
  STEP: Creating service test in namespace statefulset-2735 @ 05/05/24 14:47:24.31
  STEP: Creating a new StatefulSet @ 05/05/24 14:47:24.312
  I0505 14:47:24.321262 21 wait.go:40] Found 0 stateful pods, waiting for 3
  E0505 14:47:24.976457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:25.977715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:26.977331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:27.981070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:28.982250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:29.982389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:30.983448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:31.983673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:32.984579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:33.984790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:47:34.323733 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0505 14:47:34.323788 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0505 14:47:34.323799 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/05/24 14:47:34.336
  I0505 14:47:34.367684 21 statefulset.go:2241] Updating stateful set ss2
  STEP: Creating a new revision @ 05/05/24 14:47:34.367
  E0505 14:47:34.986071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:35.986360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:36.988241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:37.988781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:38.990146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:39.990720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:40.991197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:41.991643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:42.992229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:43.992130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 05/05/24 14:47:44.377
  STEP: Performing a canary update @ 05/05/24 14:47:44.377
  I0505 14:47:44.410426 21 statefulset.go:2241] Updating stateful set ss2
  I0505 14:47:44.415715 21 wait.go:74] Waiting for Pod statefulset-2735/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0505 14:47:44.993289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:45.995205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:46.995936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:47.996170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:48.996583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:49.997436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:50.998296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:52.000064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:53.001172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:54.001614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 05/05/24 14:47:54.416
  I0505 14:47:54.510454 21 wait.go:40] Found 2 stateful pods, waiting for 3
  E0505 14:47:55.002779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:56.003151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:57.003378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:58.004018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:47:59.004114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:00.004355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:01.004498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:02.005050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:03.005603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:04.008937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:48:04.499664 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0505 14:48:04.499693 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0505 14:48:04.499700 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 05/05/24 14:48:04.502
  I0505 14:48:04.520326 21 statefulset.go:2241] Updating stateful set ss2
  I0505 14:48:04.527779 21 wait.go:74] Waiting for Pod statefulset-2735/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0505 14:48:05.009365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:06.009721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:07.010157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:08.010404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:09.010456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:10.010718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:11.011172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:12.011766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:13.011874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:14.013463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:48:14.552326 21 statefulset.go:2241] Updating stateful set ss2
  I0505 14:48:14.557329 21 wait.go:56] Waiting for StatefulSet statefulset-2735/ss2 to complete update
  I0505 14:48:14.557397 21 wait.go:63] Waiting for Pod statefulset-2735/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0505 14:48:15.013719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:16.014672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:17.015491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:18.022801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:19.023659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:20.024322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:21.026028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:22.026516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:23.027391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:24.030623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:48:24.559710 21 statefulset.go:135] Deleting all statefulset in ns statefulset-2735
  I0505 14:48:24.561798 21 rest.go:150] Scaling statefulset ss2 to 0
  E0505 14:48:25.031464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:26.031470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:27.032228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:28.032984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:29.033075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:30.034212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:31.035093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:32.035185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:33.036719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:34.037332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:48:34.582653 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0505 14:48:34.585651 21 rest.go:88] Deleting statefulset ss2
  I0505 14:48:34.594734 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2735" for this suite. @ 05/05/24 14:48:34.599
• [70.306 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 05/05/24 14:48:34.604
  I0505 14:48:34.604460 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename webhook @ 05/05/24 14:48:34.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:48:34.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:48:34.621
  STEP: Setting up server cert @ 05/05/24 14:48:34.64
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 14:48:34.941
  STEP: Deploying the webhook pod @ 05/05/24 14:48:34.946
  STEP: Wait for the deployment to be ready @ 05/05/24 14:48:34.957
  I0505 14:48:34.963626 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0505 14:48:35.037480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:36.038655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/05/24 14:48:36.974
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 14:48:36.991
  E0505 14:48:37.038621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:48:37.991950 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/05/24 14:48:37.996
  STEP: create a pod @ 05/05/24 14:48:38.007
  E0505 14:48:38.039175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:39.039942      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 05/05/24 14:48:40.02
  I0505 14:48:40.020496 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=webhook-9305 attach --namespace=webhook-9305 to-be-attached-pod -i -c=container1'
  E0505 14:48:40.040107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:48:40.069510 21 builder.go:135] rc: 1
  I0505 14:48:40.097650 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9305" for this suite. @ 05/05/24 14:48:40.103
  STEP: Destroying namespace "webhook-markers-6264" for this suite. @ 05/05/24 14:48:40.109
• [5.511 seconds]
------------------------------
SS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 05/05/24 14:48:40.115
  I0505 14:48:40.115177 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename disruption @ 05/05/24 14:48:40.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:48:40.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:48:40.13
  STEP: Waiting for the pdb to be processed @ 05/05/24 14:48:40.135
  E0505 14:48:41.041358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:42.041405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 05/05/24 14:48:42.16
  I0505 14:48:42.164187 21 disruption.go:578] running pods: 0 < 3
  E0505 14:48:43.041893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:44.044398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:48:44.169194 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5246" for this suite. @ 05/05/24 14:48:44.174
• [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 05/05/24 14:48:44.18
  I0505 14:48:44.180689 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename replicaset @ 05/05/24 14:48:44.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:48:44.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:48:44.195
  STEP: Create a ReplicaSet @ 05/05/24 14:48:44.197
  STEP: Verify that the required pods have come up @ 05/05/24 14:48:44.202
  I0505 14:48:44.207475 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 3
  E0505 14:48:45.045150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:46.045483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:47.046816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:48.047099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:49.047783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:48:49.211732 21 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 05/05/24 14:48:49.211
  I0505 14:48:49.214735 21 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 05/05/24 14:48:49.214
  STEP: DeleteCollection of the ReplicaSets @ 05/05/24 14:48:49.219
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 05/05/24 14:48:49.224
  I0505 14:48:49.226707 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-763" for this suite. @ 05/05/24 14:48:49.228
• [5.067 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 05/05/24 14:48:49.248
  I0505 14:48:49.248797 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename statefulset @ 05/05/24 14:48:49.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:48:49.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:48:49.281
  STEP: Creating service test in namespace statefulset-4551 @ 05/05/24 14:48:49.285
  STEP: Creating stateful set ss in namespace statefulset-4551 @ 05/05/24 14:48:49.299
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4551 @ 05/05/24 14:48:49.309
  I0505 14:48:49.312921 21 wait.go:40] Found 0 stateful pods, waiting for 1
  E0505 14:48:50.048330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:51.048548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:52.050302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:53.050066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:54.050031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:55.050401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:56.050643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:57.051680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:58.053911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:48:59.053866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:48:59.312833 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 05/05/24 14:48:59.312
  I0505 14:48:59.316546 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=statefulset-4551 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0505 14:48:59.387314 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0505 14:48:59.387367 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0505 14:48:59.387376 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0505 14:48:59.389310 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0505 14:49:00.057824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:01.058764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:02.059275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:03.059795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:04.060322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:05.061266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:06.061331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:07.062698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:08.063344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:09.065764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:49:09.393666 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0505 14:49:09.393761 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0505 14:49:09.422455 21 resource.go:168] POD   NODE      PHASE    GRACE  CONDITIONS
  I0505 14:49:09.422522 21 resource.go:175] ss-0  worker00  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 14:48:50 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 14:48:49 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 14:48:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 14:48:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 14:48:49 +0000 UTC  }]
  I0505 14:49:09.422536 21 resource.go:178] 
  I0505 14:49:09.422550 21 statefulset.go:2147] StatefulSet ss has not reached scale 3, at 1
  E0505 14:49:10.065998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:49:10.425512 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 8.993623386s
  E0505 14:49:11.066076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:49:11.428696 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 7.990109509s
  E0505 14:49:12.067077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:49:12.435104 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 6.9858843s
  E0505 14:49:13.070108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:49:13.439394 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 5.980280922s
  E0505 14:49:14.071166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:49:14.441562 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 4.976675002s
  E0505 14:49:15.071441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:49:15.444963 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 3.974322863s
  E0505 14:49:16.073151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:49:16.449584 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 2.970359061s
  E0505 14:49:17.074787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:49:17.453305 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 1.965602944s
  E0505 14:49:18.075000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:49:18.466933 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 962.335146ms
  E0505 14:49:19.075146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4551 @ 05/05/24 14:49:19.468
  I0505 14:49:19.471495 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=statefulset-4551 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0505 14:49:19.549974 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0505 14:49:19.550008 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0505 14:49:19.550018 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0505 14:49:19.550058 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=statefulset-4551 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0505 14:49:19.626558 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0505 14:49:19.626636 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0505 14:49:19.627477 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0505 14:49:19.627666 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=statefulset-4551 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0505 14:49:19.735784 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0505 14:49:19.735821 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0505 14:49:19.735842 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0505 14:49:19.738434 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0505 14:49:19.738465 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0505 14:49:19.738474 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 05/05/24 14:49:19.738
  I0505 14:49:19.741128 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=statefulset-4551 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0505 14:49:19.811743 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0505 14:49:19.811783 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0505 14:49:19.811796 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0505 14:49:19.811857 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=statefulset-4551 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0505 14:49:19.887646 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0505 14:49:19.887679 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0505 14:49:19.887689 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0505 14:49:19.887725 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=statefulset-4551 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0505 14:49:19.989023 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0505 14:49:19.989053 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0505 14:49:19.989063 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0505 14:49:19.989073 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0505 14:49:19.992296 21 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0505 14:49:20.075384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:21.076136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:22.076218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:23.076672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:24.077582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:25.078478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:26.078587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:27.079559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:28.079647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:29.079747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:49:29.994285 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0505 14:49:29.994324 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0505 14:49:29.994337 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0505 14:49:30.016338 21 resource.go:168] POD   NODE      PHASE    GRACE  CONDITIONS
  I0505 14:49:30.016397 21 resource.go:175] ss-0  worker00  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 14:48:50 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 14:48:49 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 14:49:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 14:49:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 14:48:49 +0000 UTC  }]
  I0505 14:49:30.016431 21 resource.go:175] ss-1  worker00  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 14:49:10 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 14:49:09 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 14:49:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 14:49:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 14:49:09 +0000 UTC  }]
  I0505 14:49:30.016450 21 resource.go:175] ss-2  worker01  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 14:49:10 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 14:49:09 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 14:49:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 14:49:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 14:49:09 +0000 UTC  }]
  I0505 14:49:30.016463 21 resource.go:178] 
  I0505 14:49:30.016473 21 statefulset.go:2147] StatefulSet ss has not reached scale 0, at 3
  E0505 14:49:30.080549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:49:31.019156 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 8.996947304s
  E0505 14:49:31.082017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:49:32.032720 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 7.985630275s
  E0505 14:49:32.083102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:49:33.038656 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 6.979598774s
  E0505 14:49:33.083206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:49:34.043177 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 5.974189847s
  E0505 14:49:34.083587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:49:35.045483 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 4.970211419s
  E0505 14:49:35.083947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:49:36.049037 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 3.966651982s
  E0505 14:49:36.085013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:49:37.054171 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 2.963712024s
  E0505 14:49:37.085802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:49:38.058616 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 1.958478737s
  E0505 14:49:38.086058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:49:39.063814 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 952.0106ms
  E0505 14:49:39.086583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4551 @ 05/05/24 14:49:40.064
  I0505 14:49:40.067816 21 rest.go:150] Scaling statefulset ss to 0
  I0505 14:49:40.076650 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0505 14:49:40.079511 21 statefulset.go:135] Deleting all statefulset in ns statefulset-4551
  I0505 14:49:40.081143 21 rest.go:150] Scaling statefulset ss to 0
  E0505 14:49:40.087533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:49:40.088031 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0505 14:49:40.090488 21 rest.go:88] Deleting statefulset ss
  I0505 14:49:40.107345 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4551" for this suite. @ 05/05/24 14:49:40.11
• [50.865 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 05/05/24 14:49:40.114
  I0505 14:49:40.114413 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename webhook @ 05/05/24 14:49:40.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:49:40.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:49:40.13
  STEP: Setting up server cert @ 05/05/24 14:49:40.143
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 14:49:40.58
  STEP: Deploying the webhook pod @ 05/05/24 14:49:40.584
  STEP: Wait for the deployment to be ready @ 05/05/24 14:49:40.594
  I0505 14:49:40.599727 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0505 14:49:41.088376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:42.090207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/05/24 14:49:42.609
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 14:49:42.616
  E0505 14:49:43.091230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:49:43.617338 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/05/24 14:49:43.625
  I0505 14:49:43.681723 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1960" for this suite. @ 05/05/24 14:49:43.686
  STEP: Destroying namespace "webhook-markers-9556" for this suite. @ 05/05/24 14:49:43.701
• [3.600 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 05/05/24 14:49:43.717
  I0505 14:49:43.717926 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 14:49:43.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:49:43.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:49:43.751
  STEP: Starting the proxy @ 05/05/24 14:49:43.755
  I0505 14:49:43.757612 21 util.go:592] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-8396 proxy --unix-socket=/tmp/kubectl-proxy-unix2992668844/test'
  STEP: retrieving proxy /api/ output @ 05/05/24 14:49:43.811
  I0505 14:49:43.812189 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8396" for this suite. @ 05/05/24 14:49:43.815
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 05/05/24 14:49:43.822
  I0505 14:49:43.823530 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename hostport @ 05/05/24 14:49:43.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:49:43.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:49:43.845
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 05/05/24 14:49:43.853
  E0505 14:49:44.092022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:45.093379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.58.100 on the node which pod1 resides and expect scheduled @ 05/05/24 14:49:45.871
  E0505 14:49:46.094295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:47.095046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:48.096275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:49.096980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.58.100 but use UDP protocol on the node which pod2 resides @ 05/05/24 14:49:49.912
  E0505 14:49:50.124010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:51.125977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:52.126115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:53.128053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 05/05/24 14:49:53.952
  I0505 14:49:53.952093 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.58.100 http://127.0.0.1:54323/hostname] Namespace:hostport-8873 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 14:49:53.952129 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:49:53.952619 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 14:49:53.952681 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/hostport-8873/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.58.100+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.58.100, port: 54323 @ 05/05/24 14:49:53.996
  I0505 14:49:53.996082 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.58.100:54323/hostname] Namespace:hostport-8873 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 14:49:53.996111 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:49:53.996551 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 14:49:53.996596 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/hostport-8873/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.58.100%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.58.100, port: 54323 UDP @ 05/05/24 14:49:54.033
  I0505 14:49:54.033934 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.58.100 54323] Namespace:hostport-8873 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 14:49:54.033997 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:49:54.034677 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 14:49:54.034733 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/hostport-8873/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.58.100+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0505 14:49:54.131108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:55.131219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:56.131282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:57.134013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:49:58.136297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:49:59.069641 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-8873" for this suite. @ 05/05/24 14:49:59.072
• [15.263 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 05/05/24 14:49:59.086
  I0505 14:49:59.086141 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 14:49:59.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:49:59.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:49:59.1
  STEP: Creating projection with secret that has name projected-secret-test-6b13bdbe-fdc1-40bd-8517-4a4ed14745d4 @ 05/05/24 14:49:59.102
  STEP: Creating a pod to test consume secrets @ 05/05/24 14:49:59.105
  E0505 14:49:59.137207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:00.138211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:01.139360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:02.140367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 14:50:03.126
  I0505 14:50:03.130315 21 output.go:196] Trying to get logs from node worker01 pod pod-projected-secrets-2c516901-ce31-431d-89f7-e0e7a01f8af7 container projected-secret-volume-test: <nil>
  E0505 14:50:03.140581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 05/05/24 14:50:03.143
  I0505 14:50:03.168562 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7913" for this suite. @ 05/05/24 14:50:03.173
• [4.092 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 05/05/24 14:50:03.178
  I0505 14:50:03.178537 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename chunking @ 05/05/24 14:50:03.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:50:03.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:50:03.2
  STEP: creating a large number of resources @ 05/05/24 14:50:03.202
  E0505 14:50:04.141581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:05.141808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:06.142329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:07.144009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:08.144223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:50:08.435440      21 request.go:697] Waited for 1.001829485s due to client-side throttling, not priority and fairness, request: POST:https://10.32.0.1:443/api/v1/namespaces/chunking-888/podtemplates
  E0505 14:50:09.146979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:10.147491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:11.147590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:12.149752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:13.150768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:14.151507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:15.151766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:16.153162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:17.154802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:18.156624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:19.158170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:20.161317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 05/05/24 14:50:20.883
  I0505 14:50:20.935249 21 chunking.go:98] Retrieved 17/17 results with rv 35791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0505 14:50:20.983228 21 chunking.go:98] Retrieved 17/17 results with rv 35791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0505 14:50:21.031834 21 chunking.go:98] Retrieved 17/17 results with rv 35791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0505 14:50:21.081364 21 chunking.go:98] Retrieved 17/17 results with rv 35791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0505 14:50:21.135857 21 chunking.go:98] Retrieved 17/17 results with rv 35791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  E0505 14:50:21.161566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:50:21.185283 21 chunking.go:98] Retrieved 17/17 results with rv 35791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0505 14:50:21.234521 21 chunking.go:98] Retrieved 17/17 results with rv 35791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0505 14:50:21.281156 21 chunking.go:98] Retrieved 17/17 results with rv 35791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0505 14:50:21.334605 21 chunking.go:98] Retrieved 17/17 results with rv 35791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0505 14:50:21.382323 21 chunking.go:98] Retrieved 17/17 results with rv 35791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0505 14:50:21.432553 21 chunking.go:98] Retrieved 17/17 results with rv 35791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0505 14:50:21.483169 21 chunking.go:98] Retrieved 17/17 results with rv 35791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0505 14:50:21.531959 21 chunking.go:98] Retrieved 17/17 results with rv 35791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0505 14:50:21.581218 21 chunking.go:98] Retrieved 17/17 results with rv 35791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0505 14:50:21.631379 21 chunking.go:98] Retrieved 17/17 results with rv 35791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0505 14:50:21.681026 21 chunking.go:98] Retrieved 17/17 results with rv 35791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0505 14:50:21.731604 21 chunking.go:98] Retrieved 17/17 results with rv 35791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0505 14:50:21.781374 21 chunking.go:98] Retrieved 17/17 results with rv 35791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0505 14:50:21.831651 21 chunking.go:98] Retrieved 17/17 results with rv 35791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0505 14:50:21.881442 21 chunking.go:98] Retrieved 17/17 results with rv 35791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0505 14:50:21.931496 21 chunking.go:98] Retrieved 17/17 results with rv 35791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0505 14:50:21.981864 21 chunking.go:98] Retrieved 17/17 results with rv 35791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0505 14:50:22.031280 21 chunking.go:98] Retrieved 17/17 results with rv 35791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0505 14:50:22.081997 21 chunking.go:98] Retrieved 9/17 results with rv 35791 and continue 
  I0505 14:50:22.132403 21 chunking.go:98] Retrieved 17/17 results with rv 35799 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTksInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  E0505 14:50:22.163244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:50:22.181865 21 chunking.go:98] Retrieved 17/17 results with rv 35799 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0505 14:50:22.231639 21 chunking.go:98] Retrieved 17/17 results with rv 35799 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0505 14:50:22.282510 21 chunking.go:98] Retrieved 17/17 results with rv 35799 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0505 14:50:22.332951 21 chunking.go:98] Retrieved 17/17 results with rv 35799 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0505 14:50:22.381727 21 chunking.go:98] Retrieved 17/17 results with rv 35799 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0505 14:50:22.432370 21 chunking.go:98] Retrieved 17/17 results with rv 35799 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0505 14:50:22.482839 21 chunking.go:98] Retrieved 17/17 results with rv 35799 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0505 14:50:22.531733 21 chunking.go:98] Retrieved 17/17 results with rv 35799 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0505 14:50:22.582761 21 chunking.go:98] Retrieved 17/17 results with rv 35799 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0505 14:50:22.631534 21 chunking.go:98] Retrieved 17/17 results with rv 35799 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0505 14:50:22.682137 21 chunking.go:98] Retrieved 17/17 results with rv 35799 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0505 14:50:22.732701 21 chunking.go:98] Retrieved 17/17 results with rv 35799 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0505 14:50:22.781479 21 chunking.go:98] Retrieved 17/17 results with rv 35799 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0505 14:50:22.832768 21 chunking.go:98] Retrieved 17/17 results with rv 35799 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0505 14:50:22.881447 21 chunking.go:98] Retrieved 17/17 results with rv 35799 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0505 14:50:22.932992 21 chunking.go:98] Retrieved 17/17 results with rv 35799 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0505 14:50:22.981555 21 chunking.go:98] Retrieved 17/17 results with rv 35799 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0505 14:50:23.032491 21 chunking.go:98] Retrieved 17/17 results with rv 35799 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0505 14:50:23.081599 21 chunking.go:98] Retrieved 17/17 results with rv 35799 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0505 14:50:23.131368 21 chunking.go:98] Retrieved 17/17 results with rv 35799 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  E0505 14:50:23.163568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:50:23.182236 21 chunking.go:98] Retrieved 17/17 results with rv 35799 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0505 14:50:23.233138 21 chunking.go:98] Retrieved 17/17 results with rv 35799 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU3OTksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0505 14:50:23.281755 21 chunking.go:98] Retrieved 9/17 results with rv 35799 and continue 
  I0505 14:50:23.333068 21 chunking.go:98] Retrieved 17/17 results with rv 35801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4MDEsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0505 14:50:23.382762 21 chunking.go:98] Retrieved 17/17 results with rv 35801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4MDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0505 14:50:23.431453 21 chunking.go:98] Retrieved 17/17 results with rv 35801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4MDEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0505 14:50:23.483590 21 chunking.go:98] Retrieved 17/17 results with rv 35801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4MDEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0505 14:50:23.531928 21 chunking.go:98] Retrieved 17/17 results with rv 35801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4MDEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0505 14:50:23.581598 21 chunking.go:98] Retrieved 17/17 results with rv 35801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4MDEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0505 14:50:23.632695 21 chunking.go:98] Retrieved 17/17 results with rv 35801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4MDEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0505 14:50:23.681664 21 chunking.go:98] Retrieved 17/17 results with rv 35801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4MDEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0505 14:50:23.731004 21 chunking.go:98] Retrieved 17/17 results with rv 35801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4MDEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0505 14:50:23.781726 21 chunking.go:98] Retrieved 17/17 results with rv 35801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4MDEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0505 14:50:23.831486 21 chunking.go:98] Retrieved 17/17 results with rv 35801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4MDEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0505 14:50:23.882208 21 chunking.go:98] Retrieved 17/17 results with rv 35801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4MDEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0505 14:50:23.931102 21 chunking.go:98] Retrieved 17/17 results with rv 35801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4MDEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0505 14:50:23.981319 21 chunking.go:98] Retrieved 17/17 results with rv 35801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4MDEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0505 14:50:24.031443 21 chunking.go:98] Retrieved 17/17 results with rv 35801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4MDEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0505 14:50:24.081063 21 chunking.go:98] Retrieved 17/17 results with rv 35801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4MDEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0505 14:50:24.132047 21 chunking.go:98] Retrieved 17/17 results with rv 35801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4MDEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  E0505 14:50:24.164587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:50:24.182446 21 chunking.go:98] Retrieved 17/17 results with rv 35801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4MDEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0505 14:50:24.232167 21 chunking.go:98] Retrieved 17/17 results with rv 35801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4MDEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0505 14:50:24.281929 21 chunking.go:98] Retrieved 17/17 results with rv 35801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4MDEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0505 14:50:24.331206 21 chunking.go:98] Retrieved 17/17 results with rv 35801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4MDEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0505 14:50:24.383022 21 chunking.go:98] Retrieved 17/17 results with rv 35801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4MDEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0505 14:50:24.432414 21 chunking.go:98] Retrieved 17/17 results with rv 35801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4MDEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0505 14:50:24.483108 21 chunking.go:98] Retrieved 9/17 results with rv 35801 and continue 
  STEP: retrieving those results all at once @ 05/05/24 14:50:24.483
  I0505 14:50:24.540025 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-888" for this suite. @ 05/05/24 14:50:24.581
• [21.457 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 05/05/24 14:50:24.635
  I0505 14:50:24.635368 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/05/24 14:50:24.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:50:24.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:50:24.654
  STEP: set up a multi version CRD @ 05/05/24 14:50:24.656
  I0505 14:50:24.656667 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  E0505 14:50:25.166018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:26.173625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:27.173391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 05/05/24 14:50:27.733
  STEP: check the unserved version gets removed @ 05/05/24 14:50:27.754
  E0505 14:50:28.174525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 05/05/24 14:50:28.423
  E0505 14:50:29.176847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:30.177110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:50:30.843337 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4581" for this suite. @ 05/05/24 14:50:30.846
• [6.214 seconds]
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 05/05/24 14:50:30.849
  I0505 14:50:30.849599 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename replication-controller @ 05/05/24 14:50:30.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:50:30.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:50:30.859
  I0505 14:50:30.861173 21 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 05/05/24 14:50:30.865
  STEP: Checking rc "condition-test" has the desired failure condition set @ 05/05/24 14:50:30.868
  E0505 14:50:31.177862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 05/05/24 14:50:31.873
  I0505 14:50:31.882500 21 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 05/05/24 14:50:31.882
  E0505 14:50:32.179021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:50:32.887960 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6233" for this suite. @ 05/05/24 14:50:32.889
• [2.054 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 05/05/24 14:50:32.903
  I0505 14:50:32.903580 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/05/24 14:50:32.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:50:32.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:50:32.925
  I0505 14:50:32.928978 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  E0505 14:50:33.179319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:50:33.964120 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3475" for this suite. @ 05/05/24 14:50:33.973
• [1.090 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 05/05/24 14:50:33.994
  I0505 14:50:33.994804 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename cronjob @ 05/05/24 14:50:33.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:50:34.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:50:34.01
  STEP: Creating a ForbidConcurrent cronjob @ 05/05/24 14:50:34.012
  STEP: Ensuring a job is scheduled @ 05/05/24 14:50:34.016
  E0505 14:50:34.183987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:35.184254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:36.184565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:37.185304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:38.186012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:39.186572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:40.187762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:41.187743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:42.188496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:43.191388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:44.191497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:45.196372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:46.203622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:47.213314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:48.214133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:49.215179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:50.215968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:51.216054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:52.218387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:53.219434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:54.219670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:55.220491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:56.221750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:57.223600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:58.224209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:50:59.225330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:00.227170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:01.227548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 05/05/24 14:51:02.023
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/05/24 14:51:02.026
  STEP: Ensuring no more jobs are scheduled @ 05/05/24 14:51:02.029
  STEP: Removing cronjob @ 05/05/24 14:51:02.032
  I0505 14:51:02.047060 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9588" for this suite. @ 05/05/24 14:51:02.049
• [28.058 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 05/05/24 14:51:02.053
  I0505 14:51:02.053146 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename gc @ 05/05/24 14:51:02.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:51:02.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:51:02.062
  I0505 14:51:02.088732 21 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"d0d36a11-a6fe-4b86-bd26-33e0eb00ad5b", Controller:(*bool)(0xc0035146fe), BlockOwnerDeletion:(*bool)(0xc0035146ff)}}
  I0505 14:51:02.096135 21 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"594fa060-fbf4-4b37-ab9a-7f2210b9f8be", Controller:(*bool)(0xc00351498a), BlockOwnerDeletion:(*bool)(0xc00351498b)}}
  I0505 14:51:02.103521 21 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"a43d1947-9faa-4099-b366-a891bb2aac1e", Controller:(*bool)(0xc003514bde), BlockOwnerDeletion:(*bool)(0xc003514bdf)}}
  E0505 14:51:02.228085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:03.228443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:04.228842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:05.229364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:06.230303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:51:07.113074 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2008" for this suite. @ 05/05/24 14:51:07.115
• [5.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 05/05/24 14:51:07.118
  I0505 14:51:07.118796 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 14:51:07.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:51:07.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:51:07.126
  STEP: Creating secret with name s-test-opt-del-053df7a7-67d1-4c2a-bb6b-d2e3160bb6f5 @ 05/05/24 14:51:07.13
  STEP: Creating secret with name s-test-opt-upd-4323c590-a4c5-4ffd-8e76-52ca0db8a180 @ 05/05/24 14:51:07.131
  STEP: Creating the pod @ 05/05/24 14:51:07.133
  E0505 14:51:07.231139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:08.234534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-053df7a7-67d1-4c2a-bb6b-d2e3160bb6f5 @ 05/05/24 14:51:09.154
  STEP: Updating secret s-test-opt-upd-4323c590-a4c5-4ffd-8e76-52ca0db8a180 @ 05/05/24 14:51:09.166
  STEP: Creating secret with name s-test-opt-create-914afcb3-2efc-4239-98dc-d08813448a33 @ 05/05/24 14:51:09.168
  STEP: waiting to observe update in volume @ 05/05/24 14:51:09.17
  E0505 14:51:09.234763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:10.235324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:11.236263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:12.237058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:51:13.202759 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9881" for this suite. @ 05/05/24 14:51:13.205
• [6.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:668
  STEP: Creating a kubernetes client @ 05/05/24 14:51:13.214
  I0505 14:51:13.214255 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename job @ 05/05/24 14:51:13.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:51:13.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:51:13.231
  STEP: Creating a job @ 05/05/24 14:51:13.233
  E0505 14:51:13.237640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring active pods == parallelism @ 05/05/24 14:51:13.237
  E0505 14:51:14.239099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:15.239471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 05/05/24 14:51:15.242
  STEP: deleting Job.batch foo in namespace job-187, will wait for the garbage collector to delete the pods @ 05/05/24 14:51:15.242
  I0505 14:51:15.301907 21 resources.go:139] Deleting Job.batch foo took: 3.687777ms
  I0505 14:51:15.406089 21 resources.go:163] Terminating Job.batch foo pods took: 104.172511ms
  E0505 14:51:16.240418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 05/05/24 14:51:17.007
  I0505 14:51:17.011417 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-187" for this suite. @ 05/05/24 14:51:17.015
• [3.809 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 05/05/24 14:51:17.024
  I0505 14:51:17.024087 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename configmap @ 05/05/24 14:51:17.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:51:17.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:51:17.034
  STEP: Creating configMap that has name configmap-test-emptyKey-50ed68e1-a746-4f63-af87-77bb9460d1c0 @ 05/05/24 14:51:17.036
  I0505 14:51:17.037217 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8687" for this suite. @ 05/05/24 14:51:17.038
• [0.018 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 05/05/24 14:51:17.042
  I0505 14:51:17.042725 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename disruption @ 05/05/24 14:51:17.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:51:17.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:51:17.054
  STEP: creating the pdb @ 05/05/24 14:51:17.055
  STEP: Waiting for the pdb to be processed @ 05/05/24 14:51:17.059
  E0505 14:51:17.241258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:18.241637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 05/05/24 14:51:19.061
  STEP: Waiting for the pdb to be processed @ 05/05/24 14:51:19.066
  STEP: patching the pdb @ 05/05/24 14:51:19.07
  STEP: Waiting for the pdb to be processed @ 05/05/24 14:51:19.074
  STEP: Waiting for the pdb to be deleted @ 05/05/24 14:51:19.079
  I0505 14:51:19.080557 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5404" for this suite. @ 05/05/24 14:51:19.081
• [2.042 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 05/05/24 14:51:19.085
  I0505 14:51:19.085239 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename resourcequota @ 05/05/24 14:51:19.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:51:19.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:51:19.093
  STEP: Discovering how many secrets are in namespace by default @ 05/05/24 14:51:19.094
  E0505 14:51:19.243280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:20.244387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:21.247842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:22.248417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:23.248950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 05/05/24 14:51:24.099
  E0505 14:51:24.249385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:25.251256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:26.251628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:27.251880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:28.254348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/05/24 14:51:29.104
  STEP: Ensuring resource quota status is calculated @ 05/05/24 14:51:29.113
  E0505 14:51:29.255183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:30.257047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 05/05/24 14:51:31.119
  STEP: Ensuring resource quota status captures secret creation @ 05/05/24 14:51:31.129
  E0505 14:51:31.257805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:32.258508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 05/05/24 14:51:33.13
  STEP: Ensuring resource quota status released usage @ 05/05/24 14:51:33.133
  E0505 14:51:33.259569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:34.260670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:51:35.139921 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7624" for this suite. @ 05/05/24 14:51:35.144
• [16.075 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 05/05/24 14:51:35.159
  I0505 14:51:35.159861 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename replication-controller @ 05/05/24 14:51:35.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:51:35.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:51:35.169
  STEP: Creating replication controller my-hostname-basic-66bf9c70-44ff-4042-b4ff-4d201007ae90 @ 05/05/24 14:51:35.17
  I0505 14:51:35.174752 21 resource.go:87] Pod name my-hostname-basic-66bf9c70-44ff-4042-b4ff-4d201007ae90: Found 0 pods out of 1
  E0505 14:51:35.260566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:36.260813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:37.261164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:38.261737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:39.263033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:51:40.188533 21 resource.go:87] Pod name my-hostname-basic-66bf9c70-44ff-4042-b4ff-4d201007ae90: Found 1 pods out of 1
  I0505 14:51:40.188563 21 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-66bf9c70-44ff-4042-b4ff-4d201007ae90" are running
  I0505 14:51:40.192035 21 rc.go:523] Pod "my-hostname-basic-66bf9c70-44ff-4042-b4ff-4d201007ae90-mthgf" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-05 14:51:35 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-05 14:51:35 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-05 14:51:35 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-05 14:51:35 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-05 14:51:35 +0000 UTC Reason: Message:}])
  I0505 14:51:40.192072 21 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/05/24 14:51:40.192
  I0505 14:51:40.197812 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2034" for this suite. @ 05/05/24 14:51:40.2
• [5.043 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 05/05/24 14:51:40.203
  I0505 14:51:40.203229 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename subpath @ 05/05/24 14:51:40.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:51:40.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:51:40.216
  STEP: Setting up data @ 05/05/24 14:51:40.218
  STEP: Creating pod pod-subpath-test-projected-wpfq @ 05/05/24 14:51:40.223
  STEP: Creating a pod to test atomic-volume-subpath @ 05/05/24 14:51:40.223
  E0505 14:51:40.263744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:41.264194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:42.264652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:43.265054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:44.265221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:45.265128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:46.266262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:47.266586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:48.267345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:49.267587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:50.267613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:51.271223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:52.272106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:53.272689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:54.272822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:55.272882      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:56.272930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:57.273210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:58.275009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:51:59.275488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:00.277267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:01.277612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 14:52:02.268
  I0505 14:52:02.270357 21 output.go:196] Trying to get logs from node worker00 pod pod-subpath-test-projected-wpfq container test-container-subpath-projected-wpfq: <nil>
  E0505 14:52:02.278108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 05/05/24 14:52:02.278
  STEP: Deleting pod pod-subpath-test-projected-wpfq @ 05/05/24 14:52:02.291
  I0505 14:52:02.291558 21 delete.go:62] Deleting pod "pod-subpath-test-projected-wpfq" in namespace "subpath-9186"
  I0505 14:52:02.293980 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9186" for this suite. @ 05/05/24 14:52:02.295
• [22.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 05/05/24 14:52:02.299
  I0505 14:52:02.299723 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/05/24 14:52:02.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:52:02.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:52:02.312
  I0505 14:52:02.313936 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  E0505 14:52:03.278302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:04.283314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:05.283923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:52:05.381069 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1877" for this suite. @ 05/05/24 14:52:05.385
• [3.104 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 05/05/24 14:52:05.403
  I0505 14:52:05.403983 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename deployment @ 05/05/24 14:52:05.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:52:05.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:52:05.416
  I0505 14:52:05.421998 21 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  E0505 14:52:06.284303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:07.284519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:08.287059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:09.286695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:10.287110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:52:10.428670 21 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/05/24 14:52:10.428
  I0505 14:52:10.428766 21 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0505 14:52:11.287992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:12.288370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:52:12.430887 21 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0505 14:52:12.436144 21 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0505 14:52:13.288444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:14.289779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:52:14.472280 21 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0505 14:52:14.475188 21 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0505 14:52:14.478116 21 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0505 14:52:14.492754 21 deployment.go:313] Updating deployment test-rollover-deployment
  I0505 14:52:14.492794 21 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0505 14:52:15.291355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:16.291513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:52:16.497021 21 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0505 14:52:16.500159 21 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0505 14:52:16.502298 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0505 14:52:16.502351 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 14, 52, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 14, 52, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 14, 52, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 14, 52, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0505 14:52:17.292380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:18.293011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:52:18.505735 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0505 14:52:18.505790 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 14, 52, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 14, 52, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 14, 52, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 14, 52, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0505 14:52:19.294206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:20.296423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:52:20.513592 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0505 14:52:20.513720 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 14, 52, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 14, 52, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 14, 52, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 14, 52, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0505 14:52:21.297535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:22.298173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:52:22.511915 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0505 14:52:22.512001 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 14, 52, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 14, 52, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 14, 52, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 14, 52, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0505 14:52:23.299806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:24.300860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:52:24.508680 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0505 14:52:24.508771 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 14, 52, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 14, 52, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 14, 52, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 14, 52, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0505 14:52:25.301089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:26.305237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:52:26.509088 21 deployment.go:94] 
  I0505 14:52:26.509147 21 deployment.go:974] Ensure that both old replica sets have no replicas
  I0505 14:52:26.516214 21 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1060",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7f5de019-c619-46ae-b6e3-16ad03f9e18c",
      ResourceVersion: (string) (len=5) "37191",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850517532,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850517534,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850517545,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850517532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850517532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850517545,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850517532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-679c966bdf\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0505 14:52:26.525304 21 deployment.go:39] New ReplicaSet "test-rollover-deployment-679c966bdf" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-679c966bdf",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1060",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "041c9463-db60-435d-8923-3f6635e63025",
      ResourceVersion: (string) (len=5) "37181",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850517534,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "7f5de019-c619-46ae-b6e3-16ad03f9e18c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850517534,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 66 35 64 65 30  31 39 2d 63 36 31 39 2d  |\"7f5de019-c619-|
              00000120  34 36 61 65 2d 62 36 65  33 2d 31 36 61 64 30 33  |46ae-b6e3-16ad03|
              00000130  66 39 65 31 38 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f9e18c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850517545,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0505 14:52:26.527973 21 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0505 14:52:26.528683 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1060",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a4b8e47d-a3cf-4d86-b322-6fb147b18efa",
      ResourceVersion: (string) (len=5) "37190",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850517525,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "7f5de019-c619-46ae-b6e3-16ad03f9e18c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850517525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850517545,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  37 66 35 64 65 30 31 39  2d 63 36 31 39 2d 34 36  |7f5de019-c619-46|
              000000c0  61 65 2d 62 36 65 33 2d  31 36 61 64 30 33 66 39  |ae-b6e3-16ad03f9|
              000000d0  65 31 38 63 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |e18c\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850517545,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0505 14:52:26.530441 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-65bd487b4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1060",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "886f2b52-a609-4fe9-bb17-b38c2c6b1aab",
      ResourceVersion: (string) (len=5) "37126",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850517532,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "7f5de019-c619-46ae-b6e3-16ad03f9e18c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850517534,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 66 35 64 65 30  31 39 2d 63 36 31 39 2d  |\"7f5de019-c619-|
              00000120  34 36 61 65 2d 62 36 65  33 2d 31 36 61 64 30 33  |46ae-b6e3-16ad03|
              00000130  66 39 65 31 38 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f9e18c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850517534,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0505 14:52:26.536635 21 deployment.go:67] Pod "test-rollover-deployment-679c966bdf-wwknd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-679c966bdf-wwknd",
      GenerateName: (string) (len=36) "test-rollover-deployment-679c966bdf-",
      Namespace: (string) (len=15) "deployment-1060",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cc4e58d5-f620-4980-8b61-a702d78c5835",
      ResourceVersion: (string) (len=5) "37140",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850517534,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "34c25a9cf98cd167d73acfa16a1ace23561e9d2755e008acacb93e3354421348",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.131/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.131/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-679c966bdf",
          UID: (types.UID) (len=36) "041c9463-db60-435d-8923-3f6635e63025",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850517534,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850517534,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 34  31 63 39 34 36 33 2d 64  |d\":\"041c9463-d|
              00000090  62 36 30 2d 34 33 35 64  2d 38 39 32 33 2d 33 66  |b60-435d-8923-3f|
              000000a0  36 36 33 35 65 36 33 30  32 35 5c 22 7d 22 3a 7b  |6635e63025\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850517535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 33 31 5c 22 7d 22  |.200.131.131\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5xqf4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5xqf4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850517535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850517534,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850517535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850517535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850517534,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.131",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.131"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850517534,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850517535,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://888583361af0335077c43f96876b33e98e4237ffea5045bb18d976071d7f1152",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0505 14:52:26.539758 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1060" for this suite. @ 05/05/24 14:52:26.543
• [21.147 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 05/05/24 14:52:26.551
  I0505 14:52:26.551483 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename var-expansion @ 05/05/24 14:52:26.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:52:26.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:52:26.569
  STEP: Creating a pod to test substitution in volume subpath @ 05/05/24 14:52:26.573
  E0505 14:52:27.307317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:28.306974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 14:52:28.588
  I0505 14:52:28.593058 21 output.go:196] Trying to get logs from node worker00 pod var-expansion-d7f1410f-07ab-480b-ac77-76f42da71de1 container dapi-container: <nil>
  STEP: delete the pod @ 05/05/24 14:52:28.597
  I0505 14:52:28.606326 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7131" for this suite. @ 05/05/24 14:52:28.608
• [2.060 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 05/05/24 14:52:28.611
  I0505 14:52:28.611619 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename webhook @ 05/05/24 14:52:28.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:52:28.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:52:28.621
  STEP: Setting up server cert @ 05/05/24 14:52:28.631
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 14:52:28.768
  STEP: Deploying the webhook pod @ 05/05/24 14:52:28.772
  STEP: Wait for the deployment to be ready @ 05/05/24 14:52:28.778
  I0505 14:52:28.785261 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0505 14:52:29.308658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:30.310206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/05/24 14:52:30.798
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 14:52:30.819
  E0505 14:52:31.311033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:52:31.820380 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 05/05/24 14:52:31.825
  STEP: Creating a custom resource definition that should be denied by the webhook @ 05/05/24 14:52:31.833
  I0505 14:52:31.833463 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 14:52:31.880260 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-99" for this suite. @ 05/05/24 14:52:31.892
  STEP: Destroying namespace "webhook-markers-6454" for this suite. @ 05/05/24 14:52:31.901
• [3.297 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 05/05/24 14:52:31.91
  I0505 14:52:31.910526 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename webhook @ 05/05/24 14:52:31.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:52:31.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:52:31.945
  STEP: Setting up server cert @ 05/05/24 14:52:31.982
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 14:52:32.305
  STEP: Deploying the webhook pod @ 05/05/24 14:52:32.308
  E0505 14:52:32.311238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 05/05/24 14:52:32.315
  I0505 14:52:32.321293 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0505 14:52:33.312440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:34.313636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/05/24 14:52:34.329
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 14:52:34.334
  E0505 14:52:35.314020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:52:35.335436 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 05/05/24 14:52:35.343
  I0505 14:52:35.405674 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-443" for this suite. @ 05/05/24 14:52:35.411
  STEP: Destroying namespace "webhook-markers-3325" for this suite. @ 05/05/24 14:52:35.423
• [3.527 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:355
  STEP: Creating a kubernetes client @ 05/05/24 14:52:35.441
  I0505 14:52:35.441055 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 14:52:35.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:52:35.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:52:35.471
  STEP: creating a replication controller @ 05/05/24 14:52:35.477
  I0505 14:52:35.477338 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3363 create -f -'
  I0505 14:52:35.650313 21 builder.go:146] stderr: ""
  I0505 14:52:35.650351 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/05/24 14:52:35.65
  I0505 14:52:35.650433 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3363 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0505 14:52:35.774538 21 builder.go:146] stderr: ""
  I0505 14:52:35.774572 21 builder.go:147] stdout: "update-demo-nautilus-99m6x update-demo-nautilus-mpbnz "
  I0505 14:52:35.774618 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3363 get pods update-demo-nautilus-99m6x -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0505 14:52:35.822060 21 builder.go:146] stderr: ""
  I0505 14:52:35.822088 21 builder.go:147] stdout: ""
  I0505 14:52:35.822097 21 kubectl.go:2501] update-demo-nautilus-99m6x is created but not running
  E0505 14:52:36.314936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:37.316019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:38.316397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:39.320124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:40.319697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:52:40.822742 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3363 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0505 14:52:40.871215 21 builder.go:146] stderr: ""
  I0505 14:52:40.871244 21 builder.go:147] stdout: "update-demo-nautilus-99m6x update-demo-nautilus-mpbnz "
  I0505 14:52:40.871273 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3363 get pods update-demo-nautilus-99m6x -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0505 14:52:40.909756 21 builder.go:146] stderr: ""
  I0505 14:52:40.909784 21 builder.go:147] stdout: "true"
  I0505 14:52:40.909815 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3363 get pods update-demo-nautilus-99m6x -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0505 14:52:40.946202 21 builder.go:146] stderr: ""
  I0505 14:52:40.946234 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0505 14:52:40.946243 21 kubectl.go:2392] validating pod update-demo-nautilus-99m6x
  I0505 14:52:40.954684 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0505 14:52:40.954733 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0505 14:52:40.954744 21 kubectl.go:2519] update-demo-nautilus-99m6x is verified up and running
  I0505 14:52:40.954788 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3363 get pods update-demo-nautilus-mpbnz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0505 14:52:40.997005 21 builder.go:146] stderr: ""
  I0505 14:52:40.997030 21 builder.go:147] stdout: "true"
  I0505 14:52:40.997061 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3363 get pods update-demo-nautilus-mpbnz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0505 14:52:41.038923 21 builder.go:146] stderr: ""
  I0505 14:52:41.038955 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0505 14:52:41.038966 21 kubectl.go:2392] validating pod update-demo-nautilus-mpbnz
  I0505 14:52:41.044513 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0505 14:52:41.044565 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0505 14:52:41.044577 21 kubectl.go:2519] update-demo-nautilus-mpbnz is verified up and running
  STEP: scaling down the replication controller @ 05/05/24 14:52:41.044
  I0505 14:52:41.047149 21 kubectl.go:324] scanned /root for discovery docs: <nil>
  I0505 14:52:41.047228 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3363 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0505 14:52:41.321207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:52:42.101264 21 builder.go:146] stderr: ""
  I0505 14:52:42.101321 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/05/24 14:52:42.101
  I0505 14:52:42.101457 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3363 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0505 14:52:42.149726 21 builder.go:146] stderr: ""
  I0505 14:52:42.149763 21 builder.go:147] stdout: "update-demo-nautilus-99m6x update-demo-nautilus-mpbnz "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 05/05/24 14:52:42.149
  E0505 14:52:42.322868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:43.322976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:44.324165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:45.324325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:46.324629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:52:47.150678 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3363 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0505 14:52:47.197704 21 builder.go:146] stderr: ""
  I0505 14:52:47.197733 21 builder.go:147] stdout: "update-demo-nautilus-99m6x "
  I0505 14:52:47.197765 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3363 get pods update-demo-nautilus-99m6x -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0505 14:52:47.235687 21 builder.go:146] stderr: ""
  I0505 14:52:47.235714 21 builder.go:147] stdout: "true"
  I0505 14:52:47.235752 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3363 get pods update-demo-nautilus-99m6x -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0505 14:52:47.275588 21 builder.go:146] stderr: ""
  I0505 14:52:47.275618 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0505 14:52:47.275629 21 kubectl.go:2392] validating pod update-demo-nautilus-99m6x
  I0505 14:52:47.278663 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0505 14:52:47.278734 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0505 14:52:47.278749 21 kubectl.go:2519] update-demo-nautilus-99m6x is verified up and running
  STEP: scaling up the replication controller @ 05/05/24 14:52:47.278
  I0505 14:52:47.280408 21 kubectl.go:324] scanned /root for discovery docs: <nil>
  I0505 14:52:47.280445 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3363 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0505 14:52:47.324843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:48.324969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:52:48.327810 21 builder.go:146] stderr: ""
  I0505 14:52:48.327838 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/05/24 14:52:48.327
  I0505 14:52:48.327932 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3363 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0505 14:52:48.372327 21 builder.go:146] stderr: ""
  I0505 14:52:48.372355 21 builder.go:147] stdout: "update-demo-nautilus-5f9gp update-demo-nautilus-99m6x "
  I0505 14:52:48.372388 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3363 get pods update-demo-nautilus-5f9gp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0505 14:52:48.412961 21 builder.go:146] stderr: ""
  I0505 14:52:48.412990 21 builder.go:147] stdout: "true"
  I0505 14:52:48.413031 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3363 get pods update-demo-nautilus-5f9gp -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0505 14:52:48.453587 21 builder.go:146] stderr: ""
  I0505 14:52:48.453618 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0505 14:52:48.453628 21 kubectl.go:2392] validating pod update-demo-nautilus-5f9gp
  I0505 14:52:48.456012 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0505 14:52:48.456051 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0505 14:52:48.456123 21 kubectl.go:2519] update-demo-nautilus-5f9gp is verified up and running
  I0505 14:52:48.456229 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3363 get pods update-demo-nautilus-99m6x -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0505 14:52:48.500691 21 builder.go:146] stderr: ""
  I0505 14:52:48.500719 21 builder.go:147] stdout: "true"
  I0505 14:52:48.500752 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3363 get pods update-demo-nautilus-99m6x -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0505 14:52:48.540016 21 builder.go:146] stderr: ""
  I0505 14:52:48.540050 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0505 14:52:48.540059 21 kubectl.go:2392] validating pod update-demo-nautilus-99m6x
  I0505 14:52:48.542265 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0505 14:52:48.542307 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0505 14:52:48.542317 21 kubectl.go:2519] update-demo-nautilus-99m6x is verified up and running
  STEP: using delete to clean up resources @ 05/05/24 14:52:48.542
  I0505 14:52:48.542368 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3363 delete --grace-period=0 --force -f -'
  I0505 14:52:48.582562 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0505 14:52:48.582591 21 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0505 14:52:48.582623 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3363 get rc,svc -l name=update-demo --no-headers'
  I0505 14:52:48.632325 21 builder.go:146] stderr: "No resources found in kubectl-3363 namespace.\n"
  I0505 14:52:48.632356 21 builder.go:147] stdout: ""
  I0505 14:52:48.632393 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3363 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0505 14:52:48.675993 21 builder.go:146] stderr: ""
  I0505 14:52:48.676022 21 builder.go:147] stdout: ""
  I0505 14:52:48.676080 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3363" for this suite. @ 05/05/24 14:52:48.678
• [13.241 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 05/05/24 14:52:48.682
  I0505 14:52:48.682359 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename container-probe @ 05/05/24 14:52:48.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:52:48.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:52:48.693
  STEP: Creating pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218 @ 05/05/24 14:52:48.695
  E0505 14:52:49.330528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:50.331241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/05/24 14:52:50.706
  I0505 14:52:50.711224 21 container_probe.go:1749] Initial restart count of pod liveness-a40cb6bd-881e-443a-a934-65923939c247 is 0
  I0505 14:52:50.714129 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:52:51.337177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:52.338045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:52:52.719922 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:52:53.339272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:54.339947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:52:54.725350 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:52:55.340157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:56.340335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:52:56.729151 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:52:57.340731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:52:58.341075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:52:58.731357 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:52:59.342328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:00.342562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:00.734646 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:01.343189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:02.343577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:02.740909 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:03.344069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:04.345157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:04.746316 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:05.346704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:06.347079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:06.751663 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:07.347506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:08.348460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:08.767501 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:09.350495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:10.350829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:10.773531 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:11.351000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:12.351114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:12.778510 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:13.352071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:14.353211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:14.783853 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:15.354211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:16.354790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:16.793737 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:17.355518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:18.356322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:18.800161 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:19.356512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:20.357113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:20.805149 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:21.357875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:22.359117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:22.807350 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:23.359442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:24.359987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:24.811616 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:25.360717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:26.362055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:26.817047 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:27.362568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:28.363143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:28.821045 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:29.363316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:30.363584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:30.823680 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:31.364645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:32.364654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:32.827644 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:33.365218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:34.366574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:34.833769 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:35.369011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:36.368915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:36.835793 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:37.372289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:38.373235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:38.842046 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:39.376053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:40.377264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:40.844660 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:41.379590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:42.381197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:42.850228 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:43.382077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:44.382424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:44.856807 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:45.383132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:46.384520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:46.862746 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:47.386252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:48.386685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:48.865080 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:49.389950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:50.390583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:50.870468 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:51.392567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:52.393537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:52.872330 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:53.394176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:54.394366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:54.882176 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:55.394969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:56.395818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:56.887564 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:57.396172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:53:58.397095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:53:58.894066 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:53:59.398035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:00.402784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:00.896936 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:01.402932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:02.403968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:02.900444 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:03.404219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:04.404933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:04.905913 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:05.405508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:06.406403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:06.916919 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:07.407277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:08.407985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:08.920987 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:09.409339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:10.410364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:10.926290 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:11.410589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:12.411015      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:12.932704 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:13.411960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:14.412171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:14.935636 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:15.412488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:16.417227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:16.942730 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:17.417425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:18.418394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:18.951558 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:19.419554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:20.420162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:20.957325 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:21.421094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:22.422503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:22.959524 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:23.422589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:24.423525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:24.968732 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:25.424398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:26.424577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:26.975725 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:27.425246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:28.426153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:28.980542 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:29.426440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:30.426714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:30.983723 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:31.427673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:32.433593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:32.988981 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:33.434782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:34.435214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:34.991497 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:35.435425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:36.435598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:36.997989 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:37.436192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:38.437238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:39.002943 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:39.438043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:40.438629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:41.012182 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:41.438886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:42.439506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:43.017374 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:43.439997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:44.440318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:45.023813 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:45.440661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:46.440862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:47.031883 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:47.444343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:48.446225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:49.042422 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:49.447387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:50.447723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:51.046443 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:51.447886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:52.448650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:53.055786 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:53.450100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:54.450618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:55.059398 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:55.451056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:56.451352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:57.063145 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:57.451537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:54:58.452330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:54:59.068955 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:54:59.452644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:00.452784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:01.073046 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:01.453291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:02.453723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:03.080275 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:03.454116      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:04.455182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:05.082632 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:05.456471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:06.456978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:07.084697 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:07.457282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:08.458359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:09.087652 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:09.458480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:10.459162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:11.092323 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:11.460340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:12.460841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:13.097438 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:13.461419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:14.462246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:15.101831 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:15.462219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:16.462863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:17.106346 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:17.463231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:18.464511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:19.111007 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:19.464844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:20.465391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:21.116304 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:21.466111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:22.467452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:23.121440 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:23.467757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:24.468519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:25.126380 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:25.468576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:26.470781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:27.128805 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:27.471438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:28.472151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:29.134308 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:29.472409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:30.472696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:31.140854 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:31.474447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:32.475133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:33.146331 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:33.475501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:34.476488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:35.151863 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:35.477700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:36.478335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:37.156313 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:37.479163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:38.479495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:39.162551 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:39.481006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:40.480922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:41.168875 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:41.481144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:42.481627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:43.172754 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:43.483708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:44.483667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:45.174997 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:45.484518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:46.485694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:47.180630 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:47.485948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:48.486156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:49.186311 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:49.486826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:50.487098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:51.189179 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:51.487601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:52.487963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:53.191894 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:53.488181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:54.488873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:55.194683 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:55.489109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:56.489945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:57.197540 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:57.490180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:55:58.491217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:55:59.202986 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:55:59.491618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:00.491952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:56:01.208548 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:56:01.491962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:02.493595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:56:03.213750 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:56:03.495320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:04.496023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:56:05.216177 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:56:05.497758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:06.499301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:56:07.222547 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:56:07.501771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:08.502064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:56:09.230380 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:56:09.503353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:10.505493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:56:11.234396 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:56:11.506267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:12.506684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:56:13.242201 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:56:13.508357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:14.509074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:56:15.248587 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:56:15.510355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:16.511139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:56:17.253006 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:56:17.515647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:18.515521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:56:19.254893 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:56:19.518481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:20.523330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:56:21.259646 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:56:21.524226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:22.525084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:56:23.265451 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:56:23.526249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:24.527788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:56:25.267613 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:56:25.528009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:26.529131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:56:27.274009 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:56:27.529762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:28.530062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:56:29.276776 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:56:29.530529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:30.532196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:56:31.343677 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:56:31.533101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:32.534199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:56:33.349720 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:56:33.535658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:34.536341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:56:35.355919 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:56:35.536717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:36.536947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:56:37.359373 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:56:37.538365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:38.539131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:56:39.365156 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:56:39.539460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:40.539818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:56:41.367034 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:56:41.540727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:42.541510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:56:43.371471 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:56:43.542726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:44.543620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:56:45.382190 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:56:45.544914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:46.545653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:56:47.386268 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:56:47.546808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:48.547537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:56:49.390008 21 container_probe.go:1759] Get pod liveness-a40cb6bd-881e-443a-a934-65923939c247 in namespace container-probe-9218
  E0505 14:56:49.548128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:50.548275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/05/24 14:56:51.39
  I0505 14:56:51.412690 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9218" for this suite. @ 05/05/24 14:56:51.415
• [242.737 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 05/05/24 14:56:51.419
  I0505 14:56:51.419960 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename var-expansion @ 05/05/24 14:56:51.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:56:51.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:56:51.44
  E0505 14:56:51.548556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:52.549049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:56:53.459568 21 delete.go:62] Deleting pod "var-expansion-61a9d875-4aad-469e-907c-55ed9227e17f" in namespace "var-expansion-6866"
  I0505 14:56:53.466762 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-61a9d875-4aad-469e-907c-55ed9227e17f" to be fully deleted
  E0505 14:56:53.549301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:54.550173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:56:55.478341 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6866" for this suite. @ 05/05/24 14:56:55.483
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 05/05/24 14:56:55.486
  I0505 14:56:55.486748 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename cronjob @ 05/05/24 14:56:55.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:56:55.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:56:55.502
  STEP: Creating a cronjob @ 05/05/24 14:56:55.504
  STEP: Ensuring more than one job is running at a time @ 05/05/24 14:56:55.509
  E0505 14:56:55.550475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:56.551019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:57.551219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:58.552106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:56:59.553805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:00.554037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:01.555126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:02.556312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:03.556331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:04.557488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:05.557944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:06.558161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:07.559303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:08.560452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:09.562383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:10.563184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:11.564037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:12.567720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:13.567950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:14.568676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:15.570497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:16.571424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:17.572041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:18.574268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:19.574802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:20.575190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:21.575288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:22.576949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:23.577530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:24.577533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:25.581185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:26.581704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:27.581857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:28.581959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:29.583002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:30.583194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:31.584184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:32.584306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:33.584628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:34.585507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:35.585850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:36.586581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:37.587154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:38.587302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:39.588458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:40.589609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:41.590947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:42.591063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:43.592188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:44.592542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:45.592934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:46.593576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:47.594434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:48.594506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:49.594889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:50.595539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:51.596737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:52.597297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:53.598027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:54.598727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:55.599575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:56.599687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:57.600858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:58.601565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:57:59.607685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:00.608031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 05/05/24 14:58:01.513
  STEP: Removing cronjob @ 05/05/24 14:58:01.516
  I0505 14:58:01.520384 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8646" for this suite. @ 05/05/24 14:58:01.523
• [66.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 05/05/24 14:58:01.53
  I0505 14:58:01.530705 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename pods @ 05/05/24 14:58:01.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:58:01.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:58:01.548
  STEP: creating the pod @ 05/05/24 14:58:01.55
  STEP: submitting the pod to kubernetes @ 05/05/24 14:58:01.55
  W0505 14:58:01.556636      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0505 14:58:01.609709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:02.610449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 05/05/24 14:58:03.563
  STEP: updating the pod @ 05/05/24 14:58:03.565
  E0505 14:58:03.611419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:58:04.073179 21 pod_client.go:141] Successfully updated pod "pod-update-activedeadlineseconds-e83a027b-ede1-4517-aa2c-90ea571b714d"
  E0505 14:58:04.612667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:05.613375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:06.613610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:07.613965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:58:08.081962 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8249" for this suite. @ 05/05/24 14:58:08.085
• [6.561 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 05/05/24 14:58:08.09
  I0505 14:58:08.090614 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/05/24 14:58:08.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:58:08.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:58:08.098
  I0505 14:58:08.100472 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  E0505 14:58:08.614627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 05/05/24 14:58:09.314
  I0505 14:58:09.314944 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-5638 --namespace=crd-publish-openapi-5638 create -f -'
  E0505 14:58:09.618259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:10.618397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:58:11.375732 21 builder.go:146] stderr: ""
  I0505 14:58:11.375763 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2062-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0505 14:58:11.375797 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-5638 --namespace=crd-publish-openapi-5638 delete e2e-test-crd-publish-openapi-2062-crds test-foo'
  I0505 14:58:11.419134 21 builder.go:146] stderr: ""
  I0505 14:58:11.419162 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2062-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0505 14:58:11.419194 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-5638 --namespace=crd-publish-openapi-5638 apply -f -'
  I0505 14:58:11.461468 21 builder.go:146] stderr: ""
  I0505 14:58:11.461511 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2062-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0505 14:58:11.461561 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-5638 --namespace=crd-publish-openapi-5638 delete e2e-test-crd-publish-openapi-2062-crds test-foo'
  I0505 14:58:11.504266 21 builder.go:146] stderr: ""
  I0505 14:58:11.504296 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2062-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 05/05/24 14:58:11.504
  I0505 14:58:11.504362 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-5638 --namespace=crd-publish-openapi-5638 create -f -'
  I0505 14:58:11.539345 21 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 05/05/24 14:58:11.539
  I0505 14:58:11.539524 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-5638 --namespace=crd-publish-openapi-5638 create -f -'
  I0505 14:58:11.577218 21 builder.go:135] rc: 1
  I0505 14:58:11.577726 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-5638 --namespace=crd-publish-openapi-5638 apply -f -'
  E0505 14:58:11.619347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:58:11.619663 21 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 05/05/24 14:58:11.619
  I0505 14:58:11.619860 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-5638 --namespace=crd-publish-openapi-5638 create -f -'
  I0505 14:58:11.667856 21 builder.go:135] rc: 1
  I0505 14:58:11.667945 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-5638 --namespace=crd-publish-openapi-5638 apply -f -'
  I0505 14:58:11.727655 21 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 05/05/24 14:58:11.727
  I0505 14:58:11.727746 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-5638 explain e2e-test-crd-publish-openapi-2062-crds'
  I0505 14:58:11.771418 21 builder.go:146] stderr: ""
  I0505 14:58:11.771459 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2062-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 05/05/24 14:58:11.771
  I0505 14:58:11.771606 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-5638 explain e2e-test-crd-publish-openapi-2062-crds.metadata'
  I0505 14:58:11.811424 21 builder.go:146] stderr: ""
  I0505 14:58:11.811593 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2062-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0505 14:58:11.811999 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-5638 explain e2e-test-crd-publish-openapi-2062-crds.spec'
  I0505 14:58:11.854490 21 builder.go:146] stderr: ""
  I0505 14:58:11.854556 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2062-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0505 14:58:11.854708 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-5638 explain e2e-test-crd-publish-openapi-2062-crds.spec.bars'
  I0505 14:58:11.892520 21 builder.go:146] stderr: ""
  I0505 14:58:11.892575 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2062-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 05/05/24 14:58:11.892
  I0505 14:58:11.892925 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=crd-publish-openapi-5638 explain e2e-test-crd-publish-openapi-2062-crds.spec.bars2'
  I0505 14:58:11.929862 21 builder.go:135] rc: 1
  E0505 14:58:12.620496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:58:13.123699 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5638" for this suite. @ 05/05/24 14:58:13.127
• [5.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 05/05/24 14:58:13.131
  I0505 14:58:13.131073 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 14:58:13.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:58:13.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:58:13.14
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 14:58:13.142
  E0505 14:58:13.621287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:14.622070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:15.622281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:16.622617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 14:58:17.16
  I0505 14:58:17.164143 21 output.go:196] Trying to get logs from node worker01 pod downwardapi-volume-bd79cb52-8470-40bd-9111-53446c80d213 container client-container: <nil>
  STEP: delete the pod @ 05/05/24 14:58:17.181
  I0505 14:58:17.204873 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4517" for this suite. @ 05/05/24 14:58:17.207
• [4.079 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 05/05/24 14:58:17.21
  I0505 14:58:17.210207 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename container-probe @ 05/05/24 14:58:17.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 14:58:17.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 14:58:17.22
  STEP: Creating pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726 @ 05/05/24 14:58:17.222
  E0505 14:58:17.622547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:18.623098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/05/24 14:58:19.231
  I0505 14:58:19.236519 21 container_probe.go:1749] Initial restart count of pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 is 0
  I0505 14:58:19.239529 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:58:19.623261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:20.623560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:58:21.244498 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:58:21.624064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:22.624722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:58:23.248130 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:58:23.624790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:24.625214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:58:25.254471 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:58:25.626910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:26.628361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:58:27.268730 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:58:27.628733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:28.631316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:58:29.271603 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:58:29.631971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:30.632056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:58:31.274012 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:58:31.632407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:32.633029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:58:33.276401 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:58:33.633010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:34.633133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:58:35.281197 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:58:35.634098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:36.634366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:58:37.284830 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:58:37.634619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:38.634998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:58:39.291658 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:58:39.636599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:40.636791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:58:41.296611 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:58:41.637227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:42.637868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:58:43.300431 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:58:43.638984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:44.639378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:58:45.306071 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:58:45.642356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:46.642505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:58:47.312794 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:58:47.642762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:48.643693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:58:49.316758 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:58:49.646143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:50.646772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:58:51.321678 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:58:51.647181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:52.647753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:58:53.327251 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:58:53.649033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:54.649413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:58:55.329856 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:58:55.650310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:56.651036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:58:57.335299 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:58:57.652317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:58:58.652524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:58:59.343184 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:58:59.653404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:00.654360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:01.345392 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:01.656358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:02.657071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:03.351067 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:03.657937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:04.657636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:05.358162 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:05.658431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:06.662503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:07.363427 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:07.664043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:08.664324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:09.370456 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:09.666094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:10.666218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:11.372290 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:11.669802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:12.670367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:13.377177 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:13.699457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:14.700507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:15.380052 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:15.705763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:16.709392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:17.385051 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:17.709994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:18.710145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:19.391674 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:19.713659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:20.714012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:21.394254 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:21.714465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:22.715525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:23.400711 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:23.715654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:24.716427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:25.405352 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:25.717166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:26.723198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:27.409971 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:27.725063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:28.726101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:29.416020 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:29.727368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:30.728130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:31.419849 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:31.728364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:32.730720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:33.423462 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:33.730855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:34.736705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:35.430307 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:35.737708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:36.738405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:37.432893 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:37.738893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:38.739216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:39.439518 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:39.740114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:40.740464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:41.443861 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:41.741092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:42.741268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:43.450765 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:43.742513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:44.742996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:45.452510 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:45.743114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:46.743704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:47.456787 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:47.744431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:48.744543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:49.459619 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:49.745250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:50.745469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:51.466425 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:51.745533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:52.745870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:53.471513 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:53.747056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:54.747709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:55.474152 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:55.748315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:56.749995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:57.476864 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:57.749981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 14:59:58.751784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 14:59:59.479026 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 14:59:59.753324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:00.754168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:01.484079 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:01.754509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:02.754910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:03.489458 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:03.756286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:04.756998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:05.495872 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:05.757563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:06.759415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:07.501827 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:07.759557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:08.761786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:09.504202 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:09.762777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:10.763263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:11.506740 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:11.764109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:12.764468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:13.511836 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:13.765457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:14.766069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:15.525001 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:15.766774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:16.767332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:17.534630 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:17.768178      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:18.768685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:19.541054 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:19.770533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:20.770985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:21.544510 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:21.772267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:22.782075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:23.549076 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:23.783372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:24.783524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:25.554250 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:25.783957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:26.784858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:27.558056 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:27.785067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:28.785289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:29.566032 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:29.786934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:30.788342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:31.570742 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:31.789090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:32.789770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:33.574406 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:33.790879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:34.791206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:35.577817 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:35.791513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:36.792312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:37.579471 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:37.793281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:38.794081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:39.585328 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:39.794381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:40.794054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:41.590234 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:41.795434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:42.796025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:43.598571 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:43.796819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:44.797208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:45.603981 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:45.797872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:46.798072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:47.607241 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:47.799551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:48.800418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:49.612836 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:49.801190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:50.801701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:51.615982 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:51.802276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:52.806241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:53.620349 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:53.806766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:54.807576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:55.622734 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:55.808113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:56.809188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:57.625415 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:57.810145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:00:58.811441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:00:59.633638 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:00:59.812316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:00.813943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:01.635777 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:01.813981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:02.814572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:03.643614 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:03.814747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:04.815640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:05.650022 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:05.816573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:06.817428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:07.655762 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:07.818230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:08.822374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:09.660664 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:09.823188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:10.823458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:11.665277 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:11.823591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:12.824830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:13.670378 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:13.828343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:14.830057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:15.674957 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:15.830638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:16.831473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:17.680588 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:17.832183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:18.833281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:19.686244 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:19.834456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:20.835417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:21.690790 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:21.835646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:22.836182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:23.696380 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:23.837453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:24.838631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:25.700603 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:25.839702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:26.840362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:27.705375 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:27.841572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:28.841712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:29.710277 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:29.842074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:30.843356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:31.715341 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:31.844498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:32.848350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:33.719250 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:33.848992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:34.848981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:35.725410 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:35.850191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:36.850480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:37.730344 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:37.851603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:38.852697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:39.736195 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:39.853525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:40.855239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:41.741002 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:41.855198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:42.856316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:43.747028 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:43.858018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:44.859452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:45.751641 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:45.860726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:46.860974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:47.754977 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:47.868613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:48.869068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:49.760555 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:49.870014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:50.870436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:51.764767 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:51.871398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:52.872809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:53.769004 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:53.874876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:54.875418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:55.771504 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:55.875996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:56.876096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:57.781373 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:57.876386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:01:58.876990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:01:59.787409 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:01:59.878309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:02:00.878625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:02:01.792703 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:02:01.878908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:02:02.878987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:02:03.798137 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:02:03.879565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:02:04.880453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:02:05.809718 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:02:05.881160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:02:06.881709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:02:07.815873 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:02:07.882695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:02:08.883153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:02:09.833533 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:02:09.884275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:02:10.885802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:02:11.836534 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:02:11.886198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:02:12.886360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:02:13.839240 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:02:13.889363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:02:14.890170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:02:15.845746 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:02:15.890395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:02:16.891214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:02:17.853342 21 container_probe.go:1759] Get pod test-grpc-d28a90f0-f34e-473a-b91e-fd844a3b3295 in namespace container-probe-7726
  E0505 15:02:17.892094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:02:18.892525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/05/24 15:02:19.854
  I0505 15:02:19.872704 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7726" for this suite. @ 05/05/24 15:02:19.876
• [242.672 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 05/05/24 15:02:19.882
  I0505 15:02:19.882048 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename gc @ 05/05/24 15:02:19.883
  E0505 15:02:19.892687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:02:19.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:02:19.898
  STEP: create the deployment @ 05/05/24 15:02:19.9
  W0505 15:02:19.904666      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/05/24 15:02:19.904
  STEP: delete the deployment @ 05/05/24 15:02:20.407
  STEP: wait for all rs to be garbage collected @ 05/05/24 15:02:20.41
  STEP: expected 0 rs, got 1 rs @ 05/05/24 15:02:20.415
  STEP: expected 0 pods, got 2 pods @ 05/05/24 15:02:20.416
  E0505 15:02:20.893412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/05/24 15:02:20.916
  I0505 15:02:20.950422 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0505 15:02:20.950873 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8041" for this suite. @ 05/05/24 15:02:20.953
• [1.074 seconds]
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 05/05/24 15:02:20.955
  I0505 15:02:20.956000 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename events @ 05/05/24 15:02:20.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:02:20.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:02:20.964
  STEP: Create set of events @ 05/05/24 15:02:20.965
  I0505 15:02:20.968553 21 core_events.go:198] created test-event-1
  I0505 15:02:20.970278 21 core_events.go:198] created test-event-2
  I0505 15:02:20.971762 21 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 05/05/24 15:02:20.971
  STEP: delete collection of events @ 05/05/24 15:02:20.973
  I0505 15:02:20.973384 21 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/05/24 15:02:20.979
  I0505 15:02:20.979265 21 core_events.go:230] requesting list of events to confirm quantity
  I0505 15:02:20.981531 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1337" for this suite. @ 05/05/24 15:02:20.983
• [0.030 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:850
  STEP: Creating a kubernetes client @ 05/05/24 15:02:20.986
  I0505 15:02:20.986968 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename services @ 05/05/24 15:02:20.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:02:20.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:02:20.999
  STEP: creating service multi-endpoint-test in namespace services-4044 @ 05/05/24 15:02:21
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4044 to expose endpoints map[] @ 05/05/24 15:02:21.004
  I0505 15:02:21.008631 21 service.go:4226] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0505 15:02:21.894252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:02:22.015605 21 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-4044 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4044 @ 05/05/24 15:02:22.015
  E0505 15:02:22.898597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:02:23.899158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4044 to expose endpoints map[pod1:[100]] @ 05/05/24 15:02:24.029
  I0505 15:02:24.032853 21 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-4044 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-4044 @ 05/05/24 15:02:24.032
  E0505 15:02:24.900151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:02:25.902081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4044 to expose endpoints map[pod1:[100] pod2:[101]] @ 05/05/24 15:02:26.039
  I0505 15:02:26.047795 21 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-4044 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 05/05/24 15:02:26.048
  I0505 15:02:26.048119 21 resource.go:361] Creating new exec pod
  E0505 15:02:26.902196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:02:27.903206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:02:28.904024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:02:29.062529 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-4044 exec execpodwvcth -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0505 15:02:29.135537 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I0505 15:02:29.135593 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0505 15:02:29.135643 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-4044 exec execpodwvcth -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.127 80'
  I0505 15:02:29.201985 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.127 80\nConnection to 10.32.0.127 80 port [tcp/http] succeeded!\n"
  I0505 15:02:29.202042 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0505 15:02:29.202091 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-4044 exec execpodwvcth -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0505 15:02:29.269646 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I0505 15:02:29.269691 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0505 15:02:29.269741 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-4044 exec execpodwvcth -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.127 81'
  I0505 15:02:29.333015 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.127 81\nConnection to 10.32.0.127 81 port [tcp/*] succeeded!\n"
  I0505 15:02:29.333052 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4044 @ 05/05/24 15:02:29.333
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4044 to expose endpoints map[pod2:[101]] @ 05/05/24 15:02:29.34
  I0505 15:02:29.356116 21 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-4044 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-4044 @ 05/05/24 15:02:29.356
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4044 to expose endpoints map[] @ 05/05/24 15:02:29.368
  I0505 15:02:29.379247 21 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-4044 exposes endpoints map[]
  I0505 15:02:29.397701 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4044" for this suite. @ 05/05/24 15:02:29.402
• [8.420 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 05/05/24 15:02:29.41
  I0505 15:02:29.410583 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename secrets @ 05/05/24 15:02:29.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:02:29.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:02:29.424
  STEP: Creating secret with name secret-test-2ca5c229-9419-40c6-ae8e-ac4680baf74f @ 05/05/24 15:02:29.426
  STEP: Creating a pod to test consume secrets @ 05/05/24 15:02:29.43
  E0505 15:02:29.904519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:02:30.904782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:02:31.906003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:02:32.906951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 15:02:33.452
  I0505 15:02:33.456509 21 output.go:196] Trying to get logs from node worker00 pod pod-secrets-7b5153f7-de72-49f8-94f5-7f413832b812 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 15:02:33.462
  I0505 15:02:33.471011 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4395" for this suite. @ 05/05/24 15:02:33.472
• [4.064 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 05/05/24 15:02:33.475
  I0505 15:02:33.475131 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename daemonsets @ 05/05/24 15:02:33.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:02:33.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:02:33.483
  STEP: Creating simple DaemonSet "daemon-set" @ 05/05/24 15:02:33.49
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/05/24 15:02:33.493
  I0505 15:02:33.495968 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0505 15:02:33.495990 21 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  E0505 15:02:33.907513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:02:34.503232 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0505 15:02:34.503261 21 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  E0505 15:02:34.908815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:02:35.497217 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0505 15:02:35.497242 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 05/05/24 15:02:35.499
  I0505 15:02:35.510324 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0505 15:02:35.510375 21 fixtures.go:130] Node worker01 is running 0 daemon pod, expected 1
  E0505 15:02:35.908795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:02:36.517247 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0505 15:02:36.517357 21 fixtures.go:130] Node worker01 is running 0 daemon pod, expected 1
  E0505 15:02:36.923537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:02:37.510814 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0505 15:02:37.510835 21 fixtures.go:130] Node worker01 is running 0 daemon pod, expected 1
  E0505 15:02:37.924175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:02:38.509766 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0505 15:02:38.509794 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/05/24 15:02:38.511
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8249, will wait for the garbage collector to delete the pods @ 05/05/24 15:02:38.511
  I0505 15:02:38.570205 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.290603ms
  I0505 15:02:38.671815 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.609124ms
  E0505 15:02:38.925306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:02:39.926186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:02:40.876280 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0505 15:02:40.876334 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0505 15:02:40.879418 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"40200"},"items":null}

  I0505 15:02:40.883304 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"40200"},"items":null}

  I0505 15:02:40.891559 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8249" for this suite. @ 05/05/24 15:02:40.893
• [7.422 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 05/05/24 15:02:40.897
  I0505 15:02:40.897540 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 15:02:40.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:02:40.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:02:40.91
  STEP: Creating projection with secret that has name projected-secret-test-626d5db6-1b21-49eb-9c66-d47263f01d46 @ 05/05/24 15:02:40.911
  STEP: Creating a pod to test consume secrets @ 05/05/24 15:02:40.913
  E0505 15:02:40.926264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:02:41.927556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 15:02:42.924
  E0505 15:02:42.927604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:02:42.929365 21 output.go:196] Trying to get logs from node worker00 pod pod-projected-secrets-ec914b00-27d0-4ecc-b014-b7c626afeda4 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 15:02:42.934
  I0505 15:02:42.955850 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4231" for this suite. @ 05/05/24 15:02:42.958
• [2.064 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 05/05/24 15:02:42.961
  I0505 15:02:42.961255 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 15:02:42.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:02:42.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:02:42.971
  STEP: Creating secret with name projected-secret-test-d4ed3e62-63ac-4758-a1a6-e38a01a26fe8 @ 05/05/24 15:02:42.972
  STEP: Creating a pod to test consume secrets @ 05/05/24 15:02:42.974
  E0505 15:02:43.928155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:02:44.928926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 15:02:44.987
  I0505 15:02:44.989006 21 output.go:196] Trying to get logs from node worker00 pod pod-projected-secrets-a569d8da-0829-4ea3-b147-f97dd4ca6ec6 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 15:02:44.991
  I0505 15:02:45.016626 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7145" for this suite. @ 05/05/24 15:02:45.019
• [2.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 05/05/24 15:02:45.022
  I0505 15:02:45.022449 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 15:02:45.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:02:45.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:02:45.033
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 05/05/24 15:02:45.035
  E0505 15:02:45.929636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:02:46.931016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 15:02:47.048
  I0505 15:02:47.049965 21 output.go:196] Trying to get logs from node worker00 pod pod-d28f443c-47bd-477d-9803-add743e8dd2c container test-container: <nil>
  STEP: delete the pod @ 05/05/24 15:02:47.052
  I0505 15:02:47.069711 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6113" for this suite. @ 05/05/24 15:02:47.071
• [2.051 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 05/05/24 15:02:47.074
  I0505 15:02:47.074557 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename container-probe @ 05/05/24 15:02:47.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:02:47.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:02:47.084
  STEP: Creating pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b in namespace container-probe-5093 @ 05/05/24 15:02:47.086
  E0505 15:02:47.931157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:02:48.931565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/05/24 15:02:49.103
  I0505 15:02:49.110374 21 container_probe.go:1749] Initial restart count of pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b is 0
  I0505 15:02:49.122471 21 container_probe.go:1759] Get pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b in namespace container-probe-5093
  E0505 15:02:49.934189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:02:50.934645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:02:51.127493 21 container_probe.go:1759] Get pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b in namespace container-probe-5093
  E0505 15:02:51.935123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:02:52.935832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:02:53.133376 21 container_probe.go:1759] Get pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b in namespace container-probe-5093
  E0505 15:02:53.936351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:02:54.936821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:02:55.137422 21 container_probe.go:1759] Get pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b in namespace container-probe-5093
  E0505 15:02:55.937691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:02:56.938299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:02:57.142224 21 container_probe.go:1759] Get pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b in namespace container-probe-5093
  E0505 15:02:57.939143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:02:58.939343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:02:59.150127 21 container_probe.go:1759] Get pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b in namespace container-probe-5093
  E0505 15:02:59.942160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:00.943191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:03:01.156752 21 container_probe.go:1759] Get pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b in namespace container-probe-5093
  E0505 15:03:01.943949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:02.947613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:03:03.159235 21 container_probe.go:1759] Get pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b in namespace container-probe-5093
  E0505 15:03:03.948661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:04.947863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:03:05.162793 21 container_probe.go:1759] Get pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b in namespace container-probe-5093
  E0505 15:03:05.948165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:06.948469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:03:07.166551 21 container_probe.go:1759] Get pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b in namespace container-probe-5093
  E0505 15:03:07.953444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:08.954257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:03:09.170179 21 container_probe.go:1759] Get pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b in namespace container-probe-5093
  E0505 15:03:09.954426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:10.955048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:03:11.174039 21 container_probe.go:1759] Get pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b in namespace container-probe-5093
  E0505 15:03:11.956056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:12.957208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:03:13.179273 21 container_probe.go:1759] Get pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b in namespace container-probe-5093
  E0505 15:03:13.957890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:14.958936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:03:15.182815 21 container_probe.go:1759] Get pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b in namespace container-probe-5093
  E0505 15:03:15.959224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:16.960429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:03:17.186065 21 container_probe.go:1759] Get pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b in namespace container-probe-5093
  E0505 15:03:17.964321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:18.964676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:03:19.190197 21 container_probe.go:1759] Get pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b in namespace container-probe-5093
  E0505 15:03:19.965016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:20.966170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:03:21.194670 21 container_probe.go:1759] Get pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b in namespace container-probe-5093
  E0505 15:03:21.966873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:22.967683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:03:23.199211 21 container_probe.go:1759] Get pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b in namespace container-probe-5093
  E0505 15:03:23.968118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:24.968251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:03:25.208234 21 container_probe.go:1759] Get pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b in namespace container-probe-5093
  E0505 15:03:25.969130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:26.969575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:03:27.212476 21 container_probe.go:1759] Get pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b in namespace container-probe-5093
  E0505 15:03:27.970389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:28.970468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:03:29.216308 21 container_probe.go:1759] Get pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b in namespace container-probe-5093
  E0505 15:03:29.971772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:30.972538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:03:31.220389 21 container_probe.go:1759] Get pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b in namespace container-probe-5093
  E0505 15:03:31.973132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:32.973367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:03:33.223594 21 container_probe.go:1759] Get pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b in namespace container-probe-5093
  E0505 15:03:33.974243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:34.974990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:03:35.228559 21 container_probe.go:1759] Get pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b in namespace container-probe-5093
  E0505 15:03:35.975642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:36.976236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:03:37.232794 21 container_probe.go:1759] Get pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b in namespace container-probe-5093
  E0505 15:03:37.977019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:38.977399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:03:39.238812 21 container_probe.go:1759] Get pod busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b in namespace container-probe-5093
  I0505 15:03:39.238877 21 container_probe.go:1763] Restart count of pod container-probe-5093/busybox-61da2d3a-c4ec-4938-85c0-5cb8714a1a7b is now 1 (50.128397893s elapsed)
  STEP: deleting the pod @ 05/05/24 15:03:39.239
  I0505 15:03:39.257582 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5093" for this suite. @ 05/05/24 15:03:39.261
• [52.192 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 05/05/24 15:03:39.266
  I0505 15:03:39.266524 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename security-context-test @ 05/05/24 15:03:39.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:03:39.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:03:39.277
  E0505 15:03:39.978328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:40.978596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:41.979465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:42.979723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:03:43.300343 21 security_context.go:538] Got logs for pod "busybox-privileged-false-212bf9b4-0947-48c1-86da-b445bcdda652": "ip: RTNETLINK answers: Operation not permitted\n"
  I0505 15:03:43.300447 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9651" for this suite. @ 05/05/24 15:03:43.303
• [4.040 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 05/05/24 15:03:43.307
  I0505 15:03:43.307246 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename crd-watch @ 05/05/24 15:03:43.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:03:43.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:03:43.316
  I0505 15:03:43.317464 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  E0505 15:03:43.995062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:44.995306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 05/05/24 15:03:45.855
  I0505 15:03:45.859326 21 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-05T15:03:45Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-05T15:03:45Z]] name:name1 resourceVersion:40611 uid:337ebb9c-48d5-43be-ae4d-ca9bfc9cfe35] num:map[num1:9223372036854775807 num2:1000000]]}
  E0505 15:03:45.996224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:46.996927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:47.997815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:48.998262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:49.999295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:50.999359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:51.999608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:53.000248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:54.001130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:55.002216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 05/05/24 15:03:55.859
  I0505 15:03:55.862609 21 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-05T15:03:55Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-05T15:03:55Z]] name:name2 resourceVersion:40656 uid:8e2acccf-08d3-4d02-a3f2-1ebc79389ef3] num:map[num1:9223372036854775807 num2:1000000]]}
  E0505 15:03:56.002772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:57.004418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:58.006069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:03:59.006457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:00.006969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:01.007580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:02.008865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:03.023495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:04.027062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:05.027998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 05/05/24 15:04:05.863
  I0505 15:04:05.882717 21 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-05T15:03:45Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-05T15:04:05Z]] name:name1 resourceVersion:40690 uid:337ebb9c-48d5-43be-ae4d-ca9bfc9cfe35] num:map[num1:9223372036854775807 num2:1000000]]}
  E0505 15:04:06.028360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:07.030448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:08.033776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:09.036385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:10.037434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:11.037995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:12.040181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:13.041318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:14.044677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:15.044044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 05/05/24 15:04:15.883
  I0505 15:04:15.891623 21 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-05T15:03:55Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-05T15:04:15Z]] name:name2 resourceVersion:40729 uid:8e2acccf-08d3-4d02-a3f2-1ebc79389ef3] num:map[num1:9223372036854775807 num2:1000000]]}
  E0505 15:04:16.043841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:17.044180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:18.044691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:19.044917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:20.045720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:21.046698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:22.047290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:23.047562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:24.047730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:25.049381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 05/05/24 15:04:25.893
  I0505 15:04:25.896843 21 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-05T15:03:45Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-05T15:04:05Z]] name:name1 resourceVersion:40765 uid:337ebb9c-48d5-43be-ae4d-ca9bfc9cfe35] num:map[num1:9223372036854775807 num2:1000000]]}
  E0505 15:04:26.050324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:27.053780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:28.054072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:29.054264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:30.054495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:31.055533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:32.055820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:33.056481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:34.059624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:35.059822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 05/05/24 15:04:35.901
  I0505 15:04:35.914897 21 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-05T15:03:55Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-05T15:04:15Z]] name:name2 resourceVersion:40801 uid:8e2acccf-08d3-4d02-a3f2-1ebc79389ef3] num:map[num1:9223372036854775807 num2:1000000]]}
  E0505 15:04:36.060229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:37.061237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:38.062362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:39.062837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:40.063526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:41.064781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:42.065311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:43.065965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:44.068697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:45.069983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:46.069915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:04:46.439872 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-4195" for this suite. @ 05/05/24 15:04:46.445
• [63.153 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 05/05/24 15:04:46.461
  I0505 15:04:46.461996 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename resourcequota @ 05/05/24 15:04:46.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:04:46.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:04:46.477
  STEP: Creating resourceQuota "e2e-rq-status-kphtw" @ 05/05/24 15:04:46.479
  I0505 15:04:46.483071 21 resource_quota.go:1051] Resource quota "e2e-rq-status-kphtw" reports spec: hard cpu limit of 500m
  I0505 15:04:46.483093 21 resource_quota.go:1053] Resource quota "e2e-rq-status-kphtw" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-kphtw" /status @ 05/05/24 15:04:46.483
  STEP: Confirm /status for "e2e-rq-status-kphtw" resourceQuota via watch @ 05/05/24 15:04:46.486
  I0505 15:04:46.487488 21 resource_quota.go:1080] observed resourceQuota "e2e-rq-status-kphtw" in namespace "resourcequota-1513" with hard status: v1.ResourceList(nil)
  I0505 15:04:46.487598 21 resource_quota.go:1083] Found resourceQuota "e2e-rq-status-kphtw" in namespace "resourcequota-1513" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0505 15:04:46.487614 21 resource_quota.go:1090] ResourceQuota "e2e-rq-status-kphtw" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 05/05/24 15:04:46.488
  I0505 15:04:46.491942 21 resource_quota.go:1101] Resource quota "e2e-rq-status-kphtw" reports spec: hard cpu limit of 1
  I0505 15:04:46.491963 21 resource_quota.go:1102] Resource quota "e2e-rq-status-kphtw" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-kphtw" /status @ 05/05/24 15:04:46.491
  STEP: Confirm /status for "e2e-rq-status-kphtw" resourceQuota via watch @ 05/05/24 15:04:46.494
  I0505 15:04:46.495355 21 resource_quota.go:1124] observed resourceQuota "e2e-rq-status-kphtw" in namespace "resourcequota-1513" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0505 15:04:46.495451 21 resource_quota.go:1127] Found resourceQuota "e2e-rq-status-kphtw" in namespace "resourcequota-1513" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0505 15:04:46.495463 21 resource_quota.go:1134] ResourceQuota "e2e-rq-status-kphtw" /status was patched
  STEP: Get "e2e-rq-status-kphtw" /status @ 05/05/24 15:04:46.495
  I0505 15:04:46.497251 21 resource_quota.go:1145] Resourcequota "e2e-rq-status-kphtw" reports status: hard cpu of 1
  I0505 15:04:46.497271 21 resource_quota.go:1147] Resourcequota "e2e-rq-status-kphtw" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-kphtw" /status before checking Spec is unchanged @ 05/05/24 15:04:46.498
  I0505 15:04:46.500327 21 resource_quota.go:1167] Resourcequota "e2e-rq-status-kphtw" reports status: hard cpu of 2
  I0505 15:04:46.500347 21 resource_quota.go:1169] Resourcequota "e2e-rq-status-kphtw" reports status: hard memory of 2Gi
  I0505 15:04:46.501749 21 resource_quota.go:1181] Found resourceQuota "e2e-rq-status-kphtw" in namespace "resourcequota-1513" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0505 15:04:46.503414 21 resource_quota.go:1209] ResourceQuota "e2e-rq-status-kphtw" Spec was unchanged and /status reset
  I0505 15:04:46.503517 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1513" for this suite. @ 05/05/24 15:04:46.505
• [0.047 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 05/05/24 15:04:46.507
  I0505 15:04:46.507598 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename var-expansion @ 05/05/24 15:04:46.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:04:46.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:04:46.516
  STEP: Creating a pod to test substitution in container's command @ 05/05/24 15:04:46.517
  E0505 15:04:47.070966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:48.073310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 15:04:48.529
  I0505 15:04:48.533929 21 output.go:196] Trying to get logs from node worker00 pod var-expansion-e268780a-0c56-4093-ba3a-c5f1fa40cdbc container dapi-container: <nil>
  STEP: delete the pod @ 05/05/24 15:04:48.537
  I0505 15:04:48.555348 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3006" for this suite. @ 05/05/24 15:04:48.557
• [2.053 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 05/05/24 15:04:48.561
  I0505 15:04:48.561110 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename container-probe @ 05/05/24 15:04:48.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:04:48.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:04:48.569
  STEP: Creating pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333 @ 05/05/24 15:04:48.571
  E0505 15:04:49.074574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:50.075001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/05/24 15:04:50.586
  I0505 15:04:50.591097 21 container_probe.go:1749] Initial restart count of pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 is 0
  I0505 15:04:50.594218 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:04:51.075841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:52.075738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:04:52.599638 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:04:53.076757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:54.077069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:04:54.602241 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:04:55.077667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:56.077690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:04:56.607344 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:04:57.078755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:04:58.079774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:04:58.611766 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:04:59.080239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:00.080744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:00.615519 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:01.080930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:02.081697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:02.623325 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:03.083186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:04.102240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:04.627026 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:05.103497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:06.103648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:06.634834 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:07.103931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:08.104401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:08.640538 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:09.105024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:10.106375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:10.646608 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:11.106549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:12.106568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:12.651849 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:13.108160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:14.108629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:14.656097 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:15.109358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:16.110270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:16.664348 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:17.110574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:18.110978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:18.668754 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:19.111418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:20.112201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:20.671449 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:21.113302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:22.113569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:22.674492 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:23.114632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:24.114709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:24.677612 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:25.114790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:26.115252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:26.680954 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:27.115978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:28.174396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:28.686489 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:29.175154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:30.175397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:30.688358 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:31.175705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:32.175609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:32.694792 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:33.178279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:34.179332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:34.697162 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:35.180252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:36.181389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:36.707250 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:37.182017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:38.182301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:38.714955 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:39.182666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:40.183340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:40.721444 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:41.183625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:42.184108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:42.726639 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:43.185990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:44.186256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:44.730728 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:45.187244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:46.188095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:46.737374 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:47.188656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:48.189454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:48.751545 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:49.189230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:50.189895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:50.756435 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:51.190702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:52.191195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:52.761351 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:53.192388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:54.193278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:54.764059 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:55.194001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:56.194837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:56.768630 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:57.195500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:05:58.196272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:05:58.772398 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:05:59.197846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:00.202336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:06:00.775547 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:06:01.201696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:02.202088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:06:02.787087 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  E0505 15:06:03.202720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:04.202418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:06:04.794565 21 container_probe.go:1759] Get pod test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 in namespace container-probe-8333
  I0505 15:06:04.794626 21 container_probe.go:1763] Restart count of pod container-probe-8333/test-grpc-f60b2ac3-8aea-4e33-a13c-a248a62c5521 is now 1 (1m14.203491611s elapsed)
  STEP: deleting the pod @ 05/05/24 15:06:04.794
  I0505 15:06:04.807244 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8333" for this suite. @ 05/05/24 15:06:04.81
• [76.254 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 05/05/24 15:06:04.814
  I0505 15:06:04.814762 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename containers @ 05/05/24 15:06:04.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:06:04.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:06:04.831
  STEP: Creating a pod to test override all @ 05/05/24 15:06:04.833
  E0505 15:06:05.202522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:06.202557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:07.203821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:08.204061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 15:06:08.848
  I0505 15:06:08.850038 21 output.go:196] Trying to get logs from node worker00 pod client-containers-64a1c1a1-b7df-4497-8c83-93ab19395f13 container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 15:06:08.852
  I0505 15:06:08.862659 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7903" for this suite. @ 05/05/24 15:06:08.864
• [4.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 05/05/24 15:06:08.868
  I0505 15:06:08.868328 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename gc @ 05/05/24 15:06:08.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:06:08.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:06:08.878
  STEP: create the deployment @ 05/05/24 15:06:08.879
  W0505 15:06:08.882498      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/05/24 15:06:08.882
  E0505 15:06:09.205225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 05/05/24 15:06:09.386
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 05/05/24 15:06:09.394
  STEP: Gathering metrics @ 05/05/24 15:06:09.901
  I0505 15:06:09.937131 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0505 15:06:09.937439 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9000" for this suite. @ 05/05/24 15:06:09.94
• [1.076 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 05/05/24 15:06:09.944
  I0505 15:06:09.944440 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/05/24 15:06:09.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:06:09.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:06:09.954
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 05/05/24 15:06:09.956
  I0505 15:06:09.957191 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  E0505 15:06:10.205381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:11.206566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:12.207088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:13.207451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:14.208141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 05/05/24 15:06:14.812
  I0505 15:06:14.813066 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  E0505 15:06:15.208176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:06:15.997597 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  E0505 15:06:16.209267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:17.210075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:18.211124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:19.211329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:20.211728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:06:20.797416 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5031" for this suite. @ 05/05/24 15:06:20.801
• [10.859 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 05/05/24 15:06:20.804
  I0505 15:06:20.804038 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename pv @ 05/05/24 15:06:20.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:06:20.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:06:20.811
  STEP: Creating initial PV and PVC @ 05/05/24 15:06:20.814
  I0505 15:06:20.814580 21 pv.go:390] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-9151" @ 05/05/24 15:06:20.821
  STEP: Listing PVCs in namespace "pv-9151" @ 05/05/24 15:06:20.824
  STEP: Patching the PV "pv-9151-268zc" @ 05/05/24 15:06:20.827
  STEP: Patching the PVC "pvc-sb4zq" @ 05/05/24 15:06:20.84
  STEP: Getting PV "pv-9151-268zc" @ 05/05/24 15:06:20.846
  STEP: Getting PVC "pvc-sb4zq" @ 05/05/24 15:06:20.847
  STEP: Deleting PVC "pvc-sb4zq" @ 05/05/24 15:06:20.849
  STEP: Confirm deletion of PVC "pvc-sb4zq" @ 05/05/24 15:06:20.853
  E0505 15:06:21.212409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:22.212880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-9151-268zc" @ 05/05/24 15:06:22.861
  STEP: Confirm deletion of PV "pv-9151-268zc" @ 05/05/24 15:06:22.868
  E0505 15:06:23.213223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:24.213177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 05/05/24 15:06:24.873
  I0505 15:06:24.873530 21 pv.go:390] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-9151-b246t" @ 05/05/24 15:06:24.881
  STEP: Updating the PVC "pvc-dv2wk" @ 05/05/24 15:06:24.89
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-dv2wk=updated" @ 05/05/24 15:06:24.897
  STEP: Deleting PVC "pvc-dv2wk" via DeleteCollection @ 05/05/24 15:06:24.9
  STEP: Confirm deletion of PVC "pvc-dv2wk" @ 05/05/24 15:06:24.906
  E0505 15:06:25.214304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:26.214822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-9151-b246t" via DeleteCollection @ 05/05/24 15:06:26.913
  STEP: Confirm deletion of PV "pv-9151-b246t" @ 05/05/24 15:06:26.92
  E0505 15:06:27.215922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:28.216210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:06:28.928166 21 persistent_volumes.go:407] AfterEach: deleting 1 PVCs and 1 PVs...
  I0505 15:06:28.928196 21 pv.go:201] Deleting PersistentVolumeClaim "pvc-dv2wk"
  I0505 15:06:28.930563 21 pv.go:189] Deleting PersistentVolume "pv-9151-b246t"
  I0505 15:06:28.932785 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-9151" for this suite. @ 05/05/24 15:06:28.934
• [8.136 seconds]
------------------------------
S
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 05/05/24 15:06:28.94
  I0505 15:06:28.940503 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/05/24 15:06:28.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:06:28.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:06:28.951
  STEP: creating a target pod @ 05/05/24 15:06:28.953
  E0505 15:06:29.217138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:30.218008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 05/05/24 15:06:30.964
  E0505 15:06:31.218876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:32.220480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 05/05/24 15:06:32.99
  I0505 15:06:32.990808 21 exec_util.go:55] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-9354 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 15:06:32.990888 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 15:06:32.991944 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 15:06:32.992159 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/ephemeral-containers-test-9354/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0505 15:06:33.034397 21 exec_util.go:106] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 05/05/24 15:06:33.037
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 05/05/24 15:06:33.04
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 05/05/24 15:06:33.056
  I0505 15:06:33.060031 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-9354" for this suite. @ 05/05/24 15:06:33.062
• [4.126 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 05/05/24 15:06:33.066
  I0505 15:06:33.066710 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename configmap @ 05/05/24 15:06:33.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:06:33.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:06:33.079
  STEP: creating a ConfigMap @ 05/05/24 15:06:33.08
  STEP: fetching the ConfigMap @ 05/05/24 15:06:33.082
  STEP: patching the ConfigMap @ 05/05/24 15:06:33.084
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 05/05/24 15:06:33.086
  STEP: deleting the ConfigMap by collection with a label selector @ 05/05/24 15:06:33.088
  STEP: listing all ConfigMaps in test namespace @ 05/05/24 15:06:33.09
  I0505 15:06:33.092237 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1630" for this suite. @ 05/05/24 15:06:33.094
• [0.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 05/05/24 15:06:33.097
  I0505 15:06:33.097468 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename statefulset @ 05/05/24 15:06:33.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:06:33.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:06:33.107
  STEP: Creating service test in namespace statefulset-2713 @ 05/05/24 15:06:33.109
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 05/05/24 15:06:33.113
  STEP: Creating stateful set ss in namespace statefulset-2713 @ 05/05/24 15:06:33.116
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2713 @ 05/05/24 15:06:33.123
  I0505 15:06:33.125815 21 wait.go:40] Found 0 stateful pods, waiting for 1
  E0505 15:06:33.221013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:34.223063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:35.226201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:36.226806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:37.229593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:38.230021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:39.230992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:40.230994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:41.231388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:42.232447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:06:43.127847 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 05/05/24 15:06:43.127
  I0505 15:06:43.130943 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=statefulset-2713 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0505 15:06:43.203513 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0505 15:06:43.203544 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0505 15:06:43.203554 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0505 15:06:43.206471 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0505 15:06:43.233268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:44.234088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:45.235498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:46.236647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:47.237695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:48.238650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:49.240228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:50.240212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:51.242035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:52.242182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:06:53.207518 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0505 15:06:53.207588 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0505 15:06:53.229528 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 9.999999487s
  E0505 15:06:53.242471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:06:54.238826 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 8.993863164s
  E0505 15:06:54.243204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:06:55.243836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:06:55.244461 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 7.987860251s
  E0505 15:06:56.244002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:06:56.247287 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 6.98182156s
  E0505 15:06:57.244545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:06:57.252026 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 5.97887539s
  E0505 15:06:58.245175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:06:58.257687 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 4.974239068s
  E0505 15:06:59.246358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:06:59.262404 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 3.968729912s
  E0505 15:07:00.247280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:07:00.268158 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 2.961015121s
  E0505 15:07:01.248242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:07:01.273114 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 1.957602826s
  E0505 15:07:02.248425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:07:02.277614 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 953.444859ms
  E0505 15:07:03.249155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2713 @ 05/05/24 15:07:03.278
  I0505 15:07:03.283567 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=statefulset-2713 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0505 15:07:03.380216 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0505 15:07:03.380258 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0505 15:07:03.380268 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0505 15:07:03.382229 21 wait.go:40] Found 1 stateful pods, waiting for 3
  E0505 15:07:04.249258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:05.249643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:06.250043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:07.250297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:08.252492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:09.253688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:10.253890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:11.254278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:12.254426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:13.254741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:07:13.385468 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0505 15:07:13.385518 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0505 15:07:13.385534 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 05/05/24 15:07:13.385
  STEP: Scale down will halt with unhealthy stateful pod @ 05/05/24 15:07:13.385
  I0505 15:07:13.390451 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=statefulset-2713 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0505 15:07:13.472224 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0505 15:07:13.472256 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0505 15:07:13.472265 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0505 15:07:13.472301 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=statefulset-2713 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0505 15:07:13.564105 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0505 15:07:13.564149 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0505 15:07:13.564169 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0505 15:07:13.564225 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=statefulset-2713 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0505 15:07:13.643044 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0505 15:07:13.643098 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0505 15:07:13.643110 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0505 15:07:13.643119 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0505 15:07:13.645536 21 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0505 15:07:14.255323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:15.256327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:16.256468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:17.256638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:18.257291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:19.257529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:20.258059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:21.258675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:22.261175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:23.264074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:07:23.651753 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0505 15:07:23.651824 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0505 15:07:23.651869 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0505 15:07:23.671338 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 9.999999618s
  E0505 15:07:24.264293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:07:24.674103 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 8.997639137s
  E0505 15:07:25.264645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:07:25.678109 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 7.994275051s
  E0505 15:07:26.266003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:07:26.683199 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 6.990450188s
  E0505 15:07:27.266372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:07:27.687279 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 5.985078803s
  E0505 15:07:28.268867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:07:28.692081 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 4.981079541s
  E0505 15:07:29.269484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:07:29.697032 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 3.975593967s
  E0505 15:07:30.270743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:07:30.703356 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 2.971181083s
  E0505 15:07:31.271446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:07:31.706569 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 1.964573119s
  E0505 15:07:32.272000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:07:32.714942 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 960.064991ms
  E0505 15:07:33.272293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2713 @ 05/05/24 15:07:33.715
  I0505 15:07:33.724250 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=statefulset-2713 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0505 15:07:33.819837 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0505 15:07:33.819867 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0505 15:07:33.819906 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0505 15:07:33.819937 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=statefulset-2713 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0505 15:07:33.893030 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0505 15:07:33.893059 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0505 15:07:33.893068 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0505 15:07:33.893435 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=statefulset-2713 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0505 15:07:33.959015 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0505 15:07:33.959051 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0505 15:07:33.959062 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0505 15:07:33.959074 21 rest.go:150] Scaling statefulset ss to 0
  E0505 15:07:34.273873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:35.275020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:36.276141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:37.277019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:38.279210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:39.279407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:40.279771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:41.280293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:42.280300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:43.281434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 05/05/24 15:07:43.967
  I0505 15:07:43.967200 21 statefulset.go:135] Deleting all statefulset in ns statefulset-2713
  I0505 15:07:43.970394 21 rest.go:150] Scaling statefulset ss to 0
  I0505 15:07:43.978164 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0505 15:07:43.980070 21 rest.go:88] Deleting statefulset ss
  I0505 15:07:44.000432 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2713" for this suite. @ 05/05/24 15:07:44.003
• [70.909 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 05/05/24 15:07:44.006
  I0505 15:07:44.006219 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 15:07:44.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:07:44.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:07:44.015
  STEP: Creating projection with secret that has name projected-secret-test-6d78b018-c979-4f0c-a193-9f2c7c60c186 @ 05/05/24 15:07:44.017
  STEP: Creating a pod to test consume secrets @ 05/05/24 15:07:44.019
  E0505 15:07:44.282194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:45.282161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 15:07:46.035
  I0505 15:07:46.038093 21 output.go:196] Trying to get logs from node worker00 pod pod-projected-secrets-92c01957-6f1d-4be3-9fa5-03ce32672bc6 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 15:07:46.043
  I0505 15:07:46.051112 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1490" for this suite. @ 05/05/24 15:07:46.052
• [2.049 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 05/05/24 15:07:46.055
  I0505 15:07:46.055780 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 15:07:46.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:07:46.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:07:46.064
  STEP: Creating configMap with name projected-configmap-test-volume-a978e0b4-ce21-46bb-8986-56e8471040b9 @ 05/05/24 15:07:46.066
  STEP: Creating a pod to test consume configMaps @ 05/05/24 15:07:46.068
  E0505 15:07:46.282419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:47.283006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 15:07:48.081
  I0505 15:07:48.084213 21 output.go:196] Trying to get logs from node worker00 pod pod-projected-configmaps-15c24954-1f9d-450c-a3a9-97f355fe3907 container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 15:07:48.088
  I0505 15:07:48.102606 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9702" for this suite. @ 05/05/24 15:07:48.105
• [2.054 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 05/05/24 15:07:48.11
  I0505 15:07:48.110402 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename sysctl @ 05/05/24 15:07:48.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:07:48.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:07:48.119
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 05/05/24 15:07:48.121
  STEP: Watching for error events or started pod @ 05/05/24 15:07:48.125
  E0505 15:07:48.284069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:49.285176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 05/05/24 15:07:50.127
  STEP: Checking that the pod succeeded @ 05/05/24 15:07:50.13
  STEP: Getting logs from the pod @ 05/05/24 15:07:50.13
  STEP: Checking that the sysctl is actually updated @ 05/05/24 15:07:50.133
  I0505 15:07:50.133129 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3881" for this suite. @ 05/05/24 15:07:50.135
• [2.030 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 05/05/24 15:07:50.141
  I0505 15:07:50.141062 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 15:07:50.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:07:50.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:07:50.152
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 15:07:50.154
  E0505 15:07:50.286640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:51.292156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 15:07:52.166
  I0505 15:07:52.170712 21 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-323d8778-662a-4fa5-b847-d28f35355cdd container client-container: <nil>
  STEP: delete the pod @ 05/05/24 15:07:52.177
  I0505 15:07:52.194651 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1142" for this suite. @ 05/05/24 15:07:52.196
• [2.058 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 05/05/24 15:07:52.199
  I0505 15:07:52.199781 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename watch @ 05/05/24 15:07:52.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:07:52.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:07:52.211
  STEP: creating a watch on configmaps with label A @ 05/05/24 15:07:52.213
  STEP: creating a watch on configmaps with label B @ 05/05/24 15:07:52.213
  STEP: creating a watch on configmaps with label A or B @ 05/05/24 15:07:52.214
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 05/05/24 15:07:52.215
  I0505 15:07:52.217537 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9815  c1a490e1-cd37-4836-872c-de89ff084265 42157 0 2024-05-05 15:07:52 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-05 15:07:52 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0505 15:07:52.217608 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9815  c1a490e1-cd37-4836-872c-de89ff084265 42157 0 2024-05-05 15:07:52 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-05 15:07:52 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 05/05/24 15:07:52.217
  I0505 15:07:52.220754 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9815  c1a490e1-cd37-4836-872c-de89ff084265 42158 0 2024-05-05 15:07:52 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-05 15:07:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0505 15:07:52.220800 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9815  c1a490e1-cd37-4836-872c-de89ff084265 42158 0 2024-05-05 15:07:52 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-05 15:07:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 05/05/24 15:07:52.22
  I0505 15:07:52.225285 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9815  c1a490e1-cd37-4836-872c-de89ff084265 42159 0 2024-05-05 15:07:52 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-05 15:07:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0505 15:07:52.225349 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9815  c1a490e1-cd37-4836-872c-de89ff084265 42159 0 2024-05-05 15:07:52 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-05 15:07:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 05/05/24 15:07:52.225
  I0505 15:07:52.228063 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9815  c1a490e1-cd37-4836-872c-de89ff084265 42160 0 2024-05-05 15:07:52 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-05 15:07:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0505 15:07:52.228092 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9815  c1a490e1-cd37-4836-872c-de89ff084265 42160 0 2024-05-05 15:07:52 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-05 15:07:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 05/05/24 15:07:52.228
  I0505 15:07:52.230327 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9815  980106e0-460a-40e4-a971-70caf56ee61b 42161 0 2024-05-05 15:07:52 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-05 15:07:52 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0505 15:07:52.230403 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9815  980106e0-460a-40e4-a971-70caf56ee61b 42161 0 2024-05-05 15:07:52 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-05 15:07:52 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0505 15:07:52.292896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:53.292966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:54.293426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:55.294441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:56.295363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:57.296335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:58.296659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:07:59.305881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:00.305975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:01.306047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 05/05/24 15:08:02.23
  I0505 15:08:02.235212 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9815  980106e0-460a-40e4-a971-70caf56ee61b 42224 0 2024-05-05 15:07:52 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-05 15:07:52 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0505 15:08:02.235266 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9815  980106e0-460a-40e4-a971-70caf56ee61b 42224 0 2024-05-05 15:07:52 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-05 15:07:52 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0505 15:08:02.307043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:03.308253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:04.308615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:05.309021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:06.316312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:07.316517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:08.322499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:09.323260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:10.323800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:11.323978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:08:12.235809 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9815" for this suite. @ 05/05/24 15:08:12.243
• [20.061 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 05/05/24 15:08:12.26
  I0505 15:08:12.261360 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename namespaces @ 05/05/24 15:08:12.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:08:12.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:08:12.293
  STEP: Read namespace status @ 05/05/24 15:08:12.301
  I0505 15:08:12.305298 21 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 05/05/24 15:08:12.305
  I0505 15:08:12.308498 21 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 05/05/24 15:08:12.308
  I0505 15:08:12.314015 21 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0505 15:08:12.314082 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1866" for this suite. @ 05/05/24 15:08:12.315
• [0.058 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 05/05/24 15:08:12.318
  I0505 15:08:12.318431 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename container-probe @ 05/05/24 15:08:12.319
  E0505 15:08:12.324268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:08:12.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:08:12.326
  STEP: Creating pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506 @ 05/05/24 15:08:12.328
  E0505 15:08:13.331436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:14.330753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/05/24 15:08:14.337
  I0505 15:08:14.339935 21 container_probe.go:1749] Initial restart count of pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 is 0
  I0505 15:08:14.342107 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:08:15.332298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:16.333391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:08:16.349046 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:08:17.336224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:18.334459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:08:18.356235 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:08:19.335084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:20.336832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:08:20.358269 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:08:21.337067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:22.338446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:08:22.363883 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:08:23.338708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:24.339341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:08:24.369279 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:08:25.340291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:26.341189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:08:26.373294 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:08:27.342124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:28.342765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:08:28.380158 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:08:29.343701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:30.344415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:08:30.383591 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:08:31.344415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:32.345588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:08:32.394859 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:08:33.345390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:34.345897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:08:34.398864 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:08:35.347305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:36.348228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:08:36.404410 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:08:37.349617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:38.350312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:08:38.409266 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:08:39.351033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:40.351386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:08:40.420574 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:08:41.352012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:42.352426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:08:42.425017 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:08:43.352672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:44.352865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:08:44.429005 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:08:45.353536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:46.353649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:08:46.435213 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:08:47.354139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:48.354531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:08:48.443213 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:08:49.355704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:50.359230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:08:50.449120 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:08:51.359140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:52.360704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:08:52.454842 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:08:53.361600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:54.362372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:08:54.457826 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:08:55.362969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:56.364384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:08:56.462913 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:08:57.365022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:08:58.367036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:08:58.468610 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:08:59.367270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:00.367369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:00.477733 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:01.367999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:02.368507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:02.480423 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:03.368977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:04.370345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:04.483297 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:05.405474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:06.405743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:06.489156 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:07.406114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:08.406472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:08.495052 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:09.407057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:10.408564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:10.503538 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:11.408716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:12.411969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:12.508609 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:13.412262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:14.413201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:14.511713 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:15.414276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:16.414588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:16.517920 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:17.415759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:18.416539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:18.524918 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:19.416784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:20.417762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:20.530466 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:21.418302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:22.418410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:22.536244 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:23.419069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:24.420497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:24.539015 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:25.422695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:26.423809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:26.543946 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:27.424006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:28.425009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:28.549815 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:29.426247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:30.427863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:30.554667 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:31.429051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:32.430201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:32.560223 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:33.432418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:34.432481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:34.562863 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:35.432814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:36.433434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:36.565000 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:37.434115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:38.434168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:38.578412 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:39.434421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:40.435723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:40.585110 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:41.438544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:42.439154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:42.590007 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:43.439807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:44.440852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:44.592217 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:45.441287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:46.442435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:46.597270 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:47.443138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:48.444254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:48.601209 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:49.445167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:50.445629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:50.604058 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:51.446096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:52.446602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:52.605992 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:53.447045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:54.447532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:54.608570 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:55.447839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:56.449029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:56.612742 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:57.449537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:09:58.449658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:09:58.615322 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:09:59.449851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:00.450076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:00.618362 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:01.450821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:02.451396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:02.621914 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:03.452486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:04.453543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:04.628109 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:05.454583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:06.454675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:06.630575 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:07.455775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:08.456750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:08.636690 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:09.457197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:10.457249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:10.640348 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:11.457962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:12.459163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:12.648134 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:13.459289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:14.459520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:14.650838 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:15.460075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:16.461043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:16.658533 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:17.461573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:18.461973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:18.670272 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:19.463688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:20.464424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:20.673560 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:21.464600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:22.465146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:22.678181 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:23.467636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:24.469016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:24.682793 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:25.470152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:26.470342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:26.686016 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:27.471866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:28.472164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:28.691666 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:29.473279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:30.473804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:30.697345 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:31.474734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:32.475077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:32.703072 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:33.475706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:34.475651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:34.711049 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:35.476603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:36.478965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:36.716705 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:37.479406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:38.479793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:38.720600 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:39.481167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:40.481949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:40.725313 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:41.482374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:42.482614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:42.731142 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:43.483049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:44.483169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:44.736478 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:45.486100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:46.486681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:46.741468 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:47.490657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:48.491554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:48.743638 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:49.491757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:50.491913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:50.748170 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:51.492280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:52.493191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:52.752670 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:53.494299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:54.494643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:54.757256 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:55.496700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:56.497566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:56.761999 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:57.497565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:10:58.497811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:10:58.764563 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:10:59.499197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:00.500137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:00.772696 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:01.500351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:02.501176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:02.778891 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:03.501323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:04.504483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:04.782674 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:05.504986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:06.505140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:06.785641 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:07.506339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:08.506829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:08.797092 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:09.516153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:10.518030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:10.802204 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:11.519714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:12.520340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:12.808319 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:13.520788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:14.520898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:14.813266 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:15.521322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:16.522872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:16.818600 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:17.523321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:18.524100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:18.823355 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:19.525394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:20.526271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:20.830661 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:21.527605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:22.528250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:22.834495 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:23.528494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:24.529468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:24.836571 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:25.529912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:26.530397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:26.845705 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:27.530592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:28.532125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:28.851497 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:29.532634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:30.533202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:30.856994 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:31.533279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:32.533753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:32.862958 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:33.535115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:34.535270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:34.869176 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:35.536391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:36.536713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:36.872513 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:37.537579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:38.539089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:38.875618 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:39.539275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:40.539564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:40.881501 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:41.540312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:42.540953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:42.884191 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:43.541546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:44.541626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:44.887464 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:45.542539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:46.543535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:46.891792 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:47.543898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:48.545401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:48.896681 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:49.546129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:50.546263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:50.898755 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:51.548343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:52.548850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:52.903506 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:53.549092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:54.549566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:54.910438 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:55.549956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:56.551243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:56.915438 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:57.552288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:11:58.552815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:11:58.919868 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:11:59.553569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:00.553983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:12:00.923350 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:12:01.554210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:02.554275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:12:02.929526 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:12:03.555205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:04.555770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:12:04.932837 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:12:05.556671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:06.557361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:12:06.936874 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:12:07.561403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:08.562519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:12:08.941751 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:12:09.564220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:10.565143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:12:10.949383 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:12:11.565389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:12.566355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:12:12.955088 21 container_probe.go:1759] Get pod test-webserver-8adb4bfb-6090-49bd-a46f-dd5b4bd6fe41 in namespace container-probe-6506
  E0505 15:12:13.568571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:14.569254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/05/24 15:12:14.956
  I0505 15:12:14.981319 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6506" for this suite. @ 05/05/24 15:12:14.989
• [242.676 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:882
  STEP: Creating a kubernetes client @ 05/05/24 15:12:14.995
  I0505 15:12:14.995294 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 15:12:14.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:12:15.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:12:15.009
  STEP: validating api versions @ 05/05/24 15:12:15.011
  I0505 15:12:15.011259 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-1152 api-versions'
  I0505 15:12:15.056552 21 builder.go:146] stderr: ""
  I0505 15:12:15.056681 21 builder.go:147] stdout: "admissionregistration.k8s.io/v1\nadmissionregistration.k8s.io/v1alpha1\nadmissionregistration.k8s.io/v1beta1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthentication.k8s.io/v1alpha1\nauthentication.k8s.io/v1beta1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\ninternal.apiserver.k8s.io/v1alpha1\nnetworking.k8s.io/v1\nnetworking.k8s.io/v1alpha1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nresource.k8s.io/v1alpha2\nscheduling.k8s.io/v1\nsnapshot.storage.k8s.io/v1\nstorage.k8s.io/v1\nstorage.k8s.io/v1alpha1\nv1\n"
  I0505 15:12:15.056782 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1152" for this suite. @ 05/05/24 15:12:15.06
• [0.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 05/05/24 15:12:15.064
  I0505 15:12:15.064903 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 15:12:15.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:12:15.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:12:15.075
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 15:12:15.076
  E0505 15:12:15.570173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:16.570630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 15:12:17.088
  I0505 15:12:17.092005 21 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-3763aaab-77dc-4522-a824-c355dfb65b30 container client-container: <nil>
  STEP: delete the pod @ 05/05/24 15:12:17.095
  I0505 15:12:17.102093 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7667" for this suite. @ 05/05/24 15:12:17.103
• [2.042 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 05/05/24 15:12:17.106
  I0505 15:12:17.106700 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename subpath @ 05/05/24 15:12:17.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:12:17.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:12:17.115
  STEP: Setting up data @ 05/05/24 15:12:17.116
  STEP: Creating pod pod-subpath-test-configmap-sh6c @ 05/05/24 15:12:17.121
  STEP: Creating a pod to test atomic-volume-subpath @ 05/05/24 15:12:17.121
  E0505 15:12:17.571147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:18.571952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:19.572952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:20.573591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:21.574681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:22.574972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:23.575560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:24.576486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:25.578065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:26.578575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:27.578811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:28.579064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:29.582119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:30.584975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:31.585427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:32.586349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:33.586427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:34.586623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:35.587137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:36.587359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:37.588376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:38.588845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 15:12:39.246
  I0505 15:12:39.251232 21 output.go:196] Trying to get logs from node worker00 pod pod-subpath-test-configmap-sh6c container test-container-subpath-configmap-sh6c: <nil>
  STEP: delete the pod @ 05/05/24 15:12:39.259
  STEP: Deleting pod pod-subpath-test-configmap-sh6c @ 05/05/24 15:12:39.27
  I0505 15:12:39.270113 21 delete.go:62] Deleting pod "pod-subpath-test-configmap-sh6c" in namespace "subpath-201"
  I0505 15:12:39.271957 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-201" for this suite. @ 05/05/24 15:12:39.274
• [22.170 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 05/05/24 15:12:39.277
  I0505 15:12:39.277025 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename container-probe @ 05/05/24 15:12:39.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:12:39.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:12:39.287
  E0505 15:12:39.589535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:40.590459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:41.591764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:42.592402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:43.593119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:44.593706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:45.594243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:46.595143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:47.596111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:48.596335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:49.600003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:50.602363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:51.602594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:52.604272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:53.605072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:54.605480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:55.606098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:56.606463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:57.607506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:58.607703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:12:59.611684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:00.613034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:13:01.377903 21 container_probe.go:92] Container started at 2024-05-05 15:12:39 +0000 UTC, pod became ready at 2024-05-05 15:12:59 +0000 UTC
  I0505 15:13:01.377968 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-323" for this suite. @ 05/05/24 15:13:01.38
• [22.106 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:334
  STEP: Creating a kubernetes client @ 05/05/24 15:13:01.382
  I0505 15:13:01.382956 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename sched-pred @ 05/05/24 15:13:01.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:13:01.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:13:01.394
  I0505 15:13:01.396594 21 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0505 15:13:01.399339 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I0505 15:13:01.400459 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node worker00 before test
  I0505 15:13:01.404181 21 predicates.go:887] test-webserver-1318f079-d32b-4b51-b8f1-65d07e31924c from container-probe-323 started at 2024-05-05 15:12:39 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.404201 21 predicates.go:889] 	Container test-webserver ready: true, restart count 0
  I0505 15:13:01.404208 21 predicates.go:887] etcd-worker00 from kube-system started at 2024-05-05 13:40:24 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.404214 21 predicates.go:889] 	Container etcd ready: true, restart count 0
  I0505 15:13:01.404221 21 predicates.go:887] gobetween-worker00 from kube-system started at 2024-05-05 13:40:24 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.404226 21 predicates.go:889] 	Container gobetween ready: true, restart count 0
  I0505 15:13:01.404277 21 predicates.go:887] kube-apiserver-worker00 from kube-system started at 2024-05-05 13:40:24 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.404349 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 0
  I0505 15:13:01.404356 21 predicates.go:887] kube-controller-manager-worker00 from kube-system started at 2024-05-05 13:40:24 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.404372 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 0
  I0505 15:13:01.404378 21 predicates.go:887] kube-proxy-worker00 from kube-system started at 2024-05-05 13:40:24 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.404382 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0505 15:13:01.404389 21 predicates.go:887] kube-scheduler-worker00 from kube-system started at 2024-05-05 13:40:24 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.404404 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 0
  I0505 15:13:01.404409 21 predicates.go:887] calico-node-nzckb from networking started at 2024-05-05 13:41:30 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.404414 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0505 15:13:01.404463 21 predicates.go:887] metallb-speaker-ff7tv from networking started at 2024-05-05 14:43:14 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.404468 21 predicates.go:889] 	Container speaker ready: true, restart count 0
  I0505 15:13:01.404473 21 predicates.go:887] sonobuoy from sonobuoy started at 2024-05-05 13:49:53 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.404477 21 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0505 15:13:01.404495 21 predicates.go:887] sonobuoy-e2e-job-9197e61553eb4047 from sonobuoy started at 2024-05-05 13:50:00 +0000 UTC (2 container statuses recorded)
  I0505 15:13:01.404509 21 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0505 15:13:01.404514 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0505 15:13:01.404520 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-85bf87e40a77455e-sbld9 from sonobuoy started at 2024-05-05 13:50:00 +0000 UTC (2 container statuses recorded)
  I0505 15:13:01.404525 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0505 15:13:01.404529 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0505 15:13:01.404535 21 predicates.go:887] ceph-csi-cephfs-nodeplugin-h8bqd from storage started at 2024-05-05 14:43:14 +0000 UTC (3 container statuses recorded)
  I0505 15:13:01.404540 21 predicates.go:889] 	Container csi-cephfsplugin ready: true, restart count 0
  I0505 15:13:01.404545 21 predicates.go:889] 	Container driver-registrar ready: true, restart count 0
  I0505 15:13:01.404764 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 15:13:01.404773 21 predicates.go:887] ceph-csi-rbd-nodeplugin-smvcz from storage started at 2024-05-05 14:43:14 +0000 UTC (3 container statuses recorded)
  I0505 15:13:01.404778 21 predicates.go:889] 	Container csi-rbdplugin ready: true, restart count 0
  I0505 15:13:01.404789 21 predicates.go:889] 	Container driver-registrar ready: true, restart count 0
  I0505 15:13:01.404794 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 15:13:01.404799 21 predicates.go:887] ceph-mon-worker00-7ffccc7445-7fbfm from storage started at 2024-05-05 14:43:14 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.404804 21 predicates.go:889] 	Container ceph-mon ready: true, restart count 0
  I0505 15:13:01.404811 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node worker01 before test
  I0505 15:13:01.411363 21 predicates.go:887] coredns-5454f94b99-7sspb from kube-system started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.411383 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0505 15:13:01.411390 21 predicates.go:887] coredns-5454f94b99-gfmxs from kube-system started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.411394 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0505 15:13:01.411401 21 predicates.go:887] gobetween-worker01 from kube-system started at 2024-05-05 13:40:33 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.411485 21 predicates.go:889] 	Container gobetween ready: true, restart count 0
  I0505 15:13:01.411495 21 predicates.go:887] kube-proxy-worker01 from kube-system started at 2024-05-05 13:40:33 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.411500 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0505 15:13:01.411506 21 predicates.go:887] kubernetes-dashboard-api-dbd5d8954-zmzhd from kube-system started at 2024-05-05 14:15:46 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.411511 21 predicates.go:889] 	Container kubernetes-dashboard-api ready: true, restart count 0
  I0505 15:13:01.411517 21 predicates.go:887] kubernetes-dashboard-auth-585b4bc77c-tkqrs from kube-system started at 2024-05-05 14:15:46 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.411523 21 predicates.go:889] 	Container kubernetes-dashboard-auth ready: true, restart count 0
  I0505 15:13:01.411740 21 predicates.go:887] kubernetes-dashboard-kong-58c7df5b9-ksplf from kube-system started at 2024-05-05 14:15:46 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.411791 21 predicates.go:889] 	Container proxy ready: true, restart count 0
  I0505 15:13:01.411910 21 predicates.go:887] kubernetes-dashboard-metrics-scraper-6786f55f8b-27dq7 from kube-system started at 2024-05-05 14:15:46 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.411919 21 predicates.go:889] 	Container kubernetes-dashboard-metrics-scraper ready: true, restart count 0
  I0505 15:13:01.411924 21 predicates.go:887] kubernetes-dashboard-web-84b47c879-48tgm from kube-system started at 2024-05-05 14:15:46 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.411929 21 predicates.go:889] 	Container kubernetes-dashboard-web ready: true, restart count 0
  I0505 15:13:01.411935 21 predicates.go:887] calico-kube-controllers-54f5554fcd-n22s4 from networking started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.411939 21 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I0505 15:13:01.411945 21 predicates.go:887] calico-node-t86wj from networking started at 2024-05-05 13:41:23 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.411949 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0505 15:13:01.411955 21 predicates.go:887] calico-typha-9497885f9-hncqt from networking started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.411960 21 predicates.go:889] 	Container calico-typha ready: true, restart count 0
  I0505 15:13:01.411965 21 predicates.go:887] metallb-controller-6d48ffccb-k944q from networking started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.411969 21 predicates.go:889] 	Container controller ready: true, restart count 0
  I0505 15:13:01.411976 21 predicates.go:887] metallb-speaker-rnkpg from networking started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.411981 21 predicates.go:889] 	Container speaker ready: true, restart count 0
  I0505 15:13:01.411986 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-85bf87e40a77455e-g4jkd from sonobuoy started at 2024-05-05 13:50:00 +0000 UTC (2 container statuses recorded)
  I0505 15:13:01.411991 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0505 15:13:01.411996 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0505 15:13:01.412002 21 predicates.go:887] ceph-csi-cephfs-nodeplugin-nq2zf from storage started at 2024-05-05 13:41:23 +0000 UTC (3 container statuses recorded)
  I0505 15:13:01.412008 21 predicates.go:889] 	Container csi-cephfsplugin ready: true, restart count 0
  I0505 15:13:01.412013 21 predicates.go:889] 	Container driver-registrar ready: true, restart count 0
  I0505 15:13:01.412018 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 15:13:01.412023 21 predicates.go:887] ceph-csi-cephfs-provisioner-68989c6cdd-gzwkq from storage started at 2024-05-05 13:41:23 +0000 UTC (5 container statuses recorded)
  I0505 15:13:01.412028 21 predicates.go:889] 	Container csi-cephfsplugin ready: true, restart count 0
  I0505 15:13:01.412033 21 predicates.go:889] 	Container csi-provisioner ready: true, restart count 0
  I0505 15:13:01.412039 21 predicates.go:889] 	Container csi-resizer ready: true, restart count 0
  I0505 15:13:01.412043 21 predicates.go:889] 	Container csi-snapshotter ready: true, restart count 0
  I0505 15:13:01.412048 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 15:13:01.412054 21 predicates.go:887] ceph-csi-cephfs-provisioner-68989c6cdd-jqkfb from storage started at 2024-05-05 13:41:23 +0000 UTC (5 container statuses recorded)
  I0505 15:13:01.412059 21 predicates.go:889] 	Container csi-cephfsplugin ready: true, restart count 0
  I0505 15:13:01.412064 21 predicates.go:889] 	Container csi-provisioner ready: true, restart count 0
  I0505 15:13:01.412069 21 predicates.go:889] 	Container csi-resizer ready: true, restart count 0
  I0505 15:13:01.412074 21 predicates.go:889] 	Container csi-snapshotter ready: true, restart count 0
  I0505 15:13:01.412079 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 15:13:01.412084 21 predicates.go:887] ceph-csi-cephfs-provisioner-68989c6cdd-k5mkr from storage started at 2024-05-05 13:41:23 +0000 UTC (5 container statuses recorded)
  I0505 15:13:01.412089 21 predicates.go:889] 	Container csi-cephfsplugin ready: true, restart count 0
  I0505 15:13:01.412094 21 predicates.go:889] 	Container csi-provisioner ready: true, restart count 0
  I0505 15:13:01.412099 21 predicates.go:889] 	Container csi-resizer ready: true, restart count 0
  I0505 15:13:01.412104 21 predicates.go:889] 	Container csi-snapshotter ready: true, restart count 0
  I0505 15:13:01.412109 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 15:13:01.412114 21 predicates.go:887] ceph-csi-rbd-nodeplugin-wqjcz from storage started at 2024-05-05 13:41:23 +0000 UTC (3 container statuses recorded)
  I0505 15:13:01.412119 21 predicates.go:889] 	Container csi-rbdplugin ready: true, restart count 0
  I0505 15:13:01.412124 21 predicates.go:889] 	Container driver-registrar ready: true, restart count 0
  I0505 15:13:01.412128 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 15:13:01.412134 21 predicates.go:887] ceph-csi-rbd-provisioner-7c49d466f9-29f9z from storage started at 2024-05-05 13:41:24 +0000 UTC (7 container statuses recorded)
  I0505 15:13:01.412139 21 predicates.go:889] 	Container csi-attacher ready: true, restart count 0
  I0505 15:13:01.412145 21 predicates.go:889] 	Container csi-provisioner ready: true, restart count 0
  I0505 15:13:01.412150 21 predicates.go:889] 	Container csi-rbdplugin ready: true, restart count 0
  I0505 15:13:01.412155 21 predicates.go:889] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0505 15:13:01.412160 21 predicates.go:889] 	Container csi-resizer ready: true, restart count 0
  I0505 15:13:01.412165 21 predicates.go:889] 	Container csi-snapshotter ready: true, restart count 0
  I0505 15:13:01.412170 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 15:13:01.412175 21 predicates.go:887] ceph-csi-rbd-provisioner-7c49d466f9-7kxgr from storage started at 2024-05-05 13:41:24 +0000 UTC (7 container statuses recorded)
  I0505 15:13:01.412180 21 predicates.go:889] 	Container csi-attacher ready: true, restart count 0
  I0505 15:13:01.412184 21 predicates.go:889] 	Container csi-provisioner ready: true, restart count 0
  I0505 15:13:01.412189 21 predicates.go:889] 	Container csi-rbdplugin ready: true, restart count 0
  I0505 15:13:01.412195 21 predicates.go:889] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0505 15:13:01.412200 21 predicates.go:889] 	Container csi-resizer ready: true, restart count 0
  I0505 15:13:01.412205 21 predicates.go:889] 	Container csi-snapshotter ready: true, restart count 0
  I0505 15:13:01.412210 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 15:13:01.412216 21 predicates.go:887] ceph-csi-rbd-provisioner-7c49d466f9-vlfxl from storage started at 2024-05-05 13:41:24 +0000 UTC (7 container statuses recorded)
  I0505 15:13:01.412221 21 predicates.go:889] 	Container csi-attacher ready: true, restart count 0
  I0505 15:13:01.412226 21 predicates.go:889] 	Container csi-provisioner ready: true, restart count 0
  I0505 15:13:01.412231 21 predicates.go:889] 	Container csi-rbdplugin ready: true, restart count 0
  I0505 15:13:01.412236 21 predicates.go:889] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0505 15:13:01.412241 21 predicates.go:889] 	Container csi-resizer ready: true, restart count 0
  I0505 15:13:01.412246 21 predicates.go:889] 	Container csi-snapshotter ready: true, restart count 0
  I0505 15:13:01.412251 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 15:13:01.412257 21 predicates.go:887] ceph-mds-worker01-75d7657797-c5c2m from storage started at 2024-05-05 13:41:24 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.412262 21 predicates.go:889] 	Container ceph-mds ready: true, restart count 0
  I0505 15:13:01.412268 21 predicates.go:887] ceph-mgr-worker01-58c6d8747b-m689f from storage started at 2024-05-05 13:41:24 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.412273 21 predicates.go:889] 	Container ceph-mgr ready: true, restart count 1
  I0505 15:13:01.412278 21 predicates.go:887] ceph-osd-worker01-796758b4b5-25p7m from storage started at 2024-05-05 13:41:24 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.412283 21 predicates.go:889] 	Container ceph-osd ready: true, restart count 0
  I0505 15:13:01.412289 21 predicates.go:887] ceph-rgw-worker01-d6dd485ff-7lnjl from storage started at 2024-05-05 13:41:24 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.412294 21 predicates.go:889] 	Container ceph-rgw ready: true, restart count 0
  I0505 15:13:01.412300 21 predicates.go:887] ceph-setup-wmkcq from storage started at 2024-05-05 13:41:23 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.412305 21 predicates.go:889] 	Container ceph ready: false, restart count 0
  I0505 15:13:01.412310 21 predicates.go:887] snapshot-controller-77c9f4c8d6-84v87 from storage started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.412315 21 predicates.go:889] 	Container snapshot-controller ready: true, restart count 0
  I0505 15:13:01.412320 21 predicates.go:887] snapshot-controller-77c9f4c8d6-j7qcs from storage started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.412326 21 predicates.go:889] 	Container snapshot-controller ready: true, restart count 0
  I0505 15:13:01.412332 21 predicates.go:887] snapshot-validation-webhook-865bb6896-dbmxh from storage started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 15:13:01.412336 21 predicates.go:889] 	Container snapshot-validation-webhook ready: true, restart count 0
  STEP: verifying the node has the label node worker00 @ 05/05/24 15:13:01.431
  STEP: verifying the node has the label node worker01 @ 05/05/24 15:13:01.444
  I0505 15:13:01.461660 21 predicates.go:374] Pod test-webserver-1318f079-d32b-4b51-b8f1-65d07e31924c requesting resource cpu=0m on Node worker00
  I0505 15:13:01.461687 21 predicates.go:374] Pod coredns-5454f94b99-7sspb requesting resource cpu=100m on Node worker01
  I0505 15:13:01.461694 21 predicates.go:374] Pod coredns-5454f94b99-gfmxs requesting resource cpu=100m on Node worker01
  I0505 15:13:01.461700 21 predicates.go:374] Pod etcd-worker00 requesting resource cpu=0m on Node worker00
  I0505 15:13:01.461706 21 predicates.go:374] Pod gobetween-worker00 requesting resource cpu=100m on Node worker00
  I0505 15:13:01.461712 21 predicates.go:374] Pod gobetween-worker01 requesting resource cpu=100m on Node worker01
  I0505 15:13:01.461718 21 predicates.go:374] Pod kube-apiserver-worker00 requesting resource cpu=250m on Node worker00
  I0505 15:13:01.461725 21 predicates.go:374] Pod kube-controller-manager-worker00 requesting resource cpu=200m on Node worker00
  I0505 15:13:01.461731 21 predicates.go:374] Pod kube-proxy-worker00 requesting resource cpu=200m on Node worker00
  I0505 15:13:01.461775 21 predicates.go:374] Pod kube-proxy-worker01 requesting resource cpu=200m on Node worker01
  I0505 15:13:01.461781 21 predicates.go:374] Pod kube-scheduler-worker00 requesting resource cpu=100m on Node worker00
  I0505 15:13:01.461787 21 predicates.go:374] Pod kubernetes-dashboard-api-dbd5d8954-zmzhd requesting resource cpu=100m on Node worker01
  I0505 15:13:01.461793 21 predicates.go:374] Pod kubernetes-dashboard-auth-585b4bc77c-tkqrs requesting resource cpu=100m on Node worker01
  I0505 15:13:01.461799 21 predicates.go:374] Pod kubernetes-dashboard-kong-58c7df5b9-ksplf requesting resource cpu=0m on Node worker01
  I0505 15:13:01.461805 21 predicates.go:374] Pod kubernetes-dashboard-metrics-scraper-6786f55f8b-27dq7 requesting resource cpu=100m on Node worker01
  I0505 15:13:01.461814 21 predicates.go:374] Pod kubernetes-dashboard-web-84b47c879-48tgm requesting resource cpu=100m on Node worker01
  I0505 15:13:01.461820 21 predicates.go:374] Pod calico-kube-controllers-54f5554fcd-n22s4 requesting resource cpu=0m on Node worker01
  I0505 15:13:01.461826 21 predicates.go:374] Pod calico-node-nzckb requesting resource cpu=250m on Node worker00
  I0505 15:13:01.461833 21 predicates.go:374] Pod calico-node-t86wj requesting resource cpu=250m on Node worker01
  I0505 15:13:01.461853 21 predicates.go:374] Pod calico-typha-9497885f9-hncqt requesting resource cpu=0m on Node worker01
  I0505 15:13:01.461860 21 predicates.go:374] Pod metallb-controller-6d48ffccb-k944q requesting resource cpu=100m on Node worker01
  I0505 15:13:01.461865 21 predicates.go:374] Pod metallb-speaker-ff7tv requesting resource cpu=100m on Node worker00
  I0505 15:13:01.461871 21 predicates.go:374] Pod metallb-speaker-rnkpg requesting resource cpu=100m on Node worker01
  I0505 15:13:01.461878 21 predicates.go:374] Pod sonobuoy requesting resource cpu=0m on Node worker00
  I0505 15:13:01.461883 21 predicates.go:374] Pod sonobuoy-e2e-job-9197e61553eb4047 requesting resource cpu=0m on Node worker00
  I0505 15:13:01.461890 21 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-85bf87e40a77455e-g4jkd requesting resource cpu=0m on Node worker01
  I0505 15:13:01.461896 21 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-85bf87e40a77455e-sbld9 requesting resource cpu=0m on Node worker00
  I0505 15:13:01.461902 21 predicates.go:374] Pod ceph-csi-cephfs-nodeplugin-h8bqd requesting resource cpu=0m on Node worker00
  I0505 15:13:01.461925 21 predicates.go:374] Pod ceph-csi-cephfs-nodeplugin-nq2zf requesting resource cpu=0m on Node worker01
  I0505 15:13:01.461931 21 predicates.go:374] Pod ceph-csi-cephfs-provisioner-68989c6cdd-gzwkq requesting resource cpu=0m on Node worker01
  I0505 15:13:01.461937 21 predicates.go:374] Pod ceph-csi-cephfs-provisioner-68989c6cdd-jqkfb requesting resource cpu=0m on Node worker01
  I0505 15:13:01.461943 21 predicates.go:374] Pod ceph-csi-cephfs-provisioner-68989c6cdd-k5mkr requesting resource cpu=0m on Node worker01
  I0505 15:13:01.461949 21 predicates.go:374] Pod ceph-csi-rbd-nodeplugin-smvcz requesting resource cpu=0m on Node worker00
  I0505 15:13:01.461955 21 predicates.go:374] Pod ceph-csi-rbd-nodeplugin-wqjcz requesting resource cpu=0m on Node worker01
  I0505 15:13:01.461961 21 predicates.go:374] Pod ceph-csi-rbd-provisioner-7c49d466f9-29f9z requesting resource cpu=0m on Node worker01
  I0505 15:13:01.461967 21 predicates.go:374] Pod ceph-csi-rbd-provisioner-7c49d466f9-7kxgr requesting resource cpu=0m on Node worker01
  I0505 15:13:01.461973 21 predicates.go:374] Pod ceph-csi-rbd-provisioner-7c49d466f9-vlfxl requesting resource cpu=0m on Node worker01
  I0505 15:13:01.461979 21 predicates.go:374] Pod ceph-mds-worker01-75d7657797-c5c2m requesting resource cpu=0m on Node worker01
  I0505 15:13:01.461984 21 predicates.go:374] Pod ceph-mgr-worker01-58c6d8747b-m689f requesting resource cpu=0m on Node worker01
  I0505 15:13:01.461990 21 predicates.go:374] Pod ceph-mon-worker00-7ffccc7445-7fbfm requesting resource cpu=0m on Node worker00
  I0505 15:13:01.461996 21 predicates.go:374] Pod ceph-osd-worker01-796758b4b5-25p7m requesting resource cpu=0m on Node worker01
  I0505 15:13:01.462001 21 predicates.go:374] Pod ceph-rgw-worker01-d6dd485ff-7lnjl requesting resource cpu=0m on Node worker01
  I0505 15:13:01.462007 21 predicates.go:374] Pod snapshot-controller-77c9f4c8d6-84v87 requesting resource cpu=0m on Node worker01
  I0505 15:13:01.462013 21 predicates.go:374] Pod snapshot-controller-77c9f4c8d6-j7qcs requesting resource cpu=0m on Node worker01
  I0505 15:13:01.462019 21 predicates.go:374] Pod snapshot-validation-webhook-865bb6896-dbmxh requesting resource cpu=0m on Node worker01
  STEP: Starting Pods to consume most of the cluster CPU. @ 05/05/24 15:13:01.462
  I0505 15:13:01.462064 21 predicates.go:384] Creating a pod which consumes cpu=1960m on Node worker00
  I0505 15:13:01.471435 21 predicates.go:384] Creating a pod which consumes cpu=1855m on Node worker01
  E0505 15:13:01.614073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:02.616353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 05/05/24 15:13:03.491
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c76d5598-850f-4456-8247-532c78eeec9b.17cca074c393ad80], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8163/filler-pod-c76d5598-850f-4456-8247-532c78eeec9b to worker00] @ 05/05/24 15:13:03.494
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c76d5598-850f-4456-8247-532c78eeec9b.17cca074e12b0c29], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/05/24 15:13:03.494
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c76d5598-850f-4456-8247-532c78eeec9b.17cca074e1bed35f], Reason = [Created], Message = [Created container filler-pod-c76d5598-850f-4456-8247-532c78eeec9b] @ 05/05/24 15:13:03.494
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c76d5598-850f-4456-8247-532c78eeec9b.17cca074e47c8600], Reason = [Started], Message = [Started container filler-pod-c76d5598-850f-4456-8247-532c78eeec9b] @ 05/05/24 15:13:03.494
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-eecc01ce-8043-4f90-ba3a-82897292ebcd.17cca074c4455599], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8163/filler-pod-eecc01ce-8043-4f90-ba3a-82897292ebcd to worker01] @ 05/05/24 15:13:03.494
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-eecc01ce-8043-4f90-ba3a-82897292ebcd.17cca074e2c795d5], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/05/24 15:13:03.494
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-eecc01ce-8043-4f90-ba3a-82897292ebcd.17cca074e385fdf3], Reason = [Created], Message = [Created container filler-pod-eecc01ce-8043-4f90-ba3a-82897292ebcd] @ 05/05/24 15:13:03.494
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-eecc01ce-8043-4f90-ba3a-82897292ebcd.17cca074e69c26f2], Reason = [Started], Message = [Started container filler-pod-eecc01ce-8043-4f90-ba3a-82897292ebcd] @ 05/05/24 15:13:03.494
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17cca0753bea43c9], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.] @ 05/05/24 15:13:03.502
  E0505 15:13:03.616526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node worker00 @ 05/05/24 15:13:04.502
  STEP: verifying the node doesn't have the label node @ 05/05/24 15:13:04.522
  STEP: removing the label node off the node worker01 @ 05/05/24 15:13:04.527
  STEP: verifying the node doesn't have the label node @ 05/05/24 15:13:04.54
  I0505 15:13:04.546610 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8163" for this suite. @ 05/05/24 15:13:04.552
• [3.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 05/05/24 15:13:04.562
  I0505 15:13:04.562647 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename resourcequota @ 05/05/24 15:13:04.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:13:04.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:13:04.581
  STEP: Counting existing ResourceQuota @ 05/05/24 15:13:04.584
  E0505 15:13:04.617385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:05.617436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:06.618192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:07.619223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:08.619957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/05/24 15:13:09.588
  STEP: Ensuring resource quota status is calculated @ 05/05/24 15:13:09.593
  E0505 15:13:09.621012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:10.621335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 05/05/24 15:13:11.595
  STEP: Ensuring resource quota status captures replication controller creation @ 05/05/24 15:13:11.603
  E0505 15:13:11.621939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:12.622267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 05/05/24 15:13:13.606
  STEP: Ensuring resource quota status released usage @ 05/05/24 15:13:13.612
  E0505 15:13:13.623236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:14.624212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:13:15.614855 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-931" for this suite. @ 05/05/24 15:13:15.617
• [11.058 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 05/05/24 15:13:15.62
  I0505 15:13:15.620449 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename cronjob @ 05/05/24 15:13:15.621
  E0505 15:13:15.624388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:13:15.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:13:15.632
  STEP: Creating a ReplaceConcurrent cronjob @ 05/05/24 15:13:15.634
  STEP: Ensuring a job is scheduled @ 05/05/24 15:13:15.638
  E0505 15:13:16.625330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:17.626055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:18.627057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:19.628560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:20.629125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:21.630457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:22.631229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:23.632513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:24.633636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:25.633982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:26.634153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:27.634392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:28.635128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:29.635125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:30.636217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:31.636765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:32.637818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:33.638944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:34.638936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:35.639432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:36.639638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:37.640049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:38.641541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:39.642885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:40.644037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:41.645219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:42.646156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:43.646191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:44.646379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:45.647110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:46.647710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:47.648326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:48.648446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:49.648539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:50.648533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:51.648643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:52.650499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:53.650762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:54.651170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:55.652049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:56.653173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:57.653906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:58.654794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:13:59.655103      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:00.657805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 05/05/24 15:14:01.644
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/05/24 15:14:01.646
  STEP: Ensuring the job is replaced with a new one @ 05/05/24 15:14:01.647
  E0505 15:14:01.658384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:02.661783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:03.664745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:04.665166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:05.665351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:06.666353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:07.667444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:08.668453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:09.669280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:10.669232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:11.669696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:12.670083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:13.670129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:14.670548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:15.671681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:16.672877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:17.674133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:18.673988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:19.674302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:20.674659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:21.675323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:22.676564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:23.678122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:24.679816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:25.680265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:26.680580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:27.683554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:28.684059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:29.684792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:30.685027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:31.686168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:32.686314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:33.690793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:34.691058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:35.691450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:36.692217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:37.692797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:38.693817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:39.695028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:40.695465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:41.696316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:42.697358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:43.698482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:44.698770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:45.700116      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:46.700490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:47.701491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:48.703158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:49.703792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:50.704278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:51.704947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:52.706397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:53.707417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:54.707718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:55.707996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:56.708200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:57.709522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:58.710280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:14:59.710457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:00.712016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 05/05/24 15:15:01.652
  I0505 15:15:01.660496 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9974" for this suite. @ 05/05/24 15:15:01.663
• [106.049 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 05/05/24 15:15:01.669
  I0505 15:15:01.669338 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename init-container @ 05/05/24 15:15:01.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:15:01.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:15:01.682
  STEP: creating the pod @ 05/05/24 15:15:01.683
  I0505 15:15:01.683968 21 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0505 15:15:01.712429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:02.713151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:03.714080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:04.717654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:15:05.483939 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9047" for this suite. @ 05/05/24 15:15:05.486
• [3.822 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 05/05/24 15:15:05.491
  I0505 15:15:05.491617 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 15:15:05.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:15:05.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:15:05.501
  STEP: Creating the pod @ 05/05/24 15:15:05.502
  E0505 15:15:05.718771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:06.719342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:07.719807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:15:08.028947 21 pod_client.go:141] Successfully updated pod "labelsupdateb7d0dd80-a71e-4d18-a770-4537d662f334"
  E0505 15:15:08.721053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:09.721338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:15:10.043162 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1856" for this suite. @ 05/05/24 15:15:10.047
• [4.563 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 05/05/24 15:15:10.055
  I0505 15:15:10.055046 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename aggregator @ 05/05/24 15:15:10.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:15:10.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:15:10.068
  I0505 15:15:10.070022 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Registering the sample API server. @ 05/05/24 15:15:10.07
  I0505 15:15:10.228901 21 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0505 15:15:10.239292 21 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0505 15:15:10.721864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:11.723013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:15:12.260852 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0505 15:15:12.724366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:13.725133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:15:14.266996 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0505 15:15:14.725237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:15.726517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:15:16.264428 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0505 15:15:16.726686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:17.727000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:15:18.262754 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0505 15:15:18.727120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:19.727311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:15:20.262285 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0505 15:15:20.727404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:21.728428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:15:22.262360 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0505 15:15:22.729009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:23.730122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:15:24.262548 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0505 15:15:24.730177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:25.730699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:15:26.267491 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0505 15:15:26.734319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:27.734357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:15:28.268241 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0505 15:15:28.734717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:29.735167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:15:30.263953 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0505 15:15:30.735219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:31.737276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:15:32.263606 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0505 15:15:32.736994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:33.737780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:15:34.266463 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 15, 15, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0505 15:15:34.738349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:35.738367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:15:36.405337 21 aggregator.go:749] Waited 120.04441ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 05/05/24 15:15:36.435
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 05/05/24 15:15:36.437
  STEP: List APIServices @ 05/05/24 15:15:36.439
  I0505 15:15:36.442945 21 aggregator.go:550] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 05/05/24 15:15:36.442
  I0505 15:15:36.448466 21 aggregator.go:575] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 05/05/24 15:15:36.448
  I0505 15:15:36.454135 21 aggregator.go:601] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.May, 5, 15, 15, 36, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 05/05/24 15:15:36.454
  I0505 15:15:36.456857 21 aggregator.go:619] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-05-05 15:15:36 +0000 UTC Passed all checks passed}
  I0505 15:15:36.456961 21 aggregator.go:615] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0505 15:15:36.457009 21 aggregator.go:625] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 05/05/24 15:15:36.457
  I0505 15:15:36.462483 21 aggregator.go:641] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1978202878" @ 05/05/24 15:15:36.462
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 05/05/24 15:15:36.469
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 05/05/24 15:15:36.473
  STEP: Patch APIService Status @ 05/05/24 15:15:36.475
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 05/05/24 15:15:36.478
  I0505 15:15:36.479961 21 aggregator.go:719] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-05-05 15:15:36 +0000 UTC Passed all checks passed}
  I0505 15:15:36.479987 21 aggregator.go:719] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0505 15:15:36.479995 21 aggregator.go:715] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0505 15:15:36.480004 21 aggregator.go:725] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 05/05/24 15:15:36.48
  STEP: Confirm that the generated APIService has been deleted @ 05/05/24 15:15:36.484
  I0505 15:15:36.484460 21 aggregator.go:786] Requesting list of APIServices to confirm quantity
  I0505 15:15:36.487702 21 aggregator.go:796] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0505 15:15:36.487732 21 aggregator.go:738] APIService v1alpha1.wardle.example.com has been deleted.
  I0505 15:15:36.535006 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-7005" for this suite. @ 05/05/24 15:15:36.538
• [26.488 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 05/05/24 15:15:36.542
  I0505 15:15:36.542348 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 15:15:36.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:15:36.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:15:36.553
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 15:15:36.555
  E0505 15:15:36.738449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:37.738685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:38.739251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:39.739888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 15:15:40.567
  I0505 15:15:40.571387 21 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-d1dfb2c9-f618-4a3b-a7e4-6722cfce3823 container client-container: <nil>
  STEP: delete the pod @ 05/05/24 15:15:40.575
  I0505 15:15:40.596249 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6566" for this suite. @ 05/05/24 15:15:40.598
• [4.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 05/05/24 15:15:40.601
  I0505 15:15:40.601248 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename subpath @ 05/05/24 15:15:40.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:15:40.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:15:40.611
  STEP: Setting up data @ 05/05/24 15:15:40.613
  STEP: Creating pod pod-subpath-test-secret-vfxc @ 05/05/24 15:15:40.616
  STEP: Creating a pod to test atomic-volume-subpath @ 05/05/24 15:15:40.616
  E0505 15:15:40.740430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:41.740688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:42.741378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:43.742518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:44.743530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:45.743732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:46.744549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:47.744701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:48.746072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:49.747519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:50.747933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:51.753146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:52.753434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:53.753939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:54.754222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:55.756774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:56.760259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:57.761178      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:58.761746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:15:59.762715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:00.764112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:01.764409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:02.764467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:03.764870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 15:16:04.681
  I0505 15:16:04.683329 21 output.go:196] Trying to get logs from node worker00 pod pod-subpath-test-secret-vfxc container test-container-subpath-secret-vfxc: <nil>
  STEP: delete the pod @ 05/05/24 15:16:04.69
  STEP: Deleting pod pod-subpath-test-secret-vfxc @ 05/05/24 15:16:04.711
  I0505 15:16:04.711991 21 delete.go:62] Deleting pod "pod-subpath-test-secret-vfxc" in namespace "subpath-7128"
  I0505 15:16:04.713293 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7128" for this suite. @ 05/05/24 15:16:04.715
• [24.117 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 05/05/24 15:16:04.719
  I0505 15:16:04.719132 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename conformance-tests @ 05/05/24 15:16:04.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:16:04.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:16:04.727
  STEP: Getting node addresses @ 05/05/24 15:16:04.729
  I0505 15:16:04.729249 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0505 15:16:04.731823 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-9713" for this suite. @ 05/05/24 15:16:04.733
• [0.018 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 05/05/24 15:16:04.737
  I0505 15:16:04.737393 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 15:16:04.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:16:04.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:16:04.747
  STEP: Creating configMap with name projected-configmap-test-volume-map-76c7b3ec-0f4b-4112-804a-81d68b9a44ed @ 05/05/24 15:16:04.749
  STEP: Creating a pod to test consume configMaps @ 05/05/24 15:16:04.751
  E0505 15:16:04.765528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:05.765739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 15:16:06.759
  I0505 15:16:06.760517 21 output.go:196] Trying to get logs from node worker00 pod pod-projected-configmaps-9e0593e2-34b1-43f6-b696-dafb0f0e71ca container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 15:16:06.762
  E0505 15:16:06.766769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:16:06.768282 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5116" for this suite. @ 05/05/24 15:16:06.769
• [2.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 05/05/24 15:16:06.772
  I0505 15:16:06.772530 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename runtimeclass @ 05/05/24 15:16:06.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:16:06.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:16:06.782
  I0505 15:16:06.788301 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5486" for this suite. @ 05/05/24 15:16:06.79
• [0.020 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 05/05/24 15:16:06.792
  I0505 15:16:06.792627 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 15:16:06.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:16:06.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:16:06.803
  STEP: Creating a pod to test downward api env vars @ 05/05/24 15:16:06.805
  E0505 15:16:07.767367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:08.767791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 15:16:08.816
  I0505 15:16:08.818911 21 output.go:196] Trying to get logs from node worker00 pod downward-api-221e2f81-fbf6-4b30-a9fc-7e1a5e4e85d3 container dapi-container: <nil>
  STEP: delete the pod @ 05/05/24 15:16:08.822
  I0505 15:16:08.829596 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5690" for this suite. @ 05/05/24 15:16:08.831
• [2.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 05/05/24 15:16:08.835
  I0505 15:16:08.835287 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename svcaccounts @ 05/05/24 15:16:08.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:16:08.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:16:08.844
  STEP: Creating ServiceAccount "e2e-sa-qbkx4"  @ 05/05/24 15:16:08.846
  I0505 15:16:08.848541 21 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-qbkx4"  @ 05/05/24 15:16:08.848
  I0505 15:16:08.851968 21 service_accounts.go:839] AutomountServiceAccountToken: true
  I0505 15:16:08.852085 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4012" for this suite. @ 05/05/24 15:16:08.853
• [0.021 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 05/05/24 15:16:08.856
  I0505 15:16:08.856202 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 15:16:08.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:16:08.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:16:08.864
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-a69cb9ed-86f7-4914-be77-f42b1bda4c90 @ 05/05/24 15:16:08.866
  STEP: Creating the pod @ 05/05/24 15:16:08.869
  E0505 15:16:09.768295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:10.771053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-a69cb9ed-86f7-4914-be77-f42b1bda4c90 @ 05/05/24 15:16:10.889
  STEP: waiting to observe update in volume @ 05/05/24 15:16:10.901
  E0505 15:16:11.773125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:12.774078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:13.774696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:14.776330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:16:14.920572 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7196" for this suite. @ 05/05/24 15:16:14.927
• [6.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3656
  STEP: Creating a kubernetes client @ 05/05/24 15:16:14.943
  I0505 15:16:14.943524 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename services @ 05/05/24 15:16:14.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:16:14.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:16:14.955
  STEP: creating service multiprotocol-test in namespace services-6791 @ 05/05/24 15:16:14.956
  STEP: creating pod pod1 in namespace services-6791 @ 05/05/24 15:16:14.963
  STEP: Creating pod pod1 in namespace services-6791 @ 05/05/24 15:16:14.963
  E0505 15:16:15.777744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:16.778094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-6791 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 05/05/24 15:16:16.984
  I0505 15:16:16.994317 21 service.go:4351] successfully validated that service multiprotocol-test in namespace services-6791 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 05/05/24 15:16:16.994
  I0505 15:16:16.994386 21 resource.go:361] Creating new exec pod
  E0505 15:16:17.778356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:18.779019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:16:19.015730 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-6791 exec execpodcw474 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.183 80'
  I0505 15:16:19.097458 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.183 80\nConnection to 10.32.0.183 80 port [tcp/http] succeeded!\n"
  I0505 15:16:19.097509 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0505 15:16:19.097557 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-6791 exec execpodcw474 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.32.0.183 80'
  E0505 15:16:19.780169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:20.784018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:21.784407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:22.786539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:16:23.178661 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.32.0.183 80\nConnection to 10.32.0.183 80 port [udp/*] succeeded!\n"
  I0505 15:16:23.178705 21 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 05/05/24 15:16:23.178
  I0505 15:16:23.188471 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-6791 exec execpodcw474 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.183 80'
  I0505 15:16:23.263458 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.183 80\nConnection to 10.32.0.183 80 port [tcp/http] succeeded!\n"
  I0505 15:16:23.263488 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0505 15:16:23.263548 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-6791 exec execpodcw474 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.32.0.183 80'
  E0505 15:16:23.786645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:24.786828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:25.787969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:26.788673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:16:27.336423 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.32.0.183 80\nConnection to 10.32.0.183 80 port [udp/*] succeeded!\n"
  I0505 15:16:27.336497 21 builder.go:147] stdout: ""
  I0505 15:16:27.336579 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-6791 exec execpodcw474 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.32.0.183 80'
  E0505 15:16:27.788984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:28.789289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:29.789962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:30.790706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:16:31.411756 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.32.0.183 80\nConnection to 10.32.0.183 80 port [udp/*] succeeded!\n"
  I0505 15:16:31.411816 21 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 05/05/24 15:16:31.411
  I0505 15:16:31.427867 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-6791 exec execpodcw474 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.32.0.183 80'
  E0505 15:16:31.792191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:32.792358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:33.798044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:34.797947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:16:35.517446 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.32.0.183 80\nConnection to 10.32.0.183 80 port [udp/*] succeeded!\n"
  I0505 15:16:35.517520 21 builder.go:147] stdout: "pod1"
  I0505 15:16:35.517656 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-6791 exec execpodcw474 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.183 80'
  E0505 15:16:35.798278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:36.799206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:16:37.596190 21 builder.go:135] rc: 1
  I0505 15:16:37.596291 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-6791 exec execpodcw474 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.183 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.32.0.183 80
  + echo hostName
  nc: connect to 10.32.0.183 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0505 15:16:37.596547 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-6791 exec execpodcw474 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.183 80'
  E0505 15:16:37.801099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:38.802234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:16:39.671548 21 builder.go:135] rc: 1
  I0505 15:16:39.671607 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-6791 exec execpodcw474 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.183 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.32.0.183 80
  nc: connect to 10.32.0.183 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0505 15:16:39.671711 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-6791 exec execpodcw474 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.183 80'
  E0505 15:16:39.802640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:40.803411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:16:41.744247 21 builder.go:135] rc: 1
  I0505 15:16:41.744297 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-6791 exec execpodcw474 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.183 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.32.0.183 80
  nc: connect to 10.32.0.183 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0505 15:16:41.744432 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6791" for this suite. @ 05/05/24 15:16:41.747
• [26.817 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 05/05/24 15:16:41.76
  I0505 15:16:41.761118 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename configmap @ 05/05/24 15:16:41.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:16:41.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:16:41.773
  STEP: Creating configMap with name configmap-test-volume-8fda31ee-fc27-412d-b96c-3e0e1762cbd8 @ 05/05/24 15:16:41.775
  STEP: Creating a pod to test consume configMaps @ 05/05/24 15:16:41.778
  E0505 15:16:41.804136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:42.805114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:43.806313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:44.807483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 15:16:45.798
  I0505 15:16:45.803823 21 output.go:196] Trying to get logs from node worker00 pod pod-configmaps-2bd360fb-7da4-4381-88ca-4011f7621c9d container configmap-volume-test: <nil>
  E0505 15:16:45.808074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 05/05/24 15:16:45.81
  I0505 15:16:45.832749 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9548" for this suite. @ 05/05/24 15:16:45.834
• [4.077 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2218
  STEP: Creating a kubernetes client @ 05/05/24 15:16:45.837
  I0505 15:16:45.838052 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename services @ 05/05/24 15:16:45.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:16:45.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:16:45.846
  STEP: creating service in namespace services-3847 @ 05/05/24 15:16:45.847
  STEP: creating service affinity-nodeport in namespace services-3847 @ 05/05/24 15:16:45.847
  STEP: creating replication controller affinity-nodeport in namespace services-3847 @ 05/05/24 15:16:45.853
  I0505 15:16:45.857742      21 runners.go:198] Created replication controller with name: affinity-nodeport, namespace: services-3847, replica count: 3
  E0505 15:16:46.808940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:47.810635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:48.811154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:16:48.933676      21 runners.go:198] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0505 15:16:48.938685 21 resource.go:361] Creating new exec pod
  E0505 15:16:49.811897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:50.813742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:51.815302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:16:51.957884 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-3847 exec execpod-affinityrlnhm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0505 15:16:52.043214 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I0505 15:16:52.043268 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0505 15:16:52.043358 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-3847 exec execpod-affinityrlnhm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.210 80'
  I0505 15:16:52.111518 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.210 80\nConnection to 10.32.0.210 80 port [tcp/http] succeeded!\n"
  I0505 15:16:52.111551 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0505 15:16:52.111658 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-3847 exec execpod-affinityrlnhm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.100 30865'
  I0505 15:16:52.175995 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.100 30865\nConnection to 192.168.58.100 30865 port [tcp/csync2] succeeded!\n"
  I0505 15:16:52.176029 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0505 15:16:52.176116 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-3847 exec execpod-affinityrlnhm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.101 30865'
  I0505 15:16:52.252396 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.101 30865\nConnection to 192.168.58.101 30865 port [tcp/csync2] succeeded!\n"
  I0505 15:16:52.252475 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0505 15:16:52.252583 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=services-3847 exec execpod-affinityrlnhm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.58.100:30865/ ; done'
  I0505 15:16:52.377298 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30865/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30865/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30865/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30865/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30865/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30865/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30865/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30865/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30865/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30865/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30865/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30865/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30865/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30865/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30865/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30865/\n"
  I0505 15:16:52.377331 21 builder.go:147] stdout: "\naffinity-nodeport-bs97w\naffinity-nodeport-bs97w\naffinity-nodeport-bs97w\naffinity-nodeport-bs97w\naffinity-nodeport-bs97w\naffinity-nodeport-bs97w\naffinity-nodeport-bs97w\naffinity-nodeport-bs97w\naffinity-nodeport-bs97w\naffinity-nodeport-bs97w\naffinity-nodeport-bs97w\naffinity-nodeport-bs97w\naffinity-nodeport-bs97w\naffinity-nodeport-bs97w\naffinity-nodeport-bs97w\naffinity-nodeport-bs97w"
  I0505 15:16:52.377342 21 service.go:242] Received response from host: affinity-nodeport-bs97w
  I0505 15:16:52.377349 21 service.go:242] Received response from host: affinity-nodeport-bs97w
  I0505 15:16:52.377355 21 service.go:242] Received response from host: affinity-nodeport-bs97w
  I0505 15:16:52.377361 21 service.go:242] Received response from host: affinity-nodeport-bs97w
  I0505 15:16:52.377366 21 service.go:242] Received response from host: affinity-nodeport-bs97w
  I0505 15:16:52.377372 21 service.go:242] Received response from host: affinity-nodeport-bs97w
  I0505 15:16:52.377377 21 service.go:242] Received response from host: affinity-nodeport-bs97w
  I0505 15:16:52.377384 21 service.go:242] Received response from host: affinity-nodeport-bs97w
  I0505 15:16:52.377390 21 service.go:242] Received response from host: affinity-nodeport-bs97w
  I0505 15:16:52.377395 21 service.go:242] Received response from host: affinity-nodeport-bs97w
  I0505 15:16:52.377403 21 service.go:242] Received response from host: affinity-nodeport-bs97w
  I0505 15:16:52.377492 21 service.go:242] Received response from host: affinity-nodeport-bs97w
  I0505 15:16:52.377499 21 service.go:242] Received response from host: affinity-nodeport-bs97w
  I0505 15:16:52.377505 21 service.go:242] Received response from host: affinity-nodeport-bs97w
  I0505 15:16:52.377510 21 service.go:242] Received response from host: affinity-nodeport-bs97w
  I0505 15:16:52.377516 21 service.go:242] Received response from host: affinity-nodeport-bs97w
  I0505 15:16:52.377767 21 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-3847, will wait for the garbage collector to delete the pods @ 05/05/24 15:16:52.385
  I0505 15:16:52.442301 21 resources.go:139] Deleting ReplicationController affinity-nodeport took: 4.865801ms
  I0505 15:16:52.543445 21 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 101.141575ms
  E0505 15:16:52.816366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:53.816519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:54.817542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:16:55.762232 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3847" for this suite. @ 05/05/24 15:16:55.764
• [9.929 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 05/05/24 15:16:55.766
  I0505 15:16:55.766474 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename pod-network-test @ 05/05/24 15:16:55.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:16:55.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:16:55.775
  STEP: Performing setup for networking test in namespace pod-network-test-844 @ 05/05/24 15:16:55.777
  STEP: creating a selector @ 05/05/24 15:16:55.777
  STEP: Creating the service pods in kubernetes @ 05/05/24 15:16:55.777
  I0505 15:16:55.777134 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0505 15:16:55.818029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:56.818714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:57.819073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:58.819196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:16:59.821188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:00.821923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:01.823775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:02.824540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:03.824633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:04.824580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:05.826212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:06.831805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/05/24 15:17:07.831
  E0505 15:17:07.832169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:08.832842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:09.837412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:17:09.861699 21 utils.go:779] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0505 15:17:09.861732 21 utils.go:472] Going to poll 10.200.131.161 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0505 15:17:09.862988 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.200.131.161 8081 | grep -v '^\s*$'] Namespace:pod-network-test-844 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 15:17:09.863015 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 15:17:09.863491 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 15:17:09.863529 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-844/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.200.131.161+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0505 15:17:10.837941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:17:10.896637 21 utils.go:489] Found all 1 expected endpoints: [netserver-0]
  I0505 15:17:10.896672 21 utils.go:472] Going to poll 10.200.5.21 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0505 15:17:10.898508 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.200.5.21 8081 | grep -v '^\s*$'] Namespace:pod-network-test-844 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 15:17:10.898528 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 15:17:10.899300 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 15:17:10.899344 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-844/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.200.5.21+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0505 15:17:11.838688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:17:11.935708 21 utils.go:489] Found all 1 expected endpoints: [netserver-1]
  I0505 15:17:11.935826 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-844" for this suite. @ 05/05/24 15:17:11.939
• [16.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 05/05/24 15:17:11.955
  I0505 15:17:11.955587 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 15:17:11.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:17:11.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:17:11.972
  STEP: Creating the pod @ 05/05/24 15:17:11.974
  E0505 15:17:12.847288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:13.850420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:17:14.518995 21 pod_client.go:141] Successfully updated pod "annotationupdated6a34bee-6464-4af1-adf7-3b86dca421e6"
  E0505 15:17:14.850476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:15.851346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:17:16.537220 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7911" for this suite. @ 05/05/24 15:17:16.541
• [4.604 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1793
  STEP: Creating a kubernetes client @ 05/05/24 15:17:16.558
  I0505 15:17:16.558953 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 15:17:16.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:17:16.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:17:16.573
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/05/24 15:17:16.575
  I0505 15:17:16.575172 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-7882 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0505 15:17:16.615970 21 builder.go:146] stderr: ""
  I0505 15:17:16.616029 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 05/05/24 15:17:16.616
  E0505 15:17:16.852084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:17.852656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:18.852986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:19.853967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:20.854489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/05/24 15:17:21.667
  I0505 15:17:21.667930 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-7882 get pod e2e-test-httpd-pod -o json'
  I0505 15:17:21.710198 21 builder.go:146] stderr: ""
  I0505 15:17:21.710362 21 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"d95599137e742a4208d9e57734b3c0c3a8a44b221c4f3f04df7e092cb546e436\",\n            \"cni.projectcalico.org/podIP\": \"10.200.131.145/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.200.131.145/32\"\n        },\n        \"creationTimestamp\": \"2024-05-05T15:17:16Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-7882\",\n        \"resourceVersion\": \"45213\",\n        \"uid\": \"a9319c01-5526-4a6b-a0b7-28655d7e5512\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-mvbzr\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"worker00\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-mvbzr\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-05T15:17:17Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-05T15:17:16Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-05T15:17:17Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-05T15:17:17Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-05T15:17:16Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://ef05a9b5018fdd66d2e65d6cd365bf9d9df7e6983916033656508c67003cef90\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-05-05T15:17:17Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.58.100\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.58.100\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.200.131.145\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.200.131.145\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-05-05T15:17:16Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 05/05/24 15:17:21.71
  I0505 15:17:21.710456 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-7882 replace -f -'
  I0505 15:17:21.793595 21 builder.go:146] stderr: ""
  I0505 15:17:21.793624 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 05/05/24 15:17:21.793
  I0505 15:17:21.796676 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-7882 delete pods e2e-test-httpd-pod'
  E0505 15:17:21.855504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:22.855246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:23.856075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:17:23.949923 21 builder.go:146] stderr: ""
  I0505 15:17:23.949950 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0505 15:17:23.950014 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7882" for this suite. @ 05/05/24 15:17:23.952
• [7.396 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 05/05/24 15:17:23.955
  I0505 15:17:23.955047 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename secrets @ 05/05/24 15:17:23.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:17:23.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:17:23.965
  STEP: Creating secret with name secret-test-88c5c5f8-9fee-46f4-a17c-aad9a2eada0a @ 05/05/24 15:17:23.967
  STEP: Creating a pod to test consume secrets @ 05/05/24 15:17:23.969
  E0505 15:17:24.856959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:25.859515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:26.860306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:27.860547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 15:17:27.981
  I0505 15:17:27.983096 21 output.go:196] Trying to get logs from node worker00 pod pod-secrets-0a1d81f3-4da8-45a2-b43e-abab2ba5eb9d container secret-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 15:17:27.987
  I0505 15:17:28.005630 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4401" for this suite. @ 05/05/24 15:17:28.007
• [4.054 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:779
  STEP: Creating a kubernetes client @ 05/05/24 15:17:28.009
  I0505 15:17:28.010044 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename services @ 05/05/24 15:17:28.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:17:28.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:17:28.027
  I0505 15:17:28.053865 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2159" for this suite. @ 05/05/24 15:17:28.056
• [0.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 05/05/24 15:17:28.059
  I0505 15:17:28.059921 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/05/24 15:17:28.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:17:28.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:17:28.068
  STEP: Creating 50 configmaps @ 05/05/24 15:17:28.07
  STEP: Creating RC which spawns configmap-volume pods @ 05/05/24 15:17:28.313
  I0505 15:17:28.439036 21 resource.go:87] Pod name wrapped-volume-race-61c4324a-7e50-456e-b69e-3878cd4ad07c: Found 3 pods out of 5
  E0505 15:17:28.861081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:29.863526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:30.863769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:31.864491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:32.864850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:17:33.451008 21 resource.go:87] Pod name wrapped-volume-race-61c4324a-7e50-456e-b69e-3878cd4ad07c: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/05/24 15:17:33.451
  STEP: Creating RC which spawns configmap-volume pods @ 05/05/24 15:17:33.47
  I0505 15:17:33.489234 21 resource.go:87] Pod name wrapped-volume-race-9a12577a-9d02-4820-8fe3-dd30aa40935a: Found 0 pods out of 5
  E0505 15:17:33.864859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:34.865261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:35.866603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:36.867295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:37.867479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:17:38.501225 21 resource.go:87] Pod name wrapped-volume-race-9a12577a-9d02-4820-8fe3-dd30aa40935a: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/05/24 15:17:38.501
  STEP: Creating RC which spawns configmap-volume pods @ 05/05/24 15:17:38.513
  I0505 15:17:38.530047 21 resource.go:87] Pod name wrapped-volume-race-f56f2cf4-101b-457f-8101-5e81b37d2651: Found 0 pods out of 5
  E0505 15:17:38.868513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:39.869280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:40.870716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:41.872092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:42.872132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:17:43.541403 21 resource.go:87] Pod name wrapped-volume-race-f56f2cf4-101b-457f-8101-5e81b37d2651: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/05/24 15:17:43.541
  STEP: deleting ReplicationController wrapped-volume-race-f56f2cf4-101b-457f-8101-5e81b37d2651 in namespace emptydir-wrapper-3132, will wait for the garbage collector to delete the pods @ 05/05/24 15:17:43.555
  I0505 15:17:43.634366 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-f56f2cf4-101b-457f-8101-5e81b37d2651 took: 17.109552ms
  I0505 15:17:43.735869 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-f56f2cf4-101b-457f-8101-5e81b37d2651 pods took: 101.504632ms
  E0505 15:17:43.873249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:44.873230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-9a12577a-9d02-4820-8fe3-dd30aa40935a in namespace emptydir-wrapper-3132, will wait for the garbage collector to delete the pods @ 05/05/24 15:17:45.036
  I0505 15:17:45.092424 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-9a12577a-9d02-4820-8fe3-dd30aa40935a took: 2.235065ms
  I0505 15:17:45.192700 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-9a12577a-9d02-4820-8fe3-dd30aa40935a pods took: 100.268447ms
  E0505 15:17:45.876986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-61c4324a-7e50-456e-b69e-3878cd4ad07c in namespace emptydir-wrapper-3132, will wait for the garbage collector to delete the pods @ 05/05/24 15:17:45.993
  I0505 15:17:46.051398 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-61c4324a-7e50-456e-b69e-3878cd4ad07c took: 4.842105ms
  I0505 15:17:46.151755 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-61c4324a-7e50-456e-b69e-3878cd4ad07c pods took: 100.35867ms
  E0505 15:17:46.877571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 05/05/24 15:17:47.053
  I0505 15:17:47.158979 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-3132" for this suite. @ 05/05/24 15:17:47.16
• [19.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:397
  STEP: Creating a kubernetes client @ 05/05/24 15:17:47.163
  I0505 15:17:47.163968 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 15:17:47.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:17:47.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:17:47.175
  STEP: creating all guestbook components @ 05/05/24 15:17:47.177
  I0505 15:17:47.177132 21 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0505 15:17:47.177342 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3410 create -f -'
  I0505 15:17:47.258911 21 builder.go:146] stderr: ""
  I0505 15:17:47.259221 21 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0505 15:17:47.259259 21 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0505 15:17:47.259322 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3410 create -f -'
  I0505 15:17:47.347749 21 builder.go:146] stderr: ""
  I0505 15:17:47.347778 21 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0505 15:17:47.347807 21 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0505 15:17:47.347873 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3410 create -f -'
  I0505 15:17:47.424933 21 builder.go:146] stderr: ""
  I0505 15:17:47.424965 21 builder.go:147] stdout: "service/frontend created\n"
  I0505 15:17:47.425045 21 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0505 15:17:47.425163 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3410 create -f -'
  I0505 15:17:47.497546 21 builder.go:146] stderr: ""
  I0505 15:17:47.497579 21 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0505 15:17:47.497625 21 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0505 15:17:47.497785 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3410 create -f -'
  I0505 15:17:47.583092 21 builder.go:146] stderr: ""
  I0505 15:17:47.583139 21 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0505 15:17:47.585198 21 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0505 15:17:47.585319 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3410 create -f -'
  I0505 15:17:47.660553 21 builder.go:146] stderr: ""
  I0505 15:17:47.660596 21 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 05/05/24 15:17:47.66
  I0505 15:17:47.660626 21 kubectl.go:2271] Waiting for all frontend pods to be Running.
  E0505 15:17:47.877726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:48.878700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:49.879075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:50.879830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:51.880909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:17:52.711761 21 kubectl.go:2275] Waiting for frontend to serve content.
  I0505 15:17:52.724831 21 kubectl.go:2280] Trying to add a new entry to the guestbook.
  I0505 15:17:52.732314 21 kubectl.go:2285] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 05/05/24 15:17:52.737
  I0505 15:17:52.737946 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3410 delete --grace-period=0 --force -f -'
  I0505 15:17:52.792726 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0505 15:17:52.792754 21 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 05/05/24 15:17:52.792
  I0505 15:17:52.792820 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3410 delete --grace-period=0 --force -f -'
  I0505 15:17:52.842939 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0505 15:17:52.842980 21 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/05/24 15:17:52.843
  I0505 15:17:52.843085 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3410 delete --grace-period=0 --force -f -'
  E0505 15:17:52.881582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:17:52.888129 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0505 15:17:52.888163 21 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/05/24 15:17:52.888
  I0505 15:17:52.888270 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3410 delete --grace-period=0 --force -f -'
  I0505 15:17:52.926833 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0505 15:17:52.926903 21 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/05/24 15:17:52.926
  I0505 15:17:52.927066 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3410 delete --grace-period=0 --force -f -'
  I0505 15:17:53.024005 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0505 15:17:53.024124 21 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/05/24 15:17:53.024
  I0505 15:17:53.024226 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1193824027 --namespace=kubectl-3410 delete --grace-period=0 --force -f -'
  I0505 15:17:53.118032 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0505 15:17:53.118100 21 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0505 15:17:53.118808 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3410" for this suite. @ 05/05/24 15:17:53.128
• [5.998 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:697
  STEP: Creating a kubernetes client @ 05/05/24 15:17:53.164
  I0505 15:17:53.164790 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename job @ 05/05/24 15:17:53.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:17:53.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:17:53.188
  STEP: Creating a job @ 05/05/24 15:17:53.2
  STEP: Ensuring active pods == parallelism @ 05/05/24 15:17:53.208
  E0505 15:17:53.882734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:54.883691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 05/05/24 15:17:55.211
  I0505 15:17:55.733498 21 pod_client.go:141] Successfully updated pod "adopt-release-4mbkd"
  STEP: Checking that the Job readopts the Pod @ 05/05/24 15:17:55.733
  E0505 15:17:55.883722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:56.885086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 05/05/24 15:17:57.741
  E0505 15:17:57.885239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:17:58.247170 21 pod_client.go:141] Successfully updated pod "adopt-release-4mbkd"
  STEP: Checking that the Job releases the Pod @ 05/05/24 15:17:58.247
  E0505 15:17:58.886505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:17:59.886457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:18:00.256185 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7567" for this suite. @ 05/05/24 15:18:00.26
• [7.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 05/05/24 15:18:00.268
  I0505 15:18:00.268351 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 15:18:00.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:18:00.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:18:00.28
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/05/24 15:18:00.281
  E0505 15:18:00.886756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:01.888314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 15:18:02.292
  I0505 15:18:02.297146 21 output.go:196] Trying to get logs from node worker00 pod pod-cd0c6e55-9222-4534-a649-136a7d08d1b6 container test-container: <nil>
  STEP: delete the pod @ 05/05/24 15:18:02.3
  I0505 15:18:02.309165 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1039" for this suite. @ 05/05/24 15:18:02.31
• [2.045 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 05/05/24 15:18:02.313
  I0505 15:18:02.313917 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 15:18:02.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:18:02.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:18:02.327
  STEP: Creating the pod @ 05/05/24 15:18:02.328
  E0505 15:18:02.889538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:03.889614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:18:04.851433 21 pod_client.go:141] Successfully updated pod "labelsupdate38baa712-002e-475c-8eab-a9f981b094ad"
  E0505 15:18:04.891440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:05.892544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:18:06.866733 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-320" for this suite. @ 05/05/24 15:18:06.869
• [4.569 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 05/05/24 15:18:06.884
  I0505 15:18:06.884146 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/05/24 15:18:06.885
  E0505 15:18:06.893583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:18:06.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:18:06.901
  I0505 15:18:06.903121 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 15:18:07.432274 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6939" for this suite. @ 05/05/24 15:18:07.434
• [0.556 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 05/05/24 15:18:07.439
  I0505 15:18:07.439685 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/05/24 15:18:07.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:18:07.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:18:07.451
  STEP: create the container to handle the HTTPGet hook request. @ 05/05/24 15:18:07.454
  E0505 15:18:07.893822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:08.894142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/05/24 15:18:09.47
  E0505 15:18:09.894167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:10.894532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 05/05/24 15:18:11.501
  STEP: delete the pod with lifecycle hook @ 05/05/24 15:18:11.507
  E0505 15:18:11.894624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:12.895607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:18:13.530312 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6847" for this suite. @ 05/05/24 15:18:13.534
• [6.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 05/05/24 15:18:13.542
  I0505 15:18:13.542243 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 15:18:13.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:18:13.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:18:13.553
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 15:18:13.555
  E0505 15:18:13.899503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:14.899629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:15.903587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:16.904019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 15:18:17.573
  I0505 15:18:17.576384 21 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-6c707d2e-e71b-4229-ab98-8f692b83aeba container client-container: <nil>
  STEP: delete the pod @ 05/05/24 15:18:17.58
  I0505 15:18:17.589198 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4404" for this suite. @ 05/05/24 15:18:17.59
• [4.051 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 05/05/24 15:18:17.593
  I0505 15:18:17.594101 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename var-expansion @ 05/05/24 15:18:17.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:18:17.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:18:17.603
  STEP: Creating a pod to test env composition @ 05/05/24 15:18:17.605
  E0505 15:18:17.905835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:18.906133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 15:18:19.613
  I0505 15:18:19.615763 21 output.go:196] Trying to get logs from node worker00 pod var-expansion-0f637a7a-93cb-4282-a741-09435114cffb container dapi-container: <nil>
  STEP: delete the pod @ 05/05/24 15:18:19.619
  I0505 15:18:19.629597 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8365" for this suite. @ 05/05/24 15:18:19.631
• [2.041 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 05/05/24 15:18:19.634
  I0505 15:18:19.634541 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename pod-network-test @ 05/05/24 15:18:19.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:18:19.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:18:19.646
  STEP: Performing setup for networking test in namespace pod-network-test-2123 @ 05/05/24 15:18:19.648
  STEP: creating a selector @ 05/05/24 15:18:19.648
  STEP: Creating the service pods in kubernetes @ 05/05/24 15:18:19.648
  I0505 15:18:19.648133 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0505 15:18:19.906856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:20.907823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:21.908476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:22.908795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:23.909515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:24.909468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:25.910757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:26.910915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:27.911071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:28.911276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:29.912905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:30.913298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:31.917175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:32.917108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:33.918240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:34.919114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:35.919241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:36.919572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:37.920755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:38.921914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:39.922686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:40.923117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/05/24 15:18:41.729
  E0505 15:18:41.924155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:42.924660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:18:43.758221 21 utils.go:779] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0505 15:18:43.758300 21 networking.go:42] Breadth first check of 10.200.131.166 on host 192.168.58.100...
  I0505 15:18:43.763064 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.131.172:9080/dial?request=hostname&protocol=http&host=10.200.131.166&port=8083&tries=1'] Namespace:pod-network-test-2123 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 15:18:43.763152 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 15:18:43.764142 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 15:18:43.764253 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-2123/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.131.172%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.200.131.166%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0505 15:18:43.801975 21 utils.go:331] Waiting for responses: map[]
  I0505 15:18:43.801999 21 utils.go:335] reached 10.200.131.166 after 0/1 tries
  I0505 15:18:43.802008 21 networking.go:42] Breadth first check of 10.200.5.18 on host 192.168.58.101...
  I0505 15:18:43.803616 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.131.172:9080/dial?request=hostname&protocol=http&host=10.200.5.18&port=8083&tries=1'] Namespace:pod-network-test-2123 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0505 15:18:43.803638 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  I0505 15:18:43.803873 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0505 15:18:43.803917 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-2123/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.131.172%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.200.5.18%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0505 15:18:43.836166 21 utils.go:331] Waiting for responses: map[]
  I0505 15:18:43.836251 21 utils.go:335] reached 10.200.5.18 after 0/1 tries
  I0505 15:18:43.836291 21 networking.go:53] Going to retry 0 out of 2 pods....
  I0505 15:18:43.836461 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2123" for this suite. @ 05/05/24 15:18:43.838
• [24.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 05/05/24 15:18:43.842
  I0505 15:18:43.842377 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename limitrange @ 05/05/24 15:18:43.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:18:43.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:18:43.852
  STEP: Creating LimitRange "e2e-limitrange-bltmw" in namespace "limitrange-5041" @ 05/05/24 15:18:43.854
  STEP: Creating another limitRange in another namespace @ 05/05/24 15:18:43.859
  I0505 15:18:43.865991 21 limit_range.go:299] Namespace "e2e-limitrange-bltmw-5849" created
  I0505 15:18:43.866352 21 limit_range.go:300] Creating LimitRange "e2e-limitrange-bltmw" in namespace "e2e-limitrange-bltmw-5849"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-bltmw" @ 05/05/24 15:18:43.869
  I0505 15:18:43.870448 21 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-bltmw" in "limitrange-5041" namespace @ 05/05/24 15:18:43.87
  I0505 15:18:43.874026 21 limit_range.go:335] LimitRange "e2e-limitrange-bltmw" has been patched
  STEP: Delete LimitRange "e2e-limitrange-bltmw" by Collection with labelSelector: "e2e-limitrange-bltmw=patched" @ 05/05/24 15:18:43.874
  STEP: Confirm that the limitRange "e2e-limitrange-bltmw" has been deleted @ 05/05/24 15:18:43.876
  I0505 15:18:43.876891 21 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0505 15:18:43.878107 21 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-bltmw=patched"
  I0505 15:18:43.878135 21 limit_range.go:344] LimitRange "e2e-limitrange-bltmw" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-bltmw" @ 05/05/24 15:18:43.878
  I0505 15:18:43.879338 21 limit_range.go:350] Found 1 limitRange
  I0505 15:18:43.879397 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5041" for this suite. @ 05/05/24 15:18:43.881
  STEP: Destroying namespace "e2e-limitrange-bltmw-5849" for this suite. @ 05/05/24 15:18:43.883
• [0.044 seconds]
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 05/05/24 15:18:43.886
  I0505 15:18:43.886456 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename podtemplate @ 05/05/24 15:18:43.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:18:43.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:18:43.897
  STEP: Create set of pod templates @ 05/05/24 15:18:43.898
  I0505 15:18:43.901125 21 podtemplates.go:143] created test-podtemplate-1
  I0505 15:18:43.903859 21 podtemplates.go:143] created test-podtemplate-2
  I0505 15:18:43.907233 21 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 05/05/24 15:18:43.907
  STEP: delete collection of pod templates @ 05/05/24 15:18:43.909
  I0505 15:18:43.909756 21 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 05/05/24 15:18:43.915
  I0505 15:18:43.915192 21 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0505 15:18:43.916613 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-575" for this suite. @ 05/05/24 15:18:43.918
• [0.034 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 05/05/24 15:18:43.92
  I0505 15:18:43.920641 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename webhook @ 05/05/24 15:18:43.921
  E0505 15:18:43.925604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:18:43.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:18:43.931
  STEP: Setting up server cert @ 05/05/24 15:18:43.943
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 15:18:44.127
  STEP: Deploying the webhook pod @ 05/05/24 15:18:44.141
  STEP: Wait for the deployment to be ready @ 05/05/24 15:18:44.147
  I0505 15:18:44.149656 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0505 15:18:44.926463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:45.927605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/05/24 15:18:46.161
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 15:18:46.176
  E0505 15:18:46.927947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:18:47.178721 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/05/24 15:18:47.23
  STEP: Creating a configMap that should be mutated @ 05/05/24 15:18:47.235
  STEP: Deleting the collection of validation webhooks @ 05/05/24 15:18:47.248
  STEP: Creating a configMap that should not be mutated @ 05/05/24 15:18:47.262
  I0505 15:18:47.290743 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9434" for this suite. @ 05/05/24 15:18:47.292
  STEP: Destroying namespace "webhook-markers-1673" for this suite. @ 05/05/24 15:18:47.299
• [3.385 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 05/05/24 15:18:47.305
  I0505 15:18:47.305467 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename sched-preemption @ 05/05/24 15:18:47.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:18:47.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:18:47.316
  I0505 15:18:47.325830 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0505 15:18:47.928078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:48.929181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:49.929777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:50.930507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:51.931429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:52.932633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:53.933626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:54.933556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:55.933953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:56.934624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:57.935182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:58.936234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:18:59.936601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:00.937093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:01.937406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:02.937768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:03.939005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:04.939482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:05.939841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:06.940610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:07.941065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:08.941558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:09.942741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:10.943470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:11.944318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:12.973828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:13.974598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:14.975354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:15.976317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:16.977321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:17.977664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:18.977995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:19.978842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:20.979138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:21.979541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:22.979739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:23.980478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:24.980678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:25.982104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:26.981939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:27.982652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:28.983221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:29.984381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:30.984743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:31.984771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:32.985718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:33.985725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:34.986135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:35.987148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:36.987313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:37.989166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:38.989692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:39.990068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:40.992682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:41.992662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:42.994454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:43.994688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:44.995643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:45.996503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:46.997256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:19:47.329076 21 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/05/24 15:19:47.331
  I0505 15:19:47.353107 21 preemption.go:178] Created pod: pod0-0-sched-preemption-low-priority
  I0505 15:19:47.360927 21 preemption.go:178] Created pod: pod0-1-sched-preemption-medium-priority
  I0505 15:19:47.375364 21 preemption.go:178] Created pod: pod1-0-sched-preemption-medium-priority
  I0505 15:19:47.381678 21 preemption.go:178] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/05/24 15:19:47.381
  E0505 15:19:47.997972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:48.998234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 05/05/24 15:19:49.392
  E0505 15:19:49.999393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:50.999998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:52.001038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:53.001443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:19:53.463941 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4745" for this suite. @ 05/05/24 15:19:53.466
• [66.164 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 05/05/24 15:19:53.469
  I0505 15:19:53.469737 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename container-probe @ 05/05/24 15:19:53.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:19:53.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:19:53.478
  STEP: Creating pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661 @ 05/05/24 15:19:53.479
  E0505 15:19:54.002766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:55.005055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/05/24 15:19:55.487
  I0505 15:19:55.490795 21 container_probe.go:1749] Initial restart count of pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd is 0
  I0505 15:19:55.492705 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:19:56.006174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:57.006746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:19:57.498747 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:19:58.007223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:19:59.008240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:19:59.503039 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:00.009782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:01.010317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:01.510176 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:02.010621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:03.011127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:03.515398 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:04.011269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:05.012205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:05.518250 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:06.013040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:07.013360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:07.522647 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:08.013795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:09.014177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:09.527959 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:10.015491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:11.016019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:11.533236 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:12.017279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:13.017808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:13.537294 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:14.018803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:15.019802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:15.542933 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:16.020782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:17.023467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:17.547162 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:18.023568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:19.025060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:19.553086 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:20.026024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:21.026457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:21.559314 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:22.027352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:23.027588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:23.564012 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:24.028373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:25.028707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:25.567810 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:26.029534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:27.029898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:27.575331 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:28.030559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:29.032146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:29.582424 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:30.034449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:31.035187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:31.585972 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:32.038976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:33.038992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:33.591446 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:34.040054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:35.044004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:35.597217 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:36.044999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:37.045419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:37.600745 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:38.046202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:39.048101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:39.605238 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:40.048402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:41.048921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:41.607681 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:42.049154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:43.050061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:43.613347 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:44.050519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:45.050917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:45.619030 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:46.051478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:47.051816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:47.624549 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:48.051993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:49.052340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:49.629605 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:50.053096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:51.053280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:51.636588 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:52.054184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:53.055021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:53.642279 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:54.056716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:55.057268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:55.648067 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:56.058034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:57.058006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:57.650903 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:20:58.058376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:20:59.058780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:20:59.652448 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:00.058940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:01.058984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:01.658348 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:02.059266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:03.059488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:03.662801 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:04.060182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:05.060644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:05.666860 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:06.061362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:07.061788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:07.668960 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:08.062369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:09.063029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:09.672745 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:10.063381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:11.064626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:11.676520 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:12.065058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:13.067646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:13.681442 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:14.072846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:15.074034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:15.690291 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:16.074248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:17.074673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:17.695718 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:18.076544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:19.076826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:19.700267 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:20.077987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:21.078117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:21.709075 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:22.078947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:23.079196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:23.716844 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:24.079206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:25.079476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:25.719397 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:26.080086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:27.080415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:27.722356 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:28.082058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:29.084771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:29.727172 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:30.085888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:31.086179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:31.731788 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:32.086276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:33.086629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:33.736290 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:34.087204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:35.091043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:35.742183 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:36.091180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:37.091727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:37.748673 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:38.093278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:39.095126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:39.754078 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:40.095312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:41.095680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:41.759100 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:42.096762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:43.098936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:43.764333 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:44.099394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:45.103414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:45.769781 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:46.104324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:47.104820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:47.777439 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:48.104945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:49.105873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:49.782409 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:50.106682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:51.107205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:51.788540 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:52.108146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:53.108350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:53.796264 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:54.108510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:55.108682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:55.801297 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:56.109648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:57.109314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:57.806157 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:21:58.109605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:21:59.109691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:21:59.812009 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:00.111237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:01.111588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:01.814655 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:02.112573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:03.113635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:03.818039 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:04.116434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:05.117696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:05.824120 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:06.118375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:07.120018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:07.829393 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:08.121011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:09.121373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:09.837051 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:10.122179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:11.122619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:11.839835 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:12.123472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:13.123889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:13.843514 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:14.124600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:15.125210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:15.849331 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:16.125615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:17.126072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:17.856452 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:18.125980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:19.126689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:19.860559 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:20.127100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:21.127406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:21.865148 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:22.128881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:23.133130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:23.869638 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:24.134270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:25.134643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:25.874297 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:26.135645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:27.136342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:27.880504 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:28.136754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:29.137022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:29.885591 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:30.137140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:31.137630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:31.893588 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:32.137978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:33.139235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:33.898668 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:34.139049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:35.140325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:35.903303 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:36.143181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:37.143331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:37.908255 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:38.143934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:39.144842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:39.910164 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:40.145104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:41.145511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:41.915136 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:42.147179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:43.148185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:43.922005 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:44.148782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:45.149818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:45.924706 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:46.150105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:47.150525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:47.930712 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:48.151637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:49.151777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:49.939737 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:50.152758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:51.153237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:51.943156 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:52.155118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:53.158074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:53.948206 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:54.159455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:55.159993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:55.953166 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:56.161301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:57.161652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:57.958431 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:22:58.163009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:22:59.163116      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:22:59.963603 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:00.163794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:01.164485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:23:01.966768 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:02.165653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:03.166429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:23:03.970039 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:04.166788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:05.170195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:23:05.974562 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:06.170882      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:07.171376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:23:07.980561 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:08.171959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:09.172597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:23:09.984764 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:10.174042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:11.174528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:23:11.990610 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:12.175168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:13.176240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:23:13.994153 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:14.179779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:15.180923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:23:15.999207 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:16.181593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:17.182543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:23:18.001973 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:18.183455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:19.183794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:23:20.010633 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:20.185451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:21.186911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:23:22.016335 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:22.186888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:23.187508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:23:24.018669 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:24.187347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:25.187705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:23:26.024076 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:26.188234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:27.188265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:23:28.032907 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:28.188632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:29.189403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:23:30.038214 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:30.190072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:31.190751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:23:32.042013 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:32.192297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:33.192635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:23:34.046580 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:34.192585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:35.194532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:23:36.053332 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:36.194912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:37.194964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:23:38.055964 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:38.196749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:39.197744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:23:40.059400 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:40.199490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:41.201419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:23:42.062752 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:42.202379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:43.202512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:23:44.065884 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:44.203327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:45.207667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:23:46.070094 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:46.208436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:47.209276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:23:48.075165 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:48.209366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:49.211869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:23:50.079034 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:50.212260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:51.212514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:23:52.082813 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:52.212966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:53.214282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:23:54.087263 21 container_probe.go:1759] Get pod busybox-337b5363-8ecf-45ec-940c-562e46096cdd in namespace container-probe-5661
  E0505 15:23:54.216066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:55.217146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/05/24 15:23:56.088
  I0505 15:23:56.120771 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5661" for this suite. @ 05/05/24 15:23:56.128
• [242.663 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 05/05/24 15:23:56.133
  I0505 15:23:56.133227 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 15:23:56.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:23:56.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:23:56.143
  STEP: Creating a pod to test downward api env vars @ 05/05/24 15:23:56.145
  E0505 15:23:56.222130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:57.224038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:58.228183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:23:59.229261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 15:24:00.158
  I0505 15:24:00.159786 21 output.go:196] Trying to get logs from node worker00 pod downward-api-76de4531-d5e1-432d-a9ae-daceb3273bec container dapi-container: <nil>
  STEP: delete the pod @ 05/05/24 15:24:00.165
  I0505 15:24:00.187517 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8423" for this suite. @ 05/05/24 15:24:00.19
• [4.061 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 05/05/24 15:24:00.194
  I0505 15:24:00.194377 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename namespaces @ 05/05/24 15:24:00.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:24:00.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:24:00.204
  STEP: Updating Namespace "namespaces-790" @ 05/05/24 15:24:00.205
  I0505 15:24:00.209082 21 namespace.go:389] Namespace "namespaces-790" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"4ae9ee21-5ccb-4a79-b160-376e7e05a459", "kubernetes.io/metadata.name":"namespaces-790", "namespaces-790":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0505 15:24:00.209148 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-790" for this suite. @ 05/05/24 15:24:00.21
• [0.020 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 05/05/24 15:24:00.214
  I0505 15:24:00.214112 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename replicaset @ 05/05/24 15:24:00.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:24:00.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:24:00.226
  E0505 15:24:00.229703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:24:00.234136 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0505 15:24:01.230331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:02.230550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:03.235385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:04.236402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:05.236871      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:24:05.245839 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/05/24 15:24:05.245
  STEP: Scaling up "test-rs" replicaset @ 05/05/24 15:24:05.245
  I0505 15:24:05.250882 21 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 05/05/24 15:24:05.251
  I0505 15:24:05.260616 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-16 with ReadyReplicas 1, AvailableReplicas 1
  I0505 15:24:05.271949 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-16 with ReadyReplicas 1, AvailableReplicas 1
  I0505 15:24:05.288399 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-16 with ReadyReplicas 1, AvailableReplicas 1
  I0505 15:24:05.295017 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-16 with ReadyReplicas 1, AvailableReplicas 1
  E0505 15:24:06.237733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:24:06.538543 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-16 with ReadyReplicas 2, AvailableReplicas 2
  I0505 15:24:06.670716 21 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-16 with ReadyReplicas 3 found true
  I0505 15:24:06.671072 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-16" for this suite. @ 05/05/24 15:24:06.674
• [6.463 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 05/05/24 15:24:06.678
  I0505 15:24:06.678207 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename namespaces @ 05/05/24 15:24:06.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:24:06.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:24:06.688
  STEP: Creating namespace "e2e-ns-bh5dz" @ 05/05/24 15:24:06.69
  I0505 15:24:06.696892 21 namespace.go:411] Namespace "e2e-ns-bh5dz-2265" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-bh5dz-2265" @ 05/05/24 15:24:06.696
  I0505 15:24:06.700256 21 namespace.go:434] Namespace "e2e-ns-bh5dz-2265" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-bh5dz-2265" @ 05/05/24 15:24:06.7
  I0505 15:24:06.704708 21 namespace.go:463] Namespace "e2e-ns-bh5dz-2265" has []v1.FinalizerName{"kubernetes"}
  I0505 15:24:06.705145 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4618" for this suite. @ 05/05/24 15:24:06.707
  STEP: Destroying namespace "e2e-ns-bh5dz-2265" for this suite. @ 05/05/24 15:24:06.711
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 05/05/24 15:24:06.714
  I0505 15:24:06.714393 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename configmap @ 05/05/24 15:24:06.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:24:06.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:24:06.725
  STEP: Creating configMap with name configmap-test-volume-bc3f6ef9-ab0a-4d4e-ab20-83b5e814dd3f @ 05/05/24 15:24:06.726
  STEP: Creating a pod to test consume configMaps @ 05/05/24 15:24:06.728
  E0505 15:24:07.237523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:08.238770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:09.239120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:10.239288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 15:24:10.737
  I0505 15:24:10.739403 21 output.go:196] Trying to get logs from node worker01 pod pod-configmaps-54f58433-0987-4238-9055-455e3adab98e container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 15:24:10.752
  I0505 15:24:10.775747 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7759" for this suite. @ 05/05/24 15:24:10.778
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 05/05/24 15:24:10.784
  I0505 15:24:10.785043 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename resourcequota @ 05/05/24 15:24:10.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:24:10.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:24:10.799
  STEP: Creating a ResourceQuota with terminating scope @ 05/05/24 15:24:10.8
  STEP: Ensuring ResourceQuota status is calculated @ 05/05/24 15:24:10.805
  E0505 15:24:11.240004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:12.240039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 05/05/24 15:24:12.811
  STEP: Ensuring ResourceQuota status is calculated @ 05/05/24 15:24:12.826
  E0505 15:24:13.242469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:14.242904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 05/05/24 15:24:14.831
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 05/05/24 15:24:14.854
  E0505 15:24:15.243932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:16.245140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 05/05/24 15:24:16.857
  E0505 15:24:17.245220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:18.245248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/05/24 15:24:18.868
  STEP: Ensuring resource quota status released the pod usage @ 05/05/24 15:24:18.889
  E0505 15:24:19.245974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:20.247232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 05/05/24 15:24:20.891
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 05/05/24 15:24:20.906
  E0505 15:24:21.251418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:22.251177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 05/05/24 15:24:22.912
  E0505 15:24:23.252596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:24.252861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/05/24 15:24:24.914
  STEP: Ensuring resource quota status released the pod usage @ 05/05/24 15:24:24.93
  E0505 15:24:25.253758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:26.254078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:24:26.936056 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6402" for this suite. @ 05/05/24 15:24:26.94
• [16.172 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 05/05/24 15:24:26.957
  I0505 15:24:26.957244 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename field-validation @ 05/05/24 15:24:26.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:24:26.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:24:26.967
  I0505 15:24:26.968996 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  W0505 15:24:26.969352      21 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000a25ad0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0505 15:24:27.255245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:28.255812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:29.256664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0505 15:24:29.490967      21 warnings.go:70] unknown field "alpha"
  W0505 15:24:29.491015      21 warnings.go:70] unknown field "beta"
  W0505 15:24:29.491030      21 warnings.go:70] unknown field "delta"
  W0505 15:24:29.491046      21 warnings.go:70] unknown field "epsilon"
  W0505 15:24:29.491060      21 warnings.go:70] unknown field "gamma"
  I0505 15:24:30.023684 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1429" for this suite. @ 05/05/24 15:24:30.026
• [3.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 05/05/24 15:24:30.04
  I0505 15:24:30.040751 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename var-expansion @ 05/05/24 15:24:30.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:24:30.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:24:30.05
  E0505 15:24:30.257290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:31.257795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:24:32.059767 21 delete.go:62] Deleting pod "var-expansion-bdf410bd-fc1e-4680-95aa-10b97518d7f7" in namespace "var-expansion-3987"
  I0505 15:24:32.063463 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-bdf410bd-fc1e-4680-95aa-10b97518d7f7" to be fully deleted
  E0505 15:24:32.259201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:33.260251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:24:34.074808 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3987" for this suite. @ 05/05/24 15:24:34.076
• [4.039 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 05/05/24 15:24:34.08
  I0505 15:24:34.080398 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename replicaset @ 05/05/24 15:24:34.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:24:34.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:24:34.091
  STEP: Create a Replicaset @ 05/05/24 15:24:34.097
  STEP: Verify that the required pods have come up. @ 05/05/24 15:24:34.1
  I0505 15:24:34.101977 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0505 15:24:34.262368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:35.263573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:36.263536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:37.264054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:38.265395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:24:39.103545 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/05/24 15:24:39.103
  STEP: Getting /status @ 05/05/24 15:24:39.103
  I0505 15:24:39.105963 21 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 05/05/24 15:24:39.106
  I0505 15:24:39.112742 21 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 05/05/24 15:24:39.112
  I0505 15:24:39.113678 21 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0505 15:24:39.113727 21 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0505 15:24:39.113801 21 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0505 15:24:39.114019 21 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0505 15:24:39.114073 21 replica_set.go:682] Found replicaset test-rs in namespace replicaset-3223 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0505 15:24:39.114080 21 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 05/05/24 15:24:39.114
  I0505 15:24:39.114109 21 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0505 15:24:39.117547 21 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 05/05/24 15:24:39.117
  I0505 15:24:39.120304 21 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0505 15:24:39.120558 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0505 15:24:39.121286 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0505 15:24:39.121432 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0505 15:24:39.121471 21 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-3223 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0505 15:24:39.121619 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0505 15:24:39.122124 21 replica_set.go:718] Found replicaset test-rs in namespace replicaset-3223 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0505 15:24:39.122151 21 replica_set.go:729] Replicaset test-rs has a patched status
  I0505 15:24:39.122303 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3223" for this suite. @ 05/05/24 15:24:39.124
• [5.047 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 05/05/24 15:24:39.127
  I0505 15:24:39.127305 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/05/24 15:24:39.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:24:39.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:24:39.137
  STEP: getting /apis @ 05/05/24 15:24:39.142
  STEP: getting /apis/admissionregistration.k8s.io @ 05/05/24 15:24:39.144
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 05/05/24 15:24:39.145
  STEP: creating @ 05/05/24 15:24:39.146
  STEP: getting @ 05/05/24 15:24:39.156
  STEP: listing @ 05/05/24 15:24:39.158
  STEP: watching @ 05/05/24 15:24:39.162
  I0505 15:24:39.162201 21 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 05/05/24 15:24:39.162
  STEP: updating @ 05/05/24 15:24:39.169
  I0505 15:24:39.174802 21 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  I0505 15:24:39.174837 21 validatingadmissionpolicy.go:568] missing expected annotations, waiting: map[string]string(nil)
  I0505 15:24:39.174900 21 validatingadmissionpolicy.go:568] missing expected annotations, waiting: map[string]string(nil)
  I0505 15:24:39.174909 21 validatingadmissionpolicy.go:568] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 05/05/24 15:24:39.174
  STEP: patching /status @ 05/05/24 15:24:39.181
  STEP: updating /status @ 05/05/24 15:24:39.184
  STEP: deleting @ 05/05/24 15:24:39.212
  STEP: deleting a collection @ 05/05/24 15:24:39.217
  I0505 15:24:39.226044 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-202" for this suite. @ 05/05/24 15:24:39.228
• [0.103 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 05/05/24 15:24:39.23
  I0505 15:24:39.230840 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename gc @ 05/05/24 15:24:39.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:24:39.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:24:39.246
  STEP: create the rc1 @ 05/05/24 15:24:39.249
  STEP: create the rc2 @ 05/05/24 15:24:39.254
  E0505 15:24:39.265466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:40.267858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:41.267846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:42.267033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:43.267391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:44.272151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 05/05/24 15:24:45.265
  E0505 15:24:45.268610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 05/05/24 15:24:46.212
  STEP: wait for the rc to be deleted @ 05/05/24 15:24:46.232
  E0505 15:24:46.271805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:47.291095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:48.294562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:49.296161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:50.297027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:24:51.241599 21 garbage_collector.go:762] 70 pods remaining
  I0505 15:24:51.241633 21 garbage_collector.go:769] 70 pods has nil DeletionTimestamp
  I0505 15:24:51.241641 21 garbage_collector.go:770] 
  E0505 15:24:51.297297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:52.298360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:53.299806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:54.300086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:55.300512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/05/24 15:24:56.246
  I0505 15:24:56.290424 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0505 15:24:56.290495 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-279lx" in namespace "gc-8367"
  I0505 15:24:56.298038 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-29kzp" in namespace "gc-8367"
  E0505 15:24:56.301853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:24:56.310252 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2dfks" in namespace "gc-8367"
  I0505 15:24:56.318953 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2g9fd" in namespace "gc-8367"
  I0505 15:24:56.332592 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2j4c9" in namespace "gc-8367"
  I0505 15:24:56.345818 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2j7lv" in namespace "gc-8367"
  I0505 15:24:56.365027 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2r279" in namespace "gc-8367"
  I0505 15:24:56.377421 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2w5rl" in namespace "gc-8367"
  I0505 15:24:56.392889 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2xs4v" in namespace "gc-8367"
  I0505 15:24:56.413171 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2zwkt" in namespace "gc-8367"
  I0505 15:24:56.423433 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4lhb9" in namespace "gc-8367"
  I0505 15:24:56.445152 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-59dwv" in namespace "gc-8367"
  I0505 15:24:56.462340 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5rwwj" in namespace "gc-8367"
  I0505 15:24:56.483381 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5svmt" in namespace "gc-8367"
  I0505 15:24:56.515153 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-64vhh" in namespace "gc-8367"
  I0505 15:24:56.531664 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6rgvb" in namespace "gc-8367"
  I0505 15:24:56.559101 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-74rxl" in namespace "gc-8367"
  I0505 15:24:56.571743 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7fdxt" in namespace "gc-8367"
  I0505 15:24:56.595732 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-86r5w" in namespace "gc-8367"
  I0505 15:24:56.625898 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8bcsx" in namespace "gc-8367"
  I0505 15:24:56.644411 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8d5bt" in namespace "gc-8367"
  I0505 15:24:56.680111 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8jgtq" in namespace "gc-8367"
  I0505 15:24:56.695417 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8kp4p" in namespace "gc-8367"
  I0505 15:24:56.711610 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8lswv" in namespace "gc-8367"
  I0505 15:24:56.730169 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8v94l" in namespace "gc-8367"
  I0505 15:24:56.771561 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8vvtz" in namespace "gc-8367"
  I0505 15:24:56.803385 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9gpgj" in namespace "gc-8367"
  I0505 15:24:56.831035 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9zmpl" in namespace "gc-8367"
  I0505 15:24:56.855478 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bclql" in namespace "gc-8367"
  I0505 15:24:56.891083 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bfg76" in namespace "gc-8367"
  I0505 15:24:56.933259 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-brrq5" in namespace "gc-8367"
  I0505 15:24:56.953043 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cgcfm" in namespace "gc-8367"
  I0505 15:24:56.968064 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ckbld" in namespace "gc-8367"
  I0505 15:24:57.017555 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cqc5l" in namespace "gc-8367"
  I0505 15:24:57.079243 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cqhqt" in namespace "gc-8367"
  I0505 15:24:57.097626 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dcl5w" in namespace "gc-8367"
  I0505 15:24:57.136724 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dqxq5" in namespace "gc-8367"
  I0505 15:24:57.183825 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dz5w4" in namespace "gc-8367"
  I0505 15:24:57.223522 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fs2vt" in namespace "gc-8367"
  I0505 15:24:57.266646 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g2cxn" in namespace "gc-8367"
  E0505 15:24:57.303434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:24:57.329594 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gbx5r" in namespace "gc-8367"
  I0505 15:24:57.356571 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gdnck" in namespace "gc-8367"
  I0505 15:24:57.388312 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gnjfc" in namespace "gc-8367"
  I0505 15:24:57.431765 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gqf6z" in namespace "gc-8367"
  I0505 15:24:57.451275 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gthhd" in namespace "gc-8367"
  I0505 15:24:57.469312 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hbrvb" in namespace "gc-8367"
  I0505 15:24:57.536339 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hrjhm" in namespace "gc-8367"
  I0505 15:24:57.556810 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hvs69" in namespace "gc-8367"
  I0505 15:24:57.599213 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hxqdp" in namespace "gc-8367"
  I0505 15:24:57.638332 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jk8ss" in namespace "gc-8367"
  I0505 15:24:57.671862 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8367" for this suite. @ 05/05/24 15:24:57.699
• [18.496 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 05/05/24 15:24:57.734
  I0505 15:24:57.734526 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 15:24:57.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:24:57.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:24:57.77
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 15:24:57.773
  E0505 15:24:58.303351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:24:59.305418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:00.304214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:01.305112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 15:25:01.801
  I0505 15:25:01.804306 21 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-291065d7-6981-4734-b970-ceba6d9bdd42 container client-container: <nil>
  STEP: delete the pod @ 05/05/24 15:25:01.813
  I0505 15:25:01.832108 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8707" for this suite. @ 05/05/24 15:25:01.835
• [4.106 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 05/05/24 15:25:01.839
  I0505 15:25:01.839080 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename webhook @ 05/05/24 15:25:01.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:25:01.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:25:01.849
  STEP: Setting up server cert @ 05/05/24 15:25:01.861
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 15:25:02.165
  STEP: Deploying the webhook pod @ 05/05/24 15:25:02.17
  STEP: Wait for the deployment to be ready @ 05/05/24 15:25:02.175
  I0505 15:25:02.179910 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0505 15:25:02.305632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:03.305507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/05/24 15:25:04.192
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 15:25:04.198
  E0505 15:25:04.306265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:25:05.199857 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 05/05/24 15:25:05.208
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 05/05/24 15:25:05.224
  STEP: Creating a configMap that should not be mutated @ 05/05/24 15:25:05.228
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 05/05/24 15:25:05.233
  STEP: Creating a configMap that should be mutated @ 05/05/24 15:25:05.236
  I0505 15:25:05.267861 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5019" for this suite. @ 05/05/24 15:25:05.272
  STEP: Destroying namespace "webhook-markers-5398" for this suite. @ 05/05/24 15:25:05.276
• [3.443 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 05/05/24 15:25:05.282
  I0505 15:25:05.282421 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename webhook @ 05/05/24 15:25:05.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:25:05.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:25:05.296
  E0505 15:25:05.306706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 05/05/24 15:25:05.309
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 15:25:05.556
  STEP: Deploying the webhook pod @ 05/05/24 15:25:05.569
  STEP: Wait for the deployment to be ready @ 05/05/24 15:25:05.574
  I0505 15:25:05.577924 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0505 15:25:06.307731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:07.308382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:25:07.583012 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 15, 25, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 15, 25, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 15, 25, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 15, 25, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0505 15:25:08.308768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:09.309933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/05/24 15:25:09.584
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 15:25:09.589
  E0505 15:25:10.310033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:25:10.590059 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 05/05/24 15:25:10.597
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/05/24 15:25:10.597
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 05/05/24 15:25:10.607
  E0505 15:25:11.311088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 05/05/24 15:25:11.614
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/05/24 15:25:11.614
  E0505 15:25:12.312390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 05/05/24 15:25:12.648
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/05/24 15:25:12.648
  E0505 15:25:13.314416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:14.314709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:15.315264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:16.315269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:17.316529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 05/05/24 15:25:17.685
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/05/24 15:25:17.685
  E0505 15:25:18.316975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:19.317347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:20.319217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:21.320078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:22.321952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:25:22.746235 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7404" for this suite. @ 05/05/24 15:25:22.751
  STEP: Destroying namespace "webhook-markers-9080" for this suite. @ 05/05/24 15:25:22.761
• [17.486 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 05/05/24 15:25:22.768
  I0505 15:25:22.768435 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename gc @ 05/05/24 15:25:22.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:25:22.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:25:22.781
  STEP: create the rc @ 05/05/24 15:25:22.789
  W0505 15:25:22.796313      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0505 15:25:23.322626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:24.323341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:25.323395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:26.324933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:27.327911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:28.330642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 05/05/24 15:25:28.811
  STEP: wait for the rc to be deleted @ 05/05/24 15:25:28.834
  E0505 15:25:29.329443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:30.328074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:31.329759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:32.329036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:33.329139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 05/05/24 15:25:33.837
  E0505 15:25:34.330248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:35.331050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:36.332607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:37.332244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:38.334074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:39.334651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:40.335341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:41.335534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:42.335816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:43.338145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:44.338952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:45.339446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:46.342776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:47.343504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:48.343766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:49.345139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:50.345386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:51.346102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:52.349148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:53.348779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:54.349672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:55.350513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:56.351571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:57.352586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:58.353525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:25:59.353563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:26:00.355292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:26:01.357025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:26:02.358076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:26:03.359198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/05/24 15:26:03.853
  I0505 15:26:03.882560 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0505 15:26:03.882669 21 delete.go:95] Deleting pod "simpletest.rc-2f7p7" in namespace "gc-1646"
  I0505 15:26:03.901717 21 delete.go:95] Deleting pod "simpletest.rc-2kdrw" in namespace "gc-1646"
  I0505 15:26:03.908579 21 delete.go:95] Deleting pod "simpletest.rc-4ccx4" in namespace "gc-1646"
  I0505 15:26:03.923434 21 delete.go:95] Deleting pod "simpletest.rc-55vjq" in namespace "gc-1646"
  I0505 15:26:03.932313 21 delete.go:95] Deleting pod "simpletest.rc-57jx9" in namespace "gc-1646"
  I0505 15:26:03.970574 21 delete.go:95] Deleting pod "simpletest.rc-57zh5" in namespace "gc-1646"
  I0505 15:26:03.986230 21 delete.go:95] Deleting pod "simpletest.rc-58k94" in namespace "gc-1646"
  I0505 15:26:04.002170 21 delete.go:95] Deleting pod "simpletest.rc-5j66w" in namespace "gc-1646"
  I0505 15:26:04.026629 21 delete.go:95] Deleting pod "simpletest.rc-5jjjn" in namespace "gc-1646"
  I0505 15:26:04.045278 21 delete.go:95] Deleting pod "simpletest.rc-5k9q6" in namespace "gc-1646"
  I0505 15:26:04.073094 21 delete.go:95] Deleting pod "simpletest.rc-5qsqn" in namespace "gc-1646"
  I0505 15:26:04.084770 21 delete.go:95] Deleting pod "simpletest.rc-6b82p" in namespace "gc-1646"
  I0505 15:26:04.126761 21 delete.go:95] Deleting pod "simpletest.rc-6pwdd" in namespace "gc-1646"
  I0505 15:26:04.144263 21 delete.go:95] Deleting pod "simpletest.rc-6vjhz" in namespace "gc-1646"
  I0505 15:26:04.157012 21 delete.go:95] Deleting pod "simpletest.rc-6w6zb" in namespace "gc-1646"
  I0505 15:26:04.173141 21 delete.go:95] Deleting pod "simpletest.rc-7pmtx" in namespace "gc-1646"
  I0505 15:26:04.188088 21 delete.go:95] Deleting pod "simpletest.rc-8f9mj" in namespace "gc-1646"
  I0505 15:26:04.202986 21 delete.go:95] Deleting pod "simpletest.rc-8gxqw" in namespace "gc-1646"
  I0505 15:26:04.247208 21 delete.go:95] Deleting pod "simpletest.rc-8zgzb" in namespace "gc-1646"
  I0505 15:26:04.280170 21 delete.go:95] Deleting pod "simpletest.rc-9htrr" in namespace "gc-1646"
  I0505 15:26:04.305201 21 delete.go:95] Deleting pod "simpletest.rc-9rnx7" in namespace "gc-1646"
  I0505 15:26:04.329089 21 delete.go:95] Deleting pod "simpletest.rc-9s7cm" in namespace "gc-1646"
  I0505 15:26:04.348308 21 delete.go:95] Deleting pod "simpletest.rc-9tmks" in namespace "gc-1646"
  E0505 15:26:04.359345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:26:04.372726 21 delete.go:95] Deleting pod "simpletest.rc-b2twv" in namespace "gc-1646"
  I0505 15:26:04.414433 21 delete.go:95] Deleting pod "simpletest.rc-bh4gm" in namespace "gc-1646"
  I0505 15:26:04.453311 21 delete.go:95] Deleting pod "simpletest.rc-bpbd6" in namespace "gc-1646"
  I0505 15:26:04.471960 21 delete.go:95] Deleting pod "simpletest.rc-bz8dd" in namespace "gc-1646"
  I0505 15:26:04.506350 21 delete.go:95] Deleting pod "simpletest.rc-c84pt" in namespace "gc-1646"
  I0505 15:26:04.528852 21 delete.go:95] Deleting pod "simpletest.rc-c8kxt" in namespace "gc-1646"
  I0505 15:26:04.573139 21 delete.go:95] Deleting pod "simpletest.rc-ccqpk" in namespace "gc-1646"
  I0505 15:26:04.596384 21 delete.go:95] Deleting pod "simpletest.rc-chm6c" in namespace "gc-1646"
  I0505 15:26:04.634100 21 delete.go:95] Deleting pod "simpletest.rc-crzz2" in namespace "gc-1646"
  I0505 15:26:04.651421 21 delete.go:95] Deleting pod "simpletest.rc-dsjvx" in namespace "gc-1646"
  I0505 15:26:04.675424 21 delete.go:95] Deleting pod "simpletest.rc-dwgjh" in namespace "gc-1646"
  I0505 15:26:04.692962 21 delete.go:95] Deleting pod "simpletest.rc-dwmv2" in namespace "gc-1646"
  I0505 15:26:04.704222 21 delete.go:95] Deleting pod "simpletest.rc-f56bl" in namespace "gc-1646"
  I0505 15:26:04.718502 21 delete.go:95] Deleting pod "simpletest.rc-f5ckc" in namespace "gc-1646"
  I0505 15:26:04.743630 21 delete.go:95] Deleting pod "simpletest.rc-g8jhl" in namespace "gc-1646"
  I0505 15:26:04.773972 21 delete.go:95] Deleting pod "simpletest.rc-grvzs" in namespace "gc-1646"
  I0505 15:26:04.819758 21 delete.go:95] Deleting pod "simpletest.rc-gt8m6" in namespace "gc-1646"
  I0505 15:26:04.851192 21 delete.go:95] Deleting pod "simpletest.rc-gvbl4" in namespace "gc-1646"
  I0505 15:26:04.877200 21 delete.go:95] Deleting pod "simpletest.rc-gzhmk" in namespace "gc-1646"
  I0505 15:26:04.908470 21 delete.go:95] Deleting pod "simpletest.rc-hv65x" in namespace "gc-1646"
  I0505 15:26:04.936570 21 delete.go:95] Deleting pod "simpletest.rc-j2bc2" in namespace "gc-1646"
  I0505 15:26:04.966482 21 delete.go:95] Deleting pod "simpletest.rc-jd66j" in namespace "gc-1646"
  I0505 15:26:04.985538 21 delete.go:95] Deleting pod "simpletest.rc-jjlkz" in namespace "gc-1646"
  I0505 15:26:05.003346 21 delete.go:95] Deleting pod "simpletest.rc-kq96t" in namespace "gc-1646"
  I0505 15:26:05.021529 21 delete.go:95] Deleting pod "simpletest.rc-l57tx" in namespace "gc-1646"
  I0505 15:26:05.058873 21 delete.go:95] Deleting pod "simpletest.rc-lxgds" in namespace "gc-1646"
  I0505 15:26:05.076297 21 delete.go:95] Deleting pod "simpletest.rc-mcc6h" in namespace "gc-1646"
  I0505 15:26:05.093316 21 delete.go:95] Deleting pod "simpletest.rc-mccml" in namespace "gc-1646"
  I0505 15:26:05.104214 21 delete.go:95] Deleting pod "simpletest.rc-mdhkk" in namespace "gc-1646"
  I0505 15:26:05.126157 21 delete.go:95] Deleting pod "simpletest.rc-mqwf9" in namespace "gc-1646"
  I0505 15:26:05.157754 21 delete.go:95] Deleting pod "simpletest.rc-mxhfq" in namespace "gc-1646"
  I0505 15:26:05.196069 21 delete.go:95] Deleting pod "simpletest.rc-mxrdd" in namespace "gc-1646"
  I0505 15:26:05.211503 21 delete.go:95] Deleting pod "simpletest.rc-n6l5k" in namespace "gc-1646"
  I0505 15:26:05.227652 21 delete.go:95] Deleting pod "simpletest.rc-nhltc" in namespace "gc-1646"
  I0505 15:26:05.268202 21 delete.go:95] Deleting pod "simpletest.rc-npl7d" in namespace "gc-1646"
  I0505 15:26:05.310363 21 delete.go:95] Deleting pod "simpletest.rc-pg57b" in namespace "gc-1646"
  I0505 15:26:05.337097 21 delete.go:95] Deleting pod "simpletest.rc-pjkph" in namespace "gc-1646"
  E0505 15:26:05.359426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:26:05.378317 21 delete.go:95] Deleting pod "simpletest.rc-pqnvk" in namespace "gc-1646"
  I0505 15:26:05.407780 21 delete.go:95] Deleting pod "simpletest.rc-pwmt8" in namespace "gc-1646"
  I0505 15:26:05.430442 21 delete.go:95] Deleting pod "simpletest.rc-q24p6" in namespace "gc-1646"
  I0505 15:26:05.467280 21 delete.go:95] Deleting pod "simpletest.rc-q49p9" in namespace "gc-1646"
  I0505 15:26:05.487827 21 delete.go:95] Deleting pod "simpletest.rc-q5n7b" in namespace "gc-1646"
  I0505 15:26:05.510988 21 delete.go:95] Deleting pod "simpletest.rc-qn4rv" in namespace "gc-1646"
  I0505 15:26:05.548556 21 delete.go:95] Deleting pod "simpletest.rc-qv86s" in namespace "gc-1646"
  I0505 15:26:05.588503 21 delete.go:95] Deleting pod "simpletest.rc-r7bt2" in namespace "gc-1646"
  I0505 15:26:06.293363 21 delete.go:95] Deleting pod "simpletest.rc-r9kgv" in namespace "gc-1646"
  E0505 15:26:06.360640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:26:06.712811 21 delete.go:95] Deleting pod "simpletest.rc-rb6qj" in namespace "gc-1646"
  I0505 15:26:06.730761 21 delete.go:95] Deleting pod "simpletest.rc-rmlm9" in namespace "gc-1646"
  I0505 15:26:06.741612 21 delete.go:95] Deleting pod "simpletest.rc-rpdbk" in namespace "gc-1646"
  I0505 15:26:06.759758 21 delete.go:95] Deleting pod "simpletest.rc-rql9q" in namespace "gc-1646"
  I0505 15:26:06.779136 21 delete.go:95] Deleting pod "simpletest.rc-rt58r" in namespace "gc-1646"
  I0505 15:26:06.793179 21 delete.go:95] Deleting pod "simpletest.rc-rx4rq" in namespace "gc-1646"
  I0505 15:26:06.812114 21 delete.go:95] Deleting pod "simpletest.rc-s85gk" in namespace "gc-1646"
  I0505 15:26:06.837997 21 delete.go:95] Deleting pod "simpletest.rc-sh5sm" in namespace "gc-1646"
  I0505 15:26:06.861509 21 delete.go:95] Deleting pod "simpletest.rc-t2cfq" in namespace "gc-1646"
  I0505 15:26:06.881646 21 delete.go:95] Deleting pod "simpletest.rc-t6vps" in namespace "gc-1646"
  I0505 15:26:06.891968 21 delete.go:95] Deleting pod "simpletest.rc-t8jt9" in namespace "gc-1646"
  I0505 15:26:06.902960 21 delete.go:95] Deleting pod "simpletest.rc-t9dvn" in namespace "gc-1646"
  I0505 15:26:06.916796 21 delete.go:95] Deleting pod "simpletest.rc-tv7c5" in namespace "gc-1646"
  I0505 15:26:06.933702 21 delete.go:95] Deleting pod "simpletest.rc-vdzbj" in namespace "gc-1646"
  I0505 15:26:06.947348 21 delete.go:95] Deleting pod "simpletest.rc-vlb4x" in namespace "gc-1646"
  I0505 15:26:06.967578 21 delete.go:95] Deleting pod "simpletest.rc-vtk62" in namespace "gc-1646"
  I0505 15:26:06.994966 21 delete.go:95] Deleting pod "simpletest.rc-vw7pq" in namespace "gc-1646"
  I0505 15:26:07.066005 21 delete.go:95] Deleting pod "simpletest.rc-w5gk2" in namespace "gc-1646"
  I0505 15:26:07.090840 21 delete.go:95] Deleting pod "simpletest.rc-wkjk2" in namespace "gc-1646"
  I0505 15:26:07.104757 21 delete.go:95] Deleting pod "simpletest.rc-xc7f2" in namespace "gc-1646"
  I0505 15:26:07.123519 21 delete.go:95] Deleting pod "simpletest.rc-xdq58" in namespace "gc-1646"
  I0505 15:26:07.150840 21 delete.go:95] Deleting pod "simpletest.rc-xdqft" in namespace "gc-1646"
  I0505 15:26:07.182337 21 delete.go:95] Deleting pod "simpletest.rc-xmpzs" in namespace "gc-1646"
  I0505 15:26:07.201974 21 delete.go:95] Deleting pod "simpletest.rc-xsszl" in namespace "gc-1646"
  I0505 15:26:07.218103 21 delete.go:95] Deleting pod "simpletest.rc-xwzw5" in namespace "gc-1646"
  I0505 15:26:07.255883 21 delete.go:95] Deleting pod "simpletest.rc-z8sbj" in namespace "gc-1646"
  I0505 15:26:07.278357 21 delete.go:95] Deleting pod "simpletest.rc-zdllh" in namespace "gc-1646"
  I0505 15:26:07.298089 21 delete.go:95] Deleting pod "simpletest.rc-zfh7q" in namespace "gc-1646"
  I0505 15:26:07.317369 21 delete.go:95] Deleting pod "simpletest.rc-zk84l" in namespace "gc-1646"
  I0505 15:26:07.328892 21 delete.go:95] Deleting pod "simpletest.rc-zkh6c" in namespace "gc-1646"
  I0505 15:26:07.347142 21 delete.go:95] Deleting pod "simpletest.rc-zxj9s" in namespace "gc-1646"
  E0505 15:26:07.367129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:26:07.397933 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1646" for this suite. @ 05/05/24 15:26:07.404
• [44.645 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 05/05/24 15:26:07.413
  I0505 15:26:07.413598 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename resourcequota @ 05/05/24 15:26:07.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:26:07.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:26:07.436
  STEP: Creating a ResourceQuota @ 05/05/24 15:26:07.445
  STEP: Getting a ResourceQuota @ 05/05/24 15:26:07.462
  STEP: Updating a ResourceQuota @ 05/05/24 15:26:07.469
  STEP: Verifying a ResourceQuota was modified @ 05/05/24 15:26:07.477
  STEP: Deleting a ResourceQuota @ 05/05/24 15:26:07.482
  STEP: Verifying the deleted ResourceQuota @ 05/05/24 15:26:07.492
  I0505 15:26:07.495751 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3965" for this suite. @ 05/05/24 15:26:07.499
• [0.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 05/05/24 15:26:07.51
  I0505 15:26:07.510268 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename replication-controller @ 05/05/24 15:26:07.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:26:07.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:26:07.539
  STEP: Given a ReplicationController is created @ 05/05/24 15:26:07.541
  STEP: When the matched label of one of its pods change @ 05/05/24 15:26:07.547
  I0505 15:26:07.553108 21 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E0505 15:26:08.367153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:26:09.368960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:26:10.369827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:26:11.369986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:26:12.370326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:26:12.556457 21 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/05/24 15:26:12.564
  E0505 15:26:13.370834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:26:13.578042 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3915" for this suite. @ 05/05/24 15:26:13.58
• [6.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 05/05/24 15:26:13.586
  I0505 15:26:13.586379 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename webhook @ 05/05/24 15:26:13.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:26:13.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:26:13.603
  STEP: Setting up server cert @ 05/05/24 15:26:13.623
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 15:26:13.777
  STEP: Deploying the webhook pod @ 05/05/24 15:26:13.782
  STEP: Wait for the deployment to be ready @ 05/05/24 15:26:13.793
  I0505 15:26:13.798132 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0505 15:26:14.371213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:26:15.371504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/05/24 15:26:15.802
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 15:26:15.806
  E0505 15:26:16.371538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:26:16.807006 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 05/05/24 15:26:16.809
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 05/05/24 15:26:16.81
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 05/05/24 15:26:16.81
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 05/05/24 15:26:16.81
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 05/05/24 15:26:16.811
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/05/24 15:26:16.811
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/05/24 15:26:16.812
  I0505 15:26:16.845152 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9251" for this suite. @ 05/05/24 15:26:16.847
  STEP: Destroying namespace "webhook-markers-2575" for this suite. @ 05/05/24 15:26:16.855
• [3.277 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:446
  STEP: Creating a kubernetes client @ 05/05/24 15:26:16.863
  I0505 15:26:16.863561 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename sched-pred @ 05/05/24 15:26:16.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:26:16.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:26:16.879
  I0505 15:26:16.881278 21 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0505 15:26:16.885851 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I0505 15:26:16.888486 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node worker00 before test
  I0505 15:26:16.894531 21 predicates.go:887] etcd-worker00 from kube-system started at 2024-05-05 13:40:24 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.894570 21 predicates.go:889] 	Container etcd ready: true, restart count 0
  I0505 15:26:16.894579 21 predicates.go:887] gobetween-worker00 from kube-system started at 2024-05-05 13:40:24 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.894586 21 predicates.go:889] 	Container gobetween ready: true, restart count 0
  I0505 15:26:16.894597 21 predicates.go:887] kube-apiserver-worker00 from kube-system started at 2024-05-05 13:40:24 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.894604 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 0
  I0505 15:26:16.894612 21 predicates.go:887] kube-controller-manager-worker00 from kube-system started at 2024-05-05 13:40:24 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.894620 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 0
  I0505 15:26:16.894628 21 predicates.go:887] kube-proxy-worker00 from kube-system started at 2024-05-05 13:40:24 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.894634 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0505 15:26:16.894641 21 predicates.go:887] kube-scheduler-worker00 from kube-system started at 2024-05-05 13:40:24 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.894657 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 0
  I0505 15:26:16.894665 21 predicates.go:887] calico-node-nzckb from networking started at 2024-05-05 13:41:30 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.894671 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0505 15:26:16.894678 21 predicates.go:887] metallb-speaker-ff7tv from networking started at 2024-05-05 14:43:14 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.894684 21 predicates.go:889] 	Container speaker ready: true, restart count 0
  I0505 15:26:16.894691 21 predicates.go:887] pod-release-fwfsj from replication-controller-3915 started at 2024-05-05 15:26:12 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.894697 21 predicates.go:889] 	Container pod-release ready: true, restart count 0
  I0505 15:26:16.894705 21 predicates.go:887] pod-release-kctd4 from replication-controller-3915 started at 2024-05-05 15:26:07 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.894713 21 predicates.go:889] 	Container pod-release ready: true, restart count 0
  I0505 15:26:16.894720 21 predicates.go:887] sonobuoy from sonobuoy started at 2024-05-05 13:49:53 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.894727 21 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0505 15:26:16.894734 21 predicates.go:887] sonobuoy-e2e-job-9197e61553eb4047 from sonobuoy started at 2024-05-05 13:50:00 +0000 UTC (2 container statuses recorded)
  I0505 15:26:16.894740 21 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0505 15:26:16.894746 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0505 15:26:16.894755 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-85bf87e40a77455e-sbld9 from sonobuoy started at 2024-05-05 13:50:00 +0000 UTC (2 container statuses recorded)
  I0505 15:26:16.894761 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0505 15:26:16.894768 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0505 15:26:16.894775 21 predicates.go:887] ceph-csi-cephfs-nodeplugin-h8bqd from storage started at 2024-05-05 14:43:14 +0000 UTC (3 container statuses recorded)
  I0505 15:26:16.894781 21 predicates.go:889] 	Container csi-cephfsplugin ready: true, restart count 0
  I0505 15:26:16.894787 21 predicates.go:889] 	Container driver-registrar ready: true, restart count 0
  I0505 15:26:16.894794 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 15:26:16.894801 21 predicates.go:887] ceph-csi-rbd-nodeplugin-smvcz from storage started at 2024-05-05 14:43:14 +0000 UTC (3 container statuses recorded)
  I0505 15:26:16.894807 21 predicates.go:889] 	Container csi-rbdplugin ready: true, restart count 0
  I0505 15:26:16.894814 21 predicates.go:889] 	Container driver-registrar ready: true, restart count 0
  I0505 15:26:16.894821 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 15:26:16.894828 21 predicates.go:887] ceph-mon-worker00-7ffccc7445-7fbfm from storage started at 2024-05-05 14:43:14 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.894834 21 predicates.go:889] 	Container ceph-mon ready: true, restart count 0
  I0505 15:26:16.894841 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node worker01 before test
  I0505 15:26:16.907965 21 predicates.go:887] coredns-5454f94b99-7sspb from kube-system started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.907993 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0505 15:26:16.908002 21 predicates.go:887] coredns-5454f94b99-gfmxs from kube-system started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.908009 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0505 15:26:16.908081 21 predicates.go:887] gobetween-worker01 from kube-system started at 2024-05-05 13:40:33 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.908088 21 predicates.go:889] 	Container gobetween ready: true, restart count 0
  I0505 15:26:16.908097 21 predicates.go:887] kube-proxy-worker01 from kube-system started at 2024-05-05 13:40:33 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.908103 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0505 15:26:16.908111 21 predicates.go:887] kubernetes-dashboard-api-dbd5d8954-zmzhd from kube-system started at 2024-05-05 14:15:46 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.908142 21 predicates.go:889] 	Container kubernetes-dashboard-api ready: true, restart count 0
  I0505 15:26:16.908151 21 predicates.go:887] kubernetes-dashboard-auth-585b4bc77c-tkqrs from kube-system started at 2024-05-05 14:15:46 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.908159 21 predicates.go:889] 	Container kubernetes-dashboard-auth ready: true, restart count 0
  I0505 15:26:16.908166 21 predicates.go:887] kubernetes-dashboard-kong-58c7df5b9-ksplf from kube-system started at 2024-05-05 14:15:46 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.908173 21 predicates.go:889] 	Container proxy ready: true, restart count 0
  I0505 15:26:16.908180 21 predicates.go:887] kubernetes-dashboard-metrics-scraper-6786f55f8b-27dq7 from kube-system started at 2024-05-05 14:15:46 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.908187 21 predicates.go:889] 	Container kubernetes-dashboard-metrics-scraper ready: true, restart count 0
  I0505 15:26:16.908194 21 predicates.go:887] kubernetes-dashboard-web-84b47c879-48tgm from kube-system started at 2024-05-05 14:15:46 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.908200 21 predicates.go:889] 	Container kubernetes-dashboard-web ready: true, restart count 0
  I0505 15:26:16.908208 21 predicates.go:887] calico-kube-controllers-54f5554fcd-n22s4 from networking started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.908214 21 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I0505 15:26:16.908222 21 predicates.go:887] calico-node-t86wj from networking started at 2024-05-05 13:41:23 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.908228 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0505 15:26:16.908236 21 predicates.go:887] calico-typha-9497885f9-hncqt from networking started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.908243 21 predicates.go:889] 	Container calico-typha ready: true, restart count 0
  I0505 15:26:16.908250 21 predicates.go:887] metallb-controller-6d48ffccb-k944q from networking started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.908257 21 predicates.go:889] 	Container controller ready: true, restart count 0
  I0505 15:26:16.908265 21 predicates.go:887] metallb-speaker-rnkpg from networking started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.908271 21 predicates.go:889] 	Container speaker ready: true, restart count 0
  I0505 15:26:16.908279 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-85bf87e40a77455e-g4jkd from sonobuoy started at 2024-05-05 13:50:00 +0000 UTC (2 container statuses recorded)
  I0505 15:26:16.908286 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0505 15:26:16.908293 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0505 15:26:16.908300 21 predicates.go:887] ceph-csi-cephfs-nodeplugin-nq2zf from storage started at 2024-05-05 13:41:23 +0000 UTC (3 container statuses recorded)
  I0505 15:26:16.908308 21 predicates.go:889] 	Container csi-cephfsplugin ready: true, restart count 0
  I0505 15:26:16.908315 21 predicates.go:889] 	Container driver-registrar ready: true, restart count 0
  I0505 15:26:16.908321 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 15:26:16.908329 21 predicates.go:887] ceph-csi-cephfs-provisioner-68989c6cdd-gzwkq from storage started at 2024-05-05 13:41:23 +0000 UTC (5 container statuses recorded)
  I0505 15:26:16.908336 21 predicates.go:889] 	Container csi-cephfsplugin ready: true, restart count 0
  I0505 15:26:16.908343 21 predicates.go:889] 	Container csi-provisioner ready: true, restart count 0
  I0505 15:26:16.908349 21 predicates.go:889] 	Container csi-resizer ready: true, restart count 0
  I0505 15:26:16.908356 21 predicates.go:889] 	Container csi-snapshotter ready: true, restart count 0
  I0505 15:26:16.908362 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 15:26:16.908370 21 predicates.go:887] ceph-csi-cephfs-provisioner-68989c6cdd-jqkfb from storage started at 2024-05-05 13:41:23 +0000 UTC (5 container statuses recorded)
  I0505 15:26:16.908376 21 predicates.go:889] 	Container csi-cephfsplugin ready: true, restart count 0
  I0505 15:26:16.908383 21 predicates.go:889] 	Container csi-provisioner ready: true, restart count 0
  I0505 15:26:16.908389 21 predicates.go:889] 	Container csi-resizer ready: true, restart count 0
  I0505 15:26:16.908396 21 predicates.go:889] 	Container csi-snapshotter ready: true, restart count 0
  I0505 15:26:16.908403 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 15:26:16.908410 21 predicates.go:887] ceph-csi-cephfs-provisioner-68989c6cdd-k5mkr from storage started at 2024-05-05 13:41:23 +0000 UTC (5 container statuses recorded)
  I0505 15:26:16.908416 21 predicates.go:889] 	Container csi-cephfsplugin ready: true, restart count 0
  I0505 15:26:16.908423 21 predicates.go:889] 	Container csi-provisioner ready: true, restart count 0
  I0505 15:26:16.908429 21 predicates.go:889] 	Container csi-resizer ready: true, restart count 0
  I0505 15:26:16.908436 21 predicates.go:889] 	Container csi-snapshotter ready: true, restart count 0
  I0505 15:26:16.908443 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 15:26:16.908450 21 predicates.go:887] ceph-csi-rbd-nodeplugin-wqjcz from storage started at 2024-05-05 13:41:23 +0000 UTC (3 container statuses recorded)
  I0505 15:26:16.908457 21 predicates.go:889] 	Container csi-rbdplugin ready: true, restart count 0
  I0505 15:26:16.908463 21 predicates.go:889] 	Container driver-registrar ready: true, restart count 0
  I0505 15:26:16.908470 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 15:26:16.908477 21 predicates.go:887] ceph-csi-rbd-provisioner-7c49d466f9-29f9z from storage started at 2024-05-05 13:41:24 +0000 UTC (7 container statuses recorded)
  I0505 15:26:16.908485 21 predicates.go:889] 	Container csi-attacher ready: true, restart count 0
  I0505 15:26:16.908491 21 predicates.go:889] 	Container csi-provisioner ready: true, restart count 0
  I0505 15:26:16.908498 21 predicates.go:889] 	Container csi-rbdplugin ready: true, restart count 0
  I0505 15:26:16.908505 21 predicates.go:889] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0505 15:26:16.908512 21 predicates.go:889] 	Container csi-resizer ready: true, restart count 0
  I0505 15:26:16.908518 21 predicates.go:889] 	Container csi-snapshotter ready: true, restart count 0
  I0505 15:26:16.908524 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 15:26:16.908531 21 predicates.go:887] ceph-csi-rbd-provisioner-7c49d466f9-7kxgr from storage started at 2024-05-05 13:41:24 +0000 UTC (7 container statuses recorded)
  I0505 15:26:16.908538 21 predicates.go:889] 	Container csi-attacher ready: true, restart count 0
  I0505 15:26:16.908545 21 predicates.go:889] 	Container csi-provisioner ready: true, restart count 0
  I0505 15:26:16.908551 21 predicates.go:889] 	Container csi-rbdplugin ready: true, restart count 0
  I0505 15:26:16.908558 21 predicates.go:889] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0505 15:26:16.908564 21 predicates.go:889] 	Container csi-resizer ready: true, restart count 0
  I0505 15:26:16.908571 21 predicates.go:889] 	Container csi-snapshotter ready: true, restart count 0
  I0505 15:26:16.908578 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 15:26:16.908585 21 predicates.go:887] ceph-csi-rbd-provisioner-7c49d466f9-vlfxl from storage started at 2024-05-05 13:41:24 +0000 UTC (7 container statuses recorded)
  I0505 15:26:16.908591 21 predicates.go:889] 	Container csi-attacher ready: true, restart count 0
  I0505 15:26:16.908598 21 predicates.go:889] 	Container csi-provisioner ready: true, restart count 0
  I0505 15:26:16.908605 21 predicates.go:889] 	Container csi-rbdplugin ready: true, restart count 0
  I0505 15:26:16.908611 21 predicates.go:889] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0505 15:26:16.908618 21 predicates.go:889] 	Container csi-resizer ready: true, restart count 0
  I0505 15:26:16.908625 21 predicates.go:889] 	Container csi-snapshotter ready: true, restart count 0
  I0505 15:26:16.908631 21 predicates.go:889] 	Container liveness-prometheus ready: true, restart count 0
  I0505 15:26:16.908639 21 predicates.go:887] ceph-mds-worker01-75d7657797-c5c2m from storage started at 2024-05-05 13:41:24 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.908645 21 predicates.go:889] 	Container ceph-mds ready: true, restart count 0
  I0505 15:26:16.908653 21 predicates.go:887] ceph-mgr-worker01-58c6d8747b-m689f from storage started at 2024-05-05 13:41:24 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.908659 21 predicates.go:889] 	Container ceph-mgr ready: true, restart count 1
  I0505 15:26:16.908666 21 predicates.go:887] ceph-osd-worker01-796758b4b5-25p7m from storage started at 2024-05-05 13:41:24 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.908673 21 predicates.go:889] 	Container ceph-osd ready: true, restart count 0
  I0505 15:26:16.908681 21 predicates.go:887] ceph-rgw-worker01-d6dd485ff-7lnjl from storage started at 2024-05-05 13:41:24 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.908688 21 predicates.go:889] 	Container ceph-rgw ready: true, restart count 0
  I0505 15:26:16.908703 21 predicates.go:887] ceph-setup-wmkcq from storage started at 2024-05-05 13:41:23 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.908710 21 predicates.go:889] 	Container ceph ready: false, restart count 0
  I0505 15:26:16.908718 21 predicates.go:887] snapshot-controller-77c9f4c8d6-84v87 from storage started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.908725 21 predicates.go:889] 	Container snapshot-controller ready: true, restart count 0
  I0505 15:26:16.908733 21 predicates.go:887] snapshot-controller-77c9f4c8d6-j7qcs from storage started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.908740 21 predicates.go:889] 	Container snapshot-controller ready: true, restart count 0
  I0505 15:26:16.908747 21 predicates.go:887] snapshot-validation-webhook-865bb6896-dbmxh from storage started at 2024-05-05 13:41:51 +0000 UTC (1 container statuses recorded)
  I0505 15:26:16.908753 21 predicates.go:889] 	Container snapshot-validation-webhook ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 05/05/24 15:26:16.908
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17cca12df880da3f], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.] @ 05/05/24 15:26:16.941
  E0505 15:26:17.372277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:26:17.942611 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5270" for this suite. @ 05/05/24 15:26:17.947
• [1.099 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 05/05/24 15:26:17.962
  I0505 15:26:17.962977 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 15:26:17.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:26:17.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:26:17.979
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/05/24 15:26:17.981
  E0505 15:26:18.372816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:26:19.373725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:26:20.374360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:26:21.375440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 15:26:22
  I0505 15:26:22.001903 21 output.go:196] Trying to get logs from node worker00 pod pod-a64783c8-c6a9-4ba7-a50e-5d4a2f822a9c container test-container: <nil>
  STEP: delete the pod @ 05/05/24 15:26:22.004
  I0505 15:26:22.015299 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4673" for this suite. @ 05/05/24 15:26:22.017
• [4.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 05/05/24 15:26:22.021
  I0505 15:26:22.021429 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename resourcequota @ 05/05/24 15:26:22.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:26:22.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:26:22.035
  STEP: Counting existing ResourceQuota @ 05/05/24 15:26:22.038
  E0505 15:26:22.375691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:26:23.376084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:26:24.377231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:26:25.378295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:26:26.378391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/05/24 15:26:27.046
  STEP: Ensuring resource quota status is calculated @ 05/05/24 15:26:27.051
  E0505 15:26:27.379169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:26:28.379584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 05/05/24 15:26:29.056
  STEP: Ensuring resource quota status captures replicaset creation @ 05/05/24 15:26:29.066
  E0505 15:26:29.380392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:26:30.382665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 05/05/24 15:26:31.071
  STEP: Ensuring resource quota status released usage @ 05/05/24 15:26:31.087
  E0505 15:26:31.382437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:26:32.382775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 15:26:33.092542 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6855" for this suite. @ 05/05/24 15:26:33.097
• [11.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 05/05/24 15:26:33.104
  I0505 15:26:33.104939 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename projected @ 05/05/24 15:26:33.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:26:33.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:26:33.119
  STEP: Creating configMap with name projected-configmap-test-volume-map-82d33045-e2fa-4c03-9bad-52db2d7a6966 @ 05/05/24 15:26:33.12
  STEP: Creating a pod to test consume configMaps @ 05/05/24 15:26:33.122
  E0505 15:26:33.382918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:26:34.383725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:26:35.384894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:26:36.385775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 15:26:37.136
  I0505 15:26:37.141204 21 output.go:196] Trying to get logs from node worker00 pod pod-projected-configmaps-8bf4b978-6c15-496e-aeea-be1ffad51001 container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 15:26:37.146
  I0505 15:26:37.166157 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6871" for this suite. @ 05/05/24 15:26:37.168
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 05/05/24 15:26:37.173
  I0505 15:26:37.174056 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-1193824027
  STEP: Building a namespace api object, basename namespaces @ 05/05/24 15:26:37.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:26:37.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 15:26:37.187
  STEP: Creating a test namespace @ 05/05/24 15:26:37.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 15:26:37.198
  STEP: Creating a service in the namespace @ 05/05/24 15:26:37.2
  STEP: Deleting the namespace @ 05/05/24 15:26:37.204
  STEP: Waiting for the namespace to be removed. @ 05/05/24 15:26:37.214
  E0505 15:26:37.386736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:26:38.387320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:26:39.387956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:26:40.389235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:26:41.389622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 15:26:42.389902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 05/05/24 15:26:43.218
  STEP: Verifying there is no service in the namespace @ 05/05/24 15:26:43.248
  I0505 15:26:43.249678 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6205" for this suite. @ 05/05/24 15:26:43.252
  STEP: Destroying namespace "nsdeletetest-6873" for this suite. @ 05/05/24 15:26:43.254
  I0505 15:26:43.256268 21 framework.go:370] Namespace nsdeletetest-6873 was already deleted
  STEP: Destroying namespace "nsdeletetest-2536" for this suite. @ 05/05/24 15:26:43.256
• [6.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0505 15:26:43.260189 21 suites.go:34] Running AfterSuite actions on node 1
  I0505 15:26:43.260208 21 util.go:614] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.031 seconds]
------------------------------

Ran 402 of 7197 Specs in 5748.803 seconds
SUCCESS! -- 402 Passed | 0 Failed | 0 Pending | 6795 Skipped
PASS

Ginkgo ran 1 suite in 1h35m50.026730869s
Test Suite Passed
